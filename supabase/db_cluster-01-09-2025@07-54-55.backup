--
-- PostgreSQL database cluster dump
--

\restrict nTZ3WVchBmE5wIETD3T3LK6ZvqgqF9AhKC5tnBQls2VBJQzGGPfgQpxhRd3svgk

SET default_transaction_read_only = off;

SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;

--
-- Roles
--

CREATE ROLE anon;
ALTER ROLE anon WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB NOLOGIN NOREPLICATION NOBYPASSRLS;
CREATE ROLE authenticated;
ALTER ROLE authenticated WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB NOLOGIN NOREPLICATION NOBYPASSRLS;
CREATE ROLE authenticator;
ALTER ROLE authenticator WITH NOSUPERUSER NOINHERIT NOCREATEROLE NOCREATEDB LOGIN NOREPLICATION NOBYPASSRLS;
CREATE ROLE dashboard_user;
ALTER ROLE dashboard_user WITH NOSUPERUSER INHERIT CREATEROLE CREATEDB NOLOGIN REPLICATION NOBYPASSRLS;
CREATE ROLE pgbouncer;
ALTER ROLE pgbouncer WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB LOGIN NOREPLICATION NOBYPASSRLS;
CREATE ROLE postgres;
ALTER ROLE postgres WITH NOSUPERUSER INHERIT CREATEROLE CREATEDB LOGIN REPLICATION BYPASSRLS;
CREATE ROLE service_role;
ALTER ROLE service_role WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB NOLOGIN NOREPLICATION BYPASSRLS;
CREATE ROLE supabase_admin;
ALTER ROLE supabase_admin WITH SUPERUSER INHERIT CREATEROLE CREATEDB LOGIN REPLICATION BYPASSRLS;
CREATE ROLE supabase_auth_admin;
ALTER ROLE supabase_auth_admin WITH NOSUPERUSER NOINHERIT CREATEROLE NOCREATEDB LOGIN NOREPLICATION NOBYPASSRLS;
CREATE ROLE supabase_read_only_user;
ALTER ROLE supabase_read_only_user WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB LOGIN NOREPLICATION BYPASSRLS;
CREATE ROLE supabase_realtime_admin;
ALTER ROLE supabase_realtime_admin WITH NOSUPERUSER NOINHERIT NOCREATEROLE NOCREATEDB NOLOGIN NOREPLICATION NOBYPASSRLS;
CREATE ROLE supabase_replication_admin;
ALTER ROLE supabase_replication_admin WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB LOGIN REPLICATION NOBYPASSRLS;
CREATE ROLE supabase_storage_admin;
ALTER ROLE supabase_storage_admin WITH NOSUPERUSER NOINHERIT CREATEROLE NOCREATEDB LOGIN NOREPLICATION NOBYPASSRLS;

--
-- User Configurations
--

--
-- User Config "anon"
--

ALTER ROLE anon SET statement_timeout TO '3s';

--
-- User Config "authenticated"
--

ALTER ROLE authenticated SET statement_timeout TO '8s';

--
-- User Config "authenticator"
--

ALTER ROLE authenticator SET session_preload_libraries TO 'safeupdate';
ALTER ROLE authenticator SET statement_timeout TO '8s';
ALTER ROLE authenticator SET lock_timeout TO '8s';

--
-- User Config "postgres"
--

ALTER ROLE postgres SET search_path TO E'\\$user', 'public', 'extensions';

--
-- User Config "supabase_admin"
--

ALTER ROLE supabase_admin SET search_path TO '$user', 'public', 'auth', 'extensions';
ALTER ROLE supabase_admin SET log_statement TO 'none';

--
-- User Config "supabase_auth_admin"
--

ALTER ROLE supabase_auth_admin SET search_path TO 'auth';
ALTER ROLE supabase_auth_admin SET idle_in_transaction_session_timeout TO '60000';
ALTER ROLE supabase_auth_admin SET log_statement TO 'none';

--
-- User Config "supabase_storage_admin"
--

ALTER ROLE supabase_storage_admin SET search_path TO 'storage';
ALTER ROLE supabase_storage_admin SET log_statement TO 'none';


--
-- Role memberships
--

GRANT anon TO authenticator WITH INHERIT FALSE GRANTED BY supabase_admin;
GRANT anon TO postgres WITH ADMIN OPTION, INHERIT TRUE GRANTED BY supabase_admin;
GRANT authenticated TO authenticator WITH INHERIT FALSE GRANTED BY supabase_admin;
GRANT authenticated TO postgres WITH ADMIN OPTION, INHERIT TRUE GRANTED BY supabase_admin;
GRANT authenticator TO postgres WITH ADMIN OPTION, INHERIT TRUE GRANTED BY supabase_admin;
GRANT authenticator TO supabase_storage_admin WITH INHERIT FALSE GRANTED BY supabase_admin;
GRANT pg_create_subscription TO postgres WITH INHERIT TRUE GRANTED BY supabase_admin;
GRANT pg_monitor TO postgres WITH ADMIN OPTION, INHERIT TRUE GRANTED BY supabase_admin;
GRANT pg_read_all_data TO postgres WITH ADMIN OPTION, INHERIT TRUE GRANTED BY supabase_admin;
GRANT pg_read_all_data TO supabase_read_only_user WITH INHERIT TRUE GRANTED BY supabase_admin;
GRANT pg_signal_backend TO postgres WITH ADMIN OPTION, INHERIT TRUE GRANTED BY supabase_admin;
GRANT service_role TO authenticator WITH INHERIT FALSE GRANTED BY supabase_admin;
GRANT service_role TO postgres WITH ADMIN OPTION, INHERIT TRUE GRANTED BY supabase_admin;
GRANT supabase_realtime_admin TO postgres WITH INHERIT TRUE GRANTED BY supabase_admin;






\unrestrict nTZ3WVchBmE5wIETD3T3LK6ZvqgqF9AhKC5tnBQls2VBJQzGGPfgQpxhRd3svgk

--
-- Databases
--

--
-- Database "template1" dump
--

\connect template1

--
-- PostgreSQL database dump
--

\restrict wzm8v9ecXQRnXvCVdD6gxDPwvPrL8v5UsAa8MPkNlG2urfmf8ZCpOMjgXIf8Ucn

-- Dumped from database version 17.4
-- Dumped by pg_dump version 17.6 (Debian 17.6-1.pgdg12+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- PostgreSQL database dump complete
--

\unrestrict wzm8v9ecXQRnXvCVdD6gxDPwvPrL8v5UsAa8MPkNlG2urfmf8ZCpOMjgXIf8Ucn

--
-- Database "postgres" dump
--

\connect postgres

--
-- PostgreSQL database dump
--

\restrict wbdC8JtrAlaGteMFLLEOS0hJIGxu1dkIEMsDJq4FqklKeBi9k2Pv5zKXOHA2L3x

-- Dumped from database version 17.4
-- Dumped by pg_dump version 17.6 (Debian 17.6-1.pgdg12+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: auth; Type: SCHEMA; Schema: -; Owner: supabase_admin
--

CREATE SCHEMA auth;


ALTER SCHEMA auth OWNER TO supabase_admin;

--
-- Name: extensions; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA extensions;


ALTER SCHEMA extensions OWNER TO postgres;

--
-- Name: graphql; Type: SCHEMA; Schema: -; Owner: supabase_admin
--

CREATE SCHEMA graphql;


ALTER SCHEMA graphql OWNER TO supabase_admin;

--
-- Name: graphql_public; Type: SCHEMA; Schema: -; Owner: supabase_admin
--

CREATE SCHEMA graphql_public;


ALTER SCHEMA graphql_public OWNER TO supabase_admin;

--
-- Name: pgbouncer; Type: SCHEMA; Schema: -; Owner: pgbouncer
--

CREATE SCHEMA pgbouncer;


ALTER SCHEMA pgbouncer OWNER TO pgbouncer;

--
-- Name: realtime; Type: SCHEMA; Schema: -; Owner: supabase_admin
--

CREATE SCHEMA realtime;


ALTER SCHEMA realtime OWNER TO supabase_admin;

--
-- Name: storage; Type: SCHEMA; Schema: -; Owner: supabase_admin
--

CREATE SCHEMA storage;


ALTER SCHEMA storage OWNER TO supabase_admin;

--
-- Name: supabase_migrations; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA supabase_migrations;


ALTER SCHEMA supabase_migrations OWNER TO postgres;

--
-- Name: vault; Type: SCHEMA; Schema: -; Owner: supabase_admin
--

CREATE SCHEMA vault;


ALTER SCHEMA vault OWNER TO supabase_admin;

--
-- Name: pg_graphql; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pg_graphql WITH SCHEMA graphql;


--
-- Name: EXTENSION pg_graphql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pg_graphql IS 'pg_graphql: GraphQL support';


--
-- Name: pg_stat_statements; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pg_stat_statements WITH SCHEMA extensions;


--
-- Name: EXTENSION pg_stat_statements; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pg_stat_statements IS 'track planning and execution statistics of all SQL statements executed';


--
-- Name: pgcrypto; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA extensions;


--
-- Name: EXTENSION pgcrypto; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pgcrypto IS 'cryptographic functions';


--
-- Name: supabase_vault; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS supabase_vault WITH SCHEMA vault;


--
-- Name: EXTENSION supabase_vault; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION supabase_vault IS 'Supabase Vault Extension';


--
-- Name: uuid-ossp; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA extensions;


--
-- Name: EXTENSION "uuid-ossp"; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION "uuid-ossp" IS 'generate universally unique identifiers (UUIDs)';


--
-- Name: aal_level; Type: TYPE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TYPE auth.aal_level AS ENUM (
    'aal1',
    'aal2',
    'aal3'
);


ALTER TYPE auth.aal_level OWNER TO supabase_auth_admin;

--
-- Name: code_challenge_method; Type: TYPE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TYPE auth.code_challenge_method AS ENUM (
    's256',
    'plain'
);


ALTER TYPE auth.code_challenge_method OWNER TO supabase_auth_admin;

--
-- Name: factor_status; Type: TYPE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TYPE auth.factor_status AS ENUM (
    'unverified',
    'verified'
);


ALTER TYPE auth.factor_status OWNER TO supabase_auth_admin;

--
-- Name: factor_type; Type: TYPE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TYPE auth.factor_type AS ENUM (
    'totp',
    'webauthn',
    'phone'
);


ALTER TYPE auth.factor_type OWNER TO supabase_auth_admin;

--
-- Name: one_time_token_type; Type: TYPE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TYPE auth.one_time_token_type AS ENUM (
    'confirmation_token',
    'reauthentication_token',
    'recovery_token',
    'email_change_token_new',
    'email_change_token_current',
    'phone_change_token'
);


ALTER TYPE auth.one_time_token_type OWNER TO supabase_auth_admin;

--
-- Name: equipment_status; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.equipment_status AS ENUM (
    'active',
    'maintenance',
    'inactive'
);


ALTER TYPE public.equipment_status OWNER TO postgres;

--
-- Name: organization_plan; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.organization_plan AS ENUM (
    'free',
    'premium'
);


ALTER TYPE public.organization_plan OWNER TO postgres;

--
-- Name: team_member_role; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.team_member_role AS ENUM (
    'owner',
    'manager',
    'technician',
    'requestor',
    'viewer'
);


ALTER TYPE public.team_member_role OWNER TO postgres;

--
-- Name: work_order_priority; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.work_order_priority AS ENUM (
    'low',
    'medium',
    'high'
);


ALTER TYPE public.work_order_priority OWNER TO postgres;

--
-- Name: work_order_status; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.work_order_status AS ENUM (
    'submitted',
    'accepted',
    'assigned',
    'in_progress',
    'on_hold',
    'completed',
    'cancelled'
);


ALTER TYPE public.work_order_status OWNER TO postgres;

--
-- Name: action; Type: TYPE; Schema: realtime; Owner: supabase_admin
--

CREATE TYPE realtime.action AS ENUM (
    'INSERT',
    'UPDATE',
    'DELETE',
    'TRUNCATE',
    'ERROR'
);


ALTER TYPE realtime.action OWNER TO supabase_admin;

--
-- Name: equality_op; Type: TYPE; Schema: realtime; Owner: supabase_admin
--

CREATE TYPE realtime.equality_op AS ENUM (
    'eq',
    'neq',
    'lt',
    'lte',
    'gt',
    'gte',
    'in'
);


ALTER TYPE realtime.equality_op OWNER TO supabase_admin;

--
-- Name: user_defined_filter; Type: TYPE; Schema: realtime; Owner: supabase_admin
--

CREATE TYPE realtime.user_defined_filter AS (
	column_name text,
	op realtime.equality_op,
	value text
);


ALTER TYPE realtime.user_defined_filter OWNER TO supabase_admin;

--
-- Name: wal_column; Type: TYPE; Schema: realtime; Owner: supabase_admin
--

CREATE TYPE realtime.wal_column AS (
	name text,
	type_name text,
	type_oid oid,
	value jsonb,
	is_pkey boolean,
	is_selectable boolean
);


ALTER TYPE realtime.wal_column OWNER TO supabase_admin;

--
-- Name: wal_rls; Type: TYPE; Schema: realtime; Owner: supabase_admin
--

CREATE TYPE realtime.wal_rls AS (
	wal jsonb,
	is_rls_enabled boolean,
	subscription_ids uuid[],
	errors text[]
);


ALTER TYPE realtime.wal_rls OWNER TO supabase_admin;

--
-- Name: buckettype; Type: TYPE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TYPE storage.buckettype AS ENUM (
    'STANDARD',
    'ANALYTICS'
);


ALTER TYPE storage.buckettype OWNER TO supabase_storage_admin;

--
-- Name: email(); Type: FUNCTION; Schema: auth; Owner: supabase_auth_admin
--

CREATE FUNCTION auth.email() RETURNS text
    LANGUAGE sql STABLE
    AS $$
  select 
  coalesce(
    nullif(current_setting('request.jwt.claim.email', true), ''),
    (nullif(current_setting('request.jwt.claims', true), '')::jsonb ->> 'email')
  )::text
$$;


ALTER FUNCTION auth.email() OWNER TO supabase_auth_admin;

--
-- Name: FUNCTION email(); Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON FUNCTION auth.email() IS 'Deprecated. Use auth.jwt() -> ''email'' instead.';


--
-- Name: jwt(); Type: FUNCTION; Schema: auth; Owner: supabase_auth_admin
--

CREATE FUNCTION auth.jwt() RETURNS jsonb
    LANGUAGE sql STABLE
    AS $$
  select 
    coalesce(
        nullif(current_setting('request.jwt.claim', true), ''),
        nullif(current_setting('request.jwt.claims', true), '')
    )::jsonb
$$;


ALTER FUNCTION auth.jwt() OWNER TO supabase_auth_admin;

--
-- Name: role(); Type: FUNCTION; Schema: auth; Owner: supabase_auth_admin
--

CREATE FUNCTION auth.role() RETURNS text
    LANGUAGE sql STABLE
    AS $$
  select 
  coalesce(
    nullif(current_setting('request.jwt.claim.role', true), ''),
    (nullif(current_setting('request.jwt.claims', true), '')::jsonb ->> 'role')
  )::text
$$;


ALTER FUNCTION auth.role() OWNER TO supabase_auth_admin;

--
-- Name: FUNCTION role(); Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON FUNCTION auth.role() IS 'Deprecated. Use auth.jwt() -> ''role'' instead.';


--
-- Name: uid(); Type: FUNCTION; Schema: auth; Owner: supabase_auth_admin
--

CREATE FUNCTION auth.uid() RETURNS uuid
    LANGUAGE sql STABLE
    AS $$
  select 
  coalesce(
    nullif(current_setting('request.jwt.claim.sub', true), ''),
    (nullif(current_setting('request.jwt.claims', true), '')::jsonb ->> 'sub')
  )::uuid
$$;


ALTER FUNCTION auth.uid() OWNER TO supabase_auth_admin;

--
-- Name: FUNCTION uid(); Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON FUNCTION auth.uid() IS 'Deprecated. Use auth.jwt() -> ''sub'' instead.';


--
-- Name: grant_pg_cron_access(); Type: FUNCTION; Schema: extensions; Owner: supabase_admin
--

CREATE FUNCTION extensions.grant_pg_cron_access() RETURNS event_trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  IF EXISTS (
    SELECT
    FROM pg_event_trigger_ddl_commands() AS ev
    JOIN pg_extension AS ext
    ON ev.objid = ext.oid
    WHERE ext.extname = 'pg_cron'
  )
  THEN
    grant usage on schema cron to postgres with grant option;

    alter default privileges in schema cron grant all on tables to postgres with grant option;
    alter default privileges in schema cron grant all on functions to postgres with grant option;
    alter default privileges in schema cron grant all on sequences to postgres with grant option;

    alter default privileges for user supabase_admin in schema cron grant all
        on sequences to postgres with grant option;
    alter default privileges for user supabase_admin in schema cron grant all
        on tables to postgres with grant option;
    alter default privileges for user supabase_admin in schema cron grant all
        on functions to postgres with grant option;

    grant all privileges on all tables in schema cron to postgres with grant option;
    revoke all on table cron.job from postgres;
    grant select on table cron.job to postgres with grant option;
  END IF;
END;
$$;


ALTER FUNCTION extensions.grant_pg_cron_access() OWNER TO supabase_admin;

--
-- Name: FUNCTION grant_pg_cron_access(); Type: COMMENT; Schema: extensions; Owner: supabase_admin
--

COMMENT ON FUNCTION extensions.grant_pg_cron_access() IS 'Grants access to pg_cron';


--
-- Name: grant_pg_graphql_access(); Type: FUNCTION; Schema: extensions; Owner: supabase_admin
--

CREATE FUNCTION extensions.grant_pg_graphql_access() RETURNS event_trigger
    LANGUAGE plpgsql
    AS $_$
DECLARE
    func_is_graphql_resolve bool;
BEGIN
    func_is_graphql_resolve = (
        SELECT n.proname = 'resolve'
        FROM pg_event_trigger_ddl_commands() AS ev
        LEFT JOIN pg_catalog.pg_proc AS n
        ON ev.objid = n.oid
    );

    IF func_is_graphql_resolve
    THEN
        -- Update public wrapper to pass all arguments through to the pg_graphql resolve func
        DROP FUNCTION IF EXISTS graphql_public.graphql;
        create or replace function graphql_public.graphql(
            "operationName" text default null,
            query text default null,
            variables jsonb default null,
            extensions jsonb default null
        )
            returns jsonb
            language sql
        as $$
            select graphql.resolve(
                query := query,
                variables := coalesce(variables, '{}'),
                "operationName" := "operationName",
                extensions := extensions
            );
        $$;

        -- This hook executes when `graphql.resolve` is created. That is not necessarily the last
        -- function in the extension so we need to grant permissions on existing entities AND
        -- update default permissions to any others that are created after `graphql.resolve`
        grant usage on schema graphql to postgres, anon, authenticated, service_role;
        grant select on all tables in schema graphql to postgres, anon, authenticated, service_role;
        grant execute on all functions in schema graphql to postgres, anon, authenticated, service_role;
        grant all on all sequences in schema graphql to postgres, anon, authenticated, service_role;
        alter default privileges in schema graphql grant all on tables to postgres, anon, authenticated, service_role;
        alter default privileges in schema graphql grant all on functions to postgres, anon, authenticated, service_role;
        alter default privileges in schema graphql grant all on sequences to postgres, anon, authenticated, service_role;

        -- Allow postgres role to allow granting usage on graphql and graphql_public schemas to custom roles
        grant usage on schema graphql_public to postgres with grant option;
        grant usage on schema graphql to postgres with grant option;
    END IF;

END;
$_$;


ALTER FUNCTION extensions.grant_pg_graphql_access() OWNER TO supabase_admin;

--
-- Name: FUNCTION grant_pg_graphql_access(); Type: COMMENT; Schema: extensions; Owner: supabase_admin
--

COMMENT ON FUNCTION extensions.grant_pg_graphql_access() IS 'Grants access to pg_graphql';


--
-- Name: grant_pg_net_access(); Type: FUNCTION; Schema: extensions; Owner: supabase_admin
--

CREATE FUNCTION extensions.grant_pg_net_access() RETURNS event_trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  IF EXISTS (
    SELECT 1
    FROM pg_event_trigger_ddl_commands() AS ev
    JOIN pg_extension AS ext
    ON ev.objid = ext.oid
    WHERE ext.extname = 'pg_net'
  )
  THEN
    IF NOT EXISTS (
      SELECT 1
      FROM pg_roles
      WHERE rolname = 'supabase_functions_admin'
    )
    THEN
      CREATE USER supabase_functions_admin NOINHERIT CREATEROLE LOGIN NOREPLICATION;
    END IF;

    GRANT USAGE ON SCHEMA net TO supabase_functions_admin, postgres, anon, authenticated, service_role;

    IF EXISTS (
      SELECT FROM pg_extension
      WHERE extname = 'pg_net'
      -- all versions in use on existing projects as of 2025-02-20
      -- version 0.12.0 onwards don't need these applied
      AND extversion IN ('0.2', '0.6', '0.7', '0.7.1', '0.8', '0.10.0', '0.11.0')
    ) THEN
      ALTER function net.http_get(url text, params jsonb, headers jsonb, timeout_milliseconds integer) SECURITY DEFINER;
      ALTER function net.http_post(url text, body jsonb, params jsonb, headers jsonb, timeout_milliseconds integer) SECURITY DEFINER;

      ALTER function net.http_get(url text, params jsonb, headers jsonb, timeout_milliseconds integer) SET search_path = net;
      ALTER function net.http_post(url text, body jsonb, params jsonb, headers jsonb, timeout_milliseconds integer) SET search_path = net;

      REVOKE ALL ON FUNCTION net.http_get(url text, params jsonb, headers jsonb, timeout_milliseconds integer) FROM PUBLIC;
      REVOKE ALL ON FUNCTION net.http_post(url text, body jsonb, params jsonb, headers jsonb, timeout_milliseconds integer) FROM PUBLIC;

      GRANT EXECUTE ON FUNCTION net.http_get(url text, params jsonb, headers jsonb, timeout_milliseconds integer) TO supabase_functions_admin, postgres, anon, authenticated, service_role;
      GRANT EXECUTE ON FUNCTION net.http_post(url text, body jsonb, params jsonb, headers jsonb, timeout_milliseconds integer) TO supabase_functions_admin, postgres, anon, authenticated, service_role;
    END IF;
  END IF;
END;
$$;


ALTER FUNCTION extensions.grant_pg_net_access() OWNER TO supabase_admin;

--
-- Name: FUNCTION grant_pg_net_access(); Type: COMMENT; Schema: extensions; Owner: supabase_admin
--

COMMENT ON FUNCTION extensions.grant_pg_net_access() IS 'Grants access to pg_net';


--
-- Name: pgrst_ddl_watch(); Type: FUNCTION; Schema: extensions; Owner: supabase_admin
--

CREATE FUNCTION extensions.pgrst_ddl_watch() RETURNS event_trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
  cmd record;
BEGIN
  FOR cmd IN SELECT * FROM pg_event_trigger_ddl_commands()
  LOOP
    IF cmd.command_tag IN (
      'CREATE SCHEMA', 'ALTER SCHEMA'
    , 'CREATE TABLE', 'CREATE TABLE AS', 'SELECT INTO', 'ALTER TABLE'
    , 'CREATE FOREIGN TABLE', 'ALTER FOREIGN TABLE'
    , 'CREATE VIEW', 'ALTER VIEW'
    , 'CREATE MATERIALIZED VIEW', 'ALTER MATERIALIZED VIEW'
    , 'CREATE FUNCTION', 'ALTER FUNCTION'
    , 'CREATE TRIGGER'
    , 'CREATE TYPE', 'ALTER TYPE'
    , 'CREATE RULE'
    , 'COMMENT'
    )
    -- don't notify in case of CREATE TEMP table or other objects created on pg_temp
    AND cmd.schema_name is distinct from 'pg_temp'
    THEN
      NOTIFY pgrst, 'reload schema';
    END IF;
  END LOOP;
END; $$;


ALTER FUNCTION extensions.pgrst_ddl_watch() OWNER TO supabase_admin;

--
-- Name: pgrst_drop_watch(); Type: FUNCTION; Schema: extensions; Owner: supabase_admin
--

CREATE FUNCTION extensions.pgrst_drop_watch() RETURNS event_trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
  obj record;
BEGIN
  FOR obj IN SELECT * FROM pg_event_trigger_dropped_objects()
  LOOP
    IF obj.object_type IN (
      'schema'
    , 'table'
    , 'foreign table'
    , 'view'
    , 'materialized view'
    , 'function'
    , 'trigger'
    , 'type'
    , 'rule'
    )
    AND obj.is_temporary IS false -- no pg_temp objects
    THEN
      NOTIFY pgrst, 'reload schema';
    END IF;
  END LOOP;
END; $$;


ALTER FUNCTION extensions.pgrst_drop_watch() OWNER TO supabase_admin;

--
-- Name: set_graphql_placeholder(); Type: FUNCTION; Schema: extensions; Owner: supabase_admin
--

CREATE FUNCTION extensions.set_graphql_placeholder() RETURNS event_trigger
    LANGUAGE plpgsql
    AS $_$
    DECLARE
    graphql_is_dropped bool;
    BEGIN
    graphql_is_dropped = (
        SELECT ev.schema_name = 'graphql_public'
        FROM pg_event_trigger_dropped_objects() AS ev
        WHERE ev.schema_name = 'graphql_public'
    );

    IF graphql_is_dropped
    THEN
        create or replace function graphql_public.graphql(
            "operationName" text default null,
            query text default null,
            variables jsonb default null,
            extensions jsonb default null
        )
            returns jsonb
            language plpgsql
        as $$
            DECLARE
                server_version float;
            BEGIN
                server_version = (SELECT (SPLIT_PART((select version()), ' ', 2))::float);

                IF server_version >= 14 THEN
                    RETURN jsonb_build_object(
                        'errors', jsonb_build_array(
                            jsonb_build_object(
                                'message', 'pg_graphql extension is not enabled.'
                            )
                        )
                    );
                ELSE
                    RETURN jsonb_build_object(
                        'errors', jsonb_build_array(
                            jsonb_build_object(
                                'message', 'pg_graphql is only available on projects running Postgres 14 onwards.'
                            )
                        )
                    );
                END IF;
            END;
        $$;
    END IF;

    END;
$_$;


ALTER FUNCTION extensions.set_graphql_placeholder() OWNER TO supabase_admin;

--
-- Name: FUNCTION set_graphql_placeholder(); Type: COMMENT; Schema: extensions; Owner: supabase_admin
--

COMMENT ON FUNCTION extensions.set_graphql_placeholder() IS 'Reintroduces placeholder function for graphql_public.graphql';


--
-- Name: get_auth(text); Type: FUNCTION; Schema: pgbouncer; Owner: supabase_admin
--

CREATE FUNCTION pgbouncer.get_auth(p_usename text) RETURNS TABLE(username text, password text)
    LANGUAGE plpgsql SECURITY DEFINER
    AS $_$
begin
    raise debug 'PgBouncer auth request: %', p_usename;

    return query
    select 
        rolname::text, 
        case when rolvaliduntil < now() 
            then null 
            else rolpassword::text 
        end 
    from pg_authid 
    where rolname=$1 and rolcanlogin;
end;
$_$;


ALTER FUNCTION pgbouncer.get_auth(p_usename text) OWNER TO supabase_admin;

--
-- Name: accept_invitation_atomic(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.accept_invitation_atomic(p_invitation_token uuid, p_user_id uuid DEFAULT auth.uid()) RETURNS jsonb
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    SET row_security TO 'off'
    AS $$
DECLARE
  invitation_record RECORD;
  org_name TEXT;
  result jsonb;
BEGIN
  -- Get invitation details
  SELECT id, organization_id, email, role, status, expires_at, accepted_by
  INTO invitation_record
  FROM organization_invitations
  WHERE invitation_token = p_invitation_token;
  
  -- Validate invitation exists
  IF NOT FOUND THEN
    RETURN jsonb_build_object('success', false, 'error', 'Invitation not found');
  END IF;
  
  -- Validate invitation status
  IF invitation_record.status != 'pending' THEN
    RETURN jsonb_build_object('success', false, 'error', 'Invitation has already been processed');
  END IF;
  
  -- Validate invitation not expired
  IF invitation_record.expires_at < now() THEN
    RETURN jsonb_build_object('success', false, 'error', 'Invitation has expired');
  END IF;
  
  -- Validate user email matches invitation email
  IF NOT EXISTS (
    SELECT 1 FROM auth.users 
    WHERE id = p_user_id 
      AND lower(trim(email)) = lower(trim(invitation_record.email))
  ) THEN
    RETURN jsonb_build_object('success', false, 'error', 'User email does not match invitation email');
  END IF;
  
  -- Check if user is already a member
  IF EXISTS (
    SELECT 1 FROM organization_members
    WHERE user_id = p_user_id 
      AND organization_id = invitation_record.organization_id
      AND status = 'active'
  ) THEN
    RETURN jsonb_build_object('success', false, 'error', 'User is already a member of this organization');
  END IF;
  
  -- Begin the atomic acceptance process
  
  -- 1. Update invitation status
  UPDATE organization_invitations
  SET 
    status = 'accepted',
    accepted_at = now(),
    accepted_by = p_user_id,
    updated_at = now()
  WHERE id = invitation_record.id;
  
  -- 2. Create organization membership
  INSERT INTO organization_members (
    organization_id,
    user_id,
    role,
    status
  ) VALUES (
    invitation_record.organization_id,
    p_user_id,
    invitation_record.role,
    'active'
  );
  
  -- Get organization name for response
  SELECT name INTO org_name
  FROM organizations
  WHERE id = invitation_record.organization_id;
  
  -- Return success result
  result := jsonb_build_object(
    'success', true,
    'organization_id', invitation_record.organization_id,
    'organization_name', COALESCE(org_name, 'Unknown Organization'),
    'role', invitation_record.role
  );
  
  RETURN result;
  
EXCEPTION 
  WHEN unique_violation THEN
    RETURN jsonb_build_object('success', false, 'error', 'User is already a member of this organization');
  WHEN OTHERS THEN
    RETURN jsonb_build_object('success', false, 'error', 'Failed to accept invitation: ' || SQLERRM);
END;
$$;


ALTER FUNCTION public.accept_invitation_atomic(p_invitation_token uuid, p_user_id uuid) OWNER TO postgres;

--
-- Name: calculate_billable_members(uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.calculate_billable_members(org_id uuid) RETURNS integer
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  SELECT COUNT(*)::INTEGER
  FROM public.organization_members om
  JOIN public.profiles p ON om.user_id = p.id
  WHERE om.organization_id = org_id 
    AND om.status = 'active'
    AND om.role IN ('admin', 'member'); -- Exclude owners from billing
$$;


ALTER FUNCTION public.calculate_billable_members(org_id uuid) OWNER TO postgres;

--
-- Name: calculate_organization_billing(uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.calculate_organization_billing(org_id uuid) RETURNS jsonb
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $_$
DECLARE
  active_users INTEGER;
  storage_mb INTEGER;
  result jsonb;
BEGIN
  -- Get active user count (excluding owners)
  SELECT COUNT(*)::INTEGER INTO active_users
  FROM public.organization_members om
  JOIN public.profiles p ON om.user_id = p.id
  WHERE om.organization_id = org_id 
    AND om.status = 'active'
    AND om.role IN ('admin', 'member');

  -- Get storage usage
  SELECT COALESCE(storage_used_mb, 0)::INTEGER INTO storage_mb
  FROM public.organizations
  WHERE id = org_id;

  -- Build result JSON
  result := jsonb_build_object(
    'organization_id', org_id,
    'active_users', active_users,
    'storage_mb', storage_mb,
    'user_license_cost', active_users * 1000, -- $10.00 per user in cents
    'storage_overage_cost', GREATEST(0, storage_mb - 1000) * 10, -- $0.10 per MB over 1GB
    'calculated_at', now()
  );

  RETURN result;
END;
$_$;


ALTER FUNCTION public.calculate_organization_billing(org_id uuid) OWNER TO postgres;

--
-- Name: can_manage_invitation_atomic(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.can_manage_invitation_atomic(user_uuid uuid, invitation_id uuid) RETURNS boolean
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    SET row_security TO 'off'
    AS $$
DECLARE
  org_id uuid;
  invited_by_user uuid;
  is_admin_result boolean := false;
BEGIN
  -- Get invitation details
  SELECT organization_id, invited_by 
  INTO org_id, invited_by_user
  FROM organization_invitations
  WHERE id = invitation_id;
  
  -- If user created the invitation, they can manage it
  IF invited_by_user = user_uuid THEN
    RETURN true;
  END IF;
  
  -- Check if user is admin
  IF org_id IS NOT NULL THEN
    SELECT EXISTS (
      SELECT 1 
      FROM organization_members
      WHERE user_id = user_uuid 
        AND organization_id = org_id 
        AND role IN ('owner', 'admin')
        AND status = 'active'
    ) INTO is_admin_result;
    
    RETURN is_admin_result;
  END IF;
  
  RETURN false;
EXCEPTION WHEN OTHERS THEN
  RETURN false;
END;
$$;


ALTER FUNCTION public.can_manage_invitation_atomic(user_uuid uuid, invitation_id uuid) OWNER TO postgres;

--
-- Name: can_manage_invitation_optimized(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.can_manage_invitation_optimized(user_uuid uuid, invitation_id uuid) RETURNS boolean
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    SET row_security TO 'off'
    AS $$
DECLARE
  org_id uuid;
  invited_by_user uuid;
  is_admin_result boolean := false;
BEGIN
  -- Get invitation details
  SELECT organization_id, invited_by 
  INTO org_id, invited_by_user
  FROM organization_invitations
  WHERE id = invitation_id;
  
  -- If user created the invitation, they can manage it
  IF invited_by_user = user_uuid THEN
    RETURN true;
  END IF;
  
  -- Check if user is admin
  IF org_id IS NOT NULL THEN
    SELECT EXISTS (
      SELECT 1 
      FROM organization_members
      WHERE user_id = user_uuid 
        AND organization_id = org_id 
        AND role IN ('owner', 'admin')
        AND status = 'active'
    ) INTO is_admin_result;
    
    RETURN is_admin_result;
  END IF;
  
  RETURN false;
EXCEPTION WHEN OTHERS THEN
  RETURN false;
END;
$$;


ALTER FUNCTION public.can_manage_invitation_optimized(user_uuid uuid, invitation_id uuid) OWNER TO postgres;

--
-- Name: can_manage_invitation_safe(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.can_manage_invitation_safe(user_uuid uuid, invitation_id uuid) RETURNS boolean
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
  org_id uuid;
  is_admin boolean := false;
  is_inviter boolean := false;
BEGIN
  SELECT organization_id, (invited_by = user_uuid) 
  INTO org_id, is_inviter
  FROM organization_invitations
  WHERE id = invitation_id;
  
  IF is_inviter THEN
    RETURN true;
  END IF;
  
  IF org_id IS NOT NULL THEN
    SELECT public.check_admin_bypass_fixed(user_uuid, org_id) INTO is_admin;
    RETURN is_admin;
  END IF;
  
  RETURN false;
EXCEPTION WHEN OTHERS THEN
  RETURN false;
END;
$$;


ALTER FUNCTION public.can_manage_invitation_safe(user_uuid uuid, invitation_id uuid) OWNER TO postgres;

--
-- Name: check_admin_bypass_fixed(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.check_admin_bypass_fixed(user_uuid uuid, org_id uuid) RETURNS boolean
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    SET row_security TO 'off'
    AS $$
DECLARE
  result boolean := false;
BEGIN
  -- Direct query without RLS interference
  SELECT EXISTS (
    SELECT 1 
    FROM organization_members
    WHERE user_id = user_uuid 
      AND organization_id = org_id 
      AND role IN ('owner', 'admin')
      AND status = 'active'
  ) INTO result;
  
  RETURN result;
END;
$$;


ALTER FUNCTION public.check_admin_bypass_fixed(user_uuid uuid, org_id uuid) OWNER TO postgres;

--
-- Name: check_admin_permission_safe(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.check_admin_permission_safe(user_uuid uuid, org_id uuid) RETURNS boolean
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
  result boolean := false;
BEGIN
  -- Use the raw bypass function
  SELECT public.raw_check_admin_bypass(user_uuid, org_id) INTO result;
  RETURN result;
EXCEPTION WHEN OTHERS THEN
  -- Return false on any error
  RETURN false;
END;
$$;


ALTER FUNCTION public.check_admin_permission_safe(user_uuid uuid, org_id uuid) OWNER TO postgres;

--
-- Name: check_admin_with_context(uuid, uuid, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.check_admin_with_context(user_uuid uuid, org_id uuid, bypass_context text DEFAULT NULL::text) RETURNS boolean
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
  result boolean := false;
  current_context text;
BEGIN
  -- Get the current context from session variable
  current_context := current_setting('app.rls_context', true);
  
  -- If we're in a bypass context (like invitation creation), use direct query
  IF current_context = 'invitation_bypass' OR bypass_context = 'invitation_bypass' THEN
    -- Direct query without RLS interference for invitation context
    SELECT EXISTS (
      SELECT 1 
      FROM organization_members
      WHERE user_id = user_uuid 
        AND organization_id = org_id 
        AND role IN ('owner', 'admin')
        AND status = 'active'
    ) INTO result;
  ELSE
    -- Normal RLS-aware query for regular contexts
    SELECT EXISTS (
      SELECT 1 
      FROM organization_members
      WHERE user_id = user_uuid 
        AND organization_id = org_id 
        AND role IN ('owner', 'admin')
        AND status = 'active'
        AND user_id = auth.uid() -- Only check for current user in normal context
    ) INTO result;
  END IF;
  
  RETURN result;
END;
$$;


ALTER FUNCTION public.check_admin_with_context(user_uuid uuid, org_id uuid, bypass_context text) OWNER TO postgres;

--
-- Name: check_email_exists_in_auth(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.check_email_exists_in_auth(p_email text) RETURNS boolean
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
  email_exists boolean := false;
BEGIN
  -- Check if email exists in auth.users table
  SELECT EXISTS (
    SELECT 1 
    FROM auth.users 
    WHERE lower(trim(email)) = lower(trim(p_email))
  ) INTO email_exists;
  
  RETURN email_exists;
EXCEPTION WHEN OTHERS THEN
  -- Return true on error to be safe (don't create account if we can't verify)
  RETURN true;
END;
$$;


ALTER FUNCTION public.check_email_exists_in_auth(p_email text) OWNER TO postgres;

--
-- Name: check_member_bypass_fixed(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.check_member_bypass_fixed(user_uuid uuid, org_id uuid) RETURNS boolean
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    SET row_security TO 'off'
    AS $$
DECLARE
  result boolean := false;
BEGIN
  -- Direct query without RLS interference
  SELECT EXISTS (
    SELECT 1 
    FROM organization_members
    WHERE user_id = user_uuid 
      AND organization_id = org_id 
      AND status = 'active'
  ) INTO result;
  
  RETURN result;
END;
$$;


ALTER FUNCTION public.check_member_bypass_fixed(user_uuid uuid, org_id uuid) OWNER TO postgres;

--
-- Name: check_org_access_direct(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.check_org_access_direct(user_uuid uuid, org_id uuid) RETURNS boolean
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  SELECT EXISTS (
    SELECT 1
    FROM organization_members
    WHERE user_id = user_uuid 
      AND organization_id = org_id 
      AND status = 'active'
  );
$$;


ALTER FUNCTION public.check_org_access_direct(user_uuid uuid, org_id uuid) OWNER TO postgres;

--
-- Name: check_org_access_secure(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.check_org_access_secure(user_uuid uuid, org_id uuid) RETURNS boolean
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  SELECT EXISTS (
    SELECT 1
    FROM public.organization_members
    WHERE user_id = user_uuid 
      AND organization_id = org_id 
      AND status = 'active'
  );
$$;


ALTER FUNCTION public.check_org_access_secure(user_uuid uuid, org_id uuid) OWNER TO postgres;

--
-- Name: check_org_admin_secure(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.check_org_admin_secure(user_uuid uuid, org_id uuid) RETURNS boolean
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  SELECT EXISTS (
    SELECT 1
    FROM public.organization_members
    WHERE user_id = user_uuid 
      AND organization_id = org_id 
      AND role IN ('owner', 'admin')
      AND status = 'active'
  );
$$;


ALTER FUNCTION public.check_org_admin_secure(user_uuid uuid, org_id uuid) OWNER TO postgres;

--
-- Name: check_team_access_secure(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.check_team_access_secure(user_uuid uuid, team_uuid uuid) RETURNS boolean
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  SELECT EXISTS (
    SELECT 1
    FROM public.team_members tm
    WHERE tm.user_id = user_uuid 
      AND tm.team_id = team_uuid
  );
$$;


ALTER FUNCTION public.check_team_access_secure(user_uuid uuid, team_uuid uuid) OWNER TO postgres;

--
-- Name: check_team_role_secure(uuid, uuid, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.check_team_role_secure(user_uuid uuid, team_uuid uuid, required_role text) RETURNS boolean
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  SELECT EXISTS (
    SELECT 1
    FROM public.team_members tm
    WHERE tm.user_id = user_uuid 
      AND tm.team_id = team_uuid
      AND tm.role::text = required_role
  );
$$;


ALTER FUNCTION public.check_team_role_secure(user_uuid uuid, team_uuid uuid, required_role text) OWNER TO postgres;

--
-- Name: clear_rls_context(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.clear_rls_context() RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  PERFORM set_config('app.rls_context', '', true);
END;
$$;


ALTER FUNCTION public.clear_rls_context() OWNER TO postgres;

--
-- Name: create_historical_work_order_with_pm(uuid, uuid, text, text, public.work_order_priority, public.work_order_status, timestamp with time zone, text, uuid, uuid, timestamp with time zone, timestamp with time zone, boolean, text, timestamp with time zone, text, jsonb); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.create_historical_work_order_with_pm(p_organization_id uuid, p_equipment_id uuid, p_title text, p_description text, p_priority public.work_order_priority, p_status public.work_order_status, p_historical_start_date timestamp with time zone, p_historical_notes text DEFAULT NULL::text, p_assignee_id uuid DEFAULT NULL::uuid, p_team_id uuid DEFAULT NULL::uuid, p_due_date timestamp with time zone DEFAULT NULL::timestamp with time zone, p_completed_date timestamp with time zone DEFAULT NULL::timestamp with time zone, p_has_pm boolean DEFAULT false, p_pm_status text DEFAULT 'pending'::text, p_pm_completion_date timestamp with time zone DEFAULT NULL::timestamp with time zone, p_pm_notes text DEFAULT NULL::text, p_pm_checklist_data jsonb DEFAULT '[]'::jsonb) RETURNS jsonb
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
    work_order_id UUID;
    pm_id UUID;
    result JSONB;
    default_checklist JSONB;
BEGIN
    -- Check if user is admin
    IF NOT is_org_admin(auth.uid(), p_organization_id) THEN
        RETURN jsonb_build_object('success', false, 'error', 'Permission denied');
    END IF;
    
    -- Create historical work order with has_pm field
    INSERT INTO work_orders (
        organization_id,
        equipment_id,
        title,
        description,
        priority,
        status,
        assignee_id,
        team_id,
        due_date,
        completed_date,
        has_pm,  -- ADD THIS FIELD
        is_historical,
        historical_start_date,
        historical_notes,
        created_by_admin,
        created_by,
        created_date
    ) VALUES (
        p_organization_id,
        p_equipment_id,
        p_title,
        p_description,
        p_priority,
        p_status,
        p_assignee_id,
        p_team_id,
        p_due_date,
        p_completed_date,
        p_has_pm,  -- SET THE VALUE
        true,
        p_historical_start_date,
        p_historical_notes,
        auth.uid(),
        auth.uid(),
        p_historical_start_date
    ) RETURNING id INTO work_order_id;
    
    -- Create PM if requested
    IF p_has_pm THEN
        -- Use default forklift checklist if no checklist data provided or empty
        IF p_pm_checklist_data IS NULL OR jsonb_array_length(p_pm_checklist_data) = 0 THEN
            -- Default forklift PM checklist
            default_checklist := '[
                {"id": "visual_001", "title": "Mast and Forks", "description": "Check mast for damage, cracks, or bent components. Inspect forks for cracks, bends, or excessive wear.", "condition": "good", "required": true, "section": "Visual Inspection", "completed": false},
                {"id": "visual_002", "title": "Hydraulic System", "description": "Check for hydraulic fluid leaks around cylinders, hoses, and fittings.", "condition": "good", "required": true, "section": "Visual Inspection", "completed": false},
                {"id": "visual_003", "title": "Tires and Wheels", "description": "Inspect tires for wear, cuts, or embedded objects. Check wheel bolts for tightness.", "condition": "good", "required": true, "section": "Visual Inspection", "completed": false},
                {"id": "visual_004", "title": "Overhead Guard", "description": "Check overhead guard for damage, cracks, or loose bolts.", "condition": "good", "required": true, "section": "Visual Inspection", "completed": false},
                {"id": "visual_005", "title": "Load Backrest", "description": "Inspect load backrest for damage and proper attachment.", "condition": "good", "required": true, "section": "Visual Inspection", "completed": false},
                {"id": "engine_001", "title": "Engine Oil Level", "description": "Check engine oil level and top off if necessary. Look for leaks.", "condition": "good", "required": true, "section": "Engine Compartment", "completed": false},
                {"id": "engine_002", "title": "Coolant Level", "description": "Check radiator coolant level and condition. Look for leaks.", "condition": "good", "required": true, "section": "Engine Compartment", "completed": false},
                {"id": "engine_003", "title": "Air Filter", "description": "Inspect air filter for dirt and debris. Replace if necessary.", "condition": "good", "required": true, "section": "Engine Compartment", "completed": false},
                {"id": "engine_004", "title": "Belt Condition", "description": "Check drive belts for proper tension, cracks, or fraying.", "condition": "good", "required": true, "section": "Engine Compartment", "completed": false},
                {"id": "engine_005", "title": "Battery", "description": "Check battery terminals for corrosion and ensure secure connections.", "condition": "good", "required": true, "section": "Engine Compartment", "completed": false},
                {"id": "electrical_001", "title": "Warning Lights", "description": "Test all warning lights and indicators on the dashboard.", "condition": "good", "required": true, "section": "Electrical Inspection", "completed": false},
                {"id": "electrical_002", "title": "Horn", "description": "Test horn operation for proper sound and function.", "condition": "good", "required": true, "section": "Electrical Inspection", "completed": false},
                {"id": "electrical_003", "title": "Work Lights", "description": "Test all work lights for proper operation.", "condition": "good", "required": true, "section": "Electrical Inspection", "completed": false},
                {"id": "operational_001", "title": "Steering", "description": "Test steering for smooth operation and proper response.", "condition": "good", "required": true, "section": "Operational Check", "completed": false},
                {"id": "operational_002", "title": "Brakes", "description": "Test service and parking brake operation.", "condition": "good", "required": true, "section": "Operational Check", "completed": false},
                {"id": "operational_003", "title": "Hydraulic Functions", "description": "Test lift, lower, tilt, and side shift functions for smooth operation.", "condition": "good", "required": true, "section": "Operational Check", "completed": false},
                {"id": "operational_004", "title": "Transmission", "description": "Test forward and reverse operation for smooth engagement.", "condition": "good", "required": true, "section": "Operational Check", "completed": false},
                {"id": "safety_001", "title": "Seat Belt", "description": "Check seat belt for proper operation and condition.", "condition": "good", "required": true, "section": "Safety Features", "completed": false},
                {"id": "safety_002", "title": "Dead Man Switch", "description": "Test operator presence system and dead man switch.", "condition": "good", "required": true, "section": "Safety Features", "completed": false},
                {"id": "safety_003", "title": "Load Capacity Plate", "description": "Verify load capacity plate is visible and legible.", "condition": "good", "required": true, "section": "Safety Features", "completed": false}
            ]'::jsonb;
        ELSE
            default_checklist := p_pm_checklist_data;
        END IF;
        
        INSERT INTO preventative_maintenance (
            work_order_id,
            equipment_id,
            organization_id,
            status,
            completed_at,
            completed_by,
            notes,
            checklist_data,
            is_historical,
            historical_completion_date,
            historical_notes,
            created_by
        ) VALUES (
            work_order_id,
            p_equipment_id,
            p_organization_id,
            p_pm_status,
            CASE WHEN p_pm_status = 'completed' THEN COALESCE(p_pm_completion_date, p_completed_date) ELSE NULL END,
            CASE WHEN p_pm_status = 'completed' THEN auth.uid() ELSE NULL END,
            p_pm_notes,
            default_checklist,  -- Use the checklist (default or provided)
            true,
            p_pm_completion_date,
            CONCAT('Historical PM - ', p_pm_notes),
            auth.uid()
        ) RETURNING id INTO pm_id;
    END IF;
    
    -- Create status history entry
    INSERT INTO work_order_status_history (
        work_order_id,
        old_status,
        new_status,
        changed_by,
        reason,
        is_historical_creation,
        metadata
    ) VALUES (
        work_order_id,
        NULL,
        p_status,
        auth.uid(),
        'Historical work order created',
        true,
        jsonb_build_object(
            'historical_start_date', p_historical_start_date,
            'has_pm', p_has_pm,
            'pm_id', pm_id
        )
    );
    
    result := jsonb_build_object(
        'success', true,
        'work_order_id', work_order_id,
        'pm_id', pm_id,
        'has_pm', p_has_pm
    );
    
    RETURN result;
    
EXCEPTION WHEN OTHERS THEN
    RETURN jsonb_build_object(
        'success', false, 
        'error', 'Failed to create historical work order: ' || SQLERRM
    );
END;
$$;


ALTER FUNCTION public.create_historical_work_order_with_pm(p_organization_id uuid, p_equipment_id uuid, p_title text, p_description text, p_priority public.work_order_priority, p_status public.work_order_status, p_historical_start_date timestamp with time zone, p_historical_notes text, p_assignee_id uuid, p_team_id uuid, p_due_date timestamp with time zone, p_completed_date timestamp with time zone, p_has_pm boolean, p_pm_status text, p_pm_completion_date timestamp with time zone, p_pm_notes text, p_pm_checklist_data jsonb) OWNER TO postgres;

--
-- Name: create_invitation_atomic(uuid, text, text, text, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.create_invitation_atomic(p_organization_id uuid, p_email text, p_role text, p_message text DEFAULT NULL::text, p_invited_by uuid DEFAULT auth.uid()) RETURNS uuid
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    SET row_security TO 'off'
    AS $$
DECLARE
  invitation_id uuid;
  admin_check_result boolean := false;
BEGIN
  -- Direct admin check - completely bypass RLS
  SELECT EXISTS (
    SELECT 1 
    FROM organization_members
    WHERE user_id = p_invited_by 
      AND organization_id = p_organization_id 
      AND role IN ('owner', 'admin')
      AND status = 'active'
  ) INTO admin_check_result;
  
  IF NOT admin_check_result THEN
    RAISE EXCEPTION 'PERMISSION_DENIED: User does not have admin privileges';
  END IF;

  -- Check for existing PENDING invitation only (now that we allow multiple expired/declined)
  IF EXISTS (
    SELECT 1 FROM organization_invitations 
    WHERE organization_id = p_organization_id 
      AND lower(trim(email)) = lower(trim(p_email))
      AND status = 'pending'
  ) THEN
    RAISE EXCEPTION 'DUPLICATE_INVITATION: An active invitation already exists for this email';
  END IF;

  -- Direct insert with minimal overhead
  INSERT INTO organization_invitations (
    organization_id,
    email,
    role,
    message,
    invited_by,
    expires_at,
    status,
    invitation_token
  ) VALUES (
    p_organization_id,
    lower(trim(p_email)),
    p_role,
    p_message,
    p_invited_by,
    now() + interval '7 days',
    'pending',
    gen_random_uuid()
  ) RETURNING id INTO invitation_id;
  
  RETURN invitation_id;
  
EXCEPTION 
  WHEN SQLSTATE '23505' THEN
    -- Handle the new partial unique constraint violation
    RAISE EXCEPTION 'DUPLICATE_INVITATION: An active invitation already exists for this email';
  WHEN OTHERS THEN
    RAISE EXCEPTION 'INVITATION_ERROR: %', SQLERRM;
END;
$$;


ALTER FUNCTION public.create_invitation_atomic(p_organization_id uuid, p_email text, p_role text, p_message text, p_invited_by uuid) OWNER TO postgres;

--
-- Name: create_invitation_bypass(uuid, text, text, text, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.create_invitation_bypass(p_organization_id uuid, p_email text, p_role text, p_message text DEFAULT NULL::text, p_invited_by uuid DEFAULT auth.uid()) RETURNS uuid
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
  invitation_id uuid;
  is_admin boolean;
BEGIN
  -- Use the fixed bypass function
  SELECT public.check_admin_bypass_fixed(p_invited_by, p_organization_id) INTO is_admin;
  
  IF NOT is_admin THEN
    RAISE EXCEPTION 'User % does not have permission to create invitations for organization %', p_invited_by, p_organization_id;
  END IF;

  -- Direct INSERT without any RLS triggers
  INSERT INTO organization_invitations (
    organization_id,
    email,
    role,
    message,
    invited_by,
    expires_at,
    status,
    invitation_token
  ) VALUES (
    p_organization_id,
    lower(trim(p_email)),
    p_role,
    p_message,
    p_invited_by,
    now() + interval '7 days',
    'pending',
    gen_random_uuid()
  ) RETURNING id INTO invitation_id;
  
  RETURN invitation_id;
  
EXCEPTION WHEN OTHERS THEN
  RAISE EXCEPTION 'Failed to create invitation for %: %', p_email, SQLERRM;
END;
$$;


ALTER FUNCTION public.create_invitation_bypass(p_organization_id uuid, p_email text, p_role text, p_message text, p_invited_by uuid) OWNER TO postgres;

--
-- Name: create_invitation_bypass_optimized(uuid, text, text, text, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.create_invitation_bypass_optimized(p_organization_id uuid, p_email text, p_role text, p_message text DEFAULT NULL::text, p_invited_by uuid DEFAULT auth.uid()) RETURNS uuid
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    SET row_security TO 'off'
    AS $$
DECLARE
  invitation_id uuid;
  admin_check_result boolean := false;
BEGIN
  -- Direct admin check without any RLS interference
  SELECT EXISTS (
    SELECT 1 
    FROM organization_members
    WHERE user_id = p_invited_by 
      AND organization_id = p_organization_id 
      AND role IN ('owner', 'admin')
      AND status = 'active'
  ) INTO admin_check_result;
  
  IF NOT admin_check_result THEN
    RAISE EXCEPTION 'PERMISSION_DENIED: User does not have admin privileges for organization %', p_organization_id;
  END IF;

  -- Check for existing invitation
  IF EXISTS (
    SELECT 1 FROM organization_invitations 
    WHERE organization_id = p_organization_id 
      AND lower(trim(email)) = lower(trim(p_email))
      AND status = 'pending'
  ) THEN
    RAISE EXCEPTION 'DUPLICATE_INVITATION: An active invitation already exists for %', p_email;
  END IF;

  -- Direct INSERT with minimal overhead
  INSERT INTO organization_invitations (
    organization_id,
    email,
    role,
    message,
    invited_by,
    expires_at,
    status,
    invitation_token
  ) VALUES (
    p_organization_id,
    lower(trim(p_email)),
    p_role,
    p_message,
    p_invited_by,
    now() + interval '7 days',
    'pending',
    gen_random_uuid()
  ) RETURNING id INTO invitation_id;
  
  RETURN invitation_id;
  
EXCEPTION 
  WHEN SQLSTATE '23505' THEN
    RAISE EXCEPTION 'DUPLICATE_INVITATION: An invitation to this email already exists';
  WHEN OTHERS THEN
    RAISE EXCEPTION 'INVITATION_ERROR: %', SQLERRM;
END;
$$;


ALTER FUNCTION public.create_invitation_bypass_optimized(p_organization_id uuid, p_email text, p_role text, p_message text, p_invited_by uuid) OWNER TO postgres;

--
-- Name: create_invitation_with_context(uuid, text, text, text, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.create_invitation_with_context(p_organization_id uuid, p_email text, p_role text, p_message text DEFAULT NULL::text, p_invited_by uuid DEFAULT auth.uid()) RETURNS uuid
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
  invitation_id uuid;
  admin_check_result boolean := false;
BEGIN
  -- Set the bypass context for this operation
  PERFORM public.set_rls_context('invitation_bypass');
  
  -- Check admin privileges using context-aware function
  SELECT public.check_admin_with_context(p_invited_by, p_organization_id, 'invitation_bypass') INTO admin_check_result;
  
  IF NOT admin_check_result THEN
    PERFORM public.clear_rls_context();
    RAISE EXCEPTION 'PERMISSION_DENIED: User does not have admin privileges for organization %', p_organization_id;
  END IF;

  -- Check for existing invitation
  IF EXISTS (
    SELECT 1 FROM organization_invitations 
    WHERE organization_id = p_organization_id 
      AND lower(trim(email)) = lower(trim(p_email))
      AND status = 'pending'
  ) THEN
    PERFORM public.clear_rls_context();
    RAISE EXCEPTION 'DUPLICATE_INVITATION: An active invitation already exists for %', p_email;
  END IF;

  -- Insert invitation
  INSERT INTO organization_invitations (
    organization_id,
    email,
    role,
    message,
    invited_by,
    expires_at,
    status,
    invitation_token
  ) VALUES (
    p_organization_id,
    lower(trim(p_email)),
    p_role,
    p_message,
    p_invited_by,
    now() + interval '7 days',
    'pending',
    gen_random_uuid()
  ) RETURNING id INTO invitation_id;
  
  -- Clear the context
  PERFORM public.clear_rls_context();
  
  RETURN invitation_id;
  
EXCEPTION 
  WHEN SQLSTATE '23505' THEN
    PERFORM public.clear_rls_context();
    RAISE EXCEPTION 'DUPLICATE_INVITATION: An invitation to this email already exists';
  WHEN OTHERS THEN
    PERFORM public.clear_rls_context();
    RAISE EXCEPTION 'INVITATION_ERROR: %', SQLERRM;
END;
$$;


ALTER FUNCTION public.create_invitation_with_context(p_organization_id uuid, p_email text, p_role text, p_message text, p_invited_by uuid) OWNER TO postgres;

--
-- Name: expire_old_invitations(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.expire_old_invitations() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  -- Check if we're already inside this trigger to prevent recursion
  IF current_setting('app.expire_invitations_running', true) = 'true' THEN
    RETURN NULL;
  END IF;
  
  -- Set the flag to indicate we're running
  PERFORM set_config('app.expire_invitations_running', 'true', true);
  
  -- Mark invitations as expired if they're past expiration and still pending
  UPDATE public.organization_invitations
  SET 
    status = 'expired',
    expired_at = now(),
    updated_at = now()
  WHERE status = 'pending'
    AND expires_at < now()
    AND expired_at IS NULL;
    
  -- Clear the flag
  PERFORM set_config('app.expire_invitations_running', 'false', true);
  
  RETURN NULL;
END;
$$;


ALTER FUNCTION public.expire_old_invitations() OWNER TO postgres;

--
-- Name: FUNCTION expire_old_invitations(); Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON FUNCTION public.expire_old_invitations() IS 'Expires old pending invitations with recursion protection to prevent infinite loops';


--
-- Name: get_current_billing_period(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_current_billing_period() RETURNS TABLE(period_start timestamp with time zone, period_end timestamp with time zone)
    LANGUAGE sql STABLE
    SET search_path TO 'public'
    AS $$
  SELECT 
    date_trunc('month', CURRENT_TIMESTAMP) AS period_start,
    (date_trunc('month', CURRENT_TIMESTAMP) + INTERVAL '1 month' - INTERVAL '1 second') AS period_end;
$$;


ALTER FUNCTION public.get_current_billing_period() OWNER TO postgres;

--
-- Name: get_current_user_id(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_current_user_id() RETURNS uuid
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  SELECT auth.uid();
$$;


ALTER FUNCTION public.get_current_user_id() OWNER TO postgres;

--
-- Name: FUNCTION get_current_user_id(); Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON FUNCTION public.get_current_user_id() IS 'Optimized function to get current user ID for RLS policies - reduces auth.uid() calls';


--
-- Name: get_invitation_by_token_secure(uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_invitation_by_token_secure(p_token uuid) RETURNS TABLE(id uuid, organization_id uuid, organization_name text, email text, role text, status text, expires_at timestamp with time zone, message text, invited_by_name text)
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
  invitation_email text;
BEGIN
  -- First check if the invitation exists and get the email
  SELECT oi.email INTO invitation_email
  FROM organization_invitations oi
  WHERE oi.invitation_token = p_token
    AND oi.status = 'pending'
    AND oi.expires_at > now();
  
  -- If no valid invitation found, return empty
  IF invitation_email IS NULL THEN
    RETURN;
  END IF;
  
  -- Verify the current user's email matches the invitation email
  IF auth.email() IS NULL OR lower(trim(auth.email())) != lower(trim(invitation_email)) THEN
    RETURN;
  END IF;
  
  -- Return the invitation details with organization and inviter info
  RETURN QUERY
  SELECT 
    oi.id,
    oi.organization_id,
    o.name as organization_name,
    oi.email,
    oi.role,
    oi.status,
    oi.expires_at,
    oi.message,
    p.name as invited_by_name
  FROM organization_invitations oi
  JOIN organizations o ON o.id = oi.organization_id
  LEFT JOIN profiles p ON p.id = oi.invited_by
  WHERE oi.invitation_token = p_token
    AND oi.status = 'pending'
    AND oi.expires_at > now()
    AND lower(trim(oi.email)) = lower(trim(auth.email()));
END;
$$;


ALTER FUNCTION public.get_invitation_by_token_secure(p_token uuid) OWNER TO postgres;

--
-- Name: FUNCTION get_invitation_by_token_secure(p_token uuid); Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON FUNCTION public.get_invitation_by_token_secure(p_token uuid) IS 'Securely retrieves invitation details by token - validates user email matches invitation before returning data';


--
-- Name: get_invitations_atomic(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_invitations_atomic(user_uuid uuid, org_id uuid) RETURNS TABLE(id uuid, email text, role text, status text, message text, created_at timestamp with time zone, expires_at timestamp with time zone, accepted_at timestamp with time zone, declined_at timestamp with time zone, expired_at timestamp with time zone, slot_reserved boolean, slot_purchase_id uuid)
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    SET row_security TO 'off'
    AS $$
DECLARE
  is_admin_result boolean := false;
BEGIN
  -- Direct admin check
  SELECT EXISTS (
    SELECT 1 
    FROM organization_members om
    WHERE om.user_id = user_uuid 
      AND om.organization_id = org_id 
      AND om.role IN ('owner', 'admin')
      AND om.status = 'active'
  ) INTO is_admin_result;
  
  IF is_admin_result THEN
    -- Admins see all invitations
    RETURN QUERY
    SELECT 
      oi.id, oi.email, oi.role, oi.status, oi.message,
      oi.created_at, oi.expires_at, oi.accepted_at, 
      oi.declined_at, oi.expired_at, oi.slot_reserved, 
      oi.slot_purchase_id
    FROM organization_invitations oi
    WHERE oi.organization_id = org_id
    ORDER BY oi.created_at DESC;
  ELSE
    -- Regular users see only their own invitations
    RETURN QUERY
    SELECT 
      oi.id, oi.email, oi.role, oi.status, oi.message,
      oi.created_at, oi.expires_at, oi.accepted_at, 
      oi.declined_at, oi.expired_at, oi.slot_reserved, 
      oi.slot_purchase_id
    FROM organization_invitations oi
    WHERE oi.organization_id = org_id
      AND oi.invited_by = user_uuid
    ORDER BY oi.created_at DESC;
  END IF;
END;
$$;


ALTER FUNCTION public.get_invitations_atomic(user_uuid uuid, org_id uuid) OWNER TO postgres;

--
-- Name: get_invitations_bypass_optimized(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_invitations_bypass_optimized(user_uuid uuid, org_id uuid) RETURNS TABLE(id uuid, email text, role text, status text, message text, created_at timestamp with time zone, expires_at timestamp with time zone, accepted_at timestamp with time zone, declined_at timestamp with time zone, expired_at timestamp with time zone, slot_reserved boolean, slot_purchase_id uuid)
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    SET row_security TO 'off'
    AS $$
DECLARE
  is_admin_result boolean := false;
BEGIN
  -- Direct admin check with explicit table qualification
  SELECT EXISTS (
    SELECT 1 
    FROM organization_members om
    WHERE om.user_id = user_uuid 
      AND om.organization_id = org_id 
      AND om.role IN ('owner', 'admin')  -- Explicitly qualify as om.role
      AND om.status = 'active'
  ) INTO is_admin_result;
  
  IF is_admin_result THEN
    -- Admins see all invitations
    RETURN QUERY
    SELECT 
      oi.id, oi.email, oi.role, oi.status, oi.message,
      oi.created_at, oi.expires_at, oi.accepted_at, 
      oi.declined_at, oi.expired_at, oi.slot_reserved, 
      oi.slot_purchase_id
    FROM organization_invitations oi
    WHERE oi.organization_id = org_id
    ORDER BY oi.created_at DESC;
  ELSE
    -- Regular users see only their own invitations
    RETURN QUERY
    SELECT 
      oi.id, oi.email, oi.role, oi.status, oi.message,
      oi.created_at, oi.expires_at, oi.accepted_at, 
      oi.declined_at, oi.expired_at, oi.slot_reserved, 
      oi.slot_purchase_id
    FROM organization_invitations oi
    WHERE oi.organization_id = org_id
      AND oi.invited_by = user_uuid
    ORDER BY oi.created_at DESC;
  END IF;
END;
$$;


ALTER FUNCTION public.get_invitations_bypass_optimized(user_uuid uuid, org_id uuid) OWNER TO postgres;

--
-- Name: get_latest_completed_pm(uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_latest_completed_pm(equipment_uuid uuid) RETURNS TABLE(id uuid, work_order_id uuid, completed_at timestamp with time zone, completed_by uuid, work_order_title text)
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  SELECT 
    pm.id,
    pm.work_order_id,
    pm.completed_at,
    pm.completed_by,
    wo.title as work_order_title
  FROM preventative_maintenance pm
  JOIN work_orders wo ON pm.work_order_id = wo.id
  WHERE pm.equipment_id = equipment_uuid 
    AND pm.status = 'completed'
    AND pm.completed_at IS NOT NULL
  ORDER BY pm.completed_at DESC
  LIMIT 1;
$$;


ALTER FUNCTION public.get_latest_completed_pm(equipment_uuid uuid) OWNER TO postgres;

--
-- Name: get_member_profiles_secure(uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_member_profiles_secure(org_id uuid) RETURNS TABLE(id uuid, name text, email text, created_at timestamp with time zone, updated_at timestamp with time zone, email_private boolean)
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  -- Check if user is a member of the organization
  IF NOT EXISTS (
    SELECT 1 FROM organization_members 
    WHERE user_id = auth.uid() 
      AND organization_id = org_id 
      AND status = 'active'
  ) THEN
    RAISE EXCEPTION 'Access denied: not a member of this organization';
  END IF;

  RETURN QUERY
  SELECT 
    p.id,
    p.name,
    CASE 
      WHEN p.email_private = true AND p.id != auth.uid() THEN NULL
      ELSE p.email
    END as email,
    p.created_at,
    p.updated_at,
    p.email_private
  FROM profiles p
  JOIN organization_members om ON p.id = om.user_id
  WHERE om.organization_id = org_id 
    AND om.status = 'active';
END;
$$;


ALTER FUNCTION public.get_member_profiles_secure(org_id uuid) OWNER TO postgres;

--
-- Name: get_organization_exemptions(uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_organization_exemptions(org_id uuid) RETURNS TABLE(exemption_type text, exemption_value integer, reason text, expires_at timestamp with time zone)
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  SELECT 
    be.exemption_type,
    be.exemption_value,
    be.reason,
    be.expires_at
  FROM public.billing_exemptions be
  WHERE be.organization_id = org_id
    AND be.is_active = true
    AND (be.expires_at IS NULL OR be.expires_at > now());
$$;


ALTER FUNCTION public.get_organization_exemptions(org_id uuid) OWNER TO postgres;

--
-- Name: get_organization_member_profile(uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_organization_member_profile(member_user_id uuid) RETURNS TABLE(id uuid, name text, email text, email_private boolean, created_at timestamp with time zone, updated_at timestamp with time zone)
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  SELECT 
    p.id,
    p.name,
    CASE 
      WHEN p.id = auth.uid() THEN p.email  -- User can see their own email
      ELSE NULL  -- Other users' emails are not returned
    END as email,
    p.email_private,
    p.created_at,
    p.updated_at
  FROM profiles p
  WHERE p.id = member_user_id
    AND (
      p.id = auth.uid() OR p.id IN (
        SELECT om.user_id 
        FROM organization_members om
        WHERE om.organization_id IN (
          SELECT om2.organization_id 
          FROM organization_members om2 
          WHERE om2.user_id = auth.uid() 
            AND om2.status = 'active'
        )
        AND om.status = 'active'
      )
    );
$$;


ALTER FUNCTION public.get_organization_member_profile(member_user_id uuid) OWNER TO postgres;

--
-- Name: FUNCTION get_organization_member_profile(member_user_id uuid); Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON FUNCTION public.get_organization_member_profile(member_user_id uuid) IS 'Securely retrieves member profile respecting email privacy settings';


--
-- Name: get_organization_premium_features(uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_organization_premium_features(org_id uuid) RETURNS jsonb
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
  result jsonb;
  fleet_map_active BOOLEAN DEFAULT false;
BEGIN
  -- Check if fleet map is active
  SELECT EXISTS(
    SELECT 1 FROM public.organization_subscriptions
    WHERE organization_id = org_id
    AND feature_type = 'fleet_map'
    AND status = 'active'
    AND current_period_end > now()
  ) INTO fleet_map_active;

  result := jsonb_build_object(
    'organization_id', org_id,
    'fleet_map_enabled', fleet_map_active,
    'premium_features', CASE
      WHEN fleet_map_active THEN jsonb_build_array('Fleet Map')
      ELSE jsonb_build_array()
    END
  );

  RETURN result;
END;
$$;


ALTER FUNCTION public.get_organization_premium_features(org_id uuid) OWNER TO postgres;

--
-- Name: get_organization_slot_availability(uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_organization_slot_availability(org_id uuid) RETURNS TABLE(total_purchased integer, used_slots integer, available_slots integer, current_period_start timestamp with time zone, current_period_end timestamp with time zone)
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
  active_slot_record RECORD;
  actual_used_slots INTEGER;
BEGIN
  -- Find currently active slots (where now() is between start and end dates)
  SELECT 
    COALESCE(SUM(os.purchased_slots), 0)::INTEGER as total_purchased,
    MIN(os.billing_period_start) as period_start,
    MAX(os.billing_period_end) as period_end
  INTO active_slot_record
  FROM public.organization_slots os
  WHERE os.organization_id = org_id
    AND os.billing_period_start <= now()
    AND os.billing_period_end >= now();
    
  -- Count actual active members (excluding owners from billing)
  SELECT COUNT(*)::INTEGER INTO actual_used_slots
  FROM public.organization_members om
  WHERE om.organization_id = org_id 
    AND om.status = 'active'
    AND om.role IN ('admin', 'member'); -- Exclude owners from slot usage
    
  -- Return the values with proper calculation
  total_purchased := COALESCE(active_slot_record.total_purchased, 0);
  used_slots := actual_used_slots;
  available_slots := GREATEST(0, total_purchased - actual_used_slots); -- Ensure never negative
  current_period_start := COALESCE(active_slot_record.period_start, now());
  current_period_end := COALESCE(active_slot_record.period_end, now());
  
  RETURN NEXT;
END;
$$;


ALTER FUNCTION public.get_organization_slot_availability(org_id uuid) OWNER TO postgres;

--
-- Name: get_organization_slot_availability_with_exemptions(uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_organization_slot_availability_with_exemptions(org_id uuid) RETURNS TABLE(total_purchased integer, used_slots integer, available_slots integer, exempted_slots integer, current_period_start timestamp with time zone, current_period_end timestamp with time zone)
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
  active_slot_record RECORD;
  actual_used_slots INTEGER;
  exemption_value INTEGER DEFAULT 0;
BEGIN
  -- Get active exemptions
  SELECT COALESCE(SUM(be.exemption_value), 0)::INTEGER INTO exemption_value
  FROM public.billing_exemptions be
  WHERE be.organization_id = org_id
    AND be.exemption_type = 'user_licenses'
    AND be.is_active = true
    AND (be.expires_at IS NULL OR be.expires_at > now());
    
  -- Find currently active purchased slots
  SELECT 
    COALESCE(SUM(os.purchased_slots), 0)::INTEGER as total_purchased,
    MIN(os.billing_period_start) as period_start,
    MAX(os.billing_period_end) as period_end
  INTO active_slot_record
  FROM public.organization_slots os
  WHERE os.organization_id = org_id
    AND os.billing_period_start <= now()
    AND os.billing_period_end >= now();
    
  -- Count actual active members (excluding owners from billing)
  SELECT COUNT(*)::INTEGER INTO actual_used_slots
  FROM public.organization_members om
  WHERE om.organization_id = org_id 
    AND om.status = 'active'
    AND om.role IN ('admin', 'member');
    
  -- Calculate totals including exemptions
  total_purchased := COALESCE(active_slot_record.total_purchased, 0);
  used_slots := actual_used_slots;
  exempted_slots := exemption_value;
  available_slots := GREATEST(0, total_purchased + exempted_slots - actual_used_slots);
  current_period_start := COALESCE(active_slot_record.period_start, now());
  current_period_end := COALESCE(active_slot_record.period_end, now());
  
  RETURN NEXT;
END;
$$;


ALTER FUNCTION public.get_organization_slot_availability_with_exemptions(org_id uuid) OWNER TO postgres;

--
-- Name: get_user_invitations_safe(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_user_invitations_safe(user_uuid uuid, org_id uuid) RETURNS TABLE(id uuid, email text, role text, status text, message text, created_at timestamp with time zone, expires_at timestamp with time zone, accepted_at timestamp with time zone, declined_at timestamp with time zone, expired_at timestamp with time zone, slot_reserved boolean, slot_purchase_id uuid)
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  -- Use the fixed bypass function
  IF public.check_admin_bypass_fixed(user_uuid, org_id) THEN
    RETURN QUERY
    SELECT 
      oi.id, oi.email, oi.role, oi.status, oi.message,
      oi.created_at, oi.expires_at, oi.accepted_at, 
      oi.declined_at, oi.expired_at, oi.slot_reserved, 
      oi.slot_purchase_id
    FROM organization_invitations oi
    WHERE oi.organization_id = org_id
    ORDER BY oi.created_at DESC;
  ELSE
    RETURN QUERY
    SELECT 
      oi.id, oi.email, oi.role, oi.status, oi.message,
      oi.created_at, oi.expires_at, oi.accepted_at, 
      oi.declined_at, oi.expired_at, oi.slot_reserved, 
      oi.slot_purchase_id
    FROM organization_invitations oi
    WHERE oi.organization_id = org_id
      AND oi.invited_by = user_uuid
    ORDER BY oi.created_at DESC;
  END IF;
END;
$$;


ALTER FUNCTION public.get_user_invitations_safe(user_uuid uuid, org_id uuid) OWNER TO postgres;

--
-- Name: get_user_managed_teams(uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_user_managed_teams(user_uuid uuid) RETURNS TABLE(team_id uuid, team_name text, organization_id uuid, is_only_manager boolean)
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  RETURN QUERY
  SELECT 
    t.id as team_id,
    t.name as team_name,
    t.organization_id,
    (
      SELECT COUNT(*) = 1
      FROM team_members tm2 
      WHERE tm2.team_id = t.id 
      AND tm2.role = 'manager'
    ) as is_only_manager
  FROM teams t
  JOIN team_members tm ON t.id = tm.team_id
  WHERE tm.user_id = user_uuid 
    AND tm.role = 'manager';
END;
$$;


ALTER FUNCTION public.get_user_managed_teams(user_uuid uuid) OWNER TO postgres;

--
-- Name: get_user_org_role_direct(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_user_org_role_direct(user_uuid uuid, org_id uuid) RETURNS text
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  SELECT role
  FROM organization_members
  WHERE user_id = user_uuid 
    AND organization_id = org_id 
    AND status = 'active'
  LIMIT 1;
$$;


ALTER FUNCTION public.get_user_org_role_direct(user_uuid uuid, org_id uuid) OWNER TO postgres;

--
-- Name: get_user_org_role_secure(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_user_org_role_secure(user_uuid uuid, org_id uuid) RETURNS text
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  SELECT role
  FROM public.organization_members
  WHERE user_id = user_uuid 
    AND organization_id = org_id 
    AND status = 'active'
  LIMIT 1;
$$;


ALTER FUNCTION public.get_user_org_role_secure(user_uuid uuid, org_id uuid) OWNER TO postgres;

--
-- Name: get_user_organization_membership(uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_user_organization_membership(user_uuid uuid) RETURNS TABLE(organization_id uuid, role text, status text)
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  SELECT om.organization_id, om.role, om.status
  FROM public.organization_members om
  WHERE om.user_id = user_uuid AND om.status = 'active';
$$;


ALTER FUNCTION public.get_user_organization_membership(user_uuid uuid) OWNER TO postgres;

--
-- Name: get_user_organizations(uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_user_organizations(user_uuid uuid) RETURNS TABLE(organization_id uuid)
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  SELECT om.organization_id
  FROM organization_members om
  WHERE om.user_id = user_uuid 
    AND om.status = 'active';
$$;


ALTER FUNCTION public.get_user_organizations(user_uuid uuid) OWNER TO postgres;

--
-- Name: get_user_team_memberships(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_user_team_memberships(user_uuid uuid, org_id uuid) RETURNS TABLE(team_id uuid, team_name text, role text, joined_date timestamp with time zone)
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  SELECT tm.team_id, t.name as team_name, tm.role::text, tm.joined_date
  FROM public.team_members tm
  JOIN public.teams t ON tm.team_id = t.id
  WHERE tm.user_id = user_uuid 
    AND t.organization_id = org_id;
$$;


ALTER FUNCTION public.get_user_team_memberships(user_uuid uuid, org_id uuid) OWNER TO postgres;

--
-- Name: handle_invitation_account_creation(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.handle_invitation_account_creation(p_invitation_id uuid, p_user_id uuid) RETURNS jsonb
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
  invitation_record RECORD;
  result jsonb;
BEGIN
  -- Get invitation details
  SELECT id, organization_id, email, role, status
  INTO invitation_record
  FROM organization_invitations
  WHERE id = p_invitation_id AND status = 'pending';
  
  IF NOT FOUND THEN
    RETURN jsonb_build_object(
      'success', false, 
      'error', 'Invalid invitation'
    );
  END IF;
  
  -- Update invitation status to accepted
  UPDATE organization_invitations
  SET 
    status = 'accepted',
    accepted_at = now(),
    accepted_by = p_user_id,
    updated_at = now()
  WHERE id = p_invitation_id;
  
  -- Create organization membership
  INSERT INTO organization_members (
    organization_id,
    user_id,
    role,
    status
  ) VALUES (
    invitation_record.organization_id,
    p_user_id,
    invitation_record.role,
    'active'
  );
  
  RETURN jsonb_build_object(
    'success', true,
    'organization_id', invitation_record.organization_id,
    'role', invitation_record.role
  );
  
EXCEPTION 
  WHEN unique_violation THEN
    RETURN jsonb_build_object(
      'success', false, 
      'error', 'User is already a member of this organization'
    );
  WHEN OTHERS THEN
    RETURN jsonb_build_object(
      'success', false, 
      'error', 'Failed to process invitation: ' || SQLERRM
    );
END;
$$;


ALTER FUNCTION public.handle_invitation_account_creation(p_invitation_id uuid, p_user_id uuid) OWNER TO postgres;

--
-- Name: handle_membership_billing_update(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.handle_membership_billing_update() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  -- Update billing metrics for the affected organization
  IF TG_OP = 'INSERT' THEN
    PERFORM public.update_organization_billing_metrics(NEW.organization_id);
    
    -- Log billing event
    INSERT INTO public.billing_events (organization_id, event_type, user_id, event_data)
    VALUES (
      NEW.organization_id, 
      'member_added', 
      NEW.user_id,
      jsonb_build_object('role', NEW.role, 'status', NEW.status)
    );
    
    RETURN NEW;
  ELSIF TG_OP = 'DELETE' THEN
    PERFORM public.update_organization_billing_metrics(OLD.organization_id);
    
    -- Log billing event
    INSERT INTO public.billing_events (organization_id, event_type, user_id, event_data)
    VALUES (
      OLD.organization_id, 
      'member_removed', 
      OLD.user_id,
      jsonb_build_object('role', OLD.role, 'status', OLD.status)
    );
    
    RETURN OLD;
  ELSIF TG_OP = 'UPDATE' THEN
    -- Update for both old and new organizations if changed
    IF OLD.organization_id != NEW.organization_id THEN
      PERFORM public.update_organization_billing_metrics(OLD.organization_id);
      PERFORM public.update_organization_billing_metrics(NEW.organization_id);
    ELSE
      PERFORM public.update_organization_billing_metrics(NEW.organization_id);
    END IF;
    
    -- Log billing event if role or status changed
    IF OLD.role != NEW.role OR OLD.status != NEW.status THEN
      INSERT INTO public.billing_events (organization_id, event_type, user_id, event_data)
      VALUES (
        NEW.organization_id, 
        'member_updated', 
        NEW.user_id,
        jsonb_build_object(
          'old_role', OLD.role, 
          'new_role', NEW.role,
          'old_status', OLD.status,
          'new_status', NEW.status
        )
      );
    END IF;
    
    RETURN NEW;
  END IF;
  
  RETURN NULL;
END;
$$;


ALTER FUNCTION public.handle_membership_billing_update() OWNER TO postgres;

--
-- Name: handle_new_user(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.handle_new_user() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
  new_org_id uuid;
BEGIN
  -- Insert user profile (this part already exists)
  INSERT INTO public.profiles (id, email, name)
  VALUES (
    NEW.id,
    NEW.email,
    COALESCE(NEW.raw_user_meta_data->>'name', NEW.email)
  );

  -- Create a new organization for the user
  INSERT INTO public.organizations (name, plan, member_count, max_members, features)
  VALUES (
    COALESCE(NEW.raw_user_meta_data->>'name', 'My Organization'),
    'free',
    1,
    5,
    ARRAY['Equipment Management', 'Work Orders', 'Team Management']
  )
  RETURNING id INTO new_org_id;

  -- Add user as owner of the organization
  INSERT INTO public.organization_members (organization_id, user_id, role, status)
  VALUES (
    new_org_id,
    NEW.id,
    'owner',
    'active'
  );

  RETURN NEW;
END;
$$;


ALTER FUNCTION public.handle_new_user() OWNER TO postgres;

--
-- Name: handle_team_deletion(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.handle_team_deletion() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  -- Set team_id to null for all equipment assigned to the deleted team
  UPDATE public.equipment 
  SET team_id = NULL, updated_at = now()
  WHERE team_id = OLD.id;
  
  RETURN OLD;
END;
$$;


ALTER FUNCTION public.handle_team_deletion() OWNER TO postgres;

--
-- Name: handle_team_manager_removal(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.handle_team_manager_removal(user_uuid uuid, org_id uuid) RETURNS jsonb
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
  team_record RECORD;
  org_owner_id uuid;
  transfer_count INTEGER := 0;
  result jsonb;
BEGIN
  -- Get organization owner
  SELECT user_id INTO org_owner_id
  FROM organization_members
  WHERE organization_id = org_id 
    AND role = 'owner' 
    AND status = 'active'
  LIMIT 1;
  
  IF org_owner_id IS NULL THEN
    RETURN jsonb_build_object('success', false, 'error', 'No organization owner found');
  END IF;
  
  -- Handle teams where user is the only manager
  FOR team_record IN 
    SELECT team_id, team_name, is_only_manager
    FROM get_user_managed_teams(user_uuid)
    WHERE organization_id = org_id AND is_only_manager = true
  LOOP
    -- Add organization owner as manager if not already a member
    INSERT INTO team_members (team_id, user_id, role)
    VALUES (team_record.team_id, org_owner_id, 'manager')
    ON CONFLICT (team_id, user_id) 
    DO UPDATE SET role = 'manager';
    
    transfer_count := transfer_count + 1;
  END LOOP;
  
  -- Remove user from all teams in the organization
  DELETE FROM team_members 
  WHERE user_id = user_uuid 
    AND team_id IN (
      SELECT id FROM teams WHERE organization_id = org_id
    );
  
  result := jsonb_build_object(
    'success', true,
    'teams_transferred', transfer_count,
    'new_manager_id', org_owner_id
  );
  
  RETURN result;
END;
$$;


ALTER FUNCTION public.handle_team_manager_removal(user_uuid uuid, org_id uuid) OWNER TO postgres;

--
-- Name: handle_updated_at(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.handle_updated_at() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$;


ALTER FUNCTION public.handle_updated_at() OWNER TO postgres;

--
-- Name: is_org_admin(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.is_org_admin(user_uuid uuid, org_id uuid) RETURNS boolean
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    SET row_security TO 'off'
    AS $$
  SELECT EXISTS (
    SELECT 1 
    FROM organization_members
    WHERE user_id = user_uuid 
      AND organization_id = org_id 
      AND role IN ('owner', 'admin')
      AND status = 'active'
  );
$$;


ALTER FUNCTION public.is_org_admin(user_uuid uuid, org_id uuid) OWNER TO postgres;

--
-- Name: FUNCTION is_org_admin(user_uuid uuid, org_id uuid); Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON FUNCTION public.is_org_admin(user_uuid uuid, org_id uuid) IS 'Consolidated function to check organization admin status - replaces multiple similar functions';


--
-- Name: is_org_member(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.is_org_member(user_uuid uuid, org_id uuid) RETURNS boolean
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    SET row_security TO 'off'
    AS $$
  SELECT EXISTS (
    SELECT 1 
    FROM organization_members
    WHERE user_id = user_uuid 
      AND organization_id = org_id 
      AND status = 'active'
  );
$$;


ALTER FUNCTION public.is_org_member(user_uuid uuid, org_id uuid) OWNER TO postgres;

--
-- Name: FUNCTION is_org_member(user_uuid uuid, org_id uuid); Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON FUNCTION public.is_org_member(user_uuid uuid, org_id uuid) IS 'Consolidated function to check organization membership - replaces multiple similar functions';


--
-- Name: is_organization_admin(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.is_organization_admin(user_uuid uuid, org_id uuid) RETURNS boolean
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  SELECT EXISTS (
    SELECT 1
    FROM organization_members om
    WHERE om.user_id = user_uuid 
      AND om.organization_id = org_id 
      AND om.role IN ('owner', 'admin')
      AND om.status = 'active'
  );
$$;


ALTER FUNCTION public.is_organization_admin(user_uuid uuid, org_id uuid) OWNER TO postgres;

--
-- Name: FUNCTION is_organization_admin(user_uuid uuid, org_id uuid); Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON FUNCTION public.is_organization_admin(user_uuid uuid, org_id uuid) IS 'Optimized function to check admin access - uses indexed lookups';


--
-- Name: is_organization_member(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.is_organization_member(user_uuid uuid, org_id uuid) RETURNS boolean
    LANGUAGE sql STABLE SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  SELECT EXISTS (
    SELECT 1
    FROM organization_members om
    WHERE om.user_id = user_uuid 
      AND om.organization_id = org_id 
      AND om.status = 'active'
  );
$$;


ALTER FUNCTION public.is_organization_member(user_uuid uuid, org_id uuid) OWNER TO postgres;

--
-- Name: FUNCTION is_organization_member(user_uuid uuid, org_id uuid); Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON FUNCTION public.is_organization_member(user_uuid uuid, org_id uuid) IS 'Optimized function to check organization membership - replaces complex EXISTS subqueries';


--
-- Name: leave_organization_safely(uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.leave_organization_safely(org_id uuid) RETURNS jsonb
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
  user_role TEXT;
  owner_count INTEGER;
  result jsonb;
BEGIN
  -- Get user's role in the organization
  SELECT role INTO user_role
  FROM organization_members
  WHERE user_id = auth.uid() 
    AND organization_id = org_id 
    AND status = 'active';
  
  IF user_role IS NULL THEN
    RETURN jsonb_build_object('success', false, 'error', 'Not a member of this organization');
  END IF;
  
  -- Prevent last owner from leaving
  IF user_role = 'owner' THEN
    SELECT COUNT(*) INTO owner_count
    FROM organization_members
    WHERE organization_id = org_id 
      AND role = 'owner' 
      AND status = 'active';
    
    IF owner_count <= 1 THEN
      RETURN jsonb_build_object('success', false, 'error', 'Cannot leave as the last owner');
    END IF;
  END IF;
  
  -- Preserve user attribution and handle team transfers
  PERFORM preserve_user_attribution(auth.uid());
  PERFORM handle_team_manager_removal(auth.uid(), org_id);
  
  -- Remove the user
  DELETE FROM organization_members
  WHERE user_id = auth.uid() 
    AND organization_id = org_id;
  
  RETURN jsonb_build_object('success', true, 'message', 'Successfully left organization');
END;
$$;


ALTER FUNCTION public.leave_organization_safely(org_id uuid) OWNER TO postgres;

--
-- Name: log_invitation_performance(text, numeric, boolean, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.log_invitation_performance(function_name text, execution_time_ms numeric, success boolean, error_message text DEFAULT NULL::text) RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  -- Log to a simple table for monitoring (create if not exists)
  CREATE TABLE IF NOT EXISTS invitation_performance_logs (
    id uuid DEFAULT gen_random_uuid() PRIMARY KEY,
    function_name text NOT NULL,
    execution_time_ms numeric NOT NULL,
    success boolean NOT NULL,
    error_message text,
    created_at timestamp with time zone DEFAULT now()
  );
  
  INSERT INTO invitation_performance_logs (
    function_name, 
    execution_time_ms, 
    success, 
    error_message
  ) VALUES (
    function_name, 
    execution_time_ms, 
    success, 
    error_message
  );
EXCEPTION WHEN OTHERS THEN
  -- Silently fail to avoid blocking main operations
  NULL;
END;
$$;


ALTER FUNCTION public.log_invitation_performance(function_name text, execution_time_ms numeric, success boolean, error_message text) OWNER TO postgres;

--
-- Name: log_pm_status_change(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.log_pm_status_change() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  -- Only log if status actually changed and it's not a revert operation
  IF OLD.status IS DISTINCT FROM NEW.status 
     AND NOT EXISTS (
       SELECT 1 FROM pm_status_history 
       WHERE pm_id = NEW.id 
       AND changed_at > now() - interval '1 second'
       AND changed_by = auth.uid()
     ) THEN
    INSERT INTO pm_status_history (
      pm_id, old_status, new_status, changed_by, reason
    ) VALUES (
      NEW.id, OLD.status, NEW.status, auth.uid(), 'Status updated'
    );
  END IF;
  
  RETURN NEW;
END;
$$;


ALTER FUNCTION public.log_pm_status_change() OWNER TO postgres;

--
-- Name: log_work_order_status_change(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.log_work_order_status_change() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  -- Only log if status actually changed and it's not a revert operation
  IF OLD.status IS DISTINCT FROM NEW.status 
     AND NOT EXISTS (
       SELECT 1 FROM work_order_status_history 
       WHERE work_order_id = NEW.id 
       AND changed_at > now() - interval '1 second'
       AND changed_by = auth.uid()
     ) THEN
    INSERT INTO work_order_status_history (
      work_order_id, old_status, new_status, changed_by, reason
    ) VALUES (
      NEW.id, OLD.status, NEW.status, auth.uid(), 'Status updated'
    );
  END IF;
  
  RETURN NEW;
END;
$$;


ALTER FUNCTION public.log_work_order_status_change() OWNER TO postgres;

--
-- Name: preserve_user_attribution(uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.preserve_user_attribution(user_uuid uuid) RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
  user_name TEXT;
BEGIN
  -- Get user name from profiles
  SELECT name INTO user_name 
  FROM profiles 
  WHERE id = user_uuid;
  
  IF user_name IS NULL THEN
    user_name := 'Unknown User';
  END IF;
  
  -- Update work orders created by user
  UPDATE work_orders 
  SET created_by_name = user_name
  WHERE created_by = user_uuid 
    AND created_by_name IS NULL;
  
  -- Update work orders assigned to user
  UPDATE work_orders 
  SET assignee_name = user_name
  WHERE assignee_id = user_uuid 
    AND assignee_name IS NULL;
  
  -- Update work order notes
  UPDATE work_order_notes 
  SET author_name = user_name
  WHERE author_id = user_uuid 
    AND author_name IS NULL;
  
  -- Update equipment notes
  UPDATE equipment_notes 
  SET author_name = user_name
  WHERE author_id = user_uuid 
    AND author_name IS NULL;
  
  -- Update work order images
  UPDATE work_order_images 
  SET uploaded_by_name = user_name
  WHERE uploaded_by = user_uuid 
    AND uploaded_by_name IS NULL;
  
  -- Update equipment note images
  UPDATE equipment_note_images 
  SET uploaded_by_name = user_name
  WHERE uploaded_by = user_uuid 
    AND uploaded_by_name IS NULL;
END;
$$;


ALTER FUNCTION public.preserve_user_attribution(user_uuid uuid) OWNER TO postgres;

--
-- Name: release_reserved_slot(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.release_reserved_slot(org_id uuid, invitation_id uuid) RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
  billing_period RECORD;
BEGIN
  -- Get current billing period
  SELECT * INTO billing_period FROM public.get_current_billing_period();
  
  -- Release the slot by decrementing used_slots
  UPDATE public.organization_slots
  SET 
    used_slots = GREATEST(0, used_slots - 1),
    updated_at = now()
  WHERE organization_id = org_id
    AND billing_period_start <= billing_period.period_start
    AND billing_period_end >= billing_period.period_end;
  
  -- Mark invitation as no longer reserving slot
  UPDATE public.organization_invitations
  SET 
    slot_reserved = false,
    updated_at = now()
  WHERE id = invitation_id;
END;
$$;


ALTER FUNCTION public.release_reserved_slot(org_id uuid, invitation_id uuid) OWNER TO postgres;

--
-- Name: remove_organization_member_safely(uuid, uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.remove_organization_member_safely(user_uuid uuid, org_id uuid, removed_by uuid) RETURNS jsonb
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
  user_role TEXT;
  user_name TEXT;
  owner_count INTEGER;
  team_result jsonb;
  result jsonb;
BEGIN
  -- Get user details
  SELECT om.role, p.name 
  INTO user_role, user_name
  FROM organization_members om
  JOIN profiles p ON om.user_id = p.id
  WHERE om.user_id = user_uuid 
    AND om.organization_id = org_id 
    AND om.status = 'active';
  
  IF user_role IS NULL THEN
    RETURN jsonb_build_object('success', false, 'error', 'User is not a member of this organization');
  END IF;
  
  -- Check if this is the last owner
  IF user_role = 'owner' THEN
    SELECT COUNT(*) INTO owner_count
    FROM organization_members
    WHERE organization_id = org_id 
      AND role = 'owner' 
      AND status = 'active';
    
    IF owner_count <= 1 THEN
      RETURN jsonb_build_object('success', false, 'error', 'Cannot remove the last owner of the organization');
    END IF;
  END IF;
  
  -- Preserve user attribution in historical records
  PERFORM preserve_user_attribution(user_uuid);
  
  -- Handle team management transfers
  SELECT handle_team_manager_removal(user_uuid, org_id) INTO team_result;
  
  IF NOT (team_result->>'success')::boolean THEN
    RETURN team_result;
  END IF;
  
  -- Remove user from organization
  DELETE FROM organization_members
  WHERE user_id = user_uuid 
    AND organization_id = org_id;
  
  -- Create audit log entry with 'general' notification type
  INSERT INTO notifications (
    organization_id,
    user_id,
    type,
    title,
    message,
    data
  ) VALUES (
    org_id,
    removed_by,
    'general',
    'Member Removed',
    CONCAT(COALESCE(user_name, 'Unknown User'), ' was removed from the organization'),
    jsonb_build_object(
      'removed_user_id', user_uuid,
      'removed_user_name', user_name,
      'removed_user_role', user_role,
      'teams_transferred', team_result->'teams_transferred',
      'removed_by', removed_by,
      'timestamp', now()
    )
  );
  
  result := jsonb_build_object(
    'success', true,
    'removed_user_name', user_name,
    'removed_user_role', user_role,
    'teams_transferred', team_result->'teams_transferred',
    'new_manager_id', team_result->'new_manager_id'
  );
  
  RETURN result;
END;
$$;


ALTER FUNCTION public.remove_organization_member_safely(user_uuid uuid, org_id uuid, removed_by uuid) OWNER TO postgres;

--
-- Name: reserve_slot_for_invitation(uuid, uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.reserve_slot_for_invitation(org_id uuid, invitation_id uuid) RETURNS boolean
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
  slot_available BOOLEAN := FALSE;
  billing_period RECORD;
  slot_record RECORD;
BEGIN
  -- Get current billing period
  SELECT * INTO billing_period FROM public.get_current_billing_period();
  
  -- Check if slots are available and get the first available slot record
  SELECT * INTO slot_record
  FROM public.organization_slots
  WHERE organization_id = org_id
    AND billing_period_start <= billing_period.period_start
    AND billing_period_end >= billing_period.period_end
    AND (purchased_slots - used_slots) > 0
  ORDER BY created_at
  FOR UPDATE;
  
  IF FOUND THEN
    -- Reserve the slot by incrementing used_slots
    UPDATE public.organization_slots
    SET 
      used_slots = used_slots + 1,
      updated_at = now()
    WHERE id = slot_record.id;
    
    -- Mark invitation as having reserved slot
    UPDATE public.organization_invitations
    SET 
      slot_reserved = true,
      updated_at = now()
    WHERE id = invitation_id;
    
    RETURN TRUE;
  END IF;
  
  RETURN FALSE;
END;
$$;


ALTER FUNCTION public.reserve_slot_for_invitation(org_id uuid, invitation_id uuid) OWNER TO postgres;

--
-- Name: revert_pm_completion(uuid, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.revert_pm_completion(p_pm_id uuid, p_reason text DEFAULT 'Reverted by admin'::text) RETURNS jsonb
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
  current_status text;
  org_id uuid;
  result jsonb;
BEGIN
  -- Get current status and org
  SELECT status, organization_id INTO current_status, org_id
  FROM preventative_maintenance
  WHERE id = p_pm_id;
  
  IF NOT FOUND THEN
    RETURN jsonb_build_object('success', false, 'error', 'PM record not found');
  END IF;
  
  -- Check if user is admin
  IF NOT is_org_admin(auth.uid(), org_id) THEN
    RETURN jsonb_build_object('success', false, 'error', 'Permission denied');
  END IF;
  
  -- Only allow reverting from completed
  IF current_status != 'completed' THEN
    RETURN jsonb_build_object('success', false, 'error', 'Can only revert completed PM records');
  END IF;
  
  -- Insert history record
  INSERT INTO pm_status_history (
    pm_id, old_status, new_status, changed_by, reason, metadata
  ) VALUES (
    p_pm_id, current_status, 'pending', auth.uid(), p_reason,
    jsonb_build_object('reverted_from', current_status, 'reverted_at', now())
  );
  
  -- Update PM status
  UPDATE preventative_maintenance 
  SET 
    status = 'pending',
    completed_at = NULL,
    completed_by = NULL,
    updated_at = now()
  WHERE id = p_pm_id;
  
  RETURN jsonb_build_object('success', true, 'old_status', current_status, 'new_status', 'pending');
END;
$$;


ALTER FUNCTION public.revert_pm_completion(p_pm_id uuid, p_reason text) OWNER TO postgres;

--
-- Name: revert_work_order_status(uuid, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.revert_work_order_status(p_work_order_id uuid, p_reason text DEFAULT 'Reverted by admin'::text) RETURNS jsonb
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
  current_status work_order_status;
  org_id uuid;
  result jsonb;
BEGIN
  -- Get current status and org
  SELECT status, organization_id INTO current_status, org_id
  FROM work_orders
  WHERE id = p_work_order_id;
  
  IF NOT FOUND THEN
    RETURN jsonb_build_object('success', false, 'error', 'Work order not found');
  END IF;
  
  -- Check if user is admin
  IF NOT is_org_admin(auth.uid(), org_id) THEN
    RETURN jsonb_build_object('success', false, 'error', 'Permission denied');
  END IF;
  
  -- Only allow reverting from completed or cancelled
  IF current_status NOT IN ('completed', 'cancelled') THEN
    RETURN jsonb_build_object('success', false, 'error', 'Can only revert completed or cancelled work orders');
  END IF;
  
  -- Insert history record
  INSERT INTO work_order_status_history (
    work_order_id, old_status, new_status, changed_by, reason, metadata
  ) VALUES (
    p_work_order_id, current_status, 'accepted', auth.uid(), p_reason,
    jsonb_build_object('reverted_from', current_status, 'reverted_at', now())
  );
  
  -- Update work order status
  UPDATE work_orders 
  SET 
    status = 'accepted',
    completed_date = NULL,
    updated_at = now()
  WHERE id = p_work_order_id;
  
  RETURN jsonb_build_object('success', true, 'old_status', current_status, 'new_status', 'accepted');
END;
$$;


ALTER FUNCTION public.revert_work_order_status(p_work_order_id uuid, p_reason text) OWNER TO postgres;

--
-- Name: set_bypass_triggers(boolean); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.set_bypass_triggers(bypass boolean DEFAULT true) RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  PERFORM set_config('app.bypass_triggers', bypass::text, true);
END;
$$;


ALTER FUNCTION public.set_bypass_triggers(bypass boolean) OWNER TO postgres;

--
-- Name: set_geocoded_locations_updated_at(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.set_geocoded_locations_updated_at() RETURNS trigger
    LANGUAGE plpgsql
    SET search_path TO 'public'
    AS $$
BEGIN
  NEW.updated_at = now();
  RETURN NEW;
END;
$$;


ALTER FUNCTION public.set_geocoded_locations_updated_at() OWNER TO postgres;

--
-- Name: set_rls_context(text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.set_rls_context(context_name text) RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  PERFORM set_config('app.rls_context', context_name, true);
END;
$$;


ALTER FUNCTION public.set_rls_context(context_name text) OWNER TO postgres;

--
-- Name: sync_stripe_subscription_slots(uuid, text, integer, timestamp with time zone, timestamp with time zone); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.sync_stripe_subscription_slots(org_id uuid, subscription_id text, quantity integer, period_start timestamp with time zone, period_end timestamp with time zone) RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $_$
BEGIN
  -- Upsert organization slots based on Stripe subscription
  INSERT INTO public.organization_slots (
    organization_id,
    slot_type,
    purchased_slots,
    used_slots,
    billing_period_start,
    billing_period_end,
    stripe_subscription_id,
    amount_paid_cents
  )
  VALUES (
    org_id,
    'user_license',
    quantity,
    0, -- Reset used slots for new period
    period_start,
    period_end,
    subscription_id,
    quantity * 1000 -- $10 per slot in cents
  )
  ON CONFLICT (organization_id, billing_period_start) 
  DO UPDATE SET
    purchased_slots = EXCLUDED.purchased_slots,
    stripe_subscription_id = EXCLUDED.stripe_subscription_id,
    amount_paid_cents = EXCLUDED.amount_paid_cents,
    updated_at = now();
END;
$_$;


ALTER FUNCTION public.sync_stripe_subscription_slots(org_id uuid, subscription_id text, quantity integer, period_start timestamp with time zone, period_end timestamp with time zone) OWNER TO postgres;

--
-- Name: touch_updated_at(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.touch_updated_at() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
  BEGIN
    NEW.updated_at = now();
    RETURN NEW;
  END;
  $$;


ALTER FUNCTION public.touch_updated_at() OWNER TO postgres;

--
-- Name: update_equipment_working_hours(uuid, numeric, text, uuid, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_equipment_working_hours(p_equipment_id uuid, p_new_hours numeric, p_update_source text DEFAULT 'manual'::text, p_work_order_id uuid DEFAULT NULL::uuid, p_notes text DEFAULT NULL::text) RETURNS jsonb
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
  current_hours numeric;
  user_name text;
  org_id uuid;
  result jsonb;
BEGIN
  -- Get current hours and organization
  SELECT working_hours, organization_id INTO current_hours, org_id
  FROM equipment
  WHERE id = p_equipment_id;
  
  IF NOT FOUND THEN
    RETURN jsonb_build_object('success', false, 'error', 'Equipment not found');
  END IF;
  
  -- Check permissions
  IF NOT (
    is_org_admin(auth.uid(), org_id) 
    OR (
      is_org_member(auth.uid(), org_id) 
      AND EXISTS (
        SELECT 1 FROM equipment e
        WHERE e.id = p_equipment_id
        AND e.team_id IS NOT NULL 
        AND e.team_id IN (
          SELECT tm.team_id FROM team_members tm 
          WHERE tm.user_id = auth.uid()
        )
      )
    )
  ) THEN
    RETURN jsonb_build_object('success', false, 'error', 'Permission denied');
  END IF;
  
  -- Get user name
  SELECT name INTO user_name FROM profiles WHERE id = auth.uid();
  
  -- Update equipment working hours
  UPDATE equipment 
  SET 
    working_hours = p_new_hours,
    updated_at = now()
  WHERE id = p_equipment_id;
  
  -- Create history entry
  INSERT INTO equipment_working_hours_history (
    equipment_id,
    old_hours,
    new_hours,
    hours_added,
    updated_by,
    updated_by_name,
    update_source,
    work_order_id,
    notes
  ) VALUES (
    p_equipment_id,
    current_hours,
    p_new_hours,
    p_new_hours - COALESCE(current_hours, 0),
    auth.uid(),
    user_name,
    p_update_source,
    p_work_order_id,
    p_notes
  );
  
  RETURN jsonb_build_object(
    'success', true,
    'old_hours', current_hours,
    'new_hours', p_new_hours,
    'hours_added', p_new_hours - COALESCE(current_hours, 0)
  );
END;
$$;


ALTER FUNCTION public.update_equipment_working_hours(p_equipment_id uuid, p_new_hours numeric, p_update_source text, p_work_order_id uuid, p_notes text) OWNER TO postgres;

--
-- Name: update_organization_billing_metrics(uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_organization_billing_metrics(org_id uuid) RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  UPDATE public.organizations 
  SET 
    billable_members = public.calculate_billable_members(org_id),
    last_billing_calculation = now()
  WHERE id = org_id;
END;
$$;


ALTER FUNCTION public.update_organization_billing_metrics(org_id uuid) OWNER TO postgres;

--
-- Name: update_organization_member_count(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_organization_member_count() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  IF TG_OP = 'INSERT' THEN
    UPDATE organizations 
    SET member_count = (
      SELECT COUNT(*) FROM organization_members 
      WHERE organization_id = NEW.organization_id AND status = 'active'
    )
    WHERE id = NEW.organization_id;
    RETURN NEW;
  ELSIF TG_OP = 'DELETE' THEN
    UPDATE organizations 
    SET member_count = (
      SELECT COUNT(*) FROM organization_members 
      WHERE organization_id = OLD.organization_id AND status = 'active'
    )
    WHERE id = OLD.organization_id;
    RETURN OLD;
  ELSIF TG_OP = 'UPDATE' THEN
    -- Update both old and new organizations if organization_id changed
    UPDATE organizations 
    SET member_count = (
      SELECT COUNT(*) FROM organization_members 
      WHERE organization_id = OLD.organization_id AND status = 'active'
    )
    WHERE id = OLD.organization_id;
    
    UPDATE organizations 
    SET member_count = (
      SELECT COUNT(*) FROM organization_members 
      WHERE organization_id = NEW.organization_id AND status = 'active'
    )
    WHERE id = NEW.organization_id;
    RETURN NEW;
  END IF;
  RETURN NULL;
END;
$$;


ALTER FUNCTION public.update_organization_member_count() OWNER TO postgres;

--
-- Name: update_pm_updated_at(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_pm_updated_at() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  NEW.updated_at = now();
  RETURN NEW;
END;
$$;


ALTER FUNCTION public.update_pm_updated_at() OWNER TO postgres;

--
-- Name: update_updated_at_column(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_updated_at_column() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  NEW.updated_at = now();
  RETURN NEW;
END;
$$;


ALTER FUNCTION public.update_updated_at_column() OWNER TO postgres;

--
-- Name: update_work_order_costs_updated_at(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.update_work_order_costs_updated_at() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
BEGIN
  NEW.updated_at = now();
  RETURN NEW;
END;
$$;


ALTER FUNCTION public.update_work_order_costs_updated_at() OWNER TO postgres;

--
-- Name: validate_invitation_for_account_creation(uuid); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.validate_invitation_for_account_creation(p_invitation_id uuid) RETURNS jsonb
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
  invitation_record RECORD;
  email_exists boolean;
  result jsonb;
BEGIN
  -- Get invitation details
  SELECT id, organization_id, email, role, status, expires_at, invited_by
  INTO invitation_record
  FROM organization_invitations
  WHERE id = p_invitation_id;
  
  -- Validate invitation exists
  IF NOT FOUND THEN
    RETURN jsonb_build_object(
      'success', false, 
      'error', 'Invitation not found'
    );
  END IF;
  
  -- Validate invitation status
  IF invitation_record.status != 'pending' THEN
    RETURN jsonb_build_object(
      'success', false, 
      'error', 'Invitation is not pending'
    );
  END IF;
  
  -- Validate invitation not expired
  IF invitation_record.expires_at < now() THEN
    RETURN jsonb_build_object(
      'success', false, 
      'error', 'Invitation has expired'
    );
  END IF;
  
  -- Check if email already exists in auth system
  SELECT public.check_email_exists_in_auth(invitation_record.email) INTO email_exists;
  
  IF email_exists THEN
    RETURN jsonb_build_object(
      'success', false, 
      'error', 'User already exists in the system'
    );
  END IF;
  
  -- Return success with invitation details
  RETURN jsonb_build_object(
    'success', true,
    'invitation', jsonb_build_object(
      'id', invitation_record.id,
      'organization_id', invitation_record.organization_id,
      'email', invitation_record.email,
      'role', invitation_record.role,
      'invited_by', invitation_record.invited_by
    )
  );
  
EXCEPTION WHEN OTHERS THEN
  RETURN jsonb_build_object(
    'success', false, 
    'error', 'Validation failed: ' || SQLERRM
  );
END;
$$;


ALTER FUNCTION public.validate_invitation_for_account_creation(p_invitation_id uuid) OWNER TO postgres;

--
-- Name: validate_member_limit(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.validate_member_limit() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    SET search_path TO 'public'
    AS $$
DECLARE
  current_count INTEGER;
  max_count INTEGER;
BEGIN
  IF NEW.status = 'active' THEN
    SELECT member_count, max_members INTO current_count, max_count
    FROM organizations WHERE id = NEW.organization_id;
    
    IF current_count >= max_count THEN
      RAISE EXCEPTION 'Organization has reached maximum member limit of %', max_count;
    END IF;
  END IF;
  RETURN NEW;
END;
$$;


ALTER FUNCTION public.validate_member_limit() OWNER TO postgres;

--
-- Name: apply_rls(jsonb, integer); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer DEFAULT (1024 * 1024)) RETURNS SETOF realtime.wal_rls
    LANGUAGE plpgsql
    AS $$
declare
-- Regclass of the table e.g. public.notes
entity_ regclass = (quote_ident(wal ->> 'schema') || '.' || quote_ident(wal ->> 'table'))::regclass;

-- I, U, D, T: insert, update ...
action realtime.action = (
    case wal ->> 'action'
        when 'I' then 'INSERT'
        when 'U' then 'UPDATE'
        when 'D' then 'DELETE'
        else 'ERROR'
    end
);

-- Is row level security enabled for the table
is_rls_enabled bool = relrowsecurity from pg_class where oid = entity_;

subscriptions realtime.subscription[] = array_agg(subs)
    from
        realtime.subscription subs
    where
        subs.entity = entity_;

-- Subscription vars
roles regrole[] = array_agg(distinct us.claims_role::text)
    from
        unnest(subscriptions) us;

working_role regrole;
claimed_role regrole;
claims jsonb;

subscription_id uuid;
subscription_has_access bool;
visible_to_subscription_ids uuid[] = '{}';

-- structured info for wal's columns
columns realtime.wal_column[];
-- previous identity values for update/delete
old_columns realtime.wal_column[];

error_record_exceeds_max_size boolean = octet_length(wal::text) > max_record_bytes;

-- Primary jsonb output for record
output jsonb;

begin
perform set_config('role', null, true);

columns =
    array_agg(
        (
            x->>'name',
            x->>'type',
            x->>'typeoid',
            realtime.cast(
                (x->'value') #>> '{}',
                coalesce(
                    (x->>'typeoid')::regtype, -- null when wal2json version <= 2.4
                    (x->>'type')::regtype
                )
            ),
            (pks ->> 'name') is not null,
            true
        )::realtime.wal_column
    )
    from
        jsonb_array_elements(wal -> 'columns') x
        left join jsonb_array_elements(wal -> 'pk') pks
            on (x ->> 'name') = (pks ->> 'name');

old_columns =
    array_agg(
        (
            x->>'name',
            x->>'type',
            x->>'typeoid',
            realtime.cast(
                (x->'value') #>> '{}',
                coalesce(
                    (x->>'typeoid')::regtype, -- null when wal2json version <= 2.4
                    (x->>'type')::regtype
                )
            ),
            (pks ->> 'name') is not null,
            true
        )::realtime.wal_column
    )
    from
        jsonb_array_elements(wal -> 'identity') x
        left join jsonb_array_elements(wal -> 'pk') pks
            on (x ->> 'name') = (pks ->> 'name');

for working_role in select * from unnest(roles) loop

    -- Update `is_selectable` for columns and old_columns
    columns =
        array_agg(
            (
                c.name,
                c.type_name,
                c.type_oid,
                c.value,
                c.is_pkey,
                pg_catalog.has_column_privilege(working_role, entity_, c.name, 'SELECT')
            )::realtime.wal_column
        )
        from
            unnest(columns) c;

    old_columns =
            array_agg(
                (
                    c.name,
                    c.type_name,
                    c.type_oid,
                    c.value,
                    c.is_pkey,
                    pg_catalog.has_column_privilege(working_role, entity_, c.name, 'SELECT')
                )::realtime.wal_column
            )
            from
                unnest(old_columns) c;

    if action <> 'DELETE' and count(1) = 0 from unnest(columns) c where c.is_pkey then
        return next (
            jsonb_build_object(
                'schema', wal ->> 'schema',
                'table', wal ->> 'table',
                'type', action
            ),
            is_rls_enabled,
            -- subscriptions is already filtered by entity
            (select array_agg(s.subscription_id) from unnest(subscriptions) as s where claims_role = working_role),
            array['Error 400: Bad Request, no primary key']
        )::realtime.wal_rls;

    -- The claims role does not have SELECT permission to the primary key of entity
    elsif action <> 'DELETE' and sum(c.is_selectable::int) <> count(1) from unnest(columns) c where c.is_pkey then
        return next (
            jsonb_build_object(
                'schema', wal ->> 'schema',
                'table', wal ->> 'table',
                'type', action
            ),
            is_rls_enabled,
            (select array_agg(s.subscription_id) from unnest(subscriptions) as s where claims_role = working_role),
            array['Error 401: Unauthorized']
        )::realtime.wal_rls;

    else
        output = jsonb_build_object(
            'schema', wal ->> 'schema',
            'table', wal ->> 'table',
            'type', action,
            'commit_timestamp', to_char(
                ((wal ->> 'timestamp')::timestamptz at time zone 'utc'),
                'YYYY-MM-DD"T"HH24:MI:SS.MS"Z"'
            ),
            'columns', (
                select
                    jsonb_agg(
                        jsonb_build_object(
                            'name', pa.attname,
                            'type', pt.typname
                        )
                        order by pa.attnum asc
                    )
                from
                    pg_attribute pa
                    join pg_type pt
                        on pa.atttypid = pt.oid
                where
                    attrelid = entity_
                    and attnum > 0
                    and pg_catalog.has_column_privilege(working_role, entity_, pa.attname, 'SELECT')
            )
        )
        -- Add "record" key for insert and update
        || case
            when action in ('INSERT', 'UPDATE') then
                jsonb_build_object(
                    'record',
                    (
                        select
                            jsonb_object_agg(
                                -- if unchanged toast, get column name and value from old record
                                coalesce((c).name, (oc).name),
                                case
                                    when (c).name is null then (oc).value
                                    else (c).value
                                end
                            )
                        from
                            unnest(columns) c
                            full outer join unnest(old_columns) oc
                                on (c).name = (oc).name
                        where
                            coalesce((c).is_selectable, (oc).is_selectable)
                            and ( not error_record_exceeds_max_size or (octet_length((c).value::text) <= 64))
                    )
                )
            else '{}'::jsonb
        end
        -- Add "old_record" key for update and delete
        || case
            when action = 'UPDATE' then
                jsonb_build_object(
                        'old_record',
                        (
                            select jsonb_object_agg((c).name, (c).value)
                            from unnest(old_columns) c
                            where
                                (c).is_selectable
                                and ( not error_record_exceeds_max_size or (octet_length((c).value::text) <= 64))
                        )
                    )
            when action = 'DELETE' then
                jsonb_build_object(
                    'old_record',
                    (
                        select jsonb_object_agg((c).name, (c).value)
                        from unnest(old_columns) c
                        where
                            (c).is_selectable
                            and ( not error_record_exceeds_max_size or (octet_length((c).value::text) <= 64))
                            and ( not is_rls_enabled or (c).is_pkey ) -- if RLS enabled, we can't secure deletes so filter to pkey
                    )
                )
            else '{}'::jsonb
        end;

        -- Create the prepared statement
        if is_rls_enabled and action <> 'DELETE' then
            if (select 1 from pg_prepared_statements where name = 'walrus_rls_stmt' limit 1) > 0 then
                deallocate walrus_rls_stmt;
            end if;
            execute realtime.build_prepared_statement_sql('walrus_rls_stmt', entity_, columns);
        end if;

        visible_to_subscription_ids = '{}';

        for subscription_id, claims in (
                select
                    subs.subscription_id,
                    subs.claims
                from
                    unnest(subscriptions) subs
                where
                    subs.entity = entity_
                    and subs.claims_role = working_role
                    and (
                        realtime.is_visible_through_filters(columns, subs.filters)
                        or (
                          action = 'DELETE'
                          and realtime.is_visible_through_filters(old_columns, subs.filters)
                        )
                    )
        ) loop

            if not is_rls_enabled or action = 'DELETE' then
                visible_to_subscription_ids = visible_to_subscription_ids || subscription_id;
            else
                -- Check if RLS allows the role to see the record
                perform
                    -- Trim leading and trailing quotes from working_role because set_config
                    -- doesn't recognize the role as valid if they are included
                    set_config('role', trim(both '"' from working_role::text), true),
                    set_config('request.jwt.claims', claims::text, true);

                execute 'execute walrus_rls_stmt' into subscription_has_access;

                if subscription_has_access then
                    visible_to_subscription_ids = visible_to_subscription_ids || subscription_id;
                end if;
            end if;
        end loop;

        perform set_config('role', null, true);

        return next (
            output,
            is_rls_enabled,
            visible_to_subscription_ids,
            case
                when error_record_exceeds_max_size then array['Error 413: Payload Too Large']
                else '{}'
            end
        )::realtime.wal_rls;

    end if;
end loop;

perform set_config('role', null, true);
end;
$$;


ALTER FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) OWNER TO supabase_admin;

--
-- Name: broadcast_changes(text, text, text, text, text, record, record, text); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.broadcast_changes(topic_name text, event_name text, operation text, table_name text, table_schema text, new record, old record, level text DEFAULT 'ROW'::text) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    -- Declare a variable to hold the JSONB representation of the row
    row_data jsonb := '{}'::jsonb;
BEGIN
    IF level = 'STATEMENT' THEN
        RAISE EXCEPTION 'function can only be triggered for each row, not for each statement';
    END IF;
    -- Check the operation type and handle accordingly
    IF operation = 'INSERT' OR operation = 'UPDATE' OR operation = 'DELETE' THEN
        row_data := jsonb_build_object('old_record', OLD, 'record', NEW, 'operation', operation, 'table', table_name, 'schema', table_schema);
        PERFORM realtime.send (row_data, event_name, topic_name);
    ELSE
        RAISE EXCEPTION 'Unexpected operation type: %', operation;
    END IF;
EXCEPTION
    WHEN OTHERS THEN
        RAISE EXCEPTION 'Failed to process the row: %', SQLERRM;
END;

$$;


ALTER FUNCTION realtime.broadcast_changes(topic_name text, event_name text, operation text, table_name text, table_schema text, new record, old record, level text) OWNER TO supabase_admin;

--
-- Name: build_prepared_statement_sql(text, regclass, realtime.wal_column[]); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) RETURNS text
    LANGUAGE sql
    AS $$
      /*
      Builds a sql string that, if executed, creates a prepared statement to
      tests retrive a row from *entity* by its primary key columns.
      Example
          select realtime.build_prepared_statement_sql('public.notes', '{"id"}'::text[], '{"bigint"}'::text[])
      */
          select
      'prepare ' || prepared_statement_name || ' as
          select
              exists(
                  select
                      1
                  from
                      ' || entity || '
                  where
                      ' || string_agg(quote_ident(pkc.name) || '=' || quote_nullable(pkc.value #>> '{}') , ' and ') || '
              )'
          from
              unnest(columns) pkc
          where
              pkc.is_pkey
          group by
              entity
      $$;


ALTER FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) OWNER TO supabase_admin;

--
-- Name: cast(text, regtype); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime."cast"(val text, type_ regtype) RETURNS jsonb
    LANGUAGE plpgsql IMMUTABLE
    AS $$
    declare
      res jsonb;
    begin
      execute format('select to_jsonb(%L::'|| type_::text || ')', val)  into res;
      return res;
    end
    $$;


ALTER FUNCTION realtime."cast"(val text, type_ regtype) OWNER TO supabase_admin;

--
-- Name: check_equality_op(realtime.equality_op, regtype, text, text); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) RETURNS boolean
    LANGUAGE plpgsql IMMUTABLE
    AS $$
      /*
      Casts *val_1* and *val_2* as type *type_* and check the *op* condition for truthiness
      */
      declare
          op_symbol text = (
              case
                  when op = 'eq' then '='
                  when op = 'neq' then '!='
                  when op = 'lt' then '<'
                  when op = 'lte' then '<='
                  when op = 'gt' then '>'
                  when op = 'gte' then '>='
                  when op = 'in' then '= any'
                  else 'UNKNOWN OP'
              end
          );
          res boolean;
      begin
          execute format(
              'select %L::'|| type_::text || ' ' || op_symbol
              || ' ( %L::'
              || (
                  case
                      when op = 'in' then type_::text || '[]'
                      else type_::text end
              )
              || ')', val_1, val_2) into res;
          return res;
      end;
      $$;


ALTER FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) OWNER TO supabase_admin;

--
-- Name: is_visible_through_filters(realtime.wal_column[], realtime.user_defined_filter[]); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) RETURNS boolean
    LANGUAGE sql IMMUTABLE
    AS $_$
    /*
    Should the record be visible (true) or filtered out (false) after *filters* are applied
    */
        select
            -- Default to allowed when no filters present
            $2 is null -- no filters. this should not happen because subscriptions has a default
            or array_length($2, 1) is null -- array length of an empty array is null
            or bool_and(
                coalesce(
                    realtime.check_equality_op(
                        op:=f.op,
                        type_:=coalesce(
                            col.type_oid::regtype, -- null when wal2json version <= 2.4
                            col.type_name::regtype
                        ),
                        -- cast jsonb to text
                        val_1:=col.value #>> '{}',
                        val_2:=f.value
                    ),
                    false -- if null, filter does not match
                )
            )
        from
            unnest(filters) f
            join unnest(columns) col
                on f.column_name = col.name;
    $_$;


ALTER FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) OWNER TO supabase_admin;

--
-- Name: list_changes(name, name, integer, integer); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) RETURNS SETOF realtime.wal_rls
    LANGUAGE sql
    SET log_min_messages TO 'fatal'
    AS $$
      with pub as (
        select
          concat_ws(
            ',',
            case when bool_or(pubinsert) then 'insert' else null end,
            case when bool_or(pubupdate) then 'update' else null end,
            case when bool_or(pubdelete) then 'delete' else null end
          ) as w2j_actions,
          coalesce(
            string_agg(
              realtime.quote_wal2json(format('%I.%I', schemaname, tablename)::regclass),
              ','
            ) filter (where ppt.tablename is not null and ppt.tablename not like '% %'),
            ''
          ) w2j_add_tables
        from
          pg_publication pp
          left join pg_publication_tables ppt
            on pp.pubname = ppt.pubname
        where
          pp.pubname = publication
        group by
          pp.pubname
        limit 1
      ),
      w2j as (
        select
          x.*, pub.w2j_add_tables
        from
          pub,
          pg_logical_slot_get_changes(
            slot_name, null, max_changes,
            'include-pk', 'true',
            'include-transaction', 'false',
            'include-timestamp', 'true',
            'include-type-oids', 'true',
            'format-version', '2',
            'actions', pub.w2j_actions,
            'add-tables', pub.w2j_add_tables
          ) x
      )
      select
        xyz.wal,
        xyz.is_rls_enabled,
        xyz.subscription_ids,
        xyz.errors
      from
        w2j,
        realtime.apply_rls(
          wal := w2j.data::jsonb,
          max_record_bytes := max_record_bytes
        ) xyz(wal, is_rls_enabled, subscription_ids, errors)
      where
        w2j.w2j_add_tables <> ''
        and xyz.subscription_ids[1] is not null
    $$;


ALTER FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) OWNER TO supabase_admin;

--
-- Name: quote_wal2json(regclass); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.quote_wal2json(entity regclass) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $$
      select
        (
          select string_agg('' || ch,'')
          from unnest(string_to_array(nsp.nspname::text, null)) with ordinality x(ch, idx)
          where
            not (x.idx = 1 and x.ch = '"')
            and not (
              x.idx = array_length(string_to_array(nsp.nspname::text, null), 1)
              and x.ch = '"'
            )
        )
        || '.'
        || (
          select string_agg('' || ch,'')
          from unnest(string_to_array(pc.relname::text, null)) with ordinality x(ch, idx)
          where
            not (x.idx = 1 and x.ch = '"')
            and not (
              x.idx = array_length(string_to_array(nsp.nspname::text, null), 1)
              and x.ch = '"'
            )
          )
      from
        pg_class pc
        join pg_namespace nsp
          on pc.relnamespace = nsp.oid
      where
        pc.oid = entity
    $$;


ALTER FUNCTION realtime.quote_wal2json(entity regclass) OWNER TO supabase_admin;

--
-- Name: send(jsonb, text, text, boolean); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.send(payload jsonb, event text, topic text, private boolean DEFAULT true) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
  BEGIN
    -- Set the topic configuration
    EXECUTE format('SET LOCAL realtime.topic TO %L', topic);

    -- Attempt to insert the message
    INSERT INTO realtime.messages (payload, event, topic, private, extension)
    VALUES (payload, event, topic, private, 'broadcast');
  EXCEPTION
    WHEN OTHERS THEN
      -- Capture and notify the error
      RAISE WARNING 'ErrorSendingBroadcastMessage: %', SQLERRM;
  END;
END;
$$;


ALTER FUNCTION realtime.send(payload jsonb, event text, topic text, private boolean) OWNER TO supabase_admin;

--
-- Name: subscription_check_filters(); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.subscription_check_filters() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    /*
    Validates that the user defined filters for a subscription:
    - refer to valid columns that the claimed role may access
    - values are coercable to the correct column type
    */
    declare
        col_names text[] = coalesce(
                array_agg(c.column_name order by c.ordinal_position),
                '{}'::text[]
            )
            from
                information_schema.columns c
            where
                format('%I.%I', c.table_schema, c.table_name)::regclass = new.entity
                and pg_catalog.has_column_privilege(
                    (new.claims ->> 'role'),
                    format('%I.%I', c.table_schema, c.table_name)::regclass,
                    c.column_name,
                    'SELECT'
                );
        filter realtime.user_defined_filter;
        col_type regtype;

        in_val jsonb;
    begin
        for filter in select * from unnest(new.filters) loop
            -- Filtered column is valid
            if not filter.column_name = any(col_names) then
                raise exception 'invalid column for filter %', filter.column_name;
            end if;

            -- Type is sanitized and safe for string interpolation
            col_type = (
                select atttypid::regtype
                from pg_catalog.pg_attribute
                where attrelid = new.entity
                      and attname = filter.column_name
            );
            if col_type is null then
                raise exception 'failed to lookup type for column %', filter.column_name;
            end if;

            -- Set maximum number of entries for in filter
            if filter.op = 'in'::realtime.equality_op then
                in_val = realtime.cast(filter.value, (col_type::text || '[]')::regtype);
                if coalesce(jsonb_array_length(in_val), 0) > 100 then
                    raise exception 'too many values for `in` filter. Maximum 100';
                end if;
            else
                -- raises an exception if value is not coercable to type
                perform realtime.cast(filter.value, col_type);
            end if;

        end loop;

        -- Apply consistent order to filters so the unique constraint on
        -- (subscription_id, entity, filters) can't be tricked by a different filter order
        new.filters = coalesce(
            array_agg(f order by f.column_name, f.op, f.value),
            '{}'
        ) from unnest(new.filters) f;

        return new;
    end;
    $$;


ALTER FUNCTION realtime.subscription_check_filters() OWNER TO supabase_admin;

--
-- Name: to_regrole(text); Type: FUNCTION; Schema: realtime; Owner: supabase_admin
--

CREATE FUNCTION realtime.to_regrole(role_name text) RETURNS regrole
    LANGUAGE sql IMMUTABLE
    AS $$ select role_name::regrole $$;


ALTER FUNCTION realtime.to_regrole(role_name text) OWNER TO supabase_admin;

--
-- Name: topic(); Type: FUNCTION; Schema: realtime; Owner: supabase_realtime_admin
--

CREATE FUNCTION realtime.topic() RETURNS text
    LANGUAGE sql STABLE
    AS $$
select nullif(current_setting('realtime.topic', true), '')::text;
$$;


ALTER FUNCTION realtime.topic() OWNER TO supabase_realtime_admin;

--
-- Name: add_prefixes(text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.add_prefixes(_bucket_id text, _name text) RETURNS void
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
DECLARE
    prefixes text[];
BEGIN
    prefixes := "storage"."get_prefixes"("_name");

    IF array_length(prefixes, 1) > 0 THEN
        INSERT INTO storage.prefixes (name, bucket_id)
        SELECT UNNEST(prefixes) as name, "_bucket_id" ON CONFLICT DO NOTHING;
    END IF;
END;
$$;


ALTER FUNCTION storage.add_prefixes(_bucket_id text, _name text) OWNER TO supabase_storage_admin;

--
-- Name: can_insert_object(text, text, uuid, jsonb); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.can_insert_object(bucketid text, name text, owner uuid, metadata jsonb) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
  INSERT INTO "storage"."objects" ("bucket_id", "name", "owner", "metadata") VALUES (bucketid, name, owner, metadata);
  -- hack to rollback the successful insert
  RAISE sqlstate 'PT200' using
  message = 'ROLLBACK',
  detail = 'rollback successful insert';
END
$$;


ALTER FUNCTION storage.can_insert_object(bucketid text, name text, owner uuid, metadata jsonb) OWNER TO supabase_storage_admin;

--
-- Name: delete_prefix(text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.delete_prefix(_bucket_id text, _name text) RETURNS boolean
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
BEGIN
    -- Check if we can delete the prefix
    IF EXISTS(
        SELECT FROM "storage"."prefixes"
        WHERE "prefixes"."bucket_id" = "_bucket_id"
          AND level = "storage"."get_level"("_name") + 1
          AND "prefixes"."name" COLLATE "C" LIKE "_name" || '/%'
        LIMIT 1
    )
    OR EXISTS(
        SELECT FROM "storage"."objects"
        WHERE "objects"."bucket_id" = "_bucket_id"
          AND "storage"."get_level"("objects"."name") = "storage"."get_level"("_name") + 1
          AND "objects"."name" COLLATE "C" LIKE "_name" || '/%'
        LIMIT 1
    ) THEN
    -- There are sub-objects, skip deletion
    RETURN false;
    ELSE
        DELETE FROM "storage"."prefixes"
        WHERE "prefixes"."bucket_id" = "_bucket_id"
          AND level = "storage"."get_level"("_name")
          AND "prefixes"."name" = "_name";
        RETURN true;
    END IF;
END;
$$;


ALTER FUNCTION storage.delete_prefix(_bucket_id text, _name text) OWNER TO supabase_storage_admin;

--
-- Name: delete_prefix_hierarchy_trigger(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.delete_prefix_hierarchy_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    prefix text;
BEGIN
    prefix := "storage"."get_prefix"(OLD."name");

    IF coalesce(prefix, '') != '' THEN
        PERFORM "storage"."delete_prefix"(OLD."bucket_id", prefix);
    END IF;

    RETURN OLD;
END;
$$;


ALTER FUNCTION storage.delete_prefix_hierarchy_trigger() OWNER TO supabase_storage_admin;

--
-- Name: enforce_bucket_name_length(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.enforce_bucket_name_length() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
begin
    if length(new.name) > 100 then
        raise exception 'bucket name "%" is too long (% characters). Max is 100.', new.name, length(new.name);
    end if;
    return new;
end;
$$;


ALTER FUNCTION storage.enforce_bucket_name_length() OWNER TO supabase_storage_admin;

--
-- Name: extension(text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.extension(name text) RETURNS text
    LANGUAGE plpgsql IMMUTABLE
    AS $$
DECLARE
    _parts text[];
    _filename text;
BEGIN
    SELECT string_to_array(name, '/') INTO _parts;
    SELECT _parts[array_length(_parts,1)] INTO _filename;
    RETURN reverse(split_part(reverse(_filename), '.', 1));
END
$$;


ALTER FUNCTION storage.extension(name text) OWNER TO supabase_storage_admin;

--
-- Name: filename(text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.filename(name text) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
_parts text[];
BEGIN
	select string_to_array(name, '/') into _parts;
	return _parts[array_length(_parts,1)];
END
$$;


ALTER FUNCTION storage.filename(name text) OWNER TO supabase_storage_admin;

--
-- Name: foldername(text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.foldername(name text) RETURNS text[]
    LANGUAGE plpgsql IMMUTABLE
    AS $$
DECLARE
    _parts text[];
BEGIN
    -- Split on "/" to get path segments
    SELECT string_to_array(name, '/') INTO _parts;
    -- Return everything except the last segment
    RETURN _parts[1 : array_length(_parts,1) - 1];
END
$$;


ALTER FUNCTION storage.foldername(name text) OWNER TO supabase_storage_admin;

--
-- Name: get_level(text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.get_level(name text) RETURNS integer
    LANGUAGE sql IMMUTABLE STRICT
    AS $$
SELECT array_length(string_to_array("name", '/'), 1);
$$;


ALTER FUNCTION storage.get_level(name text) OWNER TO supabase_storage_admin;

--
-- Name: get_prefix(text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.get_prefix(name text) RETURNS text
    LANGUAGE sql IMMUTABLE STRICT
    AS $_$
SELECT
    CASE WHEN strpos("name", '/') > 0 THEN
             regexp_replace("name", '[\/]{1}[^\/]+\/?$', '')
         ELSE
             ''
        END;
$_$;


ALTER FUNCTION storage.get_prefix(name text) OWNER TO supabase_storage_admin;

--
-- Name: get_prefixes(text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.get_prefixes(name text) RETURNS text[]
    LANGUAGE plpgsql IMMUTABLE STRICT
    AS $$
DECLARE
    parts text[];
    prefixes text[];
    prefix text;
BEGIN
    -- Split the name into parts by '/'
    parts := string_to_array("name", '/');
    prefixes := '{}';

    -- Construct the prefixes, stopping one level below the last part
    FOR i IN 1..array_length(parts, 1) - 1 LOOP
            prefix := array_to_string(parts[1:i], '/');
            prefixes := array_append(prefixes, prefix);
    END LOOP;

    RETURN prefixes;
END;
$$;


ALTER FUNCTION storage.get_prefixes(name text) OWNER TO supabase_storage_admin;

--
-- Name: get_size_by_bucket(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.get_size_by_bucket() RETURNS TABLE(size bigint, bucket_id text)
    LANGUAGE plpgsql STABLE
    AS $$
BEGIN
    return query
        select sum((metadata->>'size')::bigint) as size, obj.bucket_id
        from "storage".objects as obj
        group by obj.bucket_id;
END
$$;


ALTER FUNCTION storage.get_size_by_bucket() OWNER TO supabase_storage_admin;

--
-- Name: list_multipart_uploads_with_delimiter(text, text, text, integer, text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.list_multipart_uploads_with_delimiter(bucket_id text, prefix_param text, delimiter_param text, max_keys integer DEFAULT 100, next_key_token text DEFAULT ''::text, next_upload_token text DEFAULT ''::text) RETURNS TABLE(key text, id text, created_at timestamp with time zone)
    LANGUAGE plpgsql
    AS $_$
BEGIN
    RETURN QUERY EXECUTE
        'SELECT DISTINCT ON(key COLLATE "C") * from (
            SELECT
                CASE
                    WHEN position($2 IN substring(key from length($1) + 1)) > 0 THEN
                        substring(key from 1 for length($1) + position($2 IN substring(key from length($1) + 1)))
                    ELSE
                        key
                END AS key, id, created_at
            FROM
                storage.s3_multipart_uploads
            WHERE
                bucket_id = $5 AND
                key ILIKE $1 || ''%'' AND
                CASE
                    WHEN $4 != '''' AND $6 = '''' THEN
                        CASE
                            WHEN position($2 IN substring(key from length($1) + 1)) > 0 THEN
                                substring(key from 1 for length($1) + position($2 IN substring(key from length($1) + 1))) COLLATE "C" > $4
                            ELSE
                                key COLLATE "C" > $4
                            END
                    ELSE
                        true
                END AND
                CASE
                    WHEN $6 != '''' THEN
                        id COLLATE "C" > $6
                    ELSE
                        true
                    END
            ORDER BY
                key COLLATE "C" ASC, created_at ASC) as e order by key COLLATE "C" LIMIT $3'
        USING prefix_param, delimiter_param, max_keys, next_key_token, bucket_id, next_upload_token;
END;
$_$;


ALTER FUNCTION storage.list_multipart_uploads_with_delimiter(bucket_id text, prefix_param text, delimiter_param text, max_keys integer, next_key_token text, next_upload_token text) OWNER TO supabase_storage_admin;

--
-- Name: list_objects_with_delimiter(text, text, text, integer, text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.list_objects_with_delimiter(bucket_id text, prefix_param text, delimiter_param text, max_keys integer DEFAULT 100, start_after text DEFAULT ''::text, next_token text DEFAULT ''::text) RETURNS TABLE(name text, id uuid, metadata jsonb, updated_at timestamp with time zone)
    LANGUAGE plpgsql
    AS $_$
BEGIN
    RETURN QUERY EXECUTE
        'SELECT DISTINCT ON(name COLLATE "C") * from (
            SELECT
                CASE
                    WHEN position($2 IN substring(name from length($1) + 1)) > 0 THEN
                        substring(name from 1 for length($1) + position($2 IN substring(name from length($1) + 1)))
                    ELSE
                        name
                END AS name, id, metadata, updated_at
            FROM
                storage.objects
            WHERE
                bucket_id = $5 AND
                name ILIKE $1 || ''%'' AND
                CASE
                    WHEN $6 != '''' THEN
                    name COLLATE "C" > $6
                ELSE true END
                AND CASE
                    WHEN $4 != '''' THEN
                        CASE
                            WHEN position($2 IN substring(name from length($1) + 1)) > 0 THEN
                                substring(name from 1 for length($1) + position($2 IN substring(name from length($1) + 1))) COLLATE "C" > $4
                            ELSE
                                name COLLATE "C" > $4
                            END
                    ELSE
                        true
                END
            ORDER BY
                name COLLATE "C" ASC) as e order by name COLLATE "C" LIMIT $3'
        USING prefix_param, delimiter_param, max_keys, next_token, bucket_id, start_after;
END;
$_$;


ALTER FUNCTION storage.list_objects_with_delimiter(bucket_id text, prefix_param text, delimiter_param text, max_keys integer, start_after text, next_token text) OWNER TO supabase_storage_admin;

--
-- Name: objects_insert_prefix_trigger(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.objects_insert_prefix_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    PERFORM "storage"."add_prefixes"(NEW."bucket_id", NEW."name");
    NEW.level := "storage"."get_level"(NEW."name");

    RETURN NEW;
END;
$$;


ALTER FUNCTION storage.objects_insert_prefix_trigger() OWNER TO supabase_storage_admin;

--
-- Name: objects_update_prefix_trigger(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.objects_update_prefix_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    old_prefixes TEXT[];
BEGIN
    -- Ensure this is an update operation and the name has changed
    IF TG_OP = 'UPDATE' AND (NEW."name" <> OLD."name" OR NEW."bucket_id" <> OLD."bucket_id") THEN
        -- Retrieve old prefixes
        old_prefixes := "storage"."get_prefixes"(OLD."name");

        -- Remove old prefixes that are only used by this object
        WITH all_prefixes as (
            SELECT unnest(old_prefixes) as prefix
        ),
        can_delete_prefixes as (
             SELECT prefix
             FROM all_prefixes
             WHERE NOT EXISTS (
                 SELECT 1 FROM "storage"."objects"
                 WHERE "bucket_id" = OLD."bucket_id"
                   AND "name" <> OLD."name"
                   AND "name" LIKE (prefix || '%')
             )
         )
        DELETE FROM "storage"."prefixes" WHERE name IN (SELECT prefix FROM can_delete_prefixes);

        -- Add new prefixes
        PERFORM "storage"."add_prefixes"(NEW."bucket_id", NEW."name");
    END IF;
    -- Set the new level
    NEW."level" := "storage"."get_level"(NEW."name");

    RETURN NEW;
END;
$$;


ALTER FUNCTION storage.objects_update_prefix_trigger() OWNER TO supabase_storage_admin;

--
-- Name: operation(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.operation() RETURNS text
    LANGUAGE plpgsql STABLE
    AS $$
BEGIN
    RETURN current_setting('storage.operation', true);
END;
$$;


ALTER FUNCTION storage.operation() OWNER TO supabase_storage_admin;

--
-- Name: prefixes_insert_trigger(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.prefixes_insert_trigger() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    PERFORM "storage"."add_prefixes"(NEW."bucket_id", NEW."name");
    RETURN NEW;
END;
$$;


ALTER FUNCTION storage.prefixes_insert_trigger() OWNER TO supabase_storage_admin;

--
-- Name: search(text, text, integer, integer, integer, text, text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.search(prefix text, bucketname text, limits integer DEFAULT 100, levels integer DEFAULT 1, offsets integer DEFAULT 0, search text DEFAULT ''::text, sortcolumn text DEFAULT 'name'::text, sortorder text DEFAULT 'asc'::text) RETURNS TABLE(name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, last_accessed_at timestamp with time zone, metadata jsonb)
    LANGUAGE plpgsql
    AS $$
declare
    can_bypass_rls BOOLEAN;
begin
    SELECT rolbypassrls
    INTO can_bypass_rls
    FROM pg_roles
    WHERE rolname = coalesce(nullif(current_setting('role', true), 'none'), current_user);

    IF can_bypass_rls THEN
        RETURN QUERY SELECT * FROM storage.search_v1_optimised(prefix, bucketname, limits, levels, offsets, search, sortcolumn, sortorder);
    ELSE
        RETURN QUERY SELECT * FROM storage.search_legacy_v1(prefix, bucketname, limits, levels, offsets, search, sortcolumn, sortorder);
    END IF;
end;
$$;


ALTER FUNCTION storage.search(prefix text, bucketname text, limits integer, levels integer, offsets integer, search text, sortcolumn text, sortorder text) OWNER TO supabase_storage_admin;

--
-- Name: search_legacy_v1(text, text, integer, integer, integer, text, text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.search_legacy_v1(prefix text, bucketname text, limits integer DEFAULT 100, levels integer DEFAULT 1, offsets integer DEFAULT 0, search text DEFAULT ''::text, sortcolumn text DEFAULT 'name'::text, sortorder text DEFAULT 'asc'::text) RETURNS TABLE(name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, last_accessed_at timestamp with time zone, metadata jsonb)
    LANGUAGE plpgsql STABLE
    AS $_$
declare
    v_order_by text;
    v_sort_order text;
begin
    case
        when sortcolumn = 'name' then
            v_order_by = 'name';
        when sortcolumn = 'updated_at' then
            v_order_by = 'updated_at';
        when sortcolumn = 'created_at' then
            v_order_by = 'created_at';
        when sortcolumn = 'last_accessed_at' then
            v_order_by = 'last_accessed_at';
        else
            v_order_by = 'name';
        end case;

    case
        when sortorder = 'asc' then
            v_sort_order = 'asc';
        when sortorder = 'desc' then
            v_sort_order = 'desc';
        else
            v_sort_order = 'asc';
        end case;

    v_order_by = v_order_by || ' ' || v_sort_order;

    return query execute
        'with folders as (
           select path_tokens[$1] as folder
           from storage.objects
             where objects.name ilike $2 || $3 || ''%''
               and bucket_id = $4
               and array_length(objects.path_tokens, 1) <> $1
           group by folder
           order by folder ' || v_sort_order || '
     )
     (select folder as "name",
            null as id,
            null as updated_at,
            null as created_at,
            null as last_accessed_at,
            null as metadata from folders)
     union all
     (select path_tokens[$1] as "name",
            id,
            updated_at,
            created_at,
            last_accessed_at,
            metadata
     from storage.objects
     where objects.name ilike $2 || $3 || ''%''
       and bucket_id = $4
       and array_length(objects.path_tokens, 1) = $1
     order by ' || v_order_by || ')
     limit $5
     offset $6' using levels, prefix, search, bucketname, limits, offsets;
end;
$_$;


ALTER FUNCTION storage.search_legacy_v1(prefix text, bucketname text, limits integer, levels integer, offsets integer, search text, sortcolumn text, sortorder text) OWNER TO supabase_storage_admin;

--
-- Name: search_v1_optimised(text, text, integer, integer, integer, text, text, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.search_v1_optimised(prefix text, bucketname text, limits integer DEFAULT 100, levels integer DEFAULT 1, offsets integer DEFAULT 0, search text DEFAULT ''::text, sortcolumn text DEFAULT 'name'::text, sortorder text DEFAULT 'asc'::text) RETURNS TABLE(name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, last_accessed_at timestamp with time zone, metadata jsonb)
    LANGUAGE plpgsql STABLE
    AS $_$
declare
    v_order_by text;
    v_sort_order text;
begin
    case
        when sortcolumn = 'name' then
            v_order_by = 'name';
        when sortcolumn = 'updated_at' then
            v_order_by = 'updated_at';
        when sortcolumn = 'created_at' then
            v_order_by = 'created_at';
        when sortcolumn = 'last_accessed_at' then
            v_order_by = 'last_accessed_at';
        else
            v_order_by = 'name';
        end case;

    case
        when sortorder = 'asc' then
            v_sort_order = 'asc';
        when sortorder = 'desc' then
            v_sort_order = 'desc';
        else
            v_sort_order = 'asc';
        end case;

    v_order_by = v_order_by || ' ' || v_sort_order;

    return query execute
        'with folders as (
           select (string_to_array(name, ''/''))[level] as name
           from storage.prefixes
             where lower(prefixes.name) like lower($2 || $3) || ''%''
               and bucket_id = $4
               and level = $1
           order by name ' || v_sort_order || '
     )
     (select name,
            null as id,
            null as updated_at,
            null as created_at,
            null as last_accessed_at,
            null as metadata from folders)
     union all
     (select path_tokens[level] as "name",
            id,
            updated_at,
            created_at,
            last_accessed_at,
            metadata
     from storage.objects
     where lower(objects.name) like lower($2 || $3) || ''%''
       and bucket_id = $4
       and level = $1
     order by ' || v_order_by || ')
     limit $5
     offset $6' using levels, prefix, search, bucketname, limits, offsets;
end;
$_$;


ALTER FUNCTION storage.search_v1_optimised(prefix text, bucketname text, limits integer, levels integer, offsets integer, search text, sortcolumn text, sortorder text) OWNER TO supabase_storage_admin;

--
-- Name: search_v2(text, text, integer, integer, text); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.search_v2(prefix text, bucket_name text, limits integer DEFAULT 100, levels integer DEFAULT 1, start_after text DEFAULT ''::text) RETURNS TABLE(key text, name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, metadata jsonb)
    LANGUAGE plpgsql STABLE
    AS $_$
BEGIN
    RETURN query EXECUTE
        $sql$
        SELECT * FROM (
            (
                SELECT
                    split_part(name, '/', $4) AS key,
                    name || '/' AS name,
                    NULL::uuid AS id,
                    NULL::timestamptz AS updated_at,
                    NULL::timestamptz AS created_at,
                    NULL::jsonb AS metadata
                FROM storage.prefixes
                WHERE name COLLATE "C" LIKE $1 || '%'
                AND bucket_id = $2
                AND level = $4
                AND name COLLATE "C" > $5
                ORDER BY prefixes.name COLLATE "C" LIMIT $3
            )
            UNION ALL
            (SELECT split_part(name, '/', $4) AS key,
                name,
                id,
                updated_at,
                created_at,
                metadata
            FROM storage.objects
            WHERE name COLLATE "C" LIKE $1 || '%'
                AND bucket_id = $2
                AND level = $4
                AND name COLLATE "C" > $5
            ORDER BY name COLLATE "C" LIMIT $3)
        ) obj
        ORDER BY name COLLATE "C" LIMIT $3;
        $sql$
        USING prefix, bucket_name, limits, levels, start_after;
END;
$_$;


ALTER FUNCTION storage.search_v2(prefix text, bucket_name text, limits integer, levels integer, start_after text) OWNER TO supabase_storage_admin;

--
-- Name: update_updated_at_column(); Type: FUNCTION; Schema: storage; Owner: supabase_storage_admin
--

CREATE FUNCTION storage.update_updated_at_column() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    NEW.updated_at = now();
    RETURN NEW; 
END;
$$;


ALTER FUNCTION storage.update_updated_at_column() OWNER TO supabase_storage_admin;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: audit_log_entries; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.audit_log_entries (
    instance_id uuid,
    id uuid NOT NULL,
    payload json,
    created_at timestamp with time zone,
    ip_address character varying(64) DEFAULT ''::character varying NOT NULL
);


ALTER TABLE auth.audit_log_entries OWNER TO supabase_auth_admin;

--
-- Name: TABLE audit_log_entries; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.audit_log_entries IS 'Auth: Audit trail for user actions.';


--
-- Name: flow_state; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.flow_state (
    id uuid NOT NULL,
    user_id uuid,
    auth_code text NOT NULL,
    code_challenge_method auth.code_challenge_method NOT NULL,
    code_challenge text NOT NULL,
    provider_type text NOT NULL,
    provider_access_token text,
    provider_refresh_token text,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    authentication_method text NOT NULL,
    auth_code_issued_at timestamp with time zone
);


ALTER TABLE auth.flow_state OWNER TO supabase_auth_admin;

--
-- Name: TABLE flow_state; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.flow_state IS 'stores metadata for pkce logins';


--
-- Name: identities; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.identities (
    provider_id text NOT NULL,
    user_id uuid NOT NULL,
    identity_data jsonb NOT NULL,
    provider text NOT NULL,
    last_sign_in_at timestamp with time zone,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    email text GENERATED ALWAYS AS (lower((identity_data ->> 'email'::text))) STORED,
    id uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE auth.identities OWNER TO supabase_auth_admin;

--
-- Name: TABLE identities; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.identities IS 'Auth: Stores identities associated to a user.';


--
-- Name: COLUMN identities.email; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON COLUMN auth.identities.email IS 'Auth: Email is a generated column that references the optional email property in the identity_data';


--
-- Name: instances; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.instances (
    id uuid NOT NULL,
    uuid uuid,
    raw_base_config text,
    created_at timestamp with time zone,
    updated_at timestamp with time zone
);


ALTER TABLE auth.instances OWNER TO supabase_auth_admin;

--
-- Name: TABLE instances; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.instances IS 'Auth: Manages users across multiple sites.';


--
-- Name: mfa_amr_claims; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.mfa_amr_claims (
    session_id uuid NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    authentication_method text NOT NULL,
    id uuid NOT NULL
);


ALTER TABLE auth.mfa_amr_claims OWNER TO supabase_auth_admin;

--
-- Name: TABLE mfa_amr_claims; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.mfa_amr_claims IS 'auth: stores authenticator method reference claims for multi factor authentication';


--
-- Name: mfa_challenges; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.mfa_challenges (
    id uuid NOT NULL,
    factor_id uuid NOT NULL,
    created_at timestamp with time zone NOT NULL,
    verified_at timestamp with time zone,
    ip_address inet NOT NULL,
    otp_code text,
    web_authn_session_data jsonb
);


ALTER TABLE auth.mfa_challenges OWNER TO supabase_auth_admin;

--
-- Name: TABLE mfa_challenges; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.mfa_challenges IS 'auth: stores metadata about challenge requests made';


--
-- Name: mfa_factors; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.mfa_factors (
    id uuid NOT NULL,
    user_id uuid NOT NULL,
    friendly_name text,
    factor_type auth.factor_type NOT NULL,
    status auth.factor_status NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    secret text,
    phone text,
    last_challenged_at timestamp with time zone,
    web_authn_credential jsonb,
    web_authn_aaguid uuid
);


ALTER TABLE auth.mfa_factors OWNER TO supabase_auth_admin;

--
-- Name: TABLE mfa_factors; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.mfa_factors IS 'auth: stores metadata about factors';


--
-- Name: one_time_tokens; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.one_time_tokens (
    id uuid NOT NULL,
    user_id uuid NOT NULL,
    token_type auth.one_time_token_type NOT NULL,
    token_hash text NOT NULL,
    relates_to text NOT NULL,
    created_at timestamp without time zone DEFAULT now() NOT NULL,
    updated_at timestamp without time zone DEFAULT now() NOT NULL,
    CONSTRAINT one_time_tokens_token_hash_check CHECK ((char_length(token_hash) > 0))
);


ALTER TABLE auth.one_time_tokens OWNER TO supabase_auth_admin;

--
-- Name: refresh_tokens; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.refresh_tokens (
    instance_id uuid,
    id bigint NOT NULL,
    token character varying(255),
    user_id character varying(255),
    revoked boolean,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    parent character varying(255),
    session_id uuid
);


ALTER TABLE auth.refresh_tokens OWNER TO supabase_auth_admin;

--
-- Name: TABLE refresh_tokens; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.refresh_tokens IS 'Auth: Store of tokens used to refresh JWT tokens once they expire.';


--
-- Name: refresh_tokens_id_seq; Type: SEQUENCE; Schema: auth; Owner: supabase_auth_admin
--

CREATE SEQUENCE auth.refresh_tokens_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE auth.refresh_tokens_id_seq OWNER TO supabase_auth_admin;

--
-- Name: refresh_tokens_id_seq; Type: SEQUENCE OWNED BY; Schema: auth; Owner: supabase_auth_admin
--

ALTER SEQUENCE auth.refresh_tokens_id_seq OWNED BY auth.refresh_tokens.id;


--
-- Name: saml_providers; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.saml_providers (
    id uuid NOT NULL,
    sso_provider_id uuid NOT NULL,
    entity_id text NOT NULL,
    metadata_xml text NOT NULL,
    metadata_url text,
    attribute_mapping jsonb,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    name_id_format text,
    CONSTRAINT "entity_id not empty" CHECK ((char_length(entity_id) > 0)),
    CONSTRAINT "metadata_url not empty" CHECK (((metadata_url = NULL::text) OR (char_length(metadata_url) > 0))),
    CONSTRAINT "metadata_xml not empty" CHECK ((char_length(metadata_xml) > 0))
);


ALTER TABLE auth.saml_providers OWNER TO supabase_auth_admin;

--
-- Name: TABLE saml_providers; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.saml_providers IS 'Auth: Manages SAML Identity Provider connections.';


--
-- Name: saml_relay_states; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.saml_relay_states (
    id uuid NOT NULL,
    sso_provider_id uuid NOT NULL,
    request_id text NOT NULL,
    for_email text,
    redirect_to text,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    flow_state_id uuid,
    CONSTRAINT "request_id not empty" CHECK ((char_length(request_id) > 0))
);


ALTER TABLE auth.saml_relay_states OWNER TO supabase_auth_admin;

--
-- Name: TABLE saml_relay_states; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.saml_relay_states IS 'Auth: Contains SAML Relay State information for each Service Provider initiated login.';


--
-- Name: schema_migrations; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.schema_migrations (
    version character varying(255) NOT NULL
);


ALTER TABLE auth.schema_migrations OWNER TO supabase_auth_admin;

--
-- Name: TABLE schema_migrations; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.schema_migrations IS 'Auth: Manages updates to the auth system.';


--
-- Name: sessions; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.sessions (
    id uuid NOT NULL,
    user_id uuid NOT NULL,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    factor_id uuid,
    aal auth.aal_level,
    not_after timestamp with time zone,
    refreshed_at timestamp without time zone,
    user_agent text,
    ip inet,
    tag text
);


ALTER TABLE auth.sessions OWNER TO supabase_auth_admin;

--
-- Name: TABLE sessions; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.sessions IS 'Auth: Stores session data associated to a user.';


--
-- Name: COLUMN sessions.not_after; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON COLUMN auth.sessions.not_after IS 'Auth: Not after is a nullable column that contains a timestamp after which the session should be regarded as expired.';


--
-- Name: sso_domains; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.sso_domains (
    id uuid NOT NULL,
    sso_provider_id uuid NOT NULL,
    domain text NOT NULL,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    CONSTRAINT "domain not empty" CHECK ((char_length(domain) > 0))
);


ALTER TABLE auth.sso_domains OWNER TO supabase_auth_admin;

--
-- Name: TABLE sso_domains; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.sso_domains IS 'Auth: Manages SSO email address domain mapping to an SSO Identity Provider.';


--
-- Name: sso_providers; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.sso_providers (
    id uuid NOT NULL,
    resource_id text,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    disabled boolean,
    CONSTRAINT "resource_id not empty" CHECK (((resource_id = NULL::text) OR (char_length(resource_id) > 0)))
);


ALTER TABLE auth.sso_providers OWNER TO supabase_auth_admin;

--
-- Name: TABLE sso_providers; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.sso_providers IS 'Auth: Manages SSO identity provider information; see saml_providers for SAML.';


--
-- Name: COLUMN sso_providers.resource_id; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON COLUMN auth.sso_providers.resource_id IS 'Auth: Uniquely identifies a SSO provider according to a user-chosen resource ID (case insensitive), useful in infrastructure as code.';


--
-- Name: users; Type: TABLE; Schema: auth; Owner: supabase_auth_admin
--

CREATE TABLE auth.users (
    instance_id uuid,
    id uuid NOT NULL,
    aud character varying(255),
    role character varying(255),
    email character varying(255),
    encrypted_password character varying(255),
    email_confirmed_at timestamp with time zone,
    invited_at timestamp with time zone,
    confirmation_token character varying(255),
    confirmation_sent_at timestamp with time zone,
    recovery_token character varying(255),
    recovery_sent_at timestamp with time zone,
    email_change_token_new character varying(255),
    email_change character varying(255),
    email_change_sent_at timestamp with time zone,
    last_sign_in_at timestamp with time zone,
    raw_app_meta_data jsonb,
    raw_user_meta_data jsonb,
    is_super_admin boolean,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    phone text DEFAULT NULL::character varying,
    phone_confirmed_at timestamp with time zone,
    phone_change text DEFAULT ''::character varying,
    phone_change_token character varying(255) DEFAULT ''::character varying,
    phone_change_sent_at timestamp with time zone,
    confirmed_at timestamp with time zone GENERATED ALWAYS AS (LEAST(email_confirmed_at, phone_confirmed_at)) STORED,
    email_change_token_current character varying(255) DEFAULT ''::character varying,
    email_change_confirm_status smallint DEFAULT 0,
    banned_until timestamp with time zone,
    reauthentication_token character varying(255) DEFAULT ''::character varying,
    reauthentication_sent_at timestamp with time zone,
    is_sso_user boolean DEFAULT false NOT NULL,
    deleted_at timestamp with time zone,
    is_anonymous boolean DEFAULT false NOT NULL,
    CONSTRAINT users_email_change_confirm_status_check CHECK (((email_change_confirm_status >= 0) AND (email_change_confirm_status <= 2)))
);


ALTER TABLE auth.users OWNER TO supabase_auth_admin;

--
-- Name: TABLE users; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON TABLE auth.users IS 'Auth: Stores user login data within a secure schema.';


--
-- Name: COLUMN users.is_sso_user; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON COLUMN auth.users.is_sso_user IS 'Auth: Set this column to true when the account comes from SSO. These accounts can have duplicate emails.';


--
-- Name: billing_events; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.billing_events (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    organization_id uuid NOT NULL,
    event_type text NOT NULL,
    user_id uuid,
    event_data jsonb DEFAULT '{}'::jsonb,
    amount_change numeric(10,2) DEFAULT 0,
    effective_date timestamp with time zone DEFAULT now() NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    processed boolean DEFAULT false,
    CONSTRAINT billing_events_event_type_check CHECK ((event_type = ANY (ARRAY['member_added'::text, 'member_removed'::text, 'plan_upgraded'::text, 'plan_downgraded'::text, 'storage_used'::text, 'feature_enabled'::text, 'feature_disabled'::text])))
);


ALTER TABLE public.billing_events OWNER TO postgres;

--
-- Name: billing_exemptions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.billing_exemptions (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    organization_id uuid NOT NULL,
    exemption_type text DEFAULT 'user_licenses'::text NOT NULL,
    exemption_value integer DEFAULT 0 NOT NULL,
    reason text,
    granted_by uuid,
    granted_at timestamp with time zone DEFAULT now() NOT NULL,
    expires_at timestamp with time zone,
    is_active boolean DEFAULT true NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.billing_exemptions OWNER TO postgres;

--
-- Name: TABLE billing_exemptions; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.billing_exemptions IS 'Billing exemptions table - Access restricted to organization admins only for security';


--
-- Name: billing_usage; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.billing_usage (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    organization_id uuid,
    usage_type text NOT NULL,
    usage_value integer NOT NULL,
    billing_period_start timestamp with time zone NOT NULL,
    billing_period_end timestamp with time zone NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.billing_usage OWNER TO postgres;

--
-- Name: customer_contacts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.customer_contacts (
    customer_id uuid NOT NULL,
    user_id uuid NOT NULL,
    role text NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    CONSTRAINT customer_contacts_role_check CHECK ((role = ANY (ARRAY['customer_viewer'::text, 'customer_requestor'::text, 'customer_manager'::text])))
);


ALTER TABLE public.customer_contacts OWNER TO postgres;

--
-- Name: customer_sites; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.customer_sites (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    customer_id uuid NOT NULL,
    name text,
    address jsonb,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.customer_sites OWNER TO postgres;

--
-- Name: customers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.customers (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    organization_id uuid NOT NULL,
    name text NOT NULL,
    status text DEFAULT 'active'::text NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.customers OWNER TO postgres;

--
-- Name: equipment; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.equipment (
    id uuid DEFAULT extensions.uuid_generate_v4() NOT NULL,
    organization_id uuid NOT NULL,
    name text NOT NULL,
    manufacturer text NOT NULL,
    model text NOT NULL,
    serial_number text NOT NULL,
    status public.equipment_status DEFAULT 'active'::public.equipment_status NOT NULL,
    location text NOT NULL,
    installation_date date NOT NULL,
    warranty_expiration date,
    last_maintenance date,
    notes text,
    image_url text,
    custom_attributes jsonb DEFAULT '{}'::jsonb,
    last_known_location jsonb,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    team_id uuid,
    working_hours numeric DEFAULT 0,
    default_pm_template_id uuid,
    import_id text,
    customer_id uuid
);


ALTER TABLE public.equipment OWNER TO postgres;

--
-- Name: equipment_note_images; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.equipment_note_images (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    equipment_note_id uuid NOT NULL,
    file_name text NOT NULL,
    file_url text NOT NULL,
    file_size integer,
    mime_type text,
    description text,
    uploaded_by uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    uploaded_by_name text
);


ALTER TABLE public.equipment_note_images OWNER TO postgres;

--
-- Name: equipment_notes; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.equipment_notes (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    equipment_id uuid NOT NULL,
    content text NOT NULL,
    author_id uuid NOT NULL,
    is_private boolean DEFAULT false NOT NULL,
    hours_worked numeric DEFAULT 0,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    last_modified_by uuid,
    last_modified_at timestamp with time zone DEFAULT now(),
    author_name text
);


ALTER TABLE public.equipment_notes OWNER TO postgres;

--
-- Name: equipment_working_hours_history; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.equipment_working_hours_history (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    equipment_id uuid NOT NULL,
    old_hours numeric,
    new_hours numeric NOT NULL,
    hours_added numeric,
    updated_by uuid NOT NULL,
    updated_by_name text,
    update_source text DEFAULT 'manual'::text NOT NULL,
    work_order_id uuid,
    notes text,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.equipment_working_hours_history OWNER TO postgres;

--
-- Name: geocoded_locations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.geocoded_locations (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    organization_id uuid NOT NULL,
    input_text text NOT NULL,
    normalized_text text NOT NULL,
    latitude double precision NOT NULL,
    longitude double precision NOT NULL,
    formatted_address text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.geocoded_locations OWNER TO postgres;

--
-- Name: invitation_performance_logs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.invitation_performance_logs (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    function_name text NOT NULL,
    execution_time_ms numeric NOT NULL,
    success boolean NOT NULL,
    error_message text,
    created_at timestamp with time zone DEFAULT now()
);


ALTER TABLE public.invitation_performance_logs OWNER TO postgres;

--
-- Name: member_removal_audit; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.member_removal_audit (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    organization_id uuid NOT NULL,
    removed_user_id uuid NOT NULL,
    removed_user_name text NOT NULL,
    removed_user_role text NOT NULL,
    removed_by uuid NOT NULL,
    teams_transferred integer DEFAULT 0,
    new_manager_id uuid,
    removal_reason text,
    created_at timestamp with time zone DEFAULT now(),
    metadata jsonb DEFAULT '{}'::jsonb
);


ALTER TABLE public.member_removal_audit OWNER TO postgres;

--
-- Name: notes; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.notes (
    id uuid DEFAULT extensions.uuid_generate_v4() NOT NULL,
    equipment_id uuid NOT NULL,
    content text NOT NULL,
    author_id uuid NOT NULL,
    is_private boolean DEFAULT false NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.notes OWNER TO postgres;

--
-- Name: notification_preferences; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.notification_preferences (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    user_id uuid NOT NULL,
    email_invitations boolean DEFAULT true,
    email_work_orders boolean DEFAULT true,
    email_equipment_alerts boolean DEFAULT true,
    email_billing boolean DEFAULT true,
    push_notifications boolean DEFAULT true,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.notification_preferences OWNER TO postgres;

--
-- Name: notifications; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.notifications (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    organization_id uuid NOT NULL,
    user_id uuid NOT NULL,
    type text NOT NULL,
    title text NOT NULL,
    message text NOT NULL,
    data jsonb DEFAULT '{}'::jsonb,
    read boolean DEFAULT false NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    CONSTRAINT notifications_type_check CHECK ((type = ANY (ARRAY['work_order_request'::text, 'work_order_accepted'::text, 'work_order_assigned'::text, 'work_order_completed'::text, 'general'::text])))
);


ALTER TABLE public.notifications OWNER TO postgres;

--
-- Name: organization_invitations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.organization_invitations (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    organization_id uuid NOT NULL,
    email text NOT NULL,
    role text NOT NULL,
    invited_by uuid NOT NULL,
    status text DEFAULT 'pending'::text NOT NULL,
    message text,
    invitation_token uuid DEFAULT gen_random_uuid() NOT NULL,
    expires_at timestamp with time zone DEFAULT (now() + '7 days'::interval) NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    accepted_at timestamp with time zone,
    accepted_by uuid,
    slot_reserved boolean DEFAULT false,
    slot_purchase_id uuid,
    declined_at timestamp with time zone,
    expired_at timestamp with time zone,
    offers_account_creation boolean DEFAULT false,
    CONSTRAINT organization_invitations_role_check CHECK ((role = ANY (ARRAY['admin'::text, 'member'::text]))),
    CONSTRAINT organization_invitations_status_check CHECK ((status = ANY (ARRAY['pending'::text, 'accepted'::text, 'declined'::text, 'expired'::text])))
);


ALTER TABLE public.organization_invitations OWNER TO postgres;

--
-- Name: TABLE organization_invitations; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.organization_invitations IS 'RLS policies updated to use security definer functions to prevent circular dependencies';


--
-- Name: organization_members; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.organization_members (
    id uuid DEFAULT extensions.uuid_generate_v4() NOT NULL,
    organization_id uuid NOT NULL,
    user_id uuid NOT NULL,
    role text DEFAULT 'member'::text NOT NULL,
    status text DEFAULT 'active'::text NOT NULL,
    joined_date timestamp with time zone DEFAULT now() NOT NULL,
    slot_purchase_id uuid,
    activated_slot_at timestamp with time zone
);

ALTER TABLE ONLY public.organization_members REPLICA IDENTITY FULL;


ALTER TABLE public.organization_members OWNER TO postgres;

--
-- Name: TABLE organization_members; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.organization_members IS 'RLS simplified to prevent circular dependency. Admin permissions handled at application level.';


--
-- Name: organization_slots; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.organization_slots (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    organization_id uuid NOT NULL,
    slot_type text DEFAULT 'user_license'::text NOT NULL,
    purchased_slots integer DEFAULT 0 NOT NULL,
    used_slots integer DEFAULT 0 NOT NULL,
    billing_period_start timestamp with time zone NOT NULL,
    billing_period_end timestamp with time zone NOT NULL,
    stripe_payment_intent_id text,
    amount_paid_cents integer DEFAULT 0 NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    stripe_subscription_id text,
    stripe_price_id text,
    auto_renew boolean DEFAULT true
);

ALTER TABLE ONLY public.organization_slots REPLICA IDENTITY FULL;


ALTER TABLE public.organization_slots OWNER TO postgres;

--
-- Name: organization_subscriptions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.organization_subscriptions (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    organization_id uuid,
    stripe_subscription_id text,
    status text DEFAULT 'active'::text NOT NULL,
    feature_type text NOT NULL,
    quantity integer DEFAULT 1,
    unit_price_cents integer NOT NULL,
    billing_cycle text DEFAULT 'monthly'::text NOT NULL,
    current_period_start timestamp with time zone,
    current_period_end timestamp with time zone,
    cancel_at_period_end boolean DEFAULT false,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.organization_subscriptions OWNER TO postgres;

--
-- Name: organizations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.organizations (
    id uuid DEFAULT extensions.uuid_generate_v4() NOT NULL,
    name text NOT NULL,
    plan public.organization_plan DEFAULT 'free'::public.organization_plan NOT NULL,
    member_count integer DEFAULT 1 NOT NULL,
    max_members integer DEFAULT 5 NOT NULL,
    features text[] DEFAULT ARRAY['Equipment Management'::text, 'Work Orders'::text, 'Team Management'::text] NOT NULL,
    billing_cycle text,
    next_billing_date timestamp with time zone,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    billable_members integer DEFAULT 0,
    storage_used_mb integer DEFAULT 0,
    fleet_map_enabled boolean DEFAULT false,
    last_billing_calculation timestamp with time zone DEFAULT now(),
    logo text,
    background_color text,
    customers_feature_enabled boolean DEFAULT false
);


ALTER TABLE public.organizations OWNER TO postgres;

--
-- Name: COLUMN organizations.logo; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.organizations.logo IS 'URL or path to organization logo image';


--
-- Name: COLUMN organizations.background_color; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.organizations.background_color IS 'Hex color code for organization branding (e.g., #ff0000)';


--
-- Name: pm_checklist_templates; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.pm_checklist_templates (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    organization_id uuid,
    name text NOT NULL,
    description text,
    is_protected boolean DEFAULT false NOT NULL,
    template_data jsonb DEFAULT '[]'::jsonb NOT NULL,
    created_by uuid NOT NULL,
    updated_by uuid,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.pm_checklist_templates OWNER TO postgres;

--
-- Name: pm_status_history; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.pm_status_history (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    pm_id uuid NOT NULL,
    old_status text,
    new_status text NOT NULL,
    changed_by uuid NOT NULL,
    changed_at timestamp with time zone DEFAULT now() NOT NULL,
    reason text,
    metadata jsonb DEFAULT '{}'::jsonb,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.pm_status_history OWNER TO postgres;

--
-- Name: preventative_maintenance; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.preventative_maintenance (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    work_order_id uuid NOT NULL,
    equipment_id uuid NOT NULL,
    organization_id uuid NOT NULL,
    created_by uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    completed_at timestamp with time zone,
    completed_by uuid,
    status text DEFAULT 'pending'::text NOT NULL,
    checklist_data jsonb DEFAULT '[]'::jsonb NOT NULL,
    notes text,
    is_historical boolean DEFAULT false NOT NULL,
    historical_completion_date timestamp with time zone,
    historical_notes text,
    template_id uuid,
    CONSTRAINT preventative_maintenance_status_check CHECK ((status = ANY (ARRAY['pending'::text, 'in_progress'::text, 'completed'::text, 'cancelled'::text])))
);


ALTER TABLE public.preventative_maintenance OWNER TO postgres;

--
-- Name: profiles; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.profiles (
    id uuid NOT NULL,
    email text,
    name text NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    email_private boolean DEFAULT false
);

ALTER TABLE ONLY public.profiles REPLICA IDENTITY FULL;


ALTER TABLE public.profiles OWNER TO postgres;

--
-- Name: TABLE profiles; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.profiles IS 'User profiles table - Access restricted to users own profile and organization members only for security';


--
-- Name: COLUMN profiles.email_private; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.profiles.email_private IS 'When true, email is hidden from organization members (except admins). Default: false (email visible to org members)';


--
-- Name: scans; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.scans (
    id uuid DEFAULT extensions.uuid_generate_v4() NOT NULL,
    equipment_id uuid NOT NULL,
    scanned_by uuid NOT NULL,
    scanned_at timestamp with time zone DEFAULT now() NOT NULL,
    location text,
    notes text
);


ALTER TABLE public.scans OWNER TO postgres;

--
-- Name: slot_purchases; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.slot_purchases (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    organization_id uuid NOT NULL,
    purchased_by uuid NOT NULL,
    slot_type text DEFAULT 'user_license'::text NOT NULL,
    quantity integer NOT NULL,
    unit_price_cents integer DEFAULT 1000 NOT NULL,
    total_amount_cents integer NOT NULL,
    stripe_payment_intent_id text,
    stripe_session_id text,
    billing_period_start timestamp with time zone NOT NULL,
    billing_period_end timestamp with time zone NOT NULL,
    status text DEFAULT 'pending'::text NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.slot_purchases OWNER TO postgres;

--
-- Name: stripe_event_logs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.stripe_event_logs (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    event_id text NOT NULL,
    type text NOT NULL,
    subscription_id text,
    payload jsonb,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.stripe_event_logs OWNER TO postgres;

--
-- Name: subscribers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.subscribers (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    user_id uuid,
    email text NOT NULL,
    stripe_customer_id text,
    subscribed boolean DEFAULT false NOT NULL,
    subscription_tier text,
    subscription_end timestamp with time zone,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.subscribers OWNER TO postgres;

--
-- Name: team_members; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.team_members (
    id uuid DEFAULT extensions.uuid_generate_v4() NOT NULL,
    team_id uuid NOT NULL,
    user_id uuid NOT NULL,
    role public.team_member_role DEFAULT 'technician'::public.team_member_role NOT NULL,
    joined_date timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.team_members OWNER TO postgres;

--
-- Name: teams; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.teams (
    id uuid DEFAULT extensions.uuid_generate_v4() NOT NULL,
    organization_id uuid NOT NULL,
    name text NOT NULL,
    description text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.teams OWNER TO postgres;

--
-- Name: user_license_subscriptions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.user_license_subscriptions (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    organization_id uuid NOT NULL,
    stripe_subscription_id text NOT NULL,
    stripe_customer_id text NOT NULL,
    stripe_price_id text NOT NULL,
    quantity integer DEFAULT 1 NOT NULL,
    status text DEFAULT 'active'::text NOT NULL,
    current_period_start timestamp with time zone NOT NULL,
    current_period_end timestamp with time zone NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.user_license_subscriptions OWNER TO postgres;

--
-- Name: webhook_events; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.webhook_events (
    event_id text NOT NULL,
    processed_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.webhook_events OWNER TO postgres;

--
-- Name: TABLE webhook_events; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.webhook_events IS 'Idempotency gate for external webhooks (e.g., Stripe). A row per processed event_id.';


--
-- Name: work_order_costs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.work_order_costs (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    work_order_id uuid NOT NULL,
    description text NOT NULL,
    quantity numeric(10,2) DEFAULT 1 NOT NULL,
    unit_price_cents integer DEFAULT 0 NOT NULL,
    total_price_cents integer GENERATED ALWAYS AS (round((quantity * (unit_price_cents)::numeric))) STORED,
    created_by uuid NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    CONSTRAINT work_order_costs_quantity_check CHECK ((quantity > (0)::numeric)),
    CONSTRAINT work_order_costs_unit_price_cents_check CHECK ((unit_price_cents >= 0))
);


ALTER TABLE public.work_order_costs OWNER TO postgres;

--
-- Name: work_order_images; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.work_order_images (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    work_order_id uuid NOT NULL,
    uploaded_by uuid NOT NULL,
    file_name text NOT NULL,
    file_url text NOT NULL,
    file_size integer,
    mime_type text,
    description text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    note_id uuid,
    uploaded_by_name text
);


ALTER TABLE public.work_order_images OWNER TO postgres;

--
-- Name: work_order_notes; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.work_order_notes (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    work_order_id uuid NOT NULL,
    author_id uuid NOT NULL,
    content text NOT NULL,
    hours_worked numeric(5,2) DEFAULT 0,
    is_private boolean DEFAULT false NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    author_name text
);


ALTER TABLE public.work_order_notes OWNER TO postgres;

--
-- Name: work_order_status_history; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.work_order_status_history (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    work_order_id uuid NOT NULL,
    old_status public.work_order_status,
    new_status public.work_order_status NOT NULL,
    changed_by uuid NOT NULL,
    changed_at timestamp with time zone DEFAULT now() NOT NULL,
    reason text,
    metadata jsonb DEFAULT '{}'::jsonb,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    is_historical_creation boolean DEFAULT false
);


ALTER TABLE public.work_order_status_history OWNER TO postgres;

--
-- Name: work_orders; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.work_orders (
    id uuid DEFAULT extensions.uuid_generate_v4() NOT NULL,
    organization_id uuid NOT NULL,
    equipment_id uuid NOT NULL,
    title text NOT NULL,
    description text NOT NULL,
    priority public.work_order_priority DEFAULT 'medium'::public.work_order_priority NOT NULL,
    status public.work_order_status DEFAULT 'submitted'::public.work_order_status NOT NULL,
    assignee_id uuid,
    created_by uuid NOT NULL,
    created_date timestamp with time zone DEFAULT now() NOT NULL,
    due_date timestamp with time zone,
    estimated_hours integer,
    completed_date timestamp with time zone,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    acceptance_date timestamp with time zone,
    has_pm boolean DEFAULT false NOT NULL,
    pm_required boolean DEFAULT false NOT NULL,
    created_by_name text,
    assignee_name text,
    is_historical boolean DEFAULT false NOT NULL,
    historical_start_date timestamp with time zone,
    historical_notes text,
    created_by_admin uuid,
    team_id uuid
);


ALTER TABLE public.work_orders OWNER TO postgres;

--
-- Name: messages; Type: TABLE; Schema: realtime; Owner: supabase_realtime_admin
--

CREATE TABLE realtime.messages (
    topic text NOT NULL,
    extension text NOT NULL,
    payload jsonb,
    event text,
    private boolean DEFAULT false,
    updated_at timestamp without time zone DEFAULT now() NOT NULL,
    inserted_at timestamp without time zone DEFAULT now() NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL
)
PARTITION BY RANGE (inserted_at);


ALTER TABLE realtime.messages OWNER TO supabase_realtime_admin;

--
-- Name: messages_2025_07_17; Type: TABLE; Schema: realtime; Owner: supabase_admin
--

CREATE TABLE realtime.messages_2025_07_17 (
    topic text NOT NULL,
    extension text NOT NULL,
    payload jsonb,
    event text,
    private boolean DEFAULT false,
    updated_at timestamp without time zone DEFAULT now() NOT NULL,
    inserted_at timestamp without time zone DEFAULT now() NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE realtime.messages_2025_07_17 OWNER TO supabase_admin;

--
-- Name: messages_2025_07_18; Type: TABLE; Schema: realtime; Owner: supabase_admin
--

CREATE TABLE realtime.messages_2025_07_18 (
    topic text NOT NULL,
    extension text NOT NULL,
    payload jsonb,
    event text,
    private boolean DEFAULT false,
    updated_at timestamp without time zone DEFAULT now() NOT NULL,
    inserted_at timestamp without time zone DEFAULT now() NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE realtime.messages_2025_07_18 OWNER TO supabase_admin;

--
-- Name: messages_2025_07_19; Type: TABLE; Schema: realtime; Owner: supabase_admin
--

CREATE TABLE realtime.messages_2025_07_19 (
    topic text NOT NULL,
    extension text NOT NULL,
    payload jsonb,
    event text,
    private boolean DEFAULT false,
    updated_at timestamp without time zone DEFAULT now() NOT NULL,
    inserted_at timestamp without time zone DEFAULT now() NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE realtime.messages_2025_07_19 OWNER TO supabase_admin;

--
-- Name: messages_2025_07_20; Type: TABLE; Schema: realtime; Owner: supabase_admin
--

CREATE TABLE realtime.messages_2025_07_20 (
    topic text NOT NULL,
    extension text NOT NULL,
    payload jsonb,
    event text,
    private boolean DEFAULT false,
    updated_at timestamp without time zone DEFAULT now() NOT NULL,
    inserted_at timestamp without time zone DEFAULT now() NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE realtime.messages_2025_07_20 OWNER TO supabase_admin;

--
-- Name: messages_2025_07_21; Type: TABLE; Schema: realtime; Owner: supabase_admin
--

CREATE TABLE realtime.messages_2025_07_21 (
    topic text NOT NULL,
    extension text NOT NULL,
    payload jsonb,
    event text,
    private boolean DEFAULT false,
    updated_at timestamp without time zone DEFAULT now() NOT NULL,
    inserted_at timestamp without time zone DEFAULT now() NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE realtime.messages_2025_07_21 OWNER TO supabase_admin;

--
-- Name: schema_migrations; Type: TABLE; Schema: realtime; Owner: supabase_admin
--

CREATE TABLE realtime.schema_migrations (
    version bigint NOT NULL,
    inserted_at timestamp(0) without time zone
);


ALTER TABLE realtime.schema_migrations OWNER TO supabase_admin;

--
-- Name: subscription; Type: TABLE; Schema: realtime; Owner: supabase_admin
--

CREATE TABLE realtime.subscription (
    id bigint NOT NULL,
    subscription_id uuid NOT NULL,
    entity regclass NOT NULL,
    filters realtime.user_defined_filter[] DEFAULT '{}'::realtime.user_defined_filter[] NOT NULL,
    claims jsonb NOT NULL,
    claims_role regrole GENERATED ALWAYS AS (realtime.to_regrole((claims ->> 'role'::text))) STORED NOT NULL,
    created_at timestamp without time zone DEFAULT timezone('utc'::text, now()) NOT NULL
);


ALTER TABLE realtime.subscription OWNER TO supabase_admin;

--
-- Name: subscription_id_seq; Type: SEQUENCE; Schema: realtime; Owner: supabase_admin
--

ALTER TABLE realtime.subscription ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME realtime.subscription_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: buckets; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.buckets (
    id text NOT NULL,
    name text NOT NULL,
    owner uuid,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    public boolean DEFAULT false,
    avif_autodetection boolean DEFAULT false,
    file_size_limit bigint,
    allowed_mime_types text[],
    owner_id text,
    type storage.buckettype DEFAULT 'STANDARD'::storage.buckettype NOT NULL
);


ALTER TABLE storage.buckets OWNER TO supabase_storage_admin;

--
-- Name: COLUMN buckets.owner; Type: COMMENT; Schema: storage; Owner: supabase_storage_admin
--

COMMENT ON COLUMN storage.buckets.owner IS 'Field is deprecated, use owner_id instead';


--
-- Name: buckets_analytics; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.buckets_analytics (
    id text NOT NULL,
    type storage.buckettype DEFAULT 'ANALYTICS'::storage.buckettype NOT NULL,
    format text DEFAULT 'ICEBERG'::text NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE storage.buckets_analytics OWNER TO supabase_storage_admin;

--
-- Name: migrations; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.migrations (
    id integer NOT NULL,
    name character varying(100) NOT NULL,
    hash character varying(40) NOT NULL,
    executed_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE storage.migrations OWNER TO supabase_storage_admin;

--
-- Name: objects; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.objects (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    bucket_id text,
    name text,
    owner uuid,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    last_accessed_at timestamp with time zone DEFAULT now(),
    metadata jsonb,
    path_tokens text[] GENERATED ALWAYS AS (string_to_array(name, '/'::text)) STORED,
    version text,
    owner_id text,
    user_metadata jsonb,
    level integer
);


ALTER TABLE storage.objects OWNER TO supabase_storage_admin;

--
-- Name: COLUMN objects.owner; Type: COMMENT; Schema: storage; Owner: supabase_storage_admin
--

COMMENT ON COLUMN storage.objects.owner IS 'Field is deprecated, use owner_id instead';


--
-- Name: prefixes; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.prefixes (
    bucket_id text NOT NULL,
    name text NOT NULL COLLATE pg_catalog."C",
    level integer GENERATED ALWAYS AS (storage.get_level(name)) STORED NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now()
);


ALTER TABLE storage.prefixes OWNER TO supabase_storage_admin;

--
-- Name: s3_multipart_uploads; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.s3_multipart_uploads (
    id text NOT NULL,
    in_progress_size bigint DEFAULT 0 NOT NULL,
    upload_signature text NOT NULL,
    bucket_id text NOT NULL,
    key text NOT NULL COLLATE pg_catalog."C",
    version text NOT NULL,
    owner_id text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    user_metadata jsonb
);


ALTER TABLE storage.s3_multipart_uploads OWNER TO supabase_storage_admin;

--
-- Name: s3_multipart_uploads_parts; Type: TABLE; Schema: storage; Owner: supabase_storage_admin
--

CREATE TABLE storage.s3_multipart_uploads_parts (
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    upload_id text NOT NULL,
    size bigint DEFAULT 0 NOT NULL,
    part_number integer NOT NULL,
    bucket_id text NOT NULL,
    key text NOT NULL COLLATE pg_catalog."C",
    etag text NOT NULL,
    owner_id text,
    version text NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);


ALTER TABLE storage.s3_multipart_uploads_parts OWNER TO supabase_storage_admin;

--
-- Name: schema_migrations; Type: TABLE; Schema: supabase_migrations; Owner: postgres
--

CREATE TABLE supabase_migrations.schema_migrations (
    version text NOT NULL,
    statements text[],
    name text,
    created_by text,
    idempotency_key text
);


ALTER TABLE supabase_migrations.schema_migrations OWNER TO postgres;

--
-- Name: messages_2025_07_17; Type: TABLE ATTACH; Schema: realtime; Owner: supabase_admin
--

ALTER TABLE ONLY realtime.messages ATTACH PARTITION realtime.messages_2025_07_17 FOR VALUES FROM ('2025-07-17 00:00:00') TO ('2025-07-18 00:00:00');


--
-- Name: messages_2025_07_18; Type: TABLE ATTACH; Schema: realtime; Owner: supabase_admin
--

ALTER TABLE ONLY realtime.messages ATTACH PARTITION realtime.messages_2025_07_18 FOR VALUES FROM ('2025-07-18 00:00:00') TO ('2025-07-19 00:00:00');


--
-- Name: messages_2025_07_19; Type: TABLE ATTACH; Schema: realtime; Owner: supabase_admin
--

ALTER TABLE ONLY realtime.messages ATTACH PARTITION realtime.messages_2025_07_19 FOR VALUES FROM ('2025-07-19 00:00:00') TO ('2025-07-20 00:00:00');


--
-- Name: messages_2025_07_20; Type: TABLE ATTACH; Schema: realtime; Owner: supabase_admin
--

ALTER TABLE ONLY realtime.messages ATTACH PARTITION realtime.messages_2025_07_20 FOR VALUES FROM ('2025-07-20 00:00:00') TO ('2025-07-21 00:00:00');


--
-- Name: messages_2025_07_21; Type: TABLE ATTACH; Schema: realtime; Owner: supabase_admin
--

ALTER TABLE ONLY realtime.messages ATTACH PARTITION realtime.messages_2025_07_21 FOR VALUES FROM ('2025-07-21 00:00:00') TO ('2025-07-22 00:00:00');


--
-- Name: refresh_tokens id; Type: DEFAULT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.refresh_tokens ALTER COLUMN id SET DEFAULT nextval('auth.refresh_tokens_id_seq'::regclass);


--
-- Data for Name: audit_log_entries; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.audit_log_entries (instance_id, id, payload, created_at, ip_address) FROM stdin;
00000000-0000-0000-0000-000000000000	a1e066ca-37d2-44ec-b1ac-6b20e285f08f	{"action":"user_signedup","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"team","traits":{"provider":"email"}}	2025-06-17 14:46:52.823568+00	
00000000-0000-0000-0000-000000000000	76053e3a-3c22-4b6d-9c67-7daee5729a0e	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-17 14:46:52.831024+00	
00000000-0000-0000-0000-000000000000	7efc9c70-2475-406e-bb0f-eb78f3b04f4d	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-17 14:48:08.822168+00	
00000000-0000-0000-0000-000000000000	5579fd22-4b22-4a11-855c-d2c96eb0f044	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-17 15:01:32.077677+00	
00000000-0000-0000-0000-000000000000	d33f5004-ee4a-4455-ab33-7240951b4dba	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-06-17 15:02:07.71142+00	
00000000-0000-0000-0000-000000000000	c2211fd2-7f54-42fe-ae75-b4124b42216e	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-17 15:02:16.52126+00	
00000000-0000-0000-0000-000000000000	3b41c812-f73b-4a80-81b1-b61c02c18039	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-06-17 15:05:27.898865+00	
00000000-0000-0000-0000-000000000000	1b4050c0-a262-4cb0-afd2-2ac787333d46	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-17 15:20:29.573537+00	
00000000-0000-0000-0000-000000000000	b31d5da7-49d2-49e7-b197-9c1c44c74eaf	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-06-17 15:26:33.531032+00	
00000000-0000-0000-0000-000000000000	1e84e784-4dd7-4e77-b683-0a4076ed0ede	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-17 15:30:29.272362+00	
00000000-0000-0000-0000-000000000000	2191d861-c602-4716-be1a-dbbb89d97ab0	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-06-17 15:37:55.465949+00	
00000000-0000-0000-0000-000000000000	b69623c2-1a59-4fce-9750-01c81e94705c	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-17 15:47:04.538464+00	
00000000-0000-0000-0000-000000000000	8108a6e9-9f68-404d-a6a3-d2696bbe631c	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-06-17 15:47:29.693829+00	
00000000-0000-0000-0000-000000000000	4c4b9fdd-91c1-445d-8a2e-126d8d97bb11	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-17 15:47:38.120841+00	
00000000-0000-0000-0000-000000000000	04c8a2cd-29e6-4806-a69e-79fab4e1b500	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-17 15:54:23.062736+00	
00000000-0000-0000-0000-000000000000	5dd32c25-2ccc-4c3e-9de3-487aa5ce8036	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-06-17 15:54:46.546945+00	
00000000-0000-0000-0000-000000000000	e346b53c-d989-477d-935f-86819744c454	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-17 15:55:02.7624+00	
00000000-0000-0000-0000-000000000000	879097ae-9b10-4245-94a2-3dc9ea797b32	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-06-17 16:23:38.470432+00	
00000000-0000-0000-0000-000000000000	9f25f268-d479-45c4-af59-78aeb7db2e74	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-17 16:41:38.019785+00	
00000000-0000-0000-0000-000000000000	70930c49-fc04-4d88-bd01-4520bfca129d	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-06-17 16:42:05.663922+00	
00000000-0000-0000-0000-000000000000	b8d330d4-fc1a-4a13-b6c3-e467ac35d9b0	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-17 16:48:30.449802+00	
00000000-0000-0000-0000-000000000000	a8954a14-ab56-47bc-95ae-1f7628803396	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-06-17 16:50:01.081278+00	
00000000-0000-0000-0000-000000000000	51cebdec-498f-4786-9148-bab63a260167	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-17 16:59:15.918049+00	
00000000-0000-0000-0000-000000000000	b51201e1-0251-4b38-9f0f-ded17bfd0dc9	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-06-17 16:59:21.051721+00	
00000000-0000-0000-0000-000000000000	e8f58577-0879-4373-94f3-64ad0c09979e	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-17 17:04:28.597894+00	
00000000-0000-0000-0000-000000000000	0a7b01a5-93f7-4f14-8a95-e4a442ca8404	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-06-17 17:15:42.289746+00	
00000000-0000-0000-0000-000000000000	47ca6a51-2c53-4a8e-9f53-b76aee906bad	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-17 17:18:30.232436+00	
00000000-0000-0000-0000-000000000000	22c77673-4f4b-4ade-bda0-99a526c15a2e	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-06-17 17:36:30.150226+00	
00000000-0000-0000-0000-000000000000	00f61107-ec97-4c1f-b57b-f340c1251435	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-17 17:36:42.825336+00	
00000000-0000-0000-0000-000000000000	69839555-b819-4426-941b-edcdb99bc3e5	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-17 17:38:30.120658+00	
00000000-0000-0000-0000-000000000000	c0c654a7-c692-478d-a550-2bd4c9869d35	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-06-17 17:48:00.012134+00	
00000000-0000-0000-0000-000000000000	d77f8552-51d3-49c8-b199-9d7321fa2826	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-17 17:48:40.242489+00	
00000000-0000-0000-0000-000000000000	1a3bd0e0-b499-4fbe-b45a-df7ceed082db	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-06-17 17:53:10.236792+00	
00000000-0000-0000-0000-000000000000	402827b1-9b9d-4fdf-a46a-d81a20496e1a	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-17 17:57:37.241497+00	
00000000-0000-0000-0000-000000000000	3499d781-21ec-4f18-9544-72272ac63b62	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-17 18:25:34.652059+00	
00000000-0000-0000-0000-000000000000	81ea2af3-4dba-47a8-9a64-37c0df2c35ed	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-17 18:57:22.507103+00	
00000000-0000-0000-0000-000000000000	da7458ef-8263-486a-8fc3-93e22cada815	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-17 18:57:22.508064+00	
00000000-0000-0000-0000-000000000000	1bcc9196-b742-4945-9471-c0ddf529a22c	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-17 19:24:12.87891+00	
00000000-0000-0000-0000-000000000000	b627b46a-f1a7-4a63-a69e-d0b4cf8ca75f	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-17 19:24:12.879785+00	
00000000-0000-0000-0000-000000000000	c5839269-cf58-48d4-b26e-cb2f16dc29c6	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-18 16:57:35.355124+00	
00000000-0000-0000-0000-000000000000	847a5923-025a-4038-98f1-fc7adfd7d1ee	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-18 16:57:35.357084+00	
00000000-0000-0000-0000-000000000000	f4d77da6-4298-4689-a215-9b164b420b30	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-18 16:58:38.792304+00	
00000000-0000-0000-0000-000000000000	251665bd-4340-42f8-b0d1-b7bf1a301cb7	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-18 16:58:38.793212+00	
00000000-0000-0000-0000-000000000000	6f369f2e-7181-4d3d-b365-cf4a8a012ec3	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-06-18 17:39:02.900478+00	
00000000-0000-0000-0000-000000000000	b7d5728b-206e-4d5b-ba60-7ae10bbee9da	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-18 17:59:58.790788+00	
00000000-0000-0000-0000-000000000000	e453bf21-9c35-4c25-a555-bb87f1c61690	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-06-18 18:00:24.618556+00	
00000000-0000-0000-0000-000000000000	9649d8c7-6ab9-43af-992a-7ecf9cc6690d	{"action":"user_signedup","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"team","traits":{"provider":"google"}}	2025-06-18 18:08:12.484307+00	
00000000-0000-0000-0000-000000000000	8d4e6931-5777-41dd-89cb-6f59bd0b410f	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-06-18 18:12:50.585931+00	
00000000-0000-0000-0000-000000000000	7a6d4528-3b34-458e-b72f-4a543b17024e	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-06-18 20:17:05.363982+00	
00000000-0000-0000-0000-000000000000	7a62bddc-1891-4de5-a679-a7ba556094f0	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-06-18 20:17:35.809517+00	
00000000-0000-0000-0000-000000000000	48fa2662-ae47-48a7-b44b-b40701d18c84	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-18 20:17:49.790519+00	
00000000-0000-0000-0000-000000000000	241db511-b692-437b-8f1d-5c444fffa300	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-06-18 20:51:28.935366+00	
00000000-0000-0000-0000-000000000000	ce115b00-8fd9-4096-8cd7-ff8cf872ec8d	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-06-18 20:52:05.595365+00	
00000000-0000-0000-0000-000000000000	f9210e0f-b001-4e67-adad-ef2b29a99180	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-06-18 21:53:54.133403+00	
00000000-0000-0000-0000-000000000000	7b2f9fb7-a5e4-472a-9c27-20488875a37d	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-06-18 21:53:54.134921+00	
00000000-0000-0000-0000-000000000000	46acac3c-087b-48c9-8c8d-36033a0fc1f5	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-18 21:56:09.705628+00	
00000000-0000-0000-0000-000000000000	75257535-4a0a-47a0-bd87-e18663f39c47	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-06-18 21:57:16.063308+00	
00000000-0000-0000-0000-000000000000	ec08c7fd-a5c2-4416-bd63-e797d702a593	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-06-18 21:57:32.406359+00	
00000000-0000-0000-0000-000000000000	bc850ed0-1824-4799-aa55-dcb180c5bf48	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-19 04:13:34.187914+00	
00000000-0000-0000-0000-000000000000	96b839c8-29dd-4185-896c-16771aded457	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-19 04:28:02.606469+00	
00000000-0000-0000-0000-000000000000	b4f29053-92eb-4b95-881b-f63ac3374f53	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-06-19 04:43:23.237855+00	
00000000-0000-0000-0000-000000000000	52108191-e40d-41bd-bce8-0d7a674470b2	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-06-19 04:51:37.31622+00	
00000000-0000-0000-0000-000000000000	36bf5066-0e4c-4fc1-a05b-3f6cb7544a0f	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-19 04:57:55.094032+00	
00000000-0000-0000-0000-000000000000	1b8853f9-3321-40a9-acd2-1c9e154825f1	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-19 05:37:49.411223+00	
00000000-0000-0000-0000-000000000000	81b9d0df-729b-4b0f-8fb4-ebd81e82044b	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-06-19 05:43:26.846551+00	
00000000-0000-0000-0000-000000000000	f0e8b1dd-7cfe-4167-96ac-e0830b4b1213	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-06-19 05:43:26.84741+00	
00000000-0000-0000-0000-000000000000	581df764-8510-43b6-b60f-930304da51e6	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-06-19 05:43:53.65512+00	
00000000-0000-0000-0000-000000000000	fbc0abc2-752d-405e-915e-5c9182939919	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-19 05:56:12.316327+00	
00000000-0000-0000-0000-000000000000	d2d43e21-3e13-4feb-95a3-e8acfd68df3e	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-19 05:56:12.31729+00	
00000000-0000-0000-0000-000000000000	02a4d272-9785-430e-963e-5574124a8cfd	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-19 06:36:02.584922+00	
00000000-0000-0000-0000-000000000000	ec17015f-59b5-437e-a7ec-41c1a1f0e304	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-19 06:36:02.585904+00	
00000000-0000-0000-0000-000000000000	f9312b8c-6982-4d9d-a1c1-28c799c25697	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-19 06:54:16.26378+00	
00000000-0000-0000-0000-000000000000	b29478fd-a647-4034-afe8-2df180f3e6c7	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-19 06:54:16.264795+00	
00000000-0000-0000-0000-000000000000	a1c0d3d4-bc69-4868-bd55-b2d98557d780	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-19 07:34:07.371733+00	
00000000-0000-0000-0000-000000000000	0cd40c44-12ec-4a2b-a93c-a745b022c7cb	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-19 07:34:07.372682+00	
00000000-0000-0000-0000-000000000000	19dc02d3-40af-4662-b21e-afd44c4de16c	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-06-19 07:51:05.470352+00	
00000000-0000-0000-0000-000000000000	44ca0ac3-c7a0-4401-8302-173380062d8b	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-06-19 07:51:05.471297+00	
00000000-0000-0000-0000-000000000000	3aa91367-37c8-4786-aecb-8248c0bb270f	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-06-19 07:51:44.950548+00	
00000000-0000-0000-0000-000000000000	d288650f-421e-4a50-a302-e14165071331	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-06-19 07:51:44.951169+00	
00000000-0000-0000-0000-000000000000	359d0b23-efc4-41fb-8524-b8c0bc4e47b7	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-19 07:55:05.366904+00	
00000000-0000-0000-0000-000000000000	9f87566f-079a-4f1a-bb86-2f5f46eae85d	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-19 07:55:05.36784+00	
00000000-0000-0000-0000-000000000000	71d259c1-e303-4fcd-8e0c-f40cb39d9af2	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-06-19 08:11:44.15622+00	
00000000-0000-0000-0000-000000000000	d03faf20-6a27-4137-8bd8-cd11554adbc3	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-19 08:12:04.485048+00	
00000000-0000-0000-0000-000000000000	533ec6e6-f5ec-44e3-81c9-05989ae7ff21	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-06-19 08:16:04.28425+00	
00000000-0000-0000-0000-000000000000	d8781703-806c-45ab-9f21-83ee94d19e2b	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-06-19 08:16:10.410315+00	
00000000-0000-0000-0000-000000000000	8570c6ec-9489-4224-bb62-4a61a22e929d	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-06-19 13:14:24.183505+00	
00000000-0000-0000-0000-000000000000	329d005e-68b6-4139-893c-87eb856f8618	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-06-19 13:14:24.184453+00	
00000000-0000-0000-0000-000000000000	d92e7576-4005-4e20-a443-fceee0234639	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-19 15:54:30.323018+00	
00000000-0000-0000-0000-000000000000	bc01c2b5-8fa9-4d17-b47e-65f97cc1fbf1	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-19 16:00:43.021303+00	
00000000-0000-0000-0000-000000000000	b12b7dba-cfac-4d97-bef0-1405fc9bb63e	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-19 17:43:26.18922+00	
00000000-0000-0000-0000-000000000000	a6c5b3e7-1d73-4b4b-ba8e-1d0ca6cd1d98	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-19 17:43:26.190184+00	
00000000-0000-0000-0000-000000000000	082d8e00-058e-42b5-9fc8-36228f392a31	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-19 17:43:36.273026+00	
00000000-0000-0000-0000-000000000000	40720cae-cf18-449a-b831-57c8cb43dfcd	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-19 17:43:36.273625+00	
00000000-0000-0000-0000-000000000000	17dde986-3b61-4d4d-abcf-c2c6de301f24	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-21 01:16:11.139537+00	
00000000-0000-0000-0000-000000000000	b379951f-bb4c-4952-b993-2ac7f99e422f	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-21 01:16:11.140491+00	
00000000-0000-0000-0000-000000000000	b3745633-9aba-488a-bea4-ff99688dc451	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-21 01:32:47.53182+00	
00000000-0000-0000-0000-000000000000	f053de02-4476-4f28-8735-8b0dc5030641	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-21 01:32:47.532802+00	
00000000-0000-0000-0000-000000000000	6c5dc884-031c-470a-8707-bef56cda25d5	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-21 02:44:37.802059+00	
00000000-0000-0000-0000-000000000000	b0d55f4c-86c6-4fbc-98d6-bc2796fdb9f9	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-21 02:44:37.803056+00	
00000000-0000-0000-0000-000000000000	2e758c15-7f44-451c-9ba2-94969baa278e	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-21 02:49:58.04872+00	
00000000-0000-0000-0000-000000000000	0b0134e1-93e6-408f-a799-eea0587e4b9f	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-21 02:49:58.049635+00	
00000000-0000-0000-0000-000000000000	6745f59a-1dab-4627-92a7-a7cfeeb459a4	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-21 03:42:56.646168+00	
00000000-0000-0000-0000-000000000000	3a724fd9-2b57-4000-82b1-08bffd35a3b0	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-21 03:42:56.647035+00	
00000000-0000-0000-0000-000000000000	af647685-4bca-4664-aae7-bdb4272c7195	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-21 03:54:03.309072+00	
00000000-0000-0000-0000-000000000000	4eea9fc2-9b5d-4ab5-9b3a-d5ff99193409	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-21 03:54:03.310008+00	
00000000-0000-0000-0000-000000000000	45533fcf-0a65-4ed5-b902-bd75d8d6fb9b	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-21 03:59:54.073584+00	
00000000-0000-0000-0000-000000000000	cf13134d-5fde-4e72-987c-4af7ef3b24ef	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-21 04:41:19.185407+00	
00000000-0000-0000-0000-000000000000	6006959a-a831-4aec-abf0-8efe60c54f35	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-21 04:41:19.186383+00	
00000000-0000-0000-0000-000000000000	a697ef54-d885-4ad5-924d-e49f8652b12f	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-21 04:52:34.232728+00	
00000000-0000-0000-0000-000000000000	e8c0eff0-055c-4f45-af3d-58574ac86dc1	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-21 04:52:34.233593+00	
00000000-0000-0000-0000-000000000000	35b82b25-63f1-49f2-8846-eba60b77e937	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-21 05:39:50.203751+00	
00000000-0000-0000-0000-000000000000	abde3b94-6568-4520-a7f9-01daef0f7c5f	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-21 05:39:50.204625+00	
00000000-0000-0000-0000-000000000000	c942da80-5ce9-41be-9102-acae8b7a84ea	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-21 05:50:50.235423+00	
00000000-0000-0000-0000-000000000000	3eb069d5-8d5e-4826-b49b-b91dd11b506a	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-21 05:50:50.236296+00	
00000000-0000-0000-0000-000000000000	b1d0b8f9-f90e-4e25-bd1a-339c25fb9693	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-21 15:48:26.773708+00	
00000000-0000-0000-0000-000000000000	99c4c7fb-16a1-41c7-9678-2a48db576a80	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-21 15:48:26.774644+00	
00000000-0000-0000-0000-000000000000	cf7d1288-430e-4b1b-8890-56a17bc7bbc9	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-21 15:53:27.440806+00	
00000000-0000-0000-0000-000000000000	9f3309c5-7f4b-4294-a62d-54303f86578e	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-21 15:53:27.441671+00	
00000000-0000-0000-0000-000000000000	e7d067a2-51f1-4b17-8130-2d804b5f5f7a	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-22 14:31:54.983818+00	
00000000-0000-0000-0000-000000000000	f259dee5-57dc-4ade-af23-a85f4969d5db	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-22 14:31:54.984799+00	
00000000-0000-0000-0000-000000000000	b1d10880-465c-4c03-9375-307fbf49618b	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-22 14:54:43.890304+00	
00000000-0000-0000-0000-000000000000	58847873-680f-4747-ae78-01bfad5f02f1	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-22 14:54:43.891148+00	
00000000-0000-0000-0000-000000000000	07d03219-a051-4934-9703-ce520e7d1414	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-22 19:27:54.343285+00	
00000000-0000-0000-0000-000000000000	6543c6e6-8300-4506-987a-876f1bb24627	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-22 19:27:54.344214+00	
00000000-0000-0000-0000-000000000000	9c39f84f-87d5-4209-a470-d5e38292178c	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-23 05:53:11.392575+00	
00000000-0000-0000-0000-000000000000	fb8e8b77-1544-4f37-b9b7-ce31b47df39a	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-23 05:53:11.393502+00	
00000000-0000-0000-0000-000000000000	25fbdb7d-5eef-41dc-a345-21aae768e3a6	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-23 05:53:33.421541+00	
00000000-0000-0000-0000-000000000000	6bd90ed0-4113-4fe3-9d01-3295c712e583	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-23 05:53:33.422206+00	
00000000-0000-0000-0000-000000000000	42082261-2417-44da-bb52-920bc4284ba1	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-06-23 06:23:09.124012+00	
00000000-0000-0000-0000-000000000000	59a7fb4c-a5b0-4b3f-b318-86fb22c78822	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-06-23 06:23:09.124989+00	
00000000-0000-0000-0000-000000000000	1ac68229-7b90-413a-af27-61406e8f790d	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-06-23 06:23:17.280422+00	
00000000-0000-0000-0000-000000000000	930c1c72-1c3f-46b7-ac2c-7569714b230a	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-06-23 06:23:21.89007+00	
00000000-0000-0000-0000-000000000000	9a631e2b-221d-4a49-ae08-bbf3c96103b8	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-23 06:51:28.592385+00	
00000000-0000-0000-0000-000000000000	c06eaa62-0115-4b09-a361-88feb9e8693b	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-23 06:51:28.593311+00	
00000000-0000-0000-0000-000000000000	a8213e30-9d2c-40b2-b45e-c6eb54723544	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-23 06:51:58.528636+00	
00000000-0000-0000-0000-000000000000	1ec2cf3f-f514-4dc0-8262-2b194a5ed414	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-23 06:51:58.529224+00	
00000000-0000-0000-0000-000000000000	9d75cc78-93b6-45d3-b758-060c92df2392	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-23 14:08:30.871412+00	
00000000-0000-0000-0000-000000000000	b9cf0a80-e75b-44ad-923b-90dff6261de3	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-23 14:08:30.872278+00	
00000000-0000-0000-0000-000000000000	70056d44-446f-4d8d-be54-24dcc9622b1a	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-23 14:22:12.531585+00	
00000000-0000-0000-0000-000000000000	75aa2a8a-2c91-4f4b-879a-86a0c4bfad5b	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-23 14:22:12.532569+00	
00000000-0000-0000-0000-000000000000	6da4d561-019b-444d-a14b-1560e53acd75	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-23 17:11:13.663147+00	
00000000-0000-0000-0000-000000000000	20ed04b5-ae4b-43e2-a654-b97d36d17c34	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-23 17:11:13.664067+00	
00000000-0000-0000-0000-000000000000	ce2d88ee-6c02-4dd8-8864-1f2e02e002cd	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-23 17:16:47.526111+00	
00000000-0000-0000-0000-000000000000	9b77c559-dda3-478d-ab52-c38343e59900	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-23 17:16:47.527982+00	
00000000-0000-0000-0000-000000000000	9cae5e6f-7bae-4b5f-a98c-e4a7c48f104f	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-23 18:09:29.223067+00	
00000000-0000-0000-0000-000000000000	9d69672f-ae61-44a1-a23e-12ad64dda773	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-23 18:09:29.225319+00	
00000000-0000-0000-0000-000000000000	4bb07c53-1f51-4c5e-bf5a-b203adb2cb7c	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-23 18:15:06.652108+00	
00000000-0000-0000-0000-000000000000	74eb54d9-80ac-4b2d-bc97-7eb36f15fcff	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-23 18:15:06.654264+00	
00000000-0000-0000-0000-000000000000	182954f1-6e61-405b-8ddc-e14e1332ca05	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-06-23 19:12:11.678319+00	
00000000-0000-0000-0000-000000000000	e4c07576-bcdd-4ec2-9f37-bd701628c8c7	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-23 19:13:44.223686+00	
00000000-0000-0000-0000-000000000000	c49aba4f-0bb1-4abf-8177-59b2a77383e2	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-23 19:13:44.224399+00	
00000000-0000-0000-0000-000000000000	2dcb4ec3-4c25-4e66-886b-150f92ee9c5a	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-23 19:16:18.788734+00	
00000000-0000-0000-0000-000000000000	1f5ffefd-4360-4257-a811-a85e1edad456	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-23 19:16:18.790265+00	
00000000-0000-0000-0000-000000000000	bbc2afe1-7ae8-45dc-93b5-2c94087edbe0	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-06-23 19:32:20.828846+00	
00000000-0000-0000-0000-000000000000	ca4f9b5f-cb42-4ae1-8b1d-c59c10c0d757	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-06-23 19:32:25.969898+00	
00000000-0000-0000-0000-000000000000	cf103592-b644-4665-831e-c3675d292c4d	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-06-23 19:35:23.743274+00	
00000000-0000-0000-0000-000000000000	104ec981-ce2e-4f12-a2d8-f4379ee48702	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-06-23 19:41:00.521535+00	
00000000-0000-0000-0000-000000000000	9ab98341-9826-4b64-8242-2ff5e5faf01c	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-06-23 19:41:39.586509+00	
00000000-0000-0000-0000-000000000000	e8cc452e-2510-439b-8926-ecb31094ac3e	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-24 04:58:07.020462+00	
00000000-0000-0000-0000-000000000000	2cc41e92-146f-413a-abc1-7e4ee1603eab	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-24 04:58:07.022075+00	
00000000-0000-0000-0000-000000000000	2f9c5006-16f3-45f5-a795-85b37ae6a370	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-06-24 05:32:01.114163+00	
00000000-0000-0000-0000-000000000000	9407a877-c804-414e-a774-5d21c13c805b	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-06-24 05:32:01.115061+00	
00000000-0000-0000-0000-000000000000	364601fa-3ad3-48fc-b845-5a5e5705f885	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-06-24 05:32:03.845949+00	
00000000-0000-0000-0000-000000000000	6088a12c-3759-4172-9310-b8a74930d4dd	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-06-24 05:32:24.827696+00	
00000000-0000-0000-0000-000000000000	47fecba6-f038-4bff-beb9-783595e69cb6	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-24 06:54:35.582335+00	
00000000-0000-0000-0000-000000000000	f21b2143-b546-4665-b1f1-ec6d2bdea5aa	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-24 06:54:35.583308+00	
00000000-0000-0000-0000-000000000000	4065019c-8f29-44b8-b87f-ade3ffa6b5d9	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-24 07:15:51.871099+00	
00000000-0000-0000-0000-000000000000	3271fce8-005c-4f60-b108-4ef700bc2825	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-24 07:15:51.872059+00	
00000000-0000-0000-0000-000000000000	de70b419-a347-420c-88b1-0aacef60734c	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-24 07:52:40.593773+00	
00000000-0000-0000-0000-000000000000	03134ce4-22fd-4175-af2c-6e0f027629d3	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-24 07:52:40.596942+00	
00000000-0000-0000-0000-000000000000	aefdf5b3-e072-443e-b7e8-b10deb19df5e	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-24 08:16:39.321808+00	
00000000-0000-0000-0000-000000000000	1e60a04c-e8a9-44b2-a50f-cec8892ebb18	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-24 08:16:39.322692+00	
00000000-0000-0000-0000-000000000000	bbea7051-74c6-44fe-9a66-dca3a365d686	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-24 08:50:51.853749+00	
00000000-0000-0000-0000-000000000000	00672020-abe3-4c3a-9399-ebe1303ee2ed	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-24 08:50:51.859769+00	
00000000-0000-0000-0000-000000000000	ce37f435-4d76-4922-b6b4-53bfa0248230	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-06-24 09:23:38.12425+00	
00000000-0000-0000-0000-000000000000	595d082b-acdb-4265-a025-09e4324bb784	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-24 09:34:53.73929+00	
00000000-0000-0000-0000-000000000000	e9c30266-04e0-42cb-ae3e-32e932f94dc9	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-24 09:34:53.740122+00	
00000000-0000-0000-0000-000000000000	1520dd0f-ed46-4d82-963e-57dfdef4cb87	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-24 09:52:51.684641+00	
00000000-0000-0000-0000-000000000000	b12d23c8-45a7-47c2-bd7b-86a1c792cce1	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-24 09:52:51.685504+00	
00000000-0000-0000-0000-000000000000	b7c46855-70ab-43c2-8cff-addaa046d789	{"action":"user_signedup","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"team","traits":{"provider":"google"}}	2025-06-24 13:40:06.741135+00	
00000000-0000-0000-0000-000000000000	c4115b7b-2176-4521-a1f1-2c219445698f	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-24 14:44:05.240178+00	
00000000-0000-0000-0000-000000000000	8d972c11-d210-46a1-ab60-2ef5310ede94	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-24 14:44:05.241229+00	
00000000-0000-0000-0000-000000000000	2e1f95ea-b670-41c1-8b8b-b9e068eeaae5	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-06-24 14:47:45.51934+00	
00000000-0000-0000-0000-000000000000	cfc2bdc1-76ae-4aa0-be64-2cadd63cbc18	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-06-24 14:47:45.520142+00	
00000000-0000-0000-0000-000000000000	8b2003da-1cae-4862-9d2d-5fbe4c75eda7	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-24 22:50:53.189464+00	
00000000-0000-0000-0000-000000000000	26ede89a-794d-4c91-9164-0c92c70965c7	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-24 22:50:53.190442+00	
00000000-0000-0000-0000-000000000000	ba215aa2-d3da-4f6e-a366-cdc29ef35ac5	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-24 22:53:39.490527+00	
00000000-0000-0000-0000-000000000000	401c9ddf-b53e-4851-af5d-00630a6d0d48	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-24 22:53:39.491396+00	
00000000-0000-0000-0000-000000000000	bf36e003-f545-4754-b8e8-20a5b50571e6	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-24 23:48:57.933365+00	
00000000-0000-0000-0000-000000000000	fd1d9929-a9c1-4217-a9d9-ed0db9614e9b	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-24 23:48:57.93434+00	
00000000-0000-0000-0000-000000000000	c70a995a-cc91-41fe-9dca-efaf745d7755	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-24 23:51:57.716903+00	
00000000-0000-0000-0000-000000000000	4a94b068-b74e-43b8-91f5-6231a203b974	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-24 23:51:57.717713+00	
00000000-0000-0000-0000-000000000000	4ba53d85-e484-462f-b240-baa713ecc4b6	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-06-25 00:18:21.462182+00	
00000000-0000-0000-0000-000000000000	f4ced39b-22c5-42bd-b1d5-2c652cd96d03	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-06-25 03:12:27.817847+00	
00000000-0000-0000-0000-000000000000	81055126-abfc-4bcd-b723-ba025a75716a	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-06-25 03:12:27.820728+00	
00000000-0000-0000-0000-000000000000	02b98068-41f2-45b0-8018-04c9501feeba	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-06-25 03:22:59.309869+00	
00000000-0000-0000-0000-000000000000	cbfa2729-5cc1-457f-9ed5-6cdeaf9c4bb2	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-25 15:09:05.500247+00	
00000000-0000-0000-0000-000000000000	1fd914ce-8e7c-400f-a3cc-7a3a57b501af	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-25 15:09:05.501208+00	
00000000-0000-0000-0000-000000000000	f7e21ba4-96d7-43a9-b504-c69449229e60	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-25 15:17:03.938833+00	
00000000-0000-0000-0000-000000000000	dc6fe25d-1a1b-412b-894e-11bfd01db81e	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-25 15:17:03.939814+00	
00000000-0000-0000-0000-000000000000	8495a7d1-ac2c-4977-8266-385c510ac3f7	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-06-25 15:46:06.077193+00	
00000000-0000-0000-0000-000000000000	9682325d-639f-4d39-9d59-7e3a91e22598	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-25 16:08:36.206597+00	
00000000-0000-0000-0000-000000000000	d7f98a0c-14cc-41b8-8d37-92c7e120e63c	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-25 16:08:36.20748+00	
00000000-0000-0000-0000-000000000000	a8594722-c7ea-4784-9ed4-98ffaa3e1008	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-06-25 19:14:03.200501+00	
00000000-0000-0000-0000-000000000000	c73d0e72-6dac-4d65-b94c-8d27748cf160	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-06-25 19:14:03.201335+00	
00000000-0000-0000-0000-000000000000	939862e6-bae0-48ce-ac72-2ae733540ca6	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-25 23:04:05.525257+00	
00000000-0000-0000-0000-000000000000	9875835c-141a-4207-92c1-fbb0d452ca68	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-25 23:04:05.526213+00	
00000000-0000-0000-0000-000000000000	520818e0-5fc1-47c1-a060-25766f03ebaa	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-06-26 16:44:16.988974+00	
00000000-0000-0000-0000-000000000000	4e653479-bcb3-47c7-a867-ac28c6f41222	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-06-26 16:44:16.989872+00	
00000000-0000-0000-0000-000000000000	57b73294-16a3-4e6c-bbc5-07f2b5c7556c	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-06-26 19:22:15.039413+00	
00000000-0000-0000-0000-000000000000	f8f1fd78-68dd-4a40-bd13-bb754ec9fb04	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-06-26 19:22:15.040549+00	
00000000-0000-0000-0000-000000000000	f7b2aef5-c702-4215-bb33-7b6280dcaa78	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-06-26 22:16:38.547391+00	
00000000-0000-0000-0000-000000000000	13b5d685-6d86-4266-b31a-e28bc7d766bb	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-06-26 22:16:38.548193+00	
00000000-0000-0000-0000-000000000000	63715c3c-1154-460b-bb75-1c8f1af2db34	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-06-27 11:35:52.944511+00	
00000000-0000-0000-0000-000000000000	bb0bc368-af15-4a95-a7ee-0f557a25ab46	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-06-27 11:35:52.946035+00	
00000000-0000-0000-0000-000000000000	131bdea3-39c1-4da0-84ab-72e666235cbf	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-27 18:30:44.80981+00	
00000000-0000-0000-0000-000000000000	d8aa00b1-ba61-4397-af78-7460472267a5	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-27 18:30:44.810791+00	
00000000-0000-0000-0000-000000000000	98db824e-aa36-4723-a55a-3d318866ac1e	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-27 18:43:35.773702+00	
00000000-0000-0000-0000-000000000000	fbc2bc65-75cb-42de-9f2f-07d53d5ed9e6	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-27 19:30:48.636447+00	
00000000-0000-0000-0000-000000000000	b3cc5f1b-5c64-4353-81a6-935e28f7e23d	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-27 19:30:48.638136+00	
00000000-0000-0000-0000-000000000000	70353dea-8b69-4002-8bed-91bc6181395f	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-27 20:05:10.585558+00	
00000000-0000-0000-0000-000000000000	1e8874f5-3825-49de-8952-1c6372e4ef24	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-27 20:05:10.587322+00	
00000000-0000-0000-0000-000000000000	88d5b388-9657-4553-b35d-f2c429cf51ce	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-06-29 01:46:50.624475+00	
00000000-0000-0000-0000-000000000000	08542b36-2982-4e8a-9b01-bf4dcbc2cd86	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-29 02:45:29.219092+00	
00000000-0000-0000-0000-000000000000	2c291721-1f40-4392-bf7d-97cfbc65e303	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-29 02:45:29.221034+00	
00000000-0000-0000-0000-000000000000	36b80922-a6e2-47b0-a47a-276fa964e97f	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-06-29 03:15:45.043863+00	
00000000-0000-0000-0000-000000000000	eb4ebd2c-42f6-475e-b87e-6f7bcc8416bf	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-29 12:53:25.803349+00	
00000000-0000-0000-0000-000000000000	c07a49b9-8c29-451c-938e-b30e5ffe5da6	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-06-29 12:53:25.806227+00	
00000000-0000-0000-0000-000000000000	816e0057-f816-4ecf-94a7-803aabae82b4	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-06-29 13:20:07.436212+00	
00000000-0000-0000-0000-000000000000	776e165a-9304-4faf-961e-eb6fbbff69ac	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-06-29 13:20:07.437193+00	
00000000-0000-0000-0000-000000000000	3abbd86b-3f1c-4142-b800-69acdd8489ba	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-06-29 13:41:47.402915+00	
00000000-0000-0000-0000-000000000000	175c2829-c98a-4a50-bdc2-c315f004ae21	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-06-29 13:41:47.404474+00	
00000000-0000-0000-0000-000000000000	cbf8a814-49b1-4bf0-953a-48066ceb7258	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-06-29 14:06:28.745371+00	
00000000-0000-0000-0000-000000000000	95486a8e-0235-44e5-bd6b-bf1a44d1b92e	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-06-29 15:17:09.250506+00	
00000000-0000-0000-0000-000000000000	509eefc6-3d93-4d6d-a382-baaefe3d43b8	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-06-29 15:17:09.251443+00	
00000000-0000-0000-0000-000000000000	26b41437-9ea9-437e-ab5f-3cca9671dcc6	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-06-29 15:45:44.590277+00	
00000000-0000-0000-0000-000000000000	42059edd-2c45-49ca-926c-4ee8982bd980	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-06-29 15:45:44.591166+00	
00000000-0000-0000-0000-000000000000	3c28189b-4203-4d67-aade-7bab9c02486f	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-06-29 18:30:39.4261+00	
00000000-0000-0000-0000-000000000000	dcb96db9-79c3-40da-98df-d3a46df884f1	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-06-29 18:30:39.427664+00	
00000000-0000-0000-0000-000000000000	19cf2c32-3c40-49dd-9251-8a4a994a9d0d	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-06-29 21:26:32.508013+00	
00000000-0000-0000-0000-000000000000	2575b394-facf-4780-b592-6d9b66350da4	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-06-29 21:26:32.510106+00	
00000000-0000-0000-0000-000000000000	1dd29ff9-0acb-4f59-959e-7161cd015454	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-06-30 15:28:08.140763+00	
00000000-0000-0000-0000-000000000000	512932b5-2b2e-4792-99f4-be252f796459	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-06-30 15:28:08.143659+00	
00000000-0000-0000-0000-000000000000	27c42b7b-c0a4-4b50-b8d4-c6496578b326	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-01 14:02:45.819944+00	
00000000-0000-0000-0000-000000000000	63ca8f01-3c9e-4677-b3fc-aa0aaef078c2	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-01 14:02:45.821033+00	
00000000-0000-0000-0000-000000000000	6b3ed706-dde3-46bd-b4bb-c38475231014	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-01 16:39:51.427697+00	
00000000-0000-0000-0000-000000000000	c8f5032d-426a-44fe-a26f-de156e1fd79c	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-01 16:39:51.428736+00	
00000000-0000-0000-0000-000000000000	f340aa8a-8c79-4673-a8d4-ad6660cd3cfb	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-01 16:52:20.443507+00	
00000000-0000-0000-0000-000000000000	eaae5d7d-c7b5-4211-be9d-60c894db78f5	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-01 16:52:20.4458+00	
00000000-0000-0000-0000-000000000000	33f8e34d-fb09-4321-80ad-cee0e11a8421	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-01 17:38:03.588108+00	
00000000-0000-0000-0000-000000000000	c309cf4a-ac67-42d3-82e8-7e7cf8210ee7	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-01 17:38:03.589119+00	
00000000-0000-0000-0000-000000000000	e84f550f-ab91-4172-917d-29881e4d6178	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-01 17:50:33.536794+00	
00000000-0000-0000-0000-000000000000	e4414d2b-8a51-4df3-9261-b5c4aef45db4	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-01 17:50:33.537702+00	
00000000-0000-0000-0000-000000000000	bc330564-55d9-4221-85d9-77240a8f6fb0	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-01 17:58:15.307944+00	
00000000-0000-0000-0000-000000000000	74f217c2-209b-4b90-83d6-524301efa0bd	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-01 17:58:15.308898+00	
00000000-0000-0000-0000-000000000000	640772bf-161d-4b9a-b8ad-5a6bb086e774	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-01 21:05:29.948737+00	
00000000-0000-0000-0000-000000000000	d4759beb-65a0-4d5a-8f65-7beed9e90671	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-01 21:05:29.951921+00	
00000000-0000-0000-0000-000000000000	070bc0f5-7a86-4e93-a093-cd7434fa7b1a	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 05:04:08.125589+00	
00000000-0000-0000-0000-000000000000	4918eee9-b9d6-411b-8b1e-4502756f85ef	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 05:04:08.127163+00	
00000000-0000-0000-0000-000000000000	b5007115-5dd4-43c4-afae-3f7fb35c201d	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 05:13:11.071763+00	
00000000-0000-0000-0000-000000000000	7528c7c5-8fa2-4ed5-a927-bad0007ec002	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 05:13:11.074813+00	
00000000-0000-0000-0000-000000000000	9cef82fe-fb81-48d9-956a-ea6ca8cd0640	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 06:01:04.937922+00	
00000000-0000-0000-0000-000000000000	0ec1c0de-b82f-4053-b85d-29ecb91fdcb2	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 06:01:04.940469+00	
00000000-0000-0000-0000-000000000000	e3f48b59-24e4-4524-bacb-da31d966373d	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 06:02:17.817892+00	
00000000-0000-0000-0000-000000000000	09b9ac42-4d8d-4a0e-9534-edf1a715469d	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 06:02:17.818812+00	
00000000-0000-0000-0000-000000000000	4edc8bde-e2ef-4738-b13d-0d0e4c96650c	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 06:11:34.241703+00	
00000000-0000-0000-0000-000000000000	d803aaf1-5c78-46ba-826f-c58514be8626	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 06:11:34.244667+00	
00000000-0000-0000-0000-000000000000	a037a9f0-c45b-487d-94a4-23ccbb061159	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 06:23:29.562756+00	
00000000-0000-0000-0000-000000000000	55d37df1-54f4-4e74-adfe-bb0376699120	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 06:23:29.564594+00	
00000000-0000-0000-0000-000000000000	6a2234d3-2fed-40b6-8780-0ba5e553ed17	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 06:59:19.978861+00	
00000000-0000-0000-0000-000000000000	e9af8f08-adfa-47a0-9e63-b3f2fe88f895	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 06:59:19.982596+00	
00000000-0000-0000-0000-000000000000	2ac81c7f-0ea7-4424-b6c7-b019cf534bb3	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 07:57:49.978341+00	
00000000-0000-0000-0000-000000000000	62df1688-cf77-43c3-86b9-5b35ec165a51	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 07:57:49.982593+00	
00000000-0000-0000-0000-000000000000	93327137-e945-432b-a9f2-6c5e218ea6f0	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 08:56:19.885353+00	
00000000-0000-0000-0000-000000000000	90662095-bff3-4e5b-90ae-310d3d010dfb	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 08:56:19.886868+00	
00000000-0000-0000-0000-000000000000	7bf91c95-03e6-40b2-ac32-1aa2539c427d	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 15:23:27.913628+00	
00000000-0000-0000-0000-000000000000	9f475e70-344a-4508-8525-c7b126ad9dd0	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 15:23:27.916292+00	
00000000-0000-0000-0000-000000000000	dc63dc88-e4b4-4852-aba4-3d5ceacc83ed	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 15:38:40.722101+00	
00000000-0000-0000-0000-000000000000	ea301d44-f54e-43a5-86fd-0dab51261034	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 15:38:40.72512+00	
00000000-0000-0000-0000-000000000000	a4af124e-3a38-4030-93a2-5ac6dbec0378	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 15:47:32.74817+00	
00000000-0000-0000-0000-000000000000	bf63df4e-95c8-4b07-a83d-d73a4656749d	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 15:47:32.750802+00	
00000000-0000-0000-0000-000000000000	0c9cf155-f0c5-433a-8b23-5af9795c920e	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 15:51:10.671271+00	
00000000-0000-0000-0000-000000000000	a00c8209-50d5-487e-badc-44139d337106	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 15:51:10.673791+00	
00000000-0000-0000-0000-000000000000	ea2c8321-7f9d-4fbc-bd63-d23efdb9e976	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 17:06:08.122518+00	
00000000-0000-0000-0000-000000000000	5bc941ed-ccc3-4c79-a20a-167b1d7be8ef	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 17:06:08.123619+00	
00000000-0000-0000-0000-000000000000	00158bae-1f1e-4ead-9f3a-aa3bbe923224	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 18:15:54.583931+00	
00000000-0000-0000-0000-000000000000	22174f53-5f40-4c4e-b6aa-bad7c84b42ae	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 18:15:54.584847+00	
00000000-0000-0000-0000-000000000000	3541bf7f-ad2d-40ce-9faa-dd81e0ebfda4	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 19:40:42.39186+00	
00000000-0000-0000-0000-000000000000	4085e00a-130b-4e03-b6d2-28ba36893731	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 19:40:42.39391+00	
00000000-0000-0000-0000-000000000000	7e402267-3e26-430c-82a3-e704d5f21840	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 19:41:21.248601+00	
00000000-0000-0000-0000-000000000000	2df33e7a-d890-4c8d-8d0d-a4d3713eed51	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 20:10:31.164076+00	
00000000-0000-0000-0000-000000000000	7060e7ec-b3ab-4d7a-b26d-fb1b70c6b922	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 20:10:31.16524+00	
00000000-0000-0000-0000-000000000000	6035e374-c493-456d-9030-99416445dcca	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 20:12:13.361881+00	
00000000-0000-0000-0000-000000000000	c769e83a-58fa-4adb-a8de-39be3b5386a2	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 20:12:13.362738+00	
00000000-0000-0000-0000-000000000000	0f82f575-7cfc-42b6-bfc5-841d8175e2af	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 20:52:05.058445+00	
00000000-0000-0000-0000-000000000000	63b7f7d1-49bd-40a2-bf94-3aa2873d878d	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 20:52:05.059446+00	
00000000-0000-0000-0000-000000000000	fa4f27b3-298c-470d-8d8c-cbfa70e5fc86	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 21:10:44.975369+00	
00000000-0000-0000-0000-000000000000	4db4c5d2-2d1b-4dce-bed1-cdbddb45cf38	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 21:10:44.976254+00	
00000000-0000-0000-0000-000000000000	86b51615-89e8-47b6-ad3e-96e43ecf553f	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 21:18:34.92696+00	
00000000-0000-0000-0000-000000000000	f153e5b0-a978-447d-9442-000355807cbb	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 21:18:34.927916+00	
00000000-0000-0000-0000-000000000000	62841b6c-beea-48ea-a8c4-1017902558e8	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 22:08:58.47271+00	
00000000-0000-0000-0000-000000000000	fd5090dc-5d7b-4656-94e0-8621e6c2fd0e	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 22:08:58.473554+00	
00000000-0000-0000-0000-000000000000	87370a59-7903-47ae-891f-3be4859cdcfd	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 22:17:30.850692+00	
00000000-0000-0000-0000-000000000000	7fc7a833-121a-475c-a8c7-c9da768f778f	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 22:17:30.851872+00	
00000000-0000-0000-0000-000000000000	b82bc271-a1a1-4c96-86d5-3af0dfe584df	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 22:27:17.783258+00	
00000000-0000-0000-0000-000000000000	9f2e66a5-9221-4d59-9fb2-5bbd68a7b904	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 22:27:17.784428+00	
00000000-0000-0000-0000-000000000000	3fe92fbb-d73f-4927-8557-da4486617f12	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 23:07:28.348237+00	
00000000-0000-0000-0000-000000000000	a2b4b797-d8df-4798-9b76-59b37ac4bd56	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 23:07:28.34924+00	
00000000-0000-0000-0000-000000000000	432b5ef9-1011-4f9c-a608-877b32f9c04c	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 23:16:08.552062+00	
00000000-0000-0000-0000-000000000000	d67a795c-07bf-4e63-9b30-9e426463476a	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-02 23:16:08.552953+00	
00000000-0000-0000-0000-000000000000	c6b58b27-0c7e-4554-b73c-613e98a33455	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 23:47:50.565624+00	
00000000-0000-0000-0000-000000000000	ed99be23-3367-4240-be6e-7123dc4d2855	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-02 23:47:50.566529+00	
00000000-0000-0000-0000-000000000000	8e1cc430-d148-4f17-b23b-966408b82878	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-03 04:36:17.827665+00	
00000000-0000-0000-0000-000000000000	a13e0262-277c-4c08-af18-6809a74ac50c	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-03 04:36:17.828794+00	
00000000-0000-0000-0000-000000000000	f0f20591-370c-4488-8888-e4e89445ca08	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-03 04:37:48.41658+00	
00000000-0000-0000-0000-000000000000	317a75ad-a054-4818-98c5-a584650f6200	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-03 04:37:48.417423+00	
00000000-0000-0000-0000-000000000000	3755d6ef-13b6-4336-bba7-3fe7a517eb4b	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-03 04:39:09.223893+00	
00000000-0000-0000-0000-000000000000	909fb25a-bae6-43a3-8b9f-85e7003f7dde	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-03 04:39:09.22486+00	
00000000-0000-0000-0000-000000000000	9ecd66f8-a76f-4515-9cba-db4e5b52ee3d	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-03 05:36:04.997869+00	
00000000-0000-0000-0000-000000000000	cac86571-9b37-45c4-95ce-9e11db89d4b5	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-03 05:36:04.998847+00	
00000000-0000-0000-0000-000000000000	83836c37-079a-4f7c-9f0e-1fbfc4612cd3	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-03 05:37:27.856396+00	
00000000-0000-0000-0000-000000000000	d3b6d863-66f1-4bb5-96b5-9dffea04ce4b	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-03 05:37:27.857376+00	
00000000-0000-0000-0000-000000000000	bfa382fc-db9d-43c6-95dc-d9ca4f77d847	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-03 05:45:02.258042+00	
00000000-0000-0000-0000-000000000000	e03edf18-fb87-4dbb-b216-0d9161500a73	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-03 05:45:02.259165+00	
00000000-0000-0000-0000-000000000000	8c3882c1-7d28-4605-9191-e9cf845676ce	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-03 20:39:36.809051+00	
00000000-0000-0000-0000-000000000000	bf654dcb-948b-4ba0-aa71-304fa5d798b7	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-03 20:39:36.80997+00	
00000000-0000-0000-0000-000000000000	65d1a95f-d782-44a1-9717-8c08c939a7fe	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-03 20:45:40.914455+00	
00000000-0000-0000-0000-000000000000	c26c7c93-daa2-4603-8b80-a3b520d7bf4a	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-03 20:45:40.915439+00	
00000000-0000-0000-0000-000000000000	edad17a9-64f6-4963-8bd3-48a1d825516a	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-03 21:47:45.34666+00	
00000000-0000-0000-0000-000000000000	15b8a6d3-a413-4cbc-9d80-1308a2ac3b4d	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-03 21:47:45.347797+00	
00000000-0000-0000-0000-000000000000	29425ac8-0723-422e-9886-61a0f125498b	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-04 01:59:18.637882+00	
00000000-0000-0000-0000-000000000000	16a67cc5-74a6-4022-bf0c-fed9c7fd99a2	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-04 01:59:18.638863+00	
00000000-0000-0000-0000-000000000000	cc80cb86-b4a3-458d-baaf-19029809c038	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-04 02:08:34.916125+00	
00000000-0000-0000-0000-000000000000	b583d913-7960-4afa-8014-a1d391de766c	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-04 02:08:34.91708+00	
00000000-0000-0000-0000-000000000000	b35864da-264b-4268-aa4e-3acbcf697015	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-04 02:48:59.727638+00	
00000000-0000-0000-0000-000000000000	7b540948-4447-4830-b1c0-588837404059	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-04 02:48:59.728502+00	
00000000-0000-0000-0000-000000000000	f918d370-67d4-43b9-8d7d-ad794f0c31ab	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-04 02:50:10.870864+00	
00000000-0000-0000-0000-000000000000	56405f7e-775a-40e0-af91-313bccf6d388	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-04 02:50:10.872011+00	
00000000-0000-0000-0000-000000000000	50159e85-7912-4979-b284-9b4e4b2634a0	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-04 03:46:40.201274+00	
00000000-0000-0000-0000-000000000000	abc115e9-38d0-4b32-b197-9399652783ea	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-04 03:46:40.205096+00	
00000000-0000-0000-0000-000000000000	a20939cf-9159-4274-a185-3ef2dc005e30	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-04 03:53:13.466611+00	
00000000-0000-0000-0000-000000000000	63db118d-41d5-46a7-98e2-42849a6c7b88	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-04 03:53:13.467583+00	
00000000-0000-0000-0000-000000000000	f9f11131-c761-43aa-a0f4-d292b51dc1b3	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-04 14:09:14.219329+00	
00000000-0000-0000-0000-000000000000	69deb8f5-0b97-4a73-aca2-4606ef729835	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-04 14:09:14.220337+00	
00000000-0000-0000-0000-000000000000	220f5cbd-25d9-438e-8ae5-e9335c906891	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-04 14:23:33.365858+00	
00000000-0000-0000-0000-000000000000	98c1ca3a-6aa7-4deb-9220-9a0ed2de1e06	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-04 14:23:33.366851+00	
00000000-0000-0000-0000-000000000000	90822455-727a-4b45-bace-e92b70a1c416	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-04 14:34:49.836623+00	
00000000-0000-0000-0000-000000000000	61dcbdec-7cfd-48ba-96a9-0c3721b5cc74	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-04 14:34:49.837594+00	
00000000-0000-0000-0000-000000000000	38e7b4dc-a9ec-472d-92a2-6874ce057422	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-04 15:07:30.253138+00	
00000000-0000-0000-0000-000000000000	cddb222a-619a-46e2-a982-7a4228806742	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-04 15:07:30.254155+00	
00000000-0000-0000-0000-000000000000	6cb18edd-89b0-4544-ab7f-bf80d46ddfb8	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-04 17:19:45.070894+00	
00000000-0000-0000-0000-000000000000	610cec2f-847c-4557-ba8b-b3f25cf16ae9	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-04 17:19:45.073368+00	
00000000-0000-0000-0000-000000000000	8b8413d3-f8d1-4877-bf78-1336a15fdd28	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-04 17:27:56.970644+00	
00000000-0000-0000-0000-000000000000	5744f59f-01c8-4d71-b12e-18c545b0e4c5	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-04 17:27:56.973153+00	
00000000-0000-0000-0000-000000000000	38f5bab5-4d4b-4681-b46d-a3a59bda63fd	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-04 17:37:41.167714+00	
00000000-0000-0000-0000-000000000000	0e9071d5-5df1-4e01-b9c0-469b30e32b2e	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-04 17:37:41.169403+00	
00000000-0000-0000-0000-000000000000	24964455-653c-4261-b137-8d9f8b6e974f	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-07-04 17:41:43.583988+00	
00000000-0000-0000-0000-000000000000	455aec56-18cb-460f-af71-612c418b446a	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-04 17:41:51.880199+00	
00000000-0000-0000-0000-000000000000	747a66e2-c7f8-4591-988f-25e3918c765b	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-04 18:40:04.597521+00	
00000000-0000-0000-0000-000000000000	063b3d2e-3d57-41ed-a640-5eb513f13aff	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-04 18:40:04.599347+00	
00000000-0000-0000-0000-000000000000	363d788b-a2b4-43d1-a02d-f0df76f01942	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-04 19:28:29.992772+00	
00000000-0000-0000-0000-000000000000	40b2fb3b-0968-4fce-8422-afc2fdd4df93	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-04 19:56:13.340365+00	
00000000-0000-0000-0000-000000000000	3c279b19-ea6a-4dca-b71b-0a8c0805dd85	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-04 19:56:13.342106+00	
00000000-0000-0000-0000-000000000000	dc71577b-e459-4eff-90ee-bf275d4ed523	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-04 19:57:03.288727+00	
00000000-0000-0000-0000-000000000000	4c393323-06ad-4f26-af65-b2b194307ea5	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-04 19:57:03.289319+00	
00000000-0000-0000-0000-000000000000	352ae8f7-d6dc-47a2-84b1-a239331603f0	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-05 00:56:22.208997+00	
00000000-0000-0000-0000-000000000000	79467e76-272c-4512-a501-1ded274a4581	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-05 00:56:22.211179+00	
00000000-0000-0000-0000-000000000000	359616a2-3d6e-48f4-9100-a0b465bf6f3e	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-05 01:00:57.334838+00	
00000000-0000-0000-0000-000000000000	0c8b29a7-69d1-45de-87b8-aaa6cbf0e829	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-05 01:00:57.337398+00	
00000000-0000-0000-0000-000000000000	0478efdd-e7cf-4b7f-bed1-a29cdd6dfa19	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-05 01:38:32.288567+00	
00000000-0000-0000-0000-000000000000	f3dfebb1-dec3-4a2f-b5e5-71a40bda5ccd	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-05 01:38:32.29065+00	
00000000-0000-0000-0000-000000000000	c117cc7e-7438-4c85-a9d9-092932d5184b	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-05 01:40:50.391932+00	
00000000-0000-0000-0000-000000000000	d2e90082-bf31-4d70-9c6e-03b640aa481e	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-05 01:40:50.393637+00	
00000000-0000-0000-0000-000000000000	56dcbcc3-f8d4-471b-bb05-aeba556b03f6	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-05 17:50:53.630346+00	
00000000-0000-0000-0000-000000000000	4d548a3c-24e0-4342-928f-064fb3701e4c	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-05 17:50:53.631351+00	
00000000-0000-0000-0000-000000000000	486d474d-2905-48e3-9b68-e89dae31a7a6	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-05 17:56:28.105301+00	
00000000-0000-0000-0000-000000000000	a79c2c97-5c01-41e4-8b33-f2382400ee46	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-05 17:56:28.1063+00	
00000000-0000-0000-0000-000000000000	27a76067-01b8-4436-a500-bf2e5ef2c502	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-05 18:30:26.311171+00	
00000000-0000-0000-0000-000000000000	ee3d6b66-fcc0-4052-bc57-908430e7fb17	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-05 18:30:26.313406+00	
00000000-0000-0000-0000-000000000000	9843f4fd-76cd-4221-9bfc-413891c6bbdd	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-07-05 18:31:52.085239+00	
00000000-0000-0000-0000-000000000000	48e74524-f0d9-4702-aabf-c17e7b040f20	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-07-05 18:34:08.934912+00	
00000000-0000-0000-0000-000000000000	c61e40f1-e6f0-4f37-8e82-65dd0642bdb7	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-05 18:34:13.996656+00	
00000000-0000-0000-0000-000000000000	5105cb6e-a6a0-4387-a29a-bda13791efdc	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-05 18:48:39.746404+00	
00000000-0000-0000-0000-000000000000	894d84c6-9f00-49f0-81c0-e8ebffb3391a	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-05 21:14:17.638834+00	
00000000-0000-0000-0000-000000000000	4d27301f-4105-4a17-bc0e-f29342e1fedf	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-05 21:23:28.164103+00	
00000000-0000-0000-0000-000000000000	40a7c4ac-8894-4f6f-960c-1e517a626bcd	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-05 21:23:28.165672+00	
00000000-0000-0000-0000-000000000000	152b1afb-34eb-4980-95eb-537c49214774	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-05 21:30:58.124375+00	
00000000-0000-0000-0000-000000000000	ae16fa00-e2f9-4a6d-a340-d28c7c3e1c05	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-05 21:30:58.126256+00	
00000000-0000-0000-0000-000000000000	774a1036-7ef3-41aa-8c04-9adba3d13b1a	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-05 22:12:36.71091+00	
00000000-0000-0000-0000-000000000000	e5abae64-6827-4225-aeb0-1b71dbb2deb6	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-05 22:12:36.711922+00	
00000000-0000-0000-0000-000000000000	4ef99e92-5292-4fb2-94db-76525df97654	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-05 22:21:57.266326+00	
00000000-0000-0000-0000-000000000000	a1c88fa4-e48b-442d-87e6-31a9ee04a9ca	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-05 22:21:57.267283+00	
00000000-0000-0000-0000-000000000000	0063f712-d817-4e15-9218-b3da4a77d086	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-05 23:12:15.36266+00	
00000000-0000-0000-0000-000000000000	c25ba3ae-2bdb-4575-a7ab-41da65c8da4f	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-05 23:12:15.364393+00	
00000000-0000-0000-0000-000000000000	051b5db9-ee94-4f1c-b076-9ea937008b02	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-05 23:15:19.881579+00	
00000000-0000-0000-0000-000000000000	73ccce6c-6312-4b23-8670-096bd36cc908	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-05 23:15:19.8825+00	
00000000-0000-0000-0000-000000000000	81154af9-8346-4b0b-9c0f-3cefac583a7d	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-05 23:20:03.686021+00	
00000000-0000-0000-0000-000000000000	b970a376-c4e4-44d1-959b-1348294517cc	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-05 23:20:03.688076+00	
00000000-0000-0000-0000-000000000000	135f0d51-e208-45b7-87d2-063743986a49	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-06 00:10:53.109062+00	
00000000-0000-0000-0000-000000000000	b37b3f60-72d7-4e92-bb13-d3dab239ad8a	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-06 00:10:53.10999+00	
00000000-0000-0000-0000-000000000000	430ce5c1-3697-43f9-a717-f7fa8eda30c8	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-06 00:39:32.954597+00	
00000000-0000-0000-0000-000000000000	84ab4119-5673-4ea4-898c-e08a469951bb	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-06 00:39:32.955535+00	
00000000-0000-0000-0000-000000000000	6f788def-2360-4b1f-999b-0ccb7917abbd	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-06 00:45:53.719618+00	
00000000-0000-0000-0000-000000000000	92b1a8fc-62e1-49ac-b89c-03f56ffad3e8	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-06 00:45:53.720552+00	
00000000-0000-0000-0000-000000000000	a11b1cab-f67b-460a-af0d-c6cc86b0aaf7	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-06 13:47:42.951145+00	
00000000-0000-0000-0000-000000000000	6764e315-444a-4876-9534-f4a3205685b4	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-06 13:58:49.572809+00	
00000000-0000-0000-0000-000000000000	9af607ae-f9e8-4c43-9e9a-9cc7a5f9a7d2	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-06 13:58:49.573675+00	
00000000-0000-0000-0000-000000000000	08c1e098-9e6c-4ac2-b4ad-dd8d8b1c7321	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-06 13:59:40.527768+00	
00000000-0000-0000-0000-000000000000	7d8d24a1-02f0-42c9-90df-a6ecf05d0175	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-06 13:59:40.528324+00	
00000000-0000-0000-0000-000000000000	a8638b4d-0958-4f30-a6c3-07289a42087e	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-06 14:57:31.810261+00	
00000000-0000-0000-0000-000000000000	857c15e0-04d1-4a82-9de9-f8818da44fc6	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-06 14:57:31.811125+00	
00000000-0000-0000-0000-000000000000	5520026e-8e4d-4ed1-aadb-041df0d39f8b	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-06 14:58:01.785469+00	
00000000-0000-0000-0000-000000000000	6f7834ca-cb84-4fc7-ad36-d79bb635cb26	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-06 14:58:01.786155+00	
00000000-0000-0000-0000-000000000000	8c9cabff-3826-4f30-a048-282c99e21cb5	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-06 15:10:37.053331+00	
00000000-0000-0000-0000-000000000000	4e8d51c6-ba79-4737-9a4d-120acc2c53d8	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-06 15:10:37.05431+00	
00000000-0000-0000-0000-000000000000	3ad024e7-7262-4332-aa82-7b77666b5c15	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-06 18:37:18.669263+00	
00000000-0000-0000-0000-000000000000	5bb82713-a5a8-4914-9b7d-6004da8764fb	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-06 18:37:18.671182+00	
00000000-0000-0000-0000-000000000000	09fbb8fc-2d76-4e5c-8dfd-fdd06fca75d7	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-07 07:48:10.997001+00	
00000000-0000-0000-0000-000000000000	37ae03b3-9f73-4b61-a5fd-541075a4f200	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-07 07:48:10.998011+00	
00000000-0000-0000-0000-000000000000	d357e75d-e0fb-4e11-a2f4-fa543e69a352	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-07 07:55:54.880318+00	
00000000-0000-0000-0000-000000000000	ded3ee7e-70e1-4979-bd40-adfa07ee142b	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-07 07:55:54.881309+00	
00000000-0000-0000-0000-000000000000	d20c7519-6671-4151-9366-cb64aadf57c4	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-07 08:27:12.927346+00	
00000000-0000-0000-0000-000000000000	99f3faf7-6ae5-488b-bd9e-f28349e23d3d	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-07 08:27:12.928244+00	
00000000-0000-0000-0000-000000000000	12ccb26a-6081-4b7c-9c30-ff47a0e1d7d3	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-07 16:40:27.565765+00	
00000000-0000-0000-0000-000000000000	8e821462-9233-448f-9c2c-58460fceef96	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-07 16:40:27.572452+00	
00000000-0000-0000-0000-000000000000	d7f6951f-6c23-46e2-8b15-765b34ddd32b	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-07 16:41:33.389598+00	
00000000-0000-0000-0000-000000000000	bd302483-7acd-4ed3-b0b7-11c7446479ae	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-07 16:41:33.390563+00	
00000000-0000-0000-0000-000000000000	c11b326a-b789-48b9-8125-5c64b48b03e5	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-07-07 17:24:20.829575+00	
00000000-0000-0000-0000-000000000000	663dca9e-51ba-41d8-ad39-c19ab42f1e4f	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-07 17:24:39.080661+00	
00000000-0000-0000-0000-000000000000	0fa7a807-3ce3-4819-8ab7-5d74d629334f	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-07 17:41:34.127419+00	
00000000-0000-0000-0000-000000000000	8f98712a-60f9-459b-a273-3be1a13d128c	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-07 19:37:48.289226+00	
00000000-0000-0000-0000-000000000000	1053be9a-b25a-421a-b535-bcc783d7224d	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-07 19:37:48.290221+00	
00000000-0000-0000-0000-000000000000	be0017c9-e50f-4149-ac95-4963db55f2a8	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-07 21:26:52.506758+00	
00000000-0000-0000-0000-000000000000	74997de7-b64e-4035-9add-0969cf362178	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-07 21:27:15.769053+00	
00000000-0000-0000-0000-000000000000	b9ec4952-7169-44f4-a63b-afb1a2da3e22	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-08 02:36:35.164169+00	
00000000-0000-0000-0000-000000000000	f9f42a02-8dee-446c-894e-bea527181167	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-08 03:01:04.911224+00	
00000000-0000-0000-0000-000000000000	85aff992-22b8-4d5d-aaea-fc8e77830053	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-08 03:30:56.618633+00	
00000000-0000-0000-0000-000000000000	6fbbe539-e9c0-47a4-a1b9-91f0b61184f1	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-08 15:01:02.234747+00	
00000000-0000-0000-0000-000000000000	a12732c4-2d21-4bca-bc34-91406084d640	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-08 15:01:02.236411+00	
00000000-0000-0000-0000-000000000000	07138ff7-2115-46ca-a30d-10ec5cf2fee6	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-09 03:29:54.05465+00	
00000000-0000-0000-0000-000000000000	028ad0d1-8a00-442d-9681-8d6199bdbb1d	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-09 03:29:54.056231+00	
00000000-0000-0000-0000-000000000000	16a3b4f0-d4a9-467a-84c6-9d90edde7687	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-09 03:34:18.03494+00	
00000000-0000-0000-0000-000000000000	77a5bbbb-4fe5-4333-b15d-9fd365c024c8	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-09 03:34:18.036712+00	
00000000-0000-0000-0000-000000000000	fcfe394d-6bd9-43af-b53b-7e0c2cc41d00	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-09 04:07:14.278873+00	
00000000-0000-0000-0000-000000000000	a0bffe92-f9a8-42b8-8439-b1fc616facca	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-10 04:19:21.157064+00	
00000000-0000-0000-0000-000000000000	6b38f9e3-4fdd-4424-93da-a6652439b7f4	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-10 04:19:21.16001+00	
00000000-0000-0000-0000-000000000000	34386a0d-af41-45d8-9efb-61e35b610f97	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-10 04:21:43.618376+00	
00000000-0000-0000-0000-000000000000	3503a931-9c3b-45ee-a12e-066852230140	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-10 04:24:44.449309+00	
00000000-0000-0000-0000-000000000000	29675603-8803-44b1-91c7-3ac5789743a7	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-10 04:24:44.452302+00	
00000000-0000-0000-0000-000000000000	91f92296-a7a6-4557-9452-21f9269f1602	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-07-10 04:37:28.483819+00	
00000000-0000-0000-0000-000000000000	cf07876e-0b5f-461d-9546-cbd57acf4c39	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-10 04:37:36.035582+00	
00000000-0000-0000-0000-000000000000	f8223839-f21a-48a5-964b-8d06b987165b	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-07-10 04:40:39.42856+00	
00000000-0000-0000-0000-000000000000	b5fa910a-957b-4462-9273-06f0ede635d4	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-10 04:40:51.577235+00	
00000000-0000-0000-0000-000000000000	7760c3fc-456c-46ee-ba87-48b04272b6ba	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-07-10 04:41:44.034557+00	
00000000-0000-0000-0000-000000000000	8293736f-8954-45db-b019-569cdad8db2f	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-10 04:41:49.235001+00	
00000000-0000-0000-0000-000000000000	14053b02-2b52-4b73-9c32-ccfea8bbc769	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-10 16:30:14.717246+00	
00000000-0000-0000-0000-000000000000	d90e7765-7f6a-4df6-b688-8c6125adfbde	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-10 16:30:14.719509+00	
00000000-0000-0000-0000-000000000000	f62c8a45-e53b-4779-be90-472909aa85fd	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-10 17:30:37.992545+00	
00000000-0000-0000-0000-000000000000	85bc0be3-d12f-4e2b-8972-3c13bc97a373	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-10 17:30:37.993596+00	
00000000-0000-0000-0000-000000000000	2b4c0f7d-d5b0-4071-9d58-55ce1fe45f51	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-10 18:30:55.028496+00	
00000000-0000-0000-0000-000000000000	7da84c90-7acf-4e4b-8d0f-037e5554b8b5	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-10 18:30:55.032135+00	
00000000-0000-0000-0000-000000000000	ef4041eb-b65f-49c4-b5a9-c9fe4582dea0	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-10 20:01:07.85118+00	
00000000-0000-0000-0000-000000000000	b3c502d0-8ee6-4c3b-9f23-d3ac4e16cebc	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-10 20:01:07.852751+00	
00000000-0000-0000-0000-000000000000	fed28fa2-45d5-4f28-88d5-b4ed813c0f0f	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-10 21:13:34.44897+00	
00000000-0000-0000-0000-000000000000	39e58995-6b59-41a8-8c0e-55d87484715e	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-10 21:13:34.450974+00	
00000000-0000-0000-0000-000000000000	9e8d68a4-1df2-47ef-8e4c-a14e9fe34bd3	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-07-10 21:26:22.36463+00	
00000000-0000-0000-0000-000000000000	40d1cc09-de26-46cc-83d1-1710134c78ff	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-10 21:26:34.377396+00	
00000000-0000-0000-0000-000000000000	034dface-d352-46f5-91fa-94966b8f3f4e	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-10 21:34:36.804561+00	
00000000-0000-0000-0000-000000000000	a12ff14d-4c91-47f3-831f-5df5c844f4cf	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-10 22:25:20.233439+00	
00000000-0000-0000-0000-000000000000	622d83ef-b37b-4df9-aea0-cc6e0c578539	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-10 22:25:20.236861+00	
00000000-0000-0000-0000-000000000000	dd195ca1-9805-4317-91f8-1476c514be1b	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-10 22:32:57.480648+00	
00000000-0000-0000-0000-000000000000	156cdb85-0dbe-4e87-a487-0c825a00bd19	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-10 22:32:57.483999+00	
00000000-0000-0000-0000-000000000000	ecbcd0a9-9174-40f2-8844-c2c374ef4c63	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-10 23:16:08.616035+00	
00000000-0000-0000-0000-000000000000	da65406f-652e-4a9c-91ed-b4dd40ee1965	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-10 23:23:27.659059+00	
00000000-0000-0000-0000-000000000000	aaf3b441-88e0-4085-ad52-fa3e9d9b9ec3	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-10 23:23:27.659963+00	
00000000-0000-0000-0000-000000000000	0d8f950b-cf37-47de-9b65-6986ac300aab	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-10 23:31:10.826537+00	
00000000-0000-0000-0000-000000000000	5fd91388-fd2f-4524-933d-39d396f01c1a	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-10 23:31:10.828247+00	
00000000-0000-0000-0000-000000000000	10966558-2a80-4500-97e2-a4e2af2f7944	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-11 01:55:51.903758+00	
00000000-0000-0000-0000-000000000000	98bab3b9-8372-496d-87e4-fdb029078b90	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-11 01:55:51.905359+00	
00000000-0000-0000-0000-000000000000	4a8d4fcc-b5f5-4396-89a7-a8ec11778656	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-11 01:57:56.689255+00	
00000000-0000-0000-0000-000000000000	729ae4aa-7a9d-42ef-bb3c-fb36828bbcec	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-11 01:57:56.691074+00	
00000000-0000-0000-0000-000000000000	46b53833-20e6-4ca2-bf21-6137fec2dc4b	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-07-11 02:04:04.507769+00	
00000000-0000-0000-0000-000000000000	7f1391a2-2fe2-4a0a-afa5-92395359c9ec	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-11 02:32:40.480635+00	
00000000-0000-0000-0000-000000000000	7a89b10e-2162-4378-845b-63196c2448a2	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-11 03:26:12.257741+00	
00000000-0000-0000-0000-000000000000	c443868a-580b-4a3f-827b-bad224fb9251	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-11 03:39:50.363659+00	
00000000-0000-0000-0000-000000000000	44d03fe7-a224-4229-bc9b-2c31f35b0954	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-11 03:39:50.364529+00	
00000000-0000-0000-0000-000000000000	ff488069-e9ee-4462-92e8-c4a9d83d475b	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-11 04:28:15.693371+00	
00000000-0000-0000-0000-000000000000	ca6b4cbf-f957-40a7-b9c6-704e3b9fef33	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-11 17:27:28.908624+00	
00000000-0000-0000-0000-000000000000	a6199de7-6c0e-45e6-ac79-73a5f46b9385	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-11 17:27:28.910371+00	
00000000-0000-0000-0000-000000000000	46b407bb-a668-4251-a519-f6cac88c2a4f	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-11 19:58:09.424907+00	
00000000-0000-0000-0000-000000000000	b79a76a1-342e-483b-8742-a5ff313325a5	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-11 19:58:09.427782+00	
00000000-0000-0000-0000-000000000000	04152304-00e5-4f0d-b20b-d4084d1f671c	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-11 23:54:42.325839+00	
00000000-0000-0000-0000-000000000000	d2ce5751-25a5-4407-b84a-63733b98bd71	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-11 23:54:42.328013+00	
00000000-0000-0000-0000-000000000000	da6afb77-e592-48c1-b984-3175cd7b613e	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-12 21:30:09.620816+00	
00000000-0000-0000-0000-000000000000	23db683f-34b8-4529-9d64-216c154a409c	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-12 21:30:09.624247+00	
00000000-0000-0000-0000-000000000000	9025c337-61f2-4d04-a472-eb144a4d10f3	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-14 13:46:31.411135+00	
00000000-0000-0000-0000-000000000000	0f5d79b7-361d-4dba-8823-0210f54ae0bb	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-14 13:46:31.412043+00	
00000000-0000-0000-0000-000000000000	379a3c08-505f-4c98-bebc-0f614e00af49	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-14 19:14:45.157186+00	
00000000-0000-0000-0000-000000000000	f6fb7a0a-9653-4852-8050-a2ce7c145aa3	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-14 19:14:45.161351+00	
00000000-0000-0000-0000-000000000000	dcb0ad2e-7dc5-4633-abcb-ebc0281f7f80	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-15 23:22:23.65426+00	
00000000-0000-0000-0000-000000000000	b8ecb30e-88de-4915-92a4-e64d84326e2b	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-15 23:22:23.655192+00	
00000000-0000-0000-0000-000000000000	7820360d-0f39-4f14-90b4-40f35a89b9c3	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-15 23:23:45.446417+00	
00000000-0000-0000-0000-000000000000	c01ee371-b1b2-4fbe-a3df-b17ac739de8d	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-15 23:23:45.447043+00	
00000000-0000-0000-0000-000000000000	874d3ae3-4b18-4082-972b-460c70d89f23	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-16 01:50:14.966805+00	
00000000-0000-0000-0000-000000000000	c7f55390-15a7-4ffb-a146-598f38920dee	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-16 01:50:14.967896+00	
00000000-0000-0000-0000-000000000000	7860d608-2ed7-47a0-97b6-0728fdcc3b88	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-17 17:06:08.775996+00	
00000000-0000-0000-0000-000000000000	f4634911-e5f6-41b1-8c9c-f47303ff2447	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-17 17:06:08.77691+00	
00000000-0000-0000-0000-000000000000	530a86b5-1bf1-4700-9ba9-336455318571	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-17 21:17:21.268794+00	
00000000-0000-0000-0000-000000000000	b447b225-056c-484f-b101-123f30719c8e	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-17 21:17:21.269621+00	
00000000-0000-0000-0000-000000000000	acc06371-15b3-420d-818c-bf02f8fbce2f	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-17 22:55:13.107314+00	
00000000-0000-0000-0000-000000000000	222a48e5-8ed0-4598-a42e-bb39493684bc	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-17 22:55:13.108836+00	
00000000-0000-0000-0000-000000000000	cc23d115-d7f4-40b5-b644-7c9b5fee002a	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-18 23:10:36.253245+00	
00000000-0000-0000-0000-000000000000	4c45067c-1b83-4410-8b03-91f6323e29ff	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-18 06:51:38.566941+00	
00000000-0000-0000-0000-000000000000	5ffc5270-81a6-47a6-b431-153e1bc9c0dc	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-18 06:51:38.571171+00	
00000000-0000-0000-0000-000000000000	c76d90a5-ad70-47e6-a331-c84758049688	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-18 06:52:14.201732+00	
00000000-0000-0000-0000-000000000000	31c8ac22-4b66-4284-87f0-9c990308aa6e	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-18 06:52:14.202453+00	
00000000-0000-0000-0000-000000000000	a73f1d7d-4dae-4107-8c7d-9e1d35d93a24	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-18 07:53:45.173137+00	
00000000-0000-0000-0000-000000000000	37fc1224-9643-46b8-b310-06b3cdaa8d44	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-18 07:53:45.175657+00	
00000000-0000-0000-0000-000000000000	91525dab-229a-462b-ae18-976df7dd7bae	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-18 07:56:28.642252+00	
00000000-0000-0000-0000-000000000000	6b4076a2-d76e-4a52-99a1-0911cfe4bcc9	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-18 07:56:28.643176+00	
00000000-0000-0000-0000-000000000000	0137a8f8-19a4-40b6-940d-40894a7fac23	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-18 09:00:57.355629+00	
00000000-0000-0000-0000-000000000000	acaa40d4-19d0-4dee-86c8-a6c02b1eef80	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-18 09:00:57.3566+00	
00000000-0000-0000-0000-000000000000	db3f5647-41b4-4f01-8918-3573eecb5247	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-18 09:01:20.381029+00	
00000000-0000-0000-0000-000000000000	bbf01cd8-a035-430a-93f4-b8f62a0f2a53	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-18 09:01:20.38203+00	
00000000-0000-0000-0000-000000000000	63cff53e-1d71-4290-9f73-99c0e6c25a6d	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-07-18 09:02:22.261797+00	
00000000-0000-0000-0000-000000000000	45ec7bf2-ad42-4b6a-9868-dfd95fb8a8e0	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-18 09:02:28.058462+00	
00000000-0000-0000-0000-000000000000	824a12d0-c053-49db-8f8d-8dd091301001	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-18 20:27:32.717931+00	
00000000-0000-0000-0000-000000000000	f8fb2b07-ce93-44cd-bfca-cc150f19ed17	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-18 20:27:32.721639+00	
00000000-0000-0000-0000-000000000000	aba01942-8a5a-46de-b8e6-34a690a80cf0	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-07-18 20:27:39.525346+00	
00000000-0000-0000-0000-000000000000	a5e69ab0-7b17-431f-ab29-78d76b43693f	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-18 20:36:51.514329+00	
00000000-0000-0000-0000-000000000000	d558e617-db1e-48dc-be33-f5f2d4a2b47d	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-18 20:44:12.786032+00	
00000000-0000-0000-0000-000000000000	35f856f0-f56d-49d8-b4ad-3f48fd489ac5	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-07-18 20:48:03.541267+00	
00000000-0000-0000-0000-000000000000	c81a16cc-b4db-4298-8af5-6d5bee8b2840	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-18 20:48:17.785068+00	
00000000-0000-0000-0000-000000000000	8df527ca-d556-4a8f-905f-89a3ed8f2235	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-18 21:35:07.347547+00	
00000000-0000-0000-0000-000000000000	f1248190-9ace-42d8-b930-bda5ed4c2ae8	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-18 21:35:07.349338+00	
00000000-0000-0000-0000-000000000000	24c86a8a-d105-44f7-b642-09f9a8647570	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-18 21:48:29.363417+00	
00000000-0000-0000-0000-000000000000	be5f4fb9-6898-412a-96a4-215a054002aa	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-18 21:48:29.366331+00	
00000000-0000-0000-0000-000000000000	9bafd961-91d7-4e36-bdd4-0b69be7282dd	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-07-18 21:48:32.006172+00	
00000000-0000-0000-0000-000000000000	442c38a1-5638-4145-b5a1-5b43a9885c6f	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-18 22:00:33.771955+00	
00000000-0000-0000-0000-000000000000	f862d9a2-2895-4373-903c-ee90cdc283cd	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-18 22:12:14.545863+00	
00000000-0000-0000-0000-000000000000	2fffeb41-b4b9-499d-9c88-3f35429e466c	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-07-18 22:37:50.697227+00	
00000000-0000-0000-0000-000000000000	b15a8ec0-c9b3-49d9-bc38-dc6056486abe	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-18 22:37:55.215032+00	
00000000-0000-0000-0000-000000000000	e0df9b0b-7ac7-415d-8283-3633cbd0297b	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-18 23:10:36.252294+00	
00000000-0000-0000-0000-000000000000	938d1be3-997d-40cb-8734-53e43f7d99d0	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-18 23:36:09.324711+00	
00000000-0000-0000-0000-000000000000	6105aa8a-aa4b-442b-8693-c75cd590b333	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-18 23:36:09.328185+00	
00000000-0000-0000-0000-000000000000	8cf77434-2639-4905-a211-66217b6cdf63	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-19 00:38:40.338145+00	
00000000-0000-0000-0000-000000000000	72333c0a-5dd4-4716-8a93-452695679feb	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-19 00:38:40.33919+00	
00000000-0000-0000-0000-000000000000	4a44380c-2a68-4065-bae0-16a0b577e27c	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-19 00:52:55.816474+00	
00000000-0000-0000-0000-000000000000	287aa9b4-7e65-4cb3-942f-878e38e56756	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-19 00:53:28.663375+00	
00000000-0000-0000-0000-000000000000	8a7f930f-7df0-4c0d-80fd-f72fe8eae02b	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-19 00:53:28.663968+00	
00000000-0000-0000-0000-000000000000	e528af87-c7ee-4cc6-b164-92ce10931dcd	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-07-19 00:54:00.332317+00	
00000000-0000-0000-0000-000000000000	960d4aaf-ed6a-464e-b66f-839fc090e55d	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-19 00:54:09.119634+00	
00000000-0000-0000-0000-000000000000	23e965a8-95dd-412b-ae08-01461cae446f	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-19 00:55:04.985725+00	
00000000-0000-0000-0000-000000000000	b85e3d10-3623-4ada-867c-a13eeb2d0ce5	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-19 00:55:04.986385+00	
00000000-0000-0000-0000-000000000000	3710cb5a-9f1e-4be7-84a1-1edbea1a82e1	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-19 03:24:14.562527+00	
00000000-0000-0000-0000-000000000000	dcab1fcd-0f2c-4507-bfd0-9f2e1f8c5962	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-19 03:24:14.564739+00	
00000000-0000-0000-0000-000000000000	9d85fc38-3f67-405a-abe5-00505dc4ab4c	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-07-19 03:24:27.738572+00	
00000000-0000-0000-0000-000000000000	ff48dcef-353c-45c3-ada0-72a72aaaf7f2	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-19 03:24:39.790412+00	
00000000-0000-0000-0000-000000000000	3ea3efef-9294-407e-a945-3643c47a73b6	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-07-19 03:24:44.15615+00	
00000000-0000-0000-0000-000000000000	88622bd0-ad46-45eb-83e1-5fc235acedcb	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-19 03:48:44.751285+00	
00000000-0000-0000-0000-000000000000	d2874f87-a31c-4fee-a9cd-e46bd97428de	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-19 03:48:44.753193+00	
00000000-0000-0000-0000-000000000000	f1915535-90a0-4c8a-9400-8cb76610886a	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-19 04:00:44.079405+00	
00000000-0000-0000-0000-000000000000	433b5841-7d6e-4c7e-9525-553862a9bdce	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-07-19 04:05:19.57207+00	
00000000-0000-0000-0000-000000000000	81c5729d-8676-4bdd-ae41-cdbfb3dbb933	{"action":"user_signedup","actor_id":"da1368a1-9ed1-46ef-a7dc-56bf15ebeee4","actor_name":"Nicholas King","actor_username":"nicholas.king@columbiacloudworks.com","actor_via_sso":false,"log_type":"team","traits":{"provider":"google"}}	2025-07-19 04:05:27.497282+00	
00000000-0000-0000-0000-000000000000	bc51fb53-874e-4414-8bf6-f7e00c9ddb24	{"action":"logout","actor_id":"da1368a1-9ed1-46ef-a7dc-56bf15ebeee4","actor_name":"Nicholas King","actor_username":"nicholas.king@columbiacloudworks.com","actor_via_sso":false,"log_type":"account"}	2025-07-19 04:05:59.419964+00	
00000000-0000-0000-0000-000000000000	cb7423cb-d251-4831-938e-40a9edf00381	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-19 04:53:56.793787+00	
00000000-0000-0000-0000-000000000000	09127dfd-caa2-4093-bfac-a3b4095166d5	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-19 04:53:56.79475+00	
00000000-0000-0000-0000-000000000000	a22a7fe4-ba3c-4a29-a3b5-8086603484aa	{"action":"user_confirmation_requested","actor_id":"9c2bd213-3ce9-457c-a29e-dfafa277839d","actor_username":"matthewleehankins@gmail.com","actor_via_sso":false,"log_type":"user","traits":{"provider":"email"}}	2025-07-19 04:55:12.348514+00	
00000000-0000-0000-0000-000000000000	b167c4a4-4df6-4636-91a2-e8d12413c592	{"action":"user_signedup","actor_id":"9c2bd213-3ce9-457c-a29e-dfafa277839d","actor_username":"matthewleehankins@gmail.com","actor_via_sso":false,"log_type":"team","traits":{"provider":"email"}}	2025-07-19 04:55:53.984619+00	
00000000-0000-0000-0000-000000000000	10804965-dccf-45ee-8aca-1d6120f398b0	{"action":"logout","actor_id":"9c2bd213-3ce9-457c-a29e-dfafa277839d","actor_username":"matthewleehankins@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-07-19 04:56:08.941296+00	
00000000-0000-0000-0000-000000000000	b80daf91-fc86-4a46-bb57-fb0d2ec956c2	{"action":"login","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-19 04:56:30.558553+00	
00000000-0000-0000-0000-000000000000	ba3f731b-134a-4aee-bea5-04a9cf73b0ea	{"action":"login","actor_id":"9c2bd213-3ce9-457c-a29e-dfafa277839d","actor_username":"matthewleehankins@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-19 04:56:57.640169+00	
00000000-0000-0000-0000-000000000000	3791ee20-f7f8-4520-80c3-6cc1f745cb1c	{"action":"login","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-19 04:57:34.334002+00	
00000000-0000-0000-0000-000000000000	e23e4cc3-f3bf-4d6b-b2e3-5c07b94dc8bb	{"action":"logout","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"account"}	2025-07-19 04:59:58.398086+00	
00000000-0000-0000-0000-000000000000	02f245ce-ed28-49c7-a137-8f79d9e3f3c0	{"action":"login","actor_id":"9c2bd213-3ce9-457c-a29e-dfafa277839d","actor_name":"Matthew Hankins","actor_username":"matthewleehankins@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-19 05:00:28.792668+00	
00000000-0000-0000-0000-000000000000	825d54ca-bbb8-43ef-af7a-83052157aba5	{"action":"logout","actor_id":"9c2bd213-3ce9-457c-a29e-dfafa277839d","actor_name":"Matthew Hankins","actor_username":"matthewleehankins@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-07-19 05:01:04.450534+00	
00000000-0000-0000-0000-000000000000	69cfe998-a917-4af8-9690-26480d3c26bb	{"action":"login","actor_id":"9c2bd213-3ce9-457c-a29e-dfafa277839d","actor_name":"Matthew Hankins","actor_username":"matthewleehankins@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-19 05:01:36.884833+00	
00000000-0000-0000-0000-000000000000	6003d2f8-2f1c-4aa6-a8d4-98cb1d524cb6	{"action":"login","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-19 05:02:34.642835+00	
00000000-0000-0000-0000-000000000000	3eb4f69e-18bb-4892-9c60-8df6792bb87b	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-19 06:14:32.037435+00	
00000000-0000-0000-0000-000000000000	a116607d-344a-4a44-89e2-1ecaa5600b20	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-19 06:14:32.039116+00	
00000000-0000-0000-0000-000000000000	f8d75a99-aa35-4a47-8eec-b372ac369b52	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-19 07:42:15.400011+00	
00000000-0000-0000-0000-000000000000	1f3dd95e-3600-48ad-842f-1ffd04bf760b	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-19 07:42:15.402607+00	
00000000-0000-0000-0000-000000000000	1e3a50e2-1d4d-4004-8619-4fea6f6322ec	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-19 12:24:27.746524+00	
00000000-0000-0000-0000-000000000000	19255025-fc41-44b1-b51c-e0128bfe6d77	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-19 12:24:27.747568+00	
00000000-0000-0000-0000-000000000000	31c6bc6a-945c-408a-9d6c-3e9b76f617f0	{"action":"logout","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"account"}	2025-07-19 12:47:47.498914+00	
00000000-0000-0000-0000-000000000000	d11b4b37-0997-49c1-982d-f6a83f76d391	{"action":"token_refreshed","actor_id":"9c2bd213-3ce9-457c-a29e-dfafa277839d","actor_name":"Matthew Hankins","actor_username":"matthewleehankins@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-19 12:59:42.167905+00	
00000000-0000-0000-0000-000000000000	301181d1-0271-48b2-9a64-20cb12505744	{"action":"token_revoked","actor_id":"9c2bd213-3ce9-457c-a29e-dfafa277839d","actor_name":"Matthew Hankins","actor_username":"matthewleehankins@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-19 12:59:42.169287+00	
00000000-0000-0000-0000-000000000000	fb11437e-3dec-4722-b5ce-f4e4d12ffd90	{"action":"login","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-19 13:00:50.29683+00	
00000000-0000-0000-0000-000000000000	34c15be8-07ef-4ef9-a228-ec4de8324275	{"action":"login","actor_id":"9c2bd213-3ce9-457c-a29e-dfafa277839d","actor_name":"Matthew Hankins","actor_username":"matthewleehankins@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-19 13:01:36.415998+00	
00000000-0000-0000-0000-000000000000	aaef8fde-a660-4ed0-9132-b1fa1d63f33d	{"action":"login","actor_id":"9c2bd213-3ce9-457c-a29e-dfafa277839d","actor_name":"Matthew Hankins","actor_username":"matthewleehankins@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-19 13:04:50.665109+00	
00000000-0000-0000-0000-000000000000	c6e1699e-ff09-4985-824a-defb2eb69b6c	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-19 15:27:15.697862+00	
00000000-0000-0000-0000-000000000000	b5536994-c652-4fa7-a254-f9b4ad1f1730	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-19 15:27:15.698887+00	
00000000-0000-0000-0000-000000000000	e52e8208-664d-426f-86cf-6f42a0a9f0c9	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-19 17:38:40.880258+00	
00000000-0000-0000-0000-000000000000	5547df07-02fe-4799-b546-7f1549e121df	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-07-19 17:56:52.840567+00	
00000000-0000-0000-0000-000000000000	11141e82-02e2-4c47-8504-84e2a79be363	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-19 17:57:04.103583+00	
00000000-0000-0000-0000-000000000000	ef587072-a1db-471a-8635-8ba744220a42	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-07-19 18:07:41.282798+00	
00000000-0000-0000-0000-000000000000	5f9d7718-f1a8-45a4-b86c-cddb0dfc0913	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-19 18:07:46.689456+00	
00000000-0000-0000-0000-000000000000	1ba9b56e-23e6-4d9d-93a9-f760ad12ad7d	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-07-19 18:09:24.925521+00	
00000000-0000-0000-0000-000000000000	7546eaf0-db4e-4c67-acd8-35a2ec3446d3	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-19 18:10:39.759519+00	
00000000-0000-0000-0000-000000000000	9cce97d6-5aac-4ce1-9ab1-c731fbe39453	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-07-19 18:11:58.456109+00	
00000000-0000-0000-0000-000000000000	0fb9fd23-83a7-4933-ac47-f5be3a4b98e1	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-19 18:26:22.102428+00	
00000000-0000-0000-0000-000000000000	23f87e82-9755-459d-b393-7c756167ac85	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-07-19 18:42:28.251738+00	
00000000-0000-0000-0000-000000000000	92b87b3a-9ca6-4009-8280-4cec159372c9	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-19 18:43:47.156242+00	
00000000-0000-0000-0000-000000000000	b738d804-aadf-483a-9469-38b26224c74f	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-19 18:46:58.612703+00	
00000000-0000-0000-0000-000000000000	5bc2fc73-0881-47bc-83ed-44feca6a45b6	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-19 19:42:35.533938+00	
00000000-0000-0000-0000-000000000000	24b4dc8b-0cc1-4c08-8fd2-b43b9e7fe181	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-19 19:42:35.535115+00	
00000000-0000-0000-0000-000000000000	26139899-a3ae-45de-84b5-5753f1575ca8	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-19 19:47:31.332201+00	
00000000-0000-0000-0000-000000000000	894be470-cc91-469b-958f-344369a86fd6	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-19 19:47:31.334238+00	
00000000-0000-0000-0000-000000000000	f02affae-e8ed-44f7-98cf-5d7f7af0e619	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-19 20:24:54.454612+00	
00000000-0000-0000-0000-000000000000	634fc843-dc6d-49d9-9279-fc4eb21daaeb	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-19 22:43:40.813441+00	
00000000-0000-0000-0000-000000000000	22d54aaf-be32-455d-92d7-3356856e0b2b	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-19 22:43:40.814388+00	
00000000-0000-0000-0000-000000000000	c68b2b5f-035e-4c8d-9a35-dc451e190ddc	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-19 22:57:02.642788+00	
00000000-0000-0000-0000-000000000000	e185c019-4f99-4176-bc94-6e14ce9f407f	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-19 22:57:02.643738+00	
00000000-0000-0000-0000-000000000000	39800cd3-1bdf-4834-ae2d-0119981dd7f4	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-20 17:22:12.59397+00	
00000000-0000-0000-0000-000000000000	933ce36c-2e53-4211-b7a4-efa51ca55d4b	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-20 17:22:12.596188+00	
00000000-0000-0000-0000-000000000000	a183d8d5-3f8d-4231-ad69-f4bcb0105c01	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-20 17:23:00.183689+00	
00000000-0000-0000-0000-000000000000	3ffc9710-1099-4ae5-87ea-9b550da923ff	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-20 17:23:00.184367+00	
00000000-0000-0000-0000-000000000000	d72ff3d0-d601-4882-92ee-92021c9bc881	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-21 14:54:23.791767+00	
00000000-0000-0000-0000-000000000000	1f63f438-f940-428d-a653-3d05551fffaf	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-21 14:54:23.796416+00	
00000000-0000-0000-0000-000000000000	cd8a5fc6-3f36-4df9-9dac-c4a3225d7e03	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-21 14:55:47.253702+00	
00000000-0000-0000-0000-000000000000	aefcef56-6fd1-4090-95b5-04b6d2d4edfa	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-21 14:55:47.254598+00	
00000000-0000-0000-0000-000000000000	30a0d2c1-eb24-46b6-94f5-bb988c3af25e	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-21 15:17:28.151979+00	
00000000-0000-0000-0000-000000000000	2bb98fcc-172b-4526-9e76-a2f8ffe713df	{"action":"user_signedup","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"provider":"email","user_email":"brett@texas-wholesale.com","user_id":"efdd22e4-50be-43a5-883d-875339926902","user_phone":""}}	2025-07-21 15:33:30.802809+00	
00000000-0000-0000-0000-000000000000	eb80a105-7fa1-42b4-8811-0beed9960088	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-14 02:10:12.463214+00	
00000000-0000-0000-0000-000000000000	25974735-4bd6-4c83-bef5-aa63a3617dac	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-14 02:10:12.464105+00	
00000000-0000-0000-0000-000000000000	6281d78e-b9bc-453a-82d6-1d9b32b9ceb9	{"action":"user_recovery_requested","actor_id":"efdd22e4-50be-43a5-883d-875339926902","actor_username":"brett@texas-wholesale.com","actor_via_sso":false,"log_type":"user"}	2025-07-21 15:35:35.848938+00	
00000000-0000-0000-0000-000000000000	7aabc661-6f7a-4fe4-a8b3-0350a0a99044	{"action":"login","actor_id":"efdd22e4-50be-43a5-883d-875339926902","actor_username":"brett@texas-wholesale.com","actor_via_sso":false,"log_type":"account"}	2025-07-21 15:42:05.557595+00	
00000000-0000-0000-0000-000000000000	865bbb1e-8e4c-47db-a7bc-76c6b3214faa	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-21 15:47:54.182535+00	
00000000-0000-0000-0000-000000000000	709cd9f8-00f1-4f28-9e48-89a1fa1de80a	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-21 15:47:54.185513+00	
00000000-0000-0000-0000-000000000000	e52397e9-ac2e-4b23-a650-d7c59573d967	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-21 15:58:49.786307+00	
00000000-0000-0000-0000-000000000000	8beb4bdc-3978-4c7b-92d1-0c1daace7935	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-21 15:58:49.788042+00	
00000000-0000-0000-0000-000000000000	f65e7052-22f2-496c-b97f-cb11ad319499	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-21 17:20:08.758061+00	
00000000-0000-0000-0000-000000000000	3e9c860c-06fd-4584-800d-f3d9092bfe36	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-14 03:22:08.077941+00	
00000000-0000-0000-0000-000000000000	3ddf3b14-cdde-45a1-8554-75a60cba8fe3	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-07-21 17:20:08.75901+00	
00000000-0000-0000-0000-000000000000	17f43bd6-f566-40ca-a763-2921c8156a4e	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-21 18:29:53.217825+00	
00000000-0000-0000-0000-000000000000	4ce91c9c-012f-443d-a16d-eedd2badcdcc	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-21 18:29:53.218821+00	
00000000-0000-0000-0000-000000000000	79ab5296-6e99-449c-ace3-9f5c9f54b33a	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-22 00:32:55.348537+00	
00000000-0000-0000-0000-000000000000	7918bcc0-72b5-4af7-bd31-2a78c5bfa364	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-22 00:32:55.350361+00	
00000000-0000-0000-0000-000000000000	c57fb4cb-244b-4ccb-8bfe-71d11cadc3b6	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-22 01:15:16.903404+00	
00000000-0000-0000-0000-000000000000	be60499e-0751-4c79-9dae-5aedcdbc32f3	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-22 01:15:16.904354+00	
00000000-0000-0000-0000-000000000000	7052f207-29c3-4217-81c3-fb38e5b6433d	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-07-22 01:22:57.043937+00	
00000000-0000-0000-0000-000000000000	a1c5ee88-f415-4259-9fdd-b0b462df71d7	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-22 01:57:54.067684+00	
00000000-0000-0000-0000-000000000000	3585e913-cf48-4f8c-94d4-859ac4866d98	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-07-22 01:58:23.857406+00	
00000000-0000-0000-0000-000000000000	85b24338-dd46-42f9-a231-3b90b8941473	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-22 05:39:33.763892+00	
00000000-0000-0000-0000-000000000000	1e0ae025-4bcd-4de3-8e13-217a7f3c0afc	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-22 13:23:24.426455+00	
00000000-0000-0000-0000-000000000000	a781e9cc-1f60-4162-b9b8-7afbd6e025b2	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-22 13:23:24.429594+00	
00000000-0000-0000-0000-000000000000	ab8cb466-319b-470e-8060-488da650e848	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-07-22 14:04:42.947445+00	
00000000-0000-0000-0000-000000000000	c5973044-6c76-46cf-b08f-ea6c97cd9f78	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-22 14:05:01.104067+00	
00000000-0000-0000-0000-000000000000	383d59ca-1fd1-4761-a954-02bdf949c18f	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-14 02:24:07.854833+00	
00000000-0000-0000-0000-000000000000	f5cd46c9-e954-4c78-b641-6ec49661f899	{"action":"user_deleted","actor_id":"00000000-0000-0000-0000-000000000000","actor_username":"service_role","actor_via_sso":false,"log_type":"team","traits":{"user_email":"brett@texas-wholesale.com","user_id":"efdd22e4-50be-43a5-883d-875339926902","user_phone":""}}	2025-07-23 07:05:36.236684+00	
00000000-0000-0000-0000-000000000000	1a7d9080-bbbb-4962-b43c-2bb19a52fa21	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-23 23:04:29.324999+00	
00000000-0000-0000-0000-000000000000	0882300a-47aa-4c7c-bc0a-e8117fd2bcc6	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-07-23 23:05:20.645052+00	
00000000-0000-0000-0000-000000000000	0989cd79-224a-4813-b78b-3ffe5ef24d56	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-24 01:47:04.84943+00	
00000000-0000-0000-0000-000000000000	4d27cf02-0512-46cc-bf05-ac21d62c6b58	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-24 01:51:52.439878+00	
00000000-0000-0000-0000-000000000000	02d3312e-54a4-47a4-8102-224c56c1bd67	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-07-24 01:51:58.812704+00	
00000000-0000-0000-0000-000000000000	dbd0f7f4-8c38-4b47-b653-4e3aedba28fb	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-07-24 01:54:58.316918+00	
00000000-0000-0000-0000-000000000000	462b9481-14aa-4a6e-be94-49a0144c7163	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-24 01:55:17.14512+00	
00000000-0000-0000-0000-000000000000	975ba457-98d4-43e1-b257-1d2a28af4a98	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-24 02:02:19.692536+00	
00000000-0000-0000-0000-000000000000	2a2ff579-b1cf-4976-b871-d230e491fbd8	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-24 03:00:46.03897+00	
00000000-0000-0000-0000-000000000000	d5533555-6782-4f6d-bf00-b4621cff2c84	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-24 03:00:46.039892+00	
00000000-0000-0000-0000-000000000000	c14a2a8f-ee6a-442a-9458-1d04d0e4455c	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-24 03:02:09.931806+00	
00000000-0000-0000-0000-000000000000	4e5b8ef0-b416-4fe4-a01d-ed0def6fad5d	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-24 03:02:09.932744+00	
00000000-0000-0000-0000-000000000000	b8645867-5dce-426d-9587-7c0a1dc053e9	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-14 02:24:07.855773+00	
00000000-0000-0000-0000-000000000000	be46d833-7e55-4c45-86c1-e2461d77f6e5	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-24 04:16:25.534353+00	
00000000-0000-0000-0000-000000000000	ce526664-1f88-4e7d-a090-079904396959	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-24 04:16:25.536208+00	
00000000-0000-0000-0000-000000000000	91f11d06-a799-4e08-ad41-d3b04a89a787	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-07-24 04:16:29.776955+00	
00000000-0000-0000-0000-000000000000	71b99cb0-3937-4176-9dc3-0cf4631bbf8f	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-24 14:33:47.690753+00	
00000000-0000-0000-0000-000000000000	f58acd60-7c03-4a37-bc77-52dc2a48d8ca	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-24 14:35:15.193733+00	
00000000-0000-0000-0000-000000000000	dfccc2a3-b77d-4ff7-a9eb-878b28131d4e	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-24 17:55:09.158613+00	
00000000-0000-0000-0000-000000000000	ca4eee9c-ae4a-484a-a27c-0625f7212185	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-24 17:55:21.331758+00	
00000000-0000-0000-0000-000000000000	cdf449e5-8edb-4bfe-9a42-41654e94343c	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-24 17:55:21.332441+00	
00000000-0000-0000-0000-000000000000	d17fc454-a375-4776-b133-1f264fe13bc2	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-25 12:44:14.397881+00	
00000000-0000-0000-0000-000000000000	eedb22ee-619c-4171-acd8-7cbbfe5b22f2	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-25 12:44:14.400697+00	
00000000-0000-0000-0000-000000000000	9aa245e6-ae29-42ba-ae36-f816e57abff6	{"action":"user_confirmation_requested","actor_id":"5dfc39b8-8037-400a-a7f4-033192d62e44","actor_username":"justinpitera@gmail.com","actor_via_sso":false,"log_type":"user","traits":{"provider":"email"}}	2025-07-25 15:04:18.339042+00	
00000000-0000-0000-0000-000000000000	adee71a2-d5ab-47c8-bee2-efcb8ffd1dcf	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-14 03:16:54.289274+00	
00000000-0000-0000-0000-000000000000	b37d0754-c536-48ff-812d-cc74358a756c	{"action":"user_signedup","actor_id":"5dfc39b8-8037-400a-a7f4-033192d62e44","actor_name":"Justin Pitera","actor_username":"justinpitera@gmail.com","actor_via_sso":false,"log_type":"team","traits":{"provider":"google"}}	2025-07-25 15:04:31.688192+00	
00000000-0000-0000-0000-000000000000	1721a32a-8bb8-4f23-bc71-1275d5e85533	{"action":"logout","actor_id":"5dfc39b8-8037-400a-a7f4-033192d62e44","actor_name":"Justin Pitera","actor_username":"justinpitera@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-07-25 15:06:29.853664+00	
00000000-0000-0000-0000-000000000000	d3524d5f-c32e-4937-bb37-fb3b3b432ae1	{"action":"user_signedup","actor_id":"1b7e1856-ca69-4eee-8896-f7c1cf81f942","actor_name":"Mathias Rex Lindberg","actor_username":"mathiasrex2003@gmail.com","actor_via_sso":false,"log_type":"team","traits":{"provider":"google"}}	2025-07-25 19:40:43.263661+00	
00000000-0000-0000-0000-000000000000	a51239a3-473d-4ade-81e7-7287a6256c96	{"action":"token_refreshed","actor_id":"1b7e1856-ca69-4eee-8896-f7c1cf81f942","actor_name":"Mathias Rex Lindberg","actor_username":"mathiasrex2003@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-25 20:39:10.513688+00	
00000000-0000-0000-0000-000000000000	b01b18ae-5460-478e-ade5-88ddefe5e039	{"action":"token_revoked","actor_id":"1b7e1856-ca69-4eee-8896-f7c1cf81f942","actor_name":"Mathias Rex Lindberg","actor_username":"mathiasrex2003@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-25 20:39:10.51566+00	
00000000-0000-0000-0000-000000000000	f1daa1ab-c902-4624-b224-81ad005b3c88	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-26 05:40:45.463624+00	
00000000-0000-0000-0000-000000000000	4636b741-0dd7-47cd-9ebd-804d80aa6046	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-26 05:40:45.465576+00	
00000000-0000-0000-0000-000000000000	15308c73-8fb8-4064-84e8-813f002d1f42	{"action":"token_refreshed","actor_id":"1b7e1856-ca69-4eee-8896-f7c1cf81f942","actor_name":"Mathias Rex Lindberg","actor_username":"mathiasrex2003@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-26 13:05:34.94036+00	
00000000-0000-0000-0000-000000000000	c11ed25b-cd62-4994-a1ff-a1f39ca038c3	{"action":"token_revoked","actor_id":"1b7e1856-ca69-4eee-8896-f7c1cf81f942","actor_name":"Mathias Rex Lindberg","actor_username":"mathiasrex2003@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-26 13:05:34.944458+00	
00000000-0000-0000-0000-000000000000	fe3fe827-317e-41d7-b88f-3b4e89224131	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-26 16:55:38.74354+00	
00000000-0000-0000-0000-000000000000	895c501b-0834-49bb-adc2-d7d7dc712d55	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-26 16:55:38.744652+00	
00000000-0000-0000-0000-000000000000	1dd3e198-4141-4bd1-8182-00323a8ab892	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-07-26 16:55:42.79463+00	
00000000-0000-0000-0000-000000000000	95072720-400b-4db8-a5a8-83a491e2d465	{"action":"token_refreshed","actor_id":"1b7e1856-ca69-4eee-8896-f7c1cf81f942","actor_name":"Mathias Rex Lindberg","actor_username":"mathiasrex2003@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-27 13:03:00.446231+00	
00000000-0000-0000-0000-000000000000	8ce28e72-ae3a-4090-91a5-4d9cc86e0dd0	{"action":"token_revoked","actor_id":"1b7e1856-ca69-4eee-8896-f7c1cf81f942","actor_name":"Mathias Rex Lindberg","actor_username":"mathiasrex2003@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-27 13:03:00.449697+00	
00000000-0000-0000-0000-000000000000	8c94e11b-b720-4f5d-bc3b-d794f9169342	{"action":"token_refreshed","actor_id":"1b7e1856-ca69-4eee-8896-f7c1cf81f942","actor_name":"Mathias Rex Lindberg","actor_username":"mathiasrex2003@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-27 15:38:01.582794+00	
00000000-0000-0000-0000-000000000000	e566bf21-8010-4bf8-a06a-106d2a204d30	{"action":"token_revoked","actor_id":"1b7e1856-ca69-4eee-8896-f7c1cf81f942","actor_name":"Mathias Rex Lindberg","actor_username":"mathiasrex2003@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-27 15:38:01.584876+00	
00000000-0000-0000-0000-000000000000	d1f48e5b-9984-4de7-9f48-f4f0fe3af957	{"action":"login","actor_id":"5dfc39b8-8037-400a-a7f4-033192d62e44","actor_name":"Justin Pitera","actor_username":"justinpitera@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-27 16:57:22.463568+00	
00000000-0000-0000-0000-000000000000	9ddd8cd6-e802-4bbb-8a2e-3fba8ca4e1f5	{"action":"token_refreshed","actor_id":"1b7e1856-ca69-4eee-8896-f7c1cf81f942","actor_name":"Mathias Rex Lindberg","actor_username":"mathiasrex2003@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-27 16:59:11.315016+00	
00000000-0000-0000-0000-000000000000	6f036728-d26e-432a-995f-26ed5c432eca	{"action":"token_revoked","actor_id":"1b7e1856-ca69-4eee-8896-f7c1cf81f942","actor_name":"Mathias Rex Lindberg","actor_username":"mathiasrex2003@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-27 16:59:11.317749+00	
00000000-0000-0000-0000-000000000000	1f18646a-d6fc-4fe8-bc50-9ce4c59e1be0	{"action":"token_refreshed","actor_id":"5dfc39b8-8037-400a-a7f4-033192d62e44","actor_name":"Justin Pitera","actor_username":"justinpitera@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-28 00:04:13.708594+00	
00000000-0000-0000-0000-000000000000	e2943258-a5e2-4fb2-b996-a560b01efc6e	{"action":"token_revoked","actor_id":"5dfc39b8-8037-400a-a7f4-033192d62e44","actor_name":"Justin Pitera","actor_username":"justinpitera@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-28 00:04:13.710363+00	
00000000-0000-0000-0000-000000000000	d3a811ac-bb0f-4e7f-9c8e-fa3810f2b56e	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-28 12:17:18.850597+00	
00000000-0000-0000-0000-000000000000	4239c235-c1df-40a5-aef3-dc957ef5e33f	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-28 12:17:18.855126+00	
00000000-0000-0000-0000-000000000000	199809f7-1550-40f0-847e-221d5d097d4a	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-07-28 12:17:27.966197+00	
00000000-0000-0000-0000-000000000000	1646f612-fa0c-4456-aaee-02f92179fa5b	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-28 12:27:51.057181+00	
00000000-0000-0000-0000-000000000000	72b5ebf9-5d39-4e76-8be5-3ef4ac4d875d	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-07-28 12:30:33.813657+00	
00000000-0000-0000-0000-000000000000	1bc7cc2d-6f68-4766-a3b7-95f2c3fde206	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-28 19:10:47.323259+00	
00000000-0000-0000-0000-000000000000	fbdbcb27-f386-4516-aaff-0bf857485902	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-28 19:27:18.888804+00	
00000000-0000-0000-0000-000000000000	b8b5077e-5725-4350-bef6-a1d53ee04b32	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-28 20:04:38.649274+00	
00000000-0000-0000-0000-000000000000	10133478-7e50-4ddf-a931-90e684b8c107	{"action":"token_refreshed","actor_id":"1b7e1856-ca69-4eee-8896-f7c1cf81f942","actor_name":"Mathias Rex Lindberg","actor_username":"mathiasrex2003@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-28 20:56:02.749774+00	
00000000-0000-0000-0000-000000000000	385ee7a9-af12-403b-8958-afb08dccdc7a	{"action":"token_revoked","actor_id":"1b7e1856-ca69-4eee-8896-f7c1cf81f942","actor_name":"Mathias Rex Lindberg","actor_username":"mathiasrex2003@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-28 20:56:02.750708+00	
00000000-0000-0000-0000-000000000000	c9b54fa6-032c-46dc-a8c3-5f575d2706dc	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-28 21:12:58.579641+00	
00000000-0000-0000-0000-000000000000	84ddf0b3-9f07-4ff6-938a-f609c65c85d8	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-28 21:12:58.580584+00	
00000000-0000-0000-0000-000000000000	d6f2a96a-94e2-4762-a6ee-eb62ddcc5de2	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-28 22:18:46.960886+00	
00000000-0000-0000-0000-000000000000	b7f31701-5848-4db9-9601-f52e2210b7dc	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-28 22:18:46.961721+00	
00000000-0000-0000-0000-000000000000	5834f31d-a253-4a15-860a-502844342a56	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-28 22:23:54.132028+00	
00000000-0000-0000-0000-000000000000	e7791bb5-0f0f-4d29-8cb8-6ae8cdeadfbe	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-28 22:24:12.242639+00	
00000000-0000-0000-0000-000000000000	19a98bb7-9179-425d-b864-4ff70b5c51a3	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-28 22:24:12.243421+00	
00000000-0000-0000-0000-000000000000	6644d91b-76a9-4ec3-bb58-d7e370eb7af6	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-28 23:22:04.445423+00	
00000000-0000-0000-0000-000000000000	55743074-e981-4e26-a9c9-b0b5fe646272	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-28 23:22:04.446326+00	
00000000-0000-0000-0000-000000000000	ef9fe52a-40d9-4089-8ede-3ed1e7c86ddc	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-29 01:15:16.1246+00	
00000000-0000-0000-0000-000000000000	133a1843-def9-442e-9e29-a5cbdca54147	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-29 01:15:16.125489+00	
00000000-0000-0000-0000-000000000000	d206a12d-449b-4657-b600-f789f9d00ce4	{"action":"login","actor_id":"1b7e1856-ca69-4eee-8896-f7c1cf81f942","actor_name":"Mathias Rex Lindberg","actor_username":"mathiasrex2003@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-07-29 09:50:29.635769+00	
00000000-0000-0000-0000-000000000000	0487bc41-36fc-40e4-aaf9-26ba8311db71	{"action":"token_refreshed","actor_id":"1b7e1856-ca69-4eee-8896-f7c1cf81f942","actor_name":"Mathias Rex Lindberg","actor_username":"mathiasrex2003@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-29 11:03:35.867693+00	
00000000-0000-0000-0000-000000000000	13b0dbc8-642f-4534-b5f5-fb877776436c	{"action":"token_revoked","actor_id":"1b7e1856-ca69-4eee-8896-f7c1cf81f942","actor_name":"Mathias Rex Lindberg","actor_username":"mathiasrex2003@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-29 11:03:35.8686+00	
00000000-0000-0000-0000-000000000000	f7b84340-b7e3-479c-9367-d331aecd265e	{"action":"token_refreshed","actor_id":"1b7e1856-ca69-4eee-8896-f7c1cf81f942","actor_name":"Mathias Rex Lindberg","actor_username":"mathiasrex2003@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-29 12:42:58.393406+00	
00000000-0000-0000-0000-000000000000	7c0e6287-37a8-40f1-a4ec-99fb9fea0f6e	{"action":"token_revoked","actor_id":"1b7e1856-ca69-4eee-8896-f7c1cf81f942","actor_name":"Mathias Rex Lindberg","actor_username":"mathiasrex2003@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-29 12:42:58.395396+00	
00000000-0000-0000-0000-000000000000	d73f5131-d749-4ba5-b863-b2cf3cce9aa8	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-29 15:23:16.110618+00	
00000000-0000-0000-0000-000000000000	1a4adbf0-7235-4498-a8d2-067ceaad83b1	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-29 15:23:16.111665+00	
00000000-0000-0000-0000-000000000000	f9f03b52-a4ca-47f8-a373-1e4c453c3ba8	{"action":"token_refreshed","actor_id":"1b7e1856-ca69-4eee-8896-f7c1cf81f942","actor_name":"Mathias Rex Lindberg","actor_username":"mathiasrex2003@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-29 15:32:47.686536+00	
00000000-0000-0000-0000-000000000000	48a5094a-c3b6-4482-ae69-0324047c0ba7	{"action":"token_revoked","actor_id":"1b7e1856-ca69-4eee-8896-f7c1cf81f942","actor_name":"Mathias Rex Lindberg","actor_username":"mathiasrex2003@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-29 15:32:47.687446+00	
00000000-0000-0000-0000-000000000000	82d4cb0c-5ba5-4d87-9401-355f660e8c61	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-29 17:50:27.096809+00	
00000000-0000-0000-0000-000000000000	ac9e21f7-8c4b-49f2-b6c5-9a58b612fd92	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-29 17:50:27.097756+00	
00000000-0000-0000-0000-000000000000	50b623b7-501c-4084-9bf8-3d738e9413eb	{"action":"token_refreshed","actor_id":"1b7e1856-ca69-4eee-8896-f7c1cf81f942","actor_name":"Mathias Rex Lindberg","actor_username":"mathiasrex2003@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-29 19:28:52.575324+00	
00000000-0000-0000-0000-000000000000	a6abdeb6-2de0-42a8-b8e1-28d938464ecf	{"action":"token_revoked","actor_id":"1b7e1856-ca69-4eee-8896-f7c1cf81f942","actor_name":"Mathias Rex Lindberg","actor_username":"mathiasrex2003@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-29 19:28:52.576272+00	
00000000-0000-0000-0000-000000000000	01235850-f0d4-4478-9083-edec67b844ce	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-07-30 02:20:53.118599+00	
00000000-0000-0000-0000-000000000000	f01ff645-f288-4948-8ac8-ecbeea679860	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-30 02:21:07.754169+00	
00000000-0000-0000-0000-000000000000	a4975edd-9340-4f45-81f7-a895fc475541	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-30 02:21:07.754877+00	
00000000-0000-0000-0000-000000000000	b62e3716-df80-4252-80a8-44c3147ae6d2	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-30 03:05:18.388771+00	
00000000-0000-0000-0000-000000000000	f765011f-8dfb-43be-8baa-c49b193984b2	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-30 03:05:18.389744+00	
00000000-0000-0000-0000-000000000000	ad1e6638-c417-4c76-a831-53b1d77802a4	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-30 03:12:13.448702+00	
00000000-0000-0000-0000-000000000000	4c59d8fc-5565-43b9-9394-34b58db753ed	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-30 03:12:13.449582+00	
00000000-0000-0000-0000-000000000000	9abafac7-3327-45de-b8d9-fa99d496c295	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-30 03:19:01.51726+00	
00000000-0000-0000-0000-000000000000	bb210db8-c74d-4af9-8255-0fc032a4c9b5	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-30 03:19:01.51829+00	
00000000-0000-0000-0000-000000000000	77b61995-943f-43ea-9ff2-61d64503945d	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-30 03:20:05.755918+00	
00000000-0000-0000-0000-000000000000	f44edbaa-5973-40f2-b4b0-64c628345c91	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-30 03:20:05.756538+00	
00000000-0000-0000-0000-000000000000	d485c522-e644-41ed-8251-309af8618836	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-30 04:34:57.125685+00	
00000000-0000-0000-0000-000000000000	00476d65-d98d-4ba1-83e3-d0812ee379c6	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-30 04:34:57.126603+00	
00000000-0000-0000-0000-000000000000	c7a43af8-6e69-48cf-8020-a799871334ea	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-30 04:35:47.061735+00	
00000000-0000-0000-0000-000000000000	ed0231b4-05ea-4745-afa7-300a2d73c678	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-30 04:35:47.062417+00	
00000000-0000-0000-0000-000000000000	26a3843a-a28b-4600-8f71-36e3c26cd11c	{"action":"token_refreshed","actor_id":"1b7e1856-ca69-4eee-8896-f7c1cf81f942","actor_name":"Mathias Rex Lindberg","actor_username":"mathiasrex2003@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-30 10:55:34.172549+00	
00000000-0000-0000-0000-000000000000	a8170afc-d283-43eb-b4cf-4dc4fc104958	{"action":"token_revoked","actor_id":"1b7e1856-ca69-4eee-8896-f7c1cf81f942","actor_name":"Mathias Rex Lindberg","actor_username":"mathiasrex2003@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-30 10:55:34.173565+00	
00000000-0000-0000-0000-000000000000	955dbcc4-ad90-4dcd-84ce-639ec0bd67fe	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-30 16:08:12.2343+00	
00000000-0000-0000-0000-000000000000	b834ef4b-ec9b-4eae-bc1f-a105236ea6fe	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-30 16:08:12.23527+00	
00000000-0000-0000-0000-000000000000	531fadcf-19a2-4f96-b134-2cbb3a242407	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-30 17:17:47.208083+00	
00000000-0000-0000-0000-000000000000	d90ef624-9a55-45d8-99b9-f7324438cef9	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-30 17:17:47.209054+00	
00000000-0000-0000-0000-000000000000	4b3fdc3a-4016-48d2-adb4-b0aed7f6cd6f	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-30 17:18:11.148816+00	
00000000-0000-0000-0000-000000000000	48558ab5-47de-4d35-a699-a40304c991fa	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-30 17:18:11.149416+00	
00000000-0000-0000-0000-000000000000	d7e96906-bcaa-4dc5-b0db-e3816cb26fad	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-30 17:18:31.946812+00	
00000000-0000-0000-0000-000000000000	b1ea8838-3653-4421-b0b2-dae4f332a49f	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-30 17:18:31.947405+00	
00000000-0000-0000-0000-000000000000	3c498713-afed-47e7-bc71-701288b6dd4b	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-30 17:27:40.542626+00	
00000000-0000-0000-0000-000000000000	f2354001-87e9-4473-becf-0307cc680463	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-30 17:27:40.543512+00	
00000000-0000-0000-0000-000000000000	ab3f08d6-4e11-492a-9dc7-d93955338392	{"action":"token_refreshed","actor_id":"1b7e1856-ca69-4eee-8896-f7c1cf81f942","actor_name":"Mathias Rex Lindberg","actor_username":"mathiasrex2003@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-30 18:46:08.199485+00	
00000000-0000-0000-0000-000000000000	1a9a4967-a672-4f76-afc3-a3e78b663ffc	{"action":"token_revoked","actor_id":"1b7e1856-ca69-4eee-8896-f7c1cf81f942","actor_name":"Mathias Rex Lindberg","actor_username":"mathiasrex2003@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-30 18:46:08.200464+00	
00000000-0000-0000-0000-000000000000	7a3ccc7a-6138-4e0d-9c36-057c15122dce	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-30 19:42:27.951294+00	
00000000-0000-0000-0000-000000000000	c50df2e9-77a8-4f8d-a575-dc3c19d140dd	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-30 19:42:27.952214+00	
00000000-0000-0000-0000-000000000000	7a417e4c-39c8-41af-b15a-3eeca7b851b9	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-30 20:45:16.039444+00	
00000000-0000-0000-0000-000000000000	56f1ee1c-6fb9-4114-859f-df40aca1af43	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-30 20:45:16.040462+00	
00000000-0000-0000-0000-000000000000	628fd55a-d714-434f-a8d6-4f80c0dfefd2	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-30 20:45:26.983616+00	
00000000-0000-0000-0000-000000000000	2e2e3815-82b6-44d6-95cd-7b063def3934	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-30 20:45:26.984293+00	
00000000-0000-0000-0000-000000000000	7c51a0e1-56b4-4f37-b914-9e9329fe1b1d	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-31 13:00:50.610675+00	
00000000-0000-0000-0000-000000000000	39b17dcf-440b-45e9-81f1-7e4348fbcf26	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-31 13:00:50.611648+00	
00000000-0000-0000-0000-000000000000	aeeaca0d-4388-4bbc-9b61-7e0d5864cdd7	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-31 16:19:36.358602+00	
00000000-0000-0000-0000-000000000000	7a8d8aee-1484-46ec-bf63-62c7f889a953	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-31 16:19:36.359435+00	
00000000-0000-0000-0000-000000000000	0de366b3-6358-4588-b342-1911a8d0aefc	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-31 16:20:03.095647+00	
00000000-0000-0000-0000-000000000000	b12f5d4b-ba53-472d-9295-d4aab0ad28eb	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-31 16:20:03.096296+00	
00000000-0000-0000-0000-000000000000	f2cd4db8-5195-4092-a2e8-3114a1d79466	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-31 16:20:25.798372+00	
00000000-0000-0000-0000-000000000000	02fe45c3-2b92-4b05-9255-5c9981acc08e	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-31 16:20:25.798992+00	
00000000-0000-0000-0000-000000000000	ab674de5-01fc-4398-a4e8-3610a5aa4cff	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-31 16:20:38.61076+00	
00000000-0000-0000-0000-000000000000	659cca96-c885-439c-8f13-a0fd8a884188	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-31 16:20:38.612392+00	
00000000-0000-0000-0000-000000000000	5cef13ee-9032-49be-9440-8f663d002d78	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-31 17:25:22.70495+00	
00000000-0000-0000-0000-000000000000	7c492fad-ac51-4bb4-b878-0f9cb01f8836	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-31 17:25:22.708104+00	
00000000-0000-0000-0000-000000000000	6047ef34-0b19-42d4-af0b-8b4cc84b617f	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-31 17:25:33.158244+00	
00000000-0000-0000-0000-000000000000	b35adad8-0399-4bdd-a372-989737cea673	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-31 17:25:33.158851+00	
00000000-0000-0000-0000-000000000000	eb956e36-5662-464c-b4e9-d6d8ea9a5acd	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-31 18:51:40.47258+00	
00000000-0000-0000-0000-000000000000	75c21a07-ed42-4df1-8c65-557d9e7baed9	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-31 18:51:40.473597+00	
00000000-0000-0000-0000-000000000000	9f7866af-3bbd-446b-b55f-9d694c745a11	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-31 18:51:41.346593+00	
00000000-0000-0000-0000-000000000000	7ab484fc-6187-45c2-b416-530a30a2ed5b	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-31 18:51:41.347226+00	
00000000-0000-0000-0000-000000000000	a48248dd-0818-427a-b346-1b6762fad4b0	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-31 20:03:48.676936+00	
00000000-0000-0000-0000-000000000000	fd6ca4a1-862d-44d6-9adb-aa81d9f6d77a	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-31 20:03:48.677808+00	
00000000-0000-0000-0000-000000000000	5bb66b7c-8956-4f56-8e41-5643458fa9f0	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-31 20:32:23.320134+00	
00000000-0000-0000-0000-000000000000	3f4e5737-a922-49ae-b16f-c6ad667eb550	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-31 20:32:23.321061+00	
00000000-0000-0000-0000-000000000000	2375cdd5-c6ca-4d85-8174-8e273d28e9c7	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-31 20:33:43.087431+00	
00000000-0000-0000-0000-000000000000	3cf9d684-9631-4f85-a0dd-b46e71ba3d44	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-31 20:33:43.08844+00	
00000000-0000-0000-0000-000000000000	585f7d39-2eb3-4a97-9408-04313d527ce3	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-31 21:02:00.229289+00	
00000000-0000-0000-0000-000000000000	125117f8-4233-410c-a50c-4ea860aae839	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-31 21:02:00.230941+00	
00000000-0000-0000-0000-000000000000	e0648499-9171-4c75-a64a-51c904328861	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-31 21:30:38.353681+00	
00000000-0000-0000-0000-000000000000	929a7fe6-0ac8-4de6-8f0b-d3b16d4c219a	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-31 21:30:38.355404+00	
00000000-0000-0000-0000-000000000000	4bc02692-1259-4b96-8b60-7cda23c7e8aa	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-31 22:00:07.349344+00	
00000000-0000-0000-0000-000000000000	108b8e75-dc69-471e-94a7-30617b2daf54	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-31 22:00:07.350365+00	
00000000-0000-0000-0000-000000000000	152f5522-fd93-4efd-9525-5905941f9cfc	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-31 22:01:53.068076+00	
00000000-0000-0000-0000-000000000000	4ef1c199-dc26-42e2-b83c-f0df87b9d4cd	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-07-31 22:01:53.069032+00	
00000000-0000-0000-0000-000000000000	c6b15170-7a84-4628-9731-621d384c8067	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-31 23:06:02.334232+00	
00000000-0000-0000-0000-000000000000	50562e42-4291-425c-a255-63ea9d4fb206	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-31 23:06:02.337209+00	
00000000-0000-0000-0000-000000000000	268656d2-8325-4e86-b287-cfd9112db8f8	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-31 23:06:21.799709+00	
00000000-0000-0000-0000-000000000000	b9f90731-85a1-439b-9e84-7fdc60272b89	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-07-31 23:06:21.800328+00	
00000000-0000-0000-0000-000000000000	57127738-7f08-414e-bbac-9cb176b7a918	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-01 00:04:26.935499+00	
00000000-0000-0000-0000-000000000000	7ae1bc8d-008f-4112-a6f9-27a98ea741b9	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-01 00:04:26.936457+00	
00000000-0000-0000-0000-000000000000	f5bfd046-dd7d-44d3-ba9f-d99af531ac68	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-01 00:04:26.978463+00	
00000000-0000-0000-0000-000000000000	5d3724d8-28e5-4176-86a6-490e1703dce9	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-01 00:04:26.979126+00	
00000000-0000-0000-0000-000000000000	b8e0cbb0-a8e9-4f09-ae33-9072f0cd69ea	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-01 01:02:48.703913+00	
00000000-0000-0000-0000-000000000000	b367db42-12c9-432f-acd3-f29cfa9133d0	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-01 01:02:48.706792+00	
00000000-0000-0000-0000-000000000000	40cb638b-6698-4332-b3ce-d45ebd4c645a	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-01 01:02:58.62743+00	
00000000-0000-0000-0000-000000000000	1bf4c1b5-eed4-4c0c-a8f6-cc21e1cabbfc	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-01 01:02:58.628023+00	
00000000-0000-0000-0000-000000000000	ade52a0e-9c50-4e8f-b0fb-29463dc7147e	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-01 01:38:33.979284+00	
00000000-0000-0000-0000-000000000000	4e3c6a99-5274-4716-9409-95738d228dc8	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-01 01:38:33.980362+00	
00000000-0000-0000-0000-000000000000	78008963-de82-40d0-9b02-40f5e629dace	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-01 16:39:03.876602+00	
00000000-0000-0000-0000-000000000000	632e6878-55a1-4f7e-9bf0-3b4aeb810f3d	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-01 16:39:03.878682+00	
00000000-0000-0000-0000-000000000000	9404e68f-a704-4dec-b3bd-e5890d7c07c5	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-01 23:14:35.723673+00	
00000000-0000-0000-0000-000000000000	51503e9d-5e9e-4312-8516-ef819f01e589	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-01 23:14:35.7245+00	
00000000-0000-0000-0000-000000000000	acc316f7-c7e9-42e6-9abb-a0830a952142	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-02 00:51:51.986803+00	
00000000-0000-0000-0000-000000000000	102e6cd1-b5d9-4aeb-865d-617bf9ef86c7	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-02 00:51:51.988862+00	
00000000-0000-0000-0000-000000000000	425e7d49-9629-4998-b398-c931ae359d98	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-02 21:40:07.429695+00	
00000000-0000-0000-0000-000000000000	a0599e7b-3fb6-48d9-a772-a3c91791b6d1	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-02 21:40:07.430636+00	
00000000-0000-0000-0000-000000000000	f21fd8a1-d314-4e2a-837c-03017ba7e6b8	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-03 16:47:36.10829+00	
00000000-0000-0000-0000-000000000000	f6a14608-b94d-4314-9e9f-6c4921fbf78a	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-03 16:47:36.112401+00	
00000000-0000-0000-0000-000000000000	364aca51-4a9d-4a62-abf2-209caa82c78f	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-03 23:59:37.582236+00	
00000000-0000-0000-0000-000000000000	dfb84141-ae74-4c74-87b4-47780a81f6a5	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-03 23:59:37.583232+00	
00000000-0000-0000-0000-000000000000	7a3f3b69-8cf8-4193-a6b0-a6e749791ada	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-04 00:58:02.889152+00	
00000000-0000-0000-0000-000000000000	a764a03b-f37b-40f2-908f-1f96fba83954	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-04 00:58:02.891263+00	
00000000-0000-0000-0000-000000000000	73411491-6975-4ce5-b56d-1b28c2f81f95	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-04 02:00:11.925425+00	
00000000-0000-0000-0000-000000000000	24d9dc18-541f-4e7e-8ab4-8a9bcf5a2e57	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-04 02:00:11.926421+00	
00000000-0000-0000-0000-000000000000	107fde73-b9eb-46c7-a273-182bda8249e4	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-04 03:05:06.217059+00	
00000000-0000-0000-0000-000000000000	4c35d07b-6ee7-4348-b2e1-6a192942092a	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-04 03:05:06.217937+00	
00000000-0000-0000-0000-000000000000	7c0e54fa-5b24-4285-9c33-6891ea7586d4	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-04 04:10:06.268599+00	
00000000-0000-0000-0000-000000000000	988794a5-8074-48e3-a172-d49082efdfb5	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-04 04:10:06.269548+00	
00000000-0000-0000-0000-000000000000	9cdc246d-e616-4f9b-b934-e56814824dc8	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-04 05:08:07.071546+00	
00000000-0000-0000-0000-000000000000	3c48d0bb-2214-437b-ba89-60002a0925ef	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-04 05:08:07.072554+00	
00000000-0000-0000-0000-000000000000	81f07744-9b97-4740-8033-e4aca0c1602d	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-04 06:38:08.053709+00	
00000000-0000-0000-0000-000000000000	50fcd63a-8ef9-4d15-9c49-66bc548369e2	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-04 06:38:08.054768+00	
00000000-0000-0000-0000-000000000000	54cd34ca-0dbb-4622-9dec-91d9bfd6613e	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-04 15:46:02.307191+00	
00000000-0000-0000-0000-000000000000	8f0551ee-0651-4419-9db4-bbd3cca2ecff	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-04 15:46:02.30812+00	
00000000-0000-0000-0000-000000000000	42e59be3-836a-4092-863d-0b5260ad7e2d	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-04 17:42:00.370845+00	
00000000-0000-0000-0000-000000000000	9c57bcf5-ac7d-4f4a-a7e5-5a382b9bd7c9	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-04 17:42:00.372427+00	
00000000-0000-0000-0000-000000000000	a4059a2a-d938-447a-8be2-cd774049e573	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-04 18:30:58.177822+00	
00000000-0000-0000-0000-000000000000	7044765b-2393-4b36-b5e6-e9fa05b0fbb4	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-04 18:30:58.178692+00	
00000000-0000-0000-0000-000000000000	a89edb1f-12d8-427c-9a5d-5c6d6d89206c	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-04 18:30:58.197054+00	
00000000-0000-0000-0000-000000000000	d0b82163-633e-4af8-9a11-f55fc6b09b66	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-04 18:30:58.197595+00	
00000000-0000-0000-0000-000000000000	236bf0ca-f498-494d-a398-8e3b692a7024	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-04 18:31:20.732751+00	
00000000-0000-0000-0000-000000000000	2a0f3ec9-58ea-475e-beed-ee22f301793a	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-04 18:31:20.734827+00	
00000000-0000-0000-0000-000000000000	9e9d27c3-cff1-415b-8695-6b4f067864b2	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-04 19:29:12.488916+00	
00000000-0000-0000-0000-000000000000	e9a76baa-b135-4795-acf1-7da5ec16b0db	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-04 19:29:12.489804+00	
00000000-0000-0000-0000-000000000000	beaeb327-5bea-45d6-a2d0-39b85f698c34	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-04 19:29:28.278732+00	
00000000-0000-0000-0000-000000000000	eab2caed-244d-4370-bd43-075d15f1c052	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-04 19:29:28.279346+00	
00000000-0000-0000-0000-000000000000	5a08e01f-80b9-43c3-a815-5a923e8907ea	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-04 19:38:02.972956+00	
00000000-0000-0000-0000-000000000000	58de0e3a-4b37-4897-8e94-4cf3b3f664ca	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-04 19:38:02.973964+00	
00000000-0000-0000-0000-000000000000	5ce05058-c18c-4f55-b14e-e9e4b3eeebb6	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-04 20:35:16.813866+00	
00000000-0000-0000-0000-000000000000	56702d37-8aee-4097-baab-803f1f0defe5	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-04 20:35:16.814743+00	
00000000-0000-0000-0000-000000000000	3b94d147-71e4-4030-9e21-dca9bce37766	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-08-04 20:49:24.017+00	
00000000-0000-0000-0000-000000000000	8c735612-0888-4c32-ae0b-3d88e18af552	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-04 20:50:23.800888+00	
00000000-0000-0000-0000-000000000000	9bbe3d90-54da-49e2-b15c-92246fc51487	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-05 02:20:25.695668+00	
00000000-0000-0000-0000-000000000000	70da316b-79a0-4944-b65c-2d3e219bb6bd	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-05 02:20:25.696554+00	
00000000-0000-0000-0000-000000000000	4c69aa37-c629-4ebd-8b82-a52954d6797f	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-05 02:20:38.170149+00	
00000000-0000-0000-0000-000000000000	e092e154-063c-49c9-a5ea-e6acf2c9da43	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-05 02:20:38.170738+00	
00000000-0000-0000-0000-000000000000	d6eff802-a909-45f7-9c77-fb37671235a5	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-05 02:25:30.881205+00	
00000000-0000-0000-0000-000000000000	1cd3b71f-b4df-40a8-b2ab-2c0a233d6dc7	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-05 02:25:30.88418+00	
00000000-0000-0000-0000-000000000000	145f6cd5-2c3a-49dc-ac55-f7079c621a77	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-05 02:40:06.278486+00	
00000000-0000-0000-0000-000000000000	577cd300-76ca-4440-98e1-ab05a9d7e936	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-05 02:48:15.832519+00	
00000000-0000-0000-0000-000000000000	664dce7e-f4d1-4ecc-a6e4-e071b50d7965	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-05 03:18:54.852422+00	
00000000-0000-0000-0000-000000000000	c37e9a86-611f-4a08-8fbb-25fdd9ef7a96	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-05 03:18:54.853518+00	
00000000-0000-0000-0000-000000000000	a1d94300-6035-412a-9ffd-be00f00067ad	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-05 03:18:54.861461+00	
00000000-0000-0000-0000-000000000000	fd5fddeb-d44b-4bf9-adb0-9cd4b51fedd5	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-05 03:18:54.862702+00	
00000000-0000-0000-0000-000000000000	2d186d2a-59e9-4bbc-b579-7a9ddb89e1be	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-05 14:07:35.663497+00	
00000000-0000-0000-0000-000000000000	d3064942-b93d-4492-a272-e592b4501255	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-05 14:07:35.66536+00	
00000000-0000-0000-0000-000000000000	747871e6-ba3c-4fd7-80c2-ff20bc13949d	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-05 14:54:05.169743+00	
00000000-0000-0000-0000-000000000000	c1ba31de-7a8e-4f8d-9849-4767efa3ad9e	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-05 14:54:05.1721+00	
00000000-0000-0000-0000-000000000000	187bd5f1-7453-4e16-8458-896819100981	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-05 14:54:05.80235+00	
00000000-0000-0000-0000-000000000000	4640916c-3145-4f95-9d8c-9a8f4dc6d6ea	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-05 14:54:05.802987+00	
00000000-0000-0000-0000-000000000000	b1abdded-cd3a-46fc-b75d-db40d5c38500	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-05 14:54:29.710396+00	
00000000-0000-0000-0000-000000000000	28967894-c168-4705-b960-1474697dd7cc	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-05 14:54:29.710992+00	
00000000-0000-0000-0000-000000000000	dfc70181-d7b7-4fb2-8ab9-8fa5902aa129	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-05 18:20:22.739947+00	
00000000-0000-0000-0000-000000000000	46064ede-5a07-4017-897c-38b647c9efd3	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-05 18:20:22.741882+00	
00000000-0000-0000-0000-000000000000	c36e03c3-c601-4641-a858-ac0433833ea9	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-05 18:20:24.549523+00	
00000000-0000-0000-0000-000000000000	d9e2ca89-4fa5-4ce3-8038-82dba2d87f11	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-05 18:20:24.55028+00	
00000000-0000-0000-0000-000000000000	abd7a7a9-7bac-4fa3-ac70-741c5931da62	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-05 18:20:53.548757+00	
00000000-0000-0000-0000-000000000000	afabb1b9-0d96-4cf7-8ec5-9c65792f677b	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-05 18:20:53.550327+00	
00000000-0000-0000-0000-000000000000	1181b8b8-48e1-4648-96d5-19bc801dec4e	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-08-05 18:42:50.900932+00	
00000000-0000-0000-0000-000000000000	5351079a-1faf-4c7a-bd3d-de9167bd3b1b	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-05 18:42:58.922948+00	
00000000-0000-0000-0000-000000000000	4d5d0505-46a3-4827-ae62-c5eb2a886cc1	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-05 19:19:12.058717+00	
00000000-0000-0000-0000-000000000000	02420ff9-9c7e-4b9c-843d-e42f23deccd2	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-05 19:19:12.060838+00	
00000000-0000-0000-0000-000000000000	3f99df26-74dc-49c7-84d7-c493a9a3a057	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-05 19:20:55.053004+00	
00000000-0000-0000-0000-000000000000	d171d0d9-fa23-4ffb-9ff6-0a5b8137de85	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-05 19:20:55.061817+00	
00000000-0000-0000-0000-000000000000	07a89fcb-3a84-4633-91f0-a2e7a99ab6cf	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-05 19:41:07.698638+00	
00000000-0000-0000-0000-000000000000	21c76948-4e39-4839-9045-83fcce29d075	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-05 19:41:07.700467+00	
00000000-0000-0000-0000-000000000000	f215a4d4-0937-44e9-a601-bc39a4768bef	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-05 20:21:33.245578+00	
00000000-0000-0000-0000-000000000000	15818f74-47d0-4e7f-a449-82ea64fda2dc	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-05 20:21:33.248559+00	
00000000-0000-0000-0000-000000000000	c18f4c76-107e-44f1-8d3e-c4781fc1c538	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-05 23:42:13.161114+00	
00000000-0000-0000-0000-000000000000	1323d9e3-2476-4979-aa18-ca06db5b41be	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-05 23:42:13.162021+00	
00000000-0000-0000-0000-000000000000	33fd47b2-0f22-4ab9-817b-b1f514f040d4	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-05 23:43:38.322387+00	
00000000-0000-0000-0000-000000000000	6d4eb51d-942c-44a3-8b8d-9c49e4faa766	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-05 23:43:38.323046+00	
00000000-0000-0000-0000-000000000000	cd67d3d2-4a1e-4508-91cd-2997e8b42a72	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-08-06 00:10:25.871497+00	
00000000-0000-0000-0000-000000000000	e0dee30a-1ac4-44c8-af55-66c9816c82b4	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-06 00:10:31.508604+00	
00000000-0000-0000-0000-000000000000	8e769bea-37ae-4e81-aba4-33d621a6e23d	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-06 01:15:45.06949+00	
00000000-0000-0000-0000-000000000000	e7c3ebc2-579e-4628-bcc8-fcea5bcab3a0	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-06 01:15:45.07294+00	
00000000-0000-0000-0000-000000000000	972cb106-2dc4-4b6e-a3f6-2bc3f9da41bc	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-06 01:16:02.465126+00	
00000000-0000-0000-0000-000000000000	3e4e77e4-3bc6-4573-a014-9458db8d71cc	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-06 01:16:02.465863+00	
00000000-0000-0000-0000-000000000000	27f6d9f8-d8fe-4899-8705-a37219b46652	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-06 01:26:42.761698+00	
00000000-0000-0000-0000-000000000000	bda4a4d1-ad28-4604-8dd9-db35dbe71ebb	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-06 04:09:42.306053+00	
00000000-0000-0000-0000-000000000000	a015a45c-5abe-4a08-b522-bbf8a886870a	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-06 04:09:42.311276+00	
00000000-0000-0000-0000-000000000000	97214538-1578-4c0a-acda-d9a176c91eb6	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-06 04:10:05.581755+00	
00000000-0000-0000-0000-000000000000	b69314e1-d72c-408a-9063-09747d73e551	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-06 04:10:05.582347+00	
00000000-0000-0000-0000-000000000000	d4c58bd5-0800-453a-83d5-77140756b447	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-06 04:27:20.513798+00	
00000000-0000-0000-0000-000000000000	4da7f61d-17d8-4b31-8486-57f8d95bb936	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-06 04:27:20.51471+00	
00000000-0000-0000-0000-000000000000	d1519175-4403-4dee-841c-63a59930e468	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-06 05:11:53.970384+00	
00000000-0000-0000-0000-000000000000	71c496df-a7f0-4048-a5d4-82a019e4f3df	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-06 05:11:53.97224+00	
00000000-0000-0000-0000-000000000000	b05d3b0d-df91-413e-9a62-cb89a37a7d59	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-06 05:11:58.40894+00	
00000000-0000-0000-0000-000000000000	bfc7d9eb-84b9-4807-8aff-7b70f35a360f	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-06 05:11:58.409586+00	
00000000-0000-0000-0000-000000000000	38e2c9b2-5c94-40c8-9789-58d00ee87777	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-06 21:27:25.224783+00	
00000000-0000-0000-0000-000000000000	254f0d9d-41d0-447e-919a-a9fb3109e4f2	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-06 21:27:25.225795+00	
00000000-0000-0000-0000-000000000000	0d34433d-8227-4821-a3a8-47ff47fe14ea	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-06 21:27:35.27314+00	
00000000-0000-0000-0000-000000000000	4d6660b2-dd14-4ab0-a691-c81112df9fe2	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-06 21:27:35.273804+00	
00000000-0000-0000-0000-000000000000	658e287f-861d-44a2-b944-f94afc08b468	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-06 21:46:13.725058+00	
00000000-0000-0000-0000-000000000000	5efa03c2-eec5-41c8-b951-017481d8c5e5	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-08-06 21:52:55.138678+00	
00000000-0000-0000-0000-000000000000	fea3830b-e6e7-49f5-a8d5-a69bd15a6c47	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-06 21:53:10.203236+00	
00000000-0000-0000-0000-000000000000	705b6528-a6f1-4cee-9285-65ac853d05d7	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-06 22:46:45.948921+00	
00000000-0000-0000-0000-000000000000	a7d23983-2ac4-42a7-8cd8-9b809d3190f9	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-06 22:46:45.950784+00	
00000000-0000-0000-0000-000000000000	cecc5600-0d06-488e-ab32-0a71be040291	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-06 22:51:51.585188+00	
00000000-0000-0000-0000-000000000000	c4c5fb07-9694-4663-a58d-b5ec47fe425b	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-06 22:51:51.586189+00	
00000000-0000-0000-0000-000000000000	4fd7d81b-f4b9-4b31-bf6e-87d92fd3c220	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-07 00:35:30.203641+00	
00000000-0000-0000-0000-000000000000	20d34b87-08c2-47c3-a6d9-4699d717ea41	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-07 00:35:30.208087+00	
00000000-0000-0000-0000-000000000000	44b99ed8-1f52-46fd-87e4-7d768366679a	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-07 00:37:39.240273+00	
00000000-0000-0000-0000-000000000000	18a0cd51-609f-4f53-9cd3-e9d72e8161c5	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-07 00:37:39.240894+00	
00000000-0000-0000-0000-000000000000	482ee22e-56fa-44b1-91ce-338a0179402e	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-07 01:30:20.539838+00	
00000000-0000-0000-0000-000000000000	2cdec783-25e2-447d-852c-62087bfef393	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-07 01:30:20.54265+00	
00000000-0000-0000-0000-000000000000	638afd2f-d917-4879-b07f-e2d7a1577414	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-07 01:31:27.866635+00	
00000000-0000-0000-0000-000000000000	a8d1cd67-b493-4436-a7e4-f2345287cfa7	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-07 01:36:31.415681+00	
00000000-0000-0000-0000-000000000000	d6a9dfd9-353e-43be-97b7-232f6a7c31f6	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-07 01:36:31.418269+00	
00000000-0000-0000-0000-000000000000	6a800fd0-4e10-434d-b48c-5e2d8ec932f4	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-07 01:44:04.545491+00	
00000000-0000-0000-0000-000000000000	207acfd5-7f57-4b03-a9c7-e9710d721060	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-07 01:44:04.547537+00	
00000000-0000-0000-0000-000000000000	1df3a9ff-8812-4864-aa7c-2d429bf90840	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-07 02:35:37.238482+00	
00000000-0000-0000-0000-000000000000	1ea990fa-4841-42ea-bc8b-d4e51c5d9fcd	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-07 02:35:37.243476+00	
00000000-0000-0000-0000-000000000000	cbe59212-83f9-40b7-b361-c4cdf154a891	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-07 03:33:56.295756+00	
00000000-0000-0000-0000-000000000000	8b1633ad-5bd4-43cf-9390-3b2958599412	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-07 03:33:56.297607+00	
00000000-0000-0000-0000-000000000000	4ecd8ec7-a1d8-46c5-9824-5abf2e4e61fd	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-07 03:58:30.260899+00	
00000000-0000-0000-0000-000000000000	d05b3a27-c95b-4bc9-ad98-2b9c73827cd7	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-07 03:58:30.26437+00	
00000000-0000-0000-0000-000000000000	54ab75e0-bb9d-4e9f-8044-628598bd8676	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-07 04:31:59.040456+00	
00000000-0000-0000-0000-000000000000	cd53ef0f-8584-4f92-8f13-bec91c7b245f	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-07 04:31:59.041386+00	
00000000-0000-0000-0000-000000000000	46dc1363-c4ed-4a1d-bf53-5601dd25a108	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-07 05:32:35.868778+00	
00000000-0000-0000-0000-000000000000	2fe696f7-d692-4bd7-bb70-d79e1f6a9aff	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-07 05:32:35.869679+00	
00000000-0000-0000-0000-000000000000	bd2cf9ff-2857-4179-af2f-dfee5435ce2e	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-07 05:48:23.049293+00	
00000000-0000-0000-0000-000000000000	c647e4b9-0686-4350-81c1-4226c2c6883f	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-07 05:48:23.050194+00	
00000000-0000-0000-0000-000000000000	c186338c-2bf4-4659-86b7-beb3bef60420	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-07 06:31:41.05469+00	
00000000-0000-0000-0000-000000000000	6d849860-3f86-4acf-a1f4-4977478f9f2f	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-07 06:31:41.055561+00	
00000000-0000-0000-0000-000000000000	404fb874-4473-4485-8186-fa070b322350	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-07 06:36:03.802444+00	
00000000-0000-0000-0000-000000000000	1ced94dd-be64-40ae-be9d-a200184e7925	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-07 06:36:03.803314+00	
00000000-0000-0000-0000-000000000000	a5e3ddc7-0851-4d13-94a4-0fa4d5812b53	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-07 07:31:01.072371+00	
00000000-0000-0000-0000-000000000000	7e04ac5a-e9b7-4995-9ade-80d990c86dfd	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-07 07:31:01.074201+00	
00000000-0000-0000-0000-000000000000	6a6ca68a-cdb8-4b64-9d65-3ae8abd301a1	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-07 07:37:55.767447+00	
00000000-0000-0000-0000-000000000000	569c61a3-ea35-44f3-a6af-3a330ae1e367	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-07 07:37:55.768338+00	
00000000-0000-0000-0000-000000000000	0445bf3f-12ba-437b-86aa-5489388de6f1	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-07 08:39:12.658475+00	
00000000-0000-0000-0000-000000000000	d2543211-14d6-4d39-8e45-a55e08828d09	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-07 08:39:12.660831+00	
00000000-0000-0000-0000-000000000000	6c1c01e1-f6dc-4b8b-b6b3-5167c284fdf4	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-07 08:39:19.590566+00	
00000000-0000-0000-0000-000000000000	24064914-3867-4b0a-a57e-8a836c9ae0a7	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-07 08:39:19.594104+00	
00000000-0000-0000-0000-000000000000	b52648c0-8f82-4424-a572-e914613999a6	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-07 17:57:42.684791+00	
00000000-0000-0000-0000-000000000000	0ef1226e-329a-42a1-b67f-2b304c912bd0	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-07 17:57:42.685727+00	
00000000-0000-0000-0000-000000000000	4c73551f-c92f-46c7-b94c-16d58864a238	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-07 18:06:37.117748+00	
00000000-0000-0000-0000-000000000000	2486580a-45f3-4bf3-9e4c-09a437d7b776	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-07 18:06:37.118798+00	
00000000-0000-0000-0000-000000000000	cc3d3d04-b520-4f77-b171-11df4b7ad72d	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-07 18:07:09.317155+00	
00000000-0000-0000-0000-000000000000	995ba3c9-674b-448e-a5ce-8f30d73295be	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-07 18:07:09.317814+00	
00000000-0000-0000-0000-000000000000	818bf1e9-c838-41fd-a86a-cb1c6f5da3f8	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-08 09:42:24.138375+00	
00000000-0000-0000-0000-000000000000	d06f13db-c379-4f67-908f-4a153d11554e	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-08 09:42:24.139412+00	
00000000-0000-0000-0000-000000000000	f0727bc3-e847-4a0b-ba48-54803c9be80b	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-08 09:43:02.237464+00	
00000000-0000-0000-0000-000000000000	88ffd1ce-01e7-47b7-9e9b-d96612c53b5e	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-08 09:43:02.238153+00	
00000000-0000-0000-0000-000000000000	0d2ea9a6-d2fb-4862-8641-af3575c59797	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-08 10:41:14.121637+00	
00000000-0000-0000-0000-000000000000	cb84b6d7-22fc-4678-b59b-6ff062d92ea9	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-08 10:41:14.12256+00	
00000000-0000-0000-0000-000000000000	ce570f0f-b60a-418d-b4e4-bb28b5e3b98d	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-08 10:48:54.593241+00	
00000000-0000-0000-0000-000000000000	a57d424a-0ef0-438a-a817-d41f9a4cd9b4	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-08 10:48:54.594342+00	
00000000-0000-0000-0000-000000000000	9da4a2ff-e11b-447e-8866-666f68f65a22	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-08 11:41:28.408228+00	
00000000-0000-0000-0000-000000000000	a096a5d0-ab8d-4af3-bdea-ef530f16d00f	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-08 11:41:28.409941+00	
00000000-0000-0000-0000-000000000000	0a27b8d4-2262-4d8a-9941-4b9a410f75db	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-08 12:18:39.995411+00	
00000000-0000-0000-0000-000000000000	dcfe6ba7-d0fd-434b-a429-74401650a47e	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-08 12:18:39.996347+00	
00000000-0000-0000-0000-000000000000	f70eca49-8d22-438e-b645-222831c0b5fa	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-08 13:16:40.953435+00	
00000000-0000-0000-0000-000000000000	faef8fe9-5cc1-4f19-b8cc-7f9fbc116df5	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-08 13:16:40.954337+00	
00000000-0000-0000-0000-000000000000	19e5aa36-6c1f-42e2-b9ef-02765ff12a1d	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-08 14:14:41.788928+00	
00000000-0000-0000-0000-000000000000	37443e67-eefe-4319-9e89-43a0baed80aa	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-08 14:14:41.78977+00	
00000000-0000-0000-0000-000000000000	b01f9d5e-796e-4bcd-b3b0-9cdd7129e340	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-08 15:12:42.777996+00	
00000000-0000-0000-0000-000000000000	865015b0-7a44-4aba-a0c9-fa725b767c96	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-08 15:12:42.778911+00	
00000000-0000-0000-0000-000000000000	513e3608-93b0-44ba-a6d0-ecc56cc402cd	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-08 15:25:18.334308+00	
00000000-0000-0000-0000-000000000000	2ea5b428-a8db-4b7b-9054-7625a9e9ae4f	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-08 15:25:18.33689+00	
00000000-0000-0000-0000-000000000000	aaaac20e-db10-4559-b091-f89b86e029ae	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-08 16:23:37.389886+00	
00000000-0000-0000-0000-000000000000	d8bc4d6b-f87d-4989-b412-8d1e5f13600d	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-08 16:23:37.390869+00	
00000000-0000-0000-0000-000000000000	77dc936c-3498-4855-b0eb-c49a8698fd4c	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-08 17:15:43.475432+00	
00000000-0000-0000-0000-000000000000	3a1d342d-b737-40bc-901c-8e6cdd9a0674	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-08 17:15:43.476426+00	
00000000-0000-0000-0000-000000000000	4dbf4cff-d9e7-442d-af9b-ba31ef4985d2	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-08 17:15:45.246199+00	
00000000-0000-0000-0000-000000000000	2462ebdf-2ab8-49d6-b4bc-59d6843f21fc	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-08 19:07:18.374504+00	
00000000-0000-0000-0000-000000000000	831d0789-2e5c-4b88-8505-bb5430727f64	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-08 19:07:18.375434+00	
00000000-0000-0000-0000-000000000000	c1088551-49bc-44f9-b1c9-891cd01850b0	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-08 19:07:34.439173+00	
00000000-0000-0000-0000-000000000000	94b556d1-2b41-4991-88b1-7cb90a828752	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-08 19:07:34.439846+00	
00000000-0000-0000-0000-000000000000	c9b273ca-2b88-48d4-9e6f-22bbce0a075c	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-09 03:02:05.417874+00	
00000000-0000-0000-0000-000000000000	0cc8a88b-6cfd-4dcc-bfa3-8edf95398d49	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-09 03:02:05.418739+00	
00000000-0000-0000-0000-000000000000	2b51efc7-0d3b-4a8a-9ff8-8b3398939112	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-09 15:27:47.582575+00	
00000000-0000-0000-0000-000000000000	f1339da8-340e-407f-bfc7-4bb26862110b	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-09 15:27:47.583467+00	
00000000-0000-0000-0000-000000000000	05fc9c52-f4c1-4074-8eed-fd181eaafe21	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-09 15:28:40.243112+00	
00000000-0000-0000-0000-000000000000	079901ec-a4fd-4ba0-b05d-941f6a692e7d	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-09 15:28:40.243727+00	
00000000-0000-0000-0000-000000000000	bad1cb90-5207-49f9-905b-58178f5a680d	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-08-09 16:25:29.031268+00	
00000000-0000-0000-0000-000000000000	088a92d8-622f-42fa-98ff-4ef11956cd8f	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-09 16:25:33.84535+00	
00000000-0000-0000-0000-000000000000	1f4adfb3-cbc7-46c6-9842-9dd7f9054735	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-09 16:28:40.777175+00	
00000000-0000-0000-0000-000000000000	384d68f5-e2b6-44fb-9500-88a610a42a5d	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-09 16:28:40.778036+00	
00000000-0000-0000-0000-000000000000	21c57f8f-0245-4bdb-8804-2520a5d58923	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-09 17:31:19.170232+00	
00000000-0000-0000-0000-000000000000	7935e34c-5698-4163-ba46-840cea98a673	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-09 17:31:19.171113+00	
00000000-0000-0000-0000-000000000000	1db3906d-6df2-44f3-b0e5-1e0b74d63476	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-09 17:33:13.239609+00	
00000000-0000-0000-0000-000000000000	71a86cc8-5896-445d-9a2f-c0f9f64bc238	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-09 17:33:13.240493+00	
00000000-0000-0000-0000-000000000000	f3f39a61-d826-4687-829c-6366c0866b71	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-09 21:03:31.662434+00	
00000000-0000-0000-0000-000000000000	fb9ce4f3-9cda-4982-9a8a-f7b757702e4d	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-09 21:03:31.663423+00	
00000000-0000-0000-0000-000000000000	40aa26f8-7190-4f54-8b53-e3d2d017aabf	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-09 21:06:17.7307+00	
00000000-0000-0000-0000-000000000000	8fa66841-c2ba-48a2-8c59-206047183d07	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-09 21:06:17.731593+00	
00000000-0000-0000-0000-000000000000	d49f69a8-146e-49c0-9886-da3d5b8e4cc4	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-09 22:12:03.308859+00	
00000000-0000-0000-0000-000000000000	806ecde1-6f11-4554-ac12-44fea1b40db2	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-09 22:12:03.309762+00	
00000000-0000-0000-0000-000000000000	905d5cab-7824-4545-bb0c-26c7d2a4c8d3	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 03:47:43.796493+00	
00000000-0000-0000-0000-000000000000	13c696af-5214-4226-bb9d-3983971d0b48	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 03:47:43.797477+00	
00000000-0000-0000-0000-000000000000	956a8788-c3c1-474a-8f2e-310fd1e8860c	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-10 06:28:51.74325+00	
00000000-0000-0000-0000-000000000000	53a93bb1-a7ab-4640-85fe-47a3d9a383ec	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-10 06:28:51.744121+00	
00000000-0000-0000-0000-000000000000	4a8c645c-0aeb-4e83-9ce6-cb2746005577	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 06:29:38.999294+00	
00000000-0000-0000-0000-000000000000	ac0ea10f-ea58-46d1-a7c5-07a90b6d4381	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 06:29:38.999971+00	
00000000-0000-0000-0000-000000000000	c6fa1660-fd48-447e-8bcb-eb87515790bf	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 07:31:52.804016+00	
00000000-0000-0000-0000-000000000000	bf3beebf-6145-4517-9b0d-62eeea0a35fb	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 07:31:52.804939+00	
00000000-0000-0000-0000-000000000000	fbe10f1c-ed6c-4509-b2e4-1ce4c429235f	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 08:41:11.561186+00	
00000000-0000-0000-0000-000000000000	4e2c3abe-3f16-4efc-88ea-923d02cc432c	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 08:41:11.562069+00	
00000000-0000-0000-0000-000000000000	c2174eec-2759-48be-8245-03c451f18f18	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-10 09:10:06.525692+00	
00000000-0000-0000-0000-000000000000	7fbd4f75-d169-4c0d-8da2-b3723eea1695	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-10 09:10:06.526723+00	
00000000-0000-0000-0000-000000000000	3b073a51-5409-4741-91bc-ad07b299d9f9	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-10 09:24:33.195215+00	
00000000-0000-0000-0000-000000000000	9ba5d645-5060-49fb-93b6-c704b2d23d61	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 09:39:16.925957+00	
00000000-0000-0000-0000-000000000000	851fa631-25fd-4815-a5b9-ce8e33b53d7b	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 09:39:16.928755+00	
00000000-0000-0000-0000-000000000000	b2dfbf18-ca87-4778-bc83-c46182eeaaad	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-10 10:11:01.711085+00	
00000000-0000-0000-0000-000000000000	d08b6b46-2387-4496-a1d7-ad7253eb2f60	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-10 10:11:01.713144+00	
00000000-0000-0000-0000-000000000000	85198fec-000b-4396-bfce-666bf6b797ee	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-08-10 10:24:30.514291+00	
00000000-0000-0000-0000-000000000000	3e1075df-fd4a-44b7-aca9-e4a4c0d8b3d3	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 19:32:38.118345+00	
00000000-0000-0000-0000-000000000000	3fbdbe49-ce6f-46de-b70b-67572cc77c30	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-10 10:24:35.221584+00	
00000000-0000-0000-0000-000000000000	9a06211a-5570-4408-a4a5-4d5e00c61fdf	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-08-10 10:26:02.952567+00	
00000000-0000-0000-0000-000000000000	c48a0cc5-03dc-489d-a8ea-f396c174962a	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-10 10:26:11.198278+00	
00000000-0000-0000-0000-000000000000	a87e90f4-dd9b-4861-83c3-052dfd8a916f	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 10:37:28.839389+00	
00000000-0000-0000-0000-000000000000	82914f38-ed64-46b7-b0d8-b7867aac4657	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 10:37:28.841323+00	
00000000-0000-0000-0000-000000000000	f4782f9f-b610-4ff1-a752-5aa5b11817ab	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-10 10:54:52.841025+00	
00000000-0000-0000-0000-000000000000	6297c26e-5766-4746-be3c-5f6281bbe0b9	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-10 11:30:39.54241+00	
00000000-0000-0000-0000-000000000000	8ae37ae8-a39d-465f-9fdf-9f18ea04a569	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 11:31:01.045517+00	
00000000-0000-0000-0000-000000000000	fb9d406c-0236-4af7-a818-f5df84f79b01	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 11:31:01.046146+00	
00000000-0000-0000-0000-000000000000	0268f07e-6c00-47a1-ba8e-edb78a6f609c	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 11:35:36.639131+00	
00000000-0000-0000-0000-000000000000	b2e5b025-0c1c-47ad-9700-2c9d748e9f78	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 11:35:36.640047+00	
00000000-0000-0000-0000-000000000000	fa90e4eb-c449-4600-ba68-2d16eda31f04	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 12:31:18.095508+00	
00000000-0000-0000-0000-000000000000	9f4a07df-ad5f-4e3c-bb6a-4046f5933bd9	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 12:31:18.0974+00	
00000000-0000-0000-0000-000000000000	fba4da17-33fe-4a79-8eaf-0eb08d9168ff	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 12:36:05.307254+00	
00000000-0000-0000-0000-000000000000	9872b0f8-5546-4316-a445-062a32d93f61	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 12:36:05.308952+00	
00000000-0000-0000-0000-000000000000	370ba6bf-81cb-43ab-9bf0-b09d84de1b9b	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 13:36:42.944707+00	
00000000-0000-0000-0000-000000000000	10d28664-d08f-4947-b8d2-2b642b504ef7	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 13:36:42.945589+00	
00000000-0000-0000-0000-000000000000	ea3704b1-27c1-4372-b884-8bcdadc4bf96	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 14:37:48.388054+00	
00000000-0000-0000-0000-000000000000	ed3e6cd3-4864-4708-a844-70faa09ef533	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 14:37:48.388988+00	
00000000-0000-0000-0000-000000000000	c1bbc777-ec66-4396-9691-8c39b1f93f1c	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 15:38:55.692204+00	
00000000-0000-0000-0000-000000000000	843c87f7-7da6-4ca3-97cb-9b5124c4ec9d	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 15:38:55.694803+00	
00000000-0000-0000-0000-000000000000	482d1506-5be5-4cf1-959d-20faae350599	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 16:40:13.895133+00	
00000000-0000-0000-0000-000000000000	f54d3838-8b9d-4d25-b335-bbc488b3bbd8	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 16:40:13.896882+00	
00000000-0000-0000-0000-000000000000	068439e2-a3f0-4b9a-a9d7-38fb457a4f3c	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 17:41:24.308994+00	
00000000-0000-0000-0000-000000000000	64fe57e9-bf82-43b7-a6d8-e1975910aac0	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 17:41:24.309971+00	
00000000-0000-0000-0000-000000000000	41b7ec47-d9ef-46ed-bd26-da1618ea18d3	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 17:51:23.637523+00	
00000000-0000-0000-0000-000000000000	abcf2545-4bf5-4cd9-bef3-a6e145a6cf2d	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 17:51:23.638632+00	
00000000-0000-0000-0000-000000000000	1e084768-14f5-4b78-ac53-eea171dacc4a	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 17:53:33.525917+00	
00000000-0000-0000-0000-000000000000	e9804025-858c-44e0-ab53-ed3d4e437471	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 17:53:33.526801+00	
00000000-0000-0000-0000-000000000000	2e6ae953-ecef-477a-8466-efef35e608b2	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 18:43:24.31875+00	
00000000-0000-0000-0000-000000000000	ea999188-96bf-4b46-9d3f-a648c6bbf801	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 18:43:24.319669+00	
00000000-0000-0000-0000-000000000000	f05f52b9-91f0-485a-a50b-96bde4bb9d5d	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 18:49:46.466688+00	
00000000-0000-0000-0000-000000000000	17275a6e-a741-4792-bd00-9837ef4d25f2	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 18:49:46.467542+00	
00000000-0000-0000-0000-000000000000	ffd0842e-a57d-4215-abd0-011912ccff14	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 19:32:38.120296+00	
00000000-0000-0000-0000-000000000000	3703715b-b6bf-48fb-b738-0d54e94264a1	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-08-10 19:32:49.756708+00	
00000000-0000-0000-0000-000000000000	aaa57b83-5231-4882-8914-b16a2616339a	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-10 19:32:58.132789+00	
00000000-0000-0000-0000-000000000000	ed9c1962-4338-4c58-869b-0b66802e7cce	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-10 19:51:12.252395+00	
00000000-0000-0000-0000-000000000000	5dd33525-2ad9-4b63-97b2-b37f3e8e48e4	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-08-10 19:51:34.852625+00	
00000000-0000-0000-0000-000000000000	502c4c6f-3cca-40a4-b7bf-2ad8b554b834	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-10 19:54:20.349278+00	
00000000-0000-0000-0000-000000000000	aad9e7f1-f3bc-4268-9cf6-f08f9ca1aa0a	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 20:49:13.384297+00	
00000000-0000-0000-0000-000000000000	f466eeee-0e38-4c64-b6df-aefe8b35b32b	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 20:49:13.386974+00	
00000000-0000-0000-0000-000000000000	cc0fd330-0a68-4b28-befe-0c35d29118b7	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 20:57:09.448477+00	
00000000-0000-0000-0000-000000000000	83af51bc-bdea-4587-afe9-29ba376135db	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-10 20:57:09.450487+00	
00000000-0000-0000-0000-000000000000	148de584-41d5-469f-9e9a-cd1e20005a48	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-08-10 21:42:48.641659+00	
00000000-0000-0000-0000-000000000000	d4cd2419-9578-482c-819e-8cc8a8e3d40e	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-10 22:00:00.11337+00	
00000000-0000-0000-0000-000000000000	72da836f-f8cd-4681-993c-cebd6319dcbe	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-10 22:04:58.659034+00	
00000000-0000-0000-0000-000000000000	c8d479fd-2962-4e51-9912-7d356f51e11c	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-08-10 22:11:25.736818+00	
00000000-0000-0000-0000-000000000000	46ed8eed-5f47-4b0a-93f9-870702d01a0e	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-10 22:11:33.955397+00	
00000000-0000-0000-0000-000000000000	f5736156-ed47-4edc-a38a-66e4d737b5a6	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-08-10 22:14:16.173168+00	
00000000-0000-0000-0000-000000000000	57276706-7c43-4147-92b8-ef07e4311ee5	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-10 22:14:50.288397+00	
00000000-0000-0000-0000-000000000000	ca2686f8-3c61-436c-9307-03f13d11f91d	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-08-10 22:21:22.455208+00	
00000000-0000-0000-0000-000000000000	8be74d74-6ae0-4143-a543-9722a523466b	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-08-10 22:21:34.734029+00	
00000000-0000-0000-0000-000000000000	8fa42c9f-014d-4655-ba2a-fac94b96d84f	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-10 22:21:38.754908+00	
00000000-0000-0000-0000-000000000000	b568d5e9-86cd-4e10-a61b-b236d25ddd34	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-08-10 22:27:00.677193+00	
00000000-0000-0000-0000-000000000000	b1579f9b-5d18-4355-9a51-02b08c7c0092	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-10 22:27:08.29327+00	
00000000-0000-0000-0000-000000000000	f4443d47-7065-4a6c-a789-3220c0a86616	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-08-10 22:36:31.908135+00	
00000000-0000-0000-0000-000000000000	11100c06-f198-42c5-b530-306f5a95532e	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-10 23:07:18.134943+00	
00000000-0000-0000-0000-000000000000	d2f3ac5f-58f2-4d6f-aa3a-63d45e302a49	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-10 23:07:18.136954+00	
00000000-0000-0000-0000-000000000000	5b5a3730-c249-489e-916e-8dcd563d014c	{"action":"logout","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"account"}	2025-08-10 23:07:57.410667+00	
00000000-0000-0000-0000-000000000000	75640b2e-c682-44c6-9f35-4a3647a1de26	{"action":"login","actor_id":"9c2bd213-3ce9-457c-a29e-dfafa277839d","actor_name":"Matthew Hankins","actor_username":"matthewleehankins@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-10 23:08:16.359745+00	
00000000-0000-0000-0000-000000000000	f5cf1b7a-b825-47d0-8594-dd71ff78a660	{"action":"logout","actor_id":"9c2bd213-3ce9-457c-a29e-dfafa277839d","actor_name":"Matthew Hankins","actor_username":"matthewleehankins@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-08-10 23:12:41.218628+00	
00000000-0000-0000-0000-000000000000	73c74419-6296-494c-a337-f52740174407	{"action":"login","actor_id":"9c2bd213-3ce9-457c-a29e-dfafa277839d","actor_name":"Matthew Hankins","actor_username":"matthewleehankins@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-10 23:13:12.784373+00	
00000000-0000-0000-0000-000000000000	e842d52a-1989-43d2-ac00-c5f02622624e	{"action":"logout","actor_id":"9c2bd213-3ce9-457c-a29e-dfafa277839d","actor_name":"Matthew Hankins","actor_username":"matthewleehankins@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-08-10 23:13:23.599227+00	
00000000-0000-0000-0000-000000000000	a129d64c-c9da-4e22-b7ab-19372b5adb16	{"action":"login","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-10 23:13:54.673151+00	
00000000-0000-0000-0000-000000000000	d4d106ad-2907-444e-9c80-56dd4148f582	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-10 23:15:58.639323+00	
00000000-0000-0000-0000-000000000000	86590341-8108-4f06-82fb-53e204fd70e1	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-10 23:16:48.524232+00	
00000000-0000-0000-0000-000000000000	892cc859-572e-4aa7-aaa4-16b31aaf068c	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-08-10 23:39:18.241995+00	
00000000-0000-0000-0000-000000000000	b642fc59-25aa-4ef2-b995-d94a6d109f37	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-10 23:39:24.707772+00	
00000000-0000-0000-0000-000000000000	89432e73-5fe5-4180-9811-a7d0654e7577	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-08-11 00:01:06.719014+00	
00000000-0000-0000-0000-000000000000	2d46f008-d56c-4083-85f4-1b55004ac544	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-11 00:01:11.750244+00	
00000000-0000-0000-0000-000000000000	4994dde4-e6df-474d-9fb3-35a191b34b48	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-11 00:15:10.057812+00	
00000000-0000-0000-0000-000000000000	b9890b47-15b7-4c83-8d00-5e67c2548668	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-11 00:15:10.060282+00	
00000000-0000-0000-0000-000000000000	913c7259-1380-4b84-8717-6c9c8451f90e	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-08-11 00:15:20.102153+00	
00000000-0000-0000-0000-000000000000	d004833f-298b-4d3c-9bc8-5d58a32517a6	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-11 00:15:30.49955+00	
00000000-0000-0000-0000-000000000000	f05b9f63-ef94-4774-9992-7f8400148b87	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-08-11 00:38:57.174338+00	
00000000-0000-0000-0000-000000000000	89706a0e-3593-4a60-ad81-2fb0e6388a43	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-11 01:47:00.538219+00	
00000000-0000-0000-0000-000000000000	2b9fea5b-428c-4c62-85a3-d87a0434d8ab	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-11 01:47:00.540601+00	
00000000-0000-0000-0000-000000000000	63013542-eb95-4a97-bcf6-905ccd09ff25	{"action":"login","actor_id":"da1368a1-9ed1-46ef-a7dc-56bf15ebeee4","actor_name":"Nicholas King","actor_username":"nicholas.king@columbiacloudworks.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-11 03:31:31.474824+00	
00000000-0000-0000-0000-000000000000	15cdb89a-9a6f-4cbe-b025-7bb1500d09a4	{"action":"logout","actor_id":"da1368a1-9ed1-46ef-a7dc-56bf15ebeee4","actor_name":"Nicholas King","actor_username":"nicholas.king@columbiacloudworks.com","actor_via_sso":false,"log_type":"account"}	2025-08-11 03:32:18.243663+00	
00000000-0000-0000-0000-000000000000	2e0b7835-898d-4223-b983-05250d86bf10	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-11 03:52:55.479528+00	
00000000-0000-0000-0000-000000000000	0b77341b-33f2-498f-923a-93d6bf3f1da5	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-11 03:52:55.481252+00	
00000000-0000-0000-0000-000000000000	7549f974-e832-4353-a283-11c28593130b	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-11 04:51:24.67109+00	
00000000-0000-0000-0000-000000000000	b36ad55e-e71f-4803-93ce-add7faded199	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-11 04:51:24.672009+00	
00000000-0000-0000-0000-000000000000	0c558375-978a-4a33-ad26-71353c4f61fa	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-11 05:44:51.283977+00	
00000000-0000-0000-0000-000000000000	937eb46d-a7ce-4300-8bf1-8048922137c9	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-11 05:49:46.511567+00	
00000000-0000-0000-0000-000000000000	f5a4b770-4ea5-4421-9a6d-ae7a2d295aea	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-11 05:49:46.51259+00	
00000000-0000-0000-0000-000000000000	c381f0db-0f0c-4acb-8bd5-9090b66d84e0	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-11 14:04:05.235666+00	
00000000-0000-0000-0000-000000000000	bd503004-9e58-4067-974a-2f91cc5e7579	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-08-11 14:07:01.71096+00	
00000000-0000-0000-0000-000000000000	012c146f-2aed-44ff-b726-ee9f3ceae546	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-11 14:20:06.113977+00	
00000000-0000-0000-0000-000000000000	9441125c-d2e7-4918-92c3-7f539ae0bc6c	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-11 14:20:06.115989+00	
00000000-0000-0000-0000-000000000000	02891afd-7def-4aa8-8aef-a174fb87fb9d	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-11 14:54:04.263084+00	
00000000-0000-0000-0000-000000000000	7e3fe812-0d3a-4854-a470-3c9d6a5cbd1c	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-08-11 15:14:48.061179+00	
00000000-0000-0000-0000-000000000000	fa63542f-cbef-4c32-a491-42b4d4fff030	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-11 15:15:12.225308+00	
00000000-0000-0000-0000-000000000000	411c8a59-b456-4e34-be6a-ae629d3fe262	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-08-11 15:15:30.704472+00	
00000000-0000-0000-0000-000000000000	df97bb10-c901-4434-99e1-2c329de9a78b	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-11 15:15:39.409159+00	
00000000-0000-0000-0000-000000000000	488b020c-6df8-4dc7-924f-af87f618452d	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-11 15:18:37.31737+00	
00000000-0000-0000-0000-000000000000	4242915f-d624-4c92-bc46-92545dc428ec	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-11 15:18:37.317952+00	
00000000-0000-0000-0000-000000000000	5f596bb2-48d1-4cbb-9c92-ab456fee3ea3	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-11 15:35:52.387374+00	
00000000-0000-0000-0000-000000000000	24f2d213-ac0f-4a07-82eb-6ab0ce453007	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-11 18:17:51.878202+00	
00000000-0000-0000-0000-000000000000	36aba310-6bfb-43ed-8732-5238815f1ca0	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-11 18:17:51.880273+00	
00000000-0000-0000-0000-000000000000	4a7960e3-b692-44e5-9cbd-e18c0309c421	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-08-11 18:17:55.005545+00	
00000000-0000-0000-0000-000000000000	ec773d35-a644-437b-a581-e1ea51f7c13b	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-11 20:47:12.642963+00	
00000000-0000-0000-0000-000000000000	489584ef-75b0-4266-bd16-b83bf6cd2e55	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-11 20:47:12.643925+00	
00000000-0000-0000-0000-000000000000	00d4cf4d-d7f0-45be-b1d8-60852240d12c	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-12 20:48:51.287014+00	
00000000-0000-0000-0000-000000000000	68bbb798-31be-4879-83de-0b6b7523d418	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-08-12 21:27:14.459458+00	
00000000-0000-0000-0000-000000000000	a09e2312-f500-42ed-bf4e-c565434653ad	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-12 21:27:23.033937+00	
00000000-0000-0000-0000-000000000000	a4536f1c-ae2f-43a0-823a-71c96fd408aa	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-12 21:34:48.034796+00	
00000000-0000-0000-0000-000000000000	e481dca5-8405-44f4-ad26-0abe824c5132	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-12 22:10:01.796645+00	
00000000-0000-0000-0000-000000000000	587901db-33da-4c51-9149-2100c0c440d6	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-12 22:10:01.800887+00	
00000000-0000-0000-0000-000000000000	b46a9b4e-76c6-45b4-b7a8-7ee116e33cb1	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-12 22:25:34.236856+00	
00000000-0000-0000-0000-000000000000	58724b21-13e7-47de-99a9-c560171e035b	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-12 22:25:34.240699+00	
00000000-0000-0000-0000-000000000000	fff99800-d651-4f1b-b0e0-74e8453441c2	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-12 22:45:39.512019+00	
00000000-0000-0000-0000-000000000000	57016f09-44d8-4b45-add4-dc58536e950d	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-12 22:45:39.515979+00	
00000000-0000-0000-0000-000000000000	764cbbce-0202-4d5f-9c30-306b21b12e2d	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-12 22:56:09.928394+00	
00000000-0000-0000-0000-000000000000	7ced2095-9366-46e3-9965-fcc4d718744f	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-08-12 23:13:47.390718+00	
00000000-0000-0000-0000-000000000000	987726ba-efe0-4f9f-8aa5-df746eb95a00	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-12 23:24:04.73218+00	
00000000-0000-0000-0000-000000000000	7efc18bc-7e3e-40a9-89b1-31f808fc1cb6	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-12 23:24:04.736066+00	
00000000-0000-0000-0000-000000000000	b16d54fc-2cf7-4da4-a487-516e7941f022	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 00:09:23.538039+00	
00000000-0000-0000-0000-000000000000	77d63f90-42e1-4601-a798-4c7bdd532210	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 00:09:23.543839+00	
00000000-0000-0000-0000-000000000000	274a3de2-3c05-45e2-953e-2d129e93e9b4	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 04:45:37.733239+00	
00000000-0000-0000-0000-000000000000	3b8ed3b1-9e17-4631-a9f1-867102531362	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 04:45:37.736976+00	
00000000-0000-0000-0000-000000000000	afb85eb6-4af3-4fb9-9c67-36cb879c1e0e	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 04:47:05.509067+00	
00000000-0000-0000-0000-000000000000	79102a70-c5e3-449c-925b-dff1895001f6	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 04:47:05.509975+00	
00000000-0000-0000-0000-000000000000	1561206d-bcd9-4018-9678-e761470526d7	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-13 05:35:58.0305+00	
00000000-0000-0000-0000-000000000000	1a88f5be-c5df-4313-986a-d9ff30901289	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 05:55:39.57376+00	
00000000-0000-0000-0000-000000000000	4557a8cd-5c6f-4a6f-9a87-b4888221ec59	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 05:55:39.577564+00	
00000000-0000-0000-0000-000000000000	8f238d0e-00f7-4b7e-9b04-681e724e7023	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 05:56:28.087491+00	
00000000-0000-0000-0000-000000000000	1f7d9fbc-ac89-475f-96d3-66a39bc4dbd7	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 05:56:28.0893+00	
00000000-0000-0000-0000-000000000000	6c58d17e-da69-40d5-8c8b-056aca59abe7	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-13 06:41:26.757809+00	
00000000-0000-0000-0000-000000000000	042f782d-7d1f-4b64-8b33-aac338bd9b8f	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-13 06:41:26.760691+00	
00000000-0000-0000-0000-000000000000	060442ae-b8bd-4ba8-951e-174617f4c8b5	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 06:53:46.132034+00	
00000000-0000-0000-0000-000000000000	ddcb1710-8587-4830-9e09-a1d3023f5e86	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 06:53:46.135764+00	
00000000-0000-0000-0000-000000000000	539af626-88ac-4696-93c1-57af784e6b63	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 06:54:36.924348+00	
00000000-0000-0000-0000-000000000000	a2c712ec-6ad5-493c-bbb0-9ba65a88ef33	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 06:54:36.925946+00	
00000000-0000-0000-0000-000000000000	f5ffdf76-998f-478a-907a-7d02d5029805	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-08-13 07:07:25.021035+00	
00000000-0000-0000-0000-000000000000	192cf1e3-4dfc-4b30-a0cc-5a0a14571331	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-13 07:12:18.367955+00	
00000000-0000-0000-0000-000000000000	b03a62d6-4b91-43a7-9b8e-043dd750209e	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 13:03:14.740199+00	
00000000-0000-0000-0000-000000000000	c0fc1638-e249-41c7-8d89-50dbedb62736	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 13:03:14.74128+00	
00000000-0000-0000-0000-000000000000	20b73c70-906d-4bbf-a4d5-b4fb6c9a2047	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-13 13:10:47.35273+00	
00000000-0000-0000-0000-000000000000	30f87369-6599-4e48-a9e9-0352b2bc650e	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 14:05:20.123278+00	
00000000-0000-0000-0000-000000000000	23e7a592-f56b-4526-a734-34d60579ddb1	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 14:05:20.124266+00	
00000000-0000-0000-0000-000000000000	7aa92f23-0180-4677-83e5-410b84676ec6	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 15:03:32.736919+00	
00000000-0000-0000-0000-000000000000	09884b38-fbc1-41c4-9db1-9ba5c1cea79b	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 15:03:32.738009+00	
00000000-0000-0000-0000-000000000000	86a69308-727e-4d0c-a414-f849f5cc2fb7	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-13 15:09:51.588159+00	
00000000-0000-0000-0000-000000000000	bb28d161-ee03-49fc-9cba-0f20d4118d32	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-13 15:09:51.589043+00	
00000000-0000-0000-0000-000000000000	712f7795-8867-4053-91b5-67bd5d657411	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-08-13 15:10:08.073231+00	
00000000-0000-0000-0000-000000000000	26a9ef0c-58c4-4c73-9c1c-2d77a9008eee	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-13 15:13:56.607699+00	
00000000-0000-0000-0000-000000000000	7f908420-eb38-4a49-97db-6b280c9876bd	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 16:10:33.322819+00	
00000000-0000-0000-0000-000000000000	0ba2190f-5ba3-4c4d-92f8-eb5bb9c3300f	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 16:10:33.323781+00	
00000000-0000-0000-0000-000000000000	744f54d1-ce00-4973-b634-813cdfee9c32	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-13 16:54:25.938223+00	
00000000-0000-0000-0000-000000000000	06ec6ebc-ee01-4f75-a0f9-7f0f666ab355	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-13 16:54:25.939133+00	
00000000-0000-0000-0000-000000000000	7fb0848e-a530-4ea8-afa4-d4fd176ce1ac	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-13 17:18:01.509672+00	
00000000-0000-0000-0000-000000000000	f4ae5584-f100-40f8-b25e-0f7a13cb238f	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 17:18:09.682776+00	
00000000-0000-0000-0000-000000000000	928bafe4-dfc7-4572-88bd-8af35e2cbaf2	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 17:18:09.683377+00	
00000000-0000-0000-0000-000000000000	31404cec-798f-460a-8cfa-ea8fdafe90bd	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 18:21:37.3705+00	
00000000-0000-0000-0000-000000000000	41b6d4df-bb95-4d6b-82b2-45c380470bf2	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 18:21:37.371402+00	
00000000-0000-0000-0000-000000000000	df632f63-efd0-4f5c-9d05-1444ab3bd145	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 18:21:37.390798+00	
00000000-0000-0000-0000-000000000000	f84f73a4-64e3-47b3-af26-c847b022a31d	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 18:21:37.391641+00	
00000000-0000-0000-0000-000000000000	8484683c-0189-4f8c-a8cf-2ce2e1c185f6	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 19:20:00.303781+00	
00000000-0000-0000-0000-000000000000	7736ff37-bbc2-4eac-ba05-9ecb6ece37ea	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 19:20:00.30511+00	
00000000-0000-0000-0000-000000000000	1ff9a21f-e571-4784-8bb1-bf89081195d2	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 19:20:03.811261+00	
00000000-0000-0000-0000-000000000000	0f993fb3-0e0e-4ee9-82b4-b992d4485811	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 19:20:03.811907+00	
00000000-0000-0000-0000-000000000000	4b3929da-e43a-4273-bfd3-215fb87f345b	{"action":"token_refreshed","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-13 19:35:09.841993+00	
00000000-0000-0000-0000-000000000000	7004b0cd-6c66-4feb-9937-004a92f9be17	{"action":"token_revoked","actor_id":"15d8cd2d-595c-44e2-8cdf-ed7e1028b436","actor_name":"Matthew Hankins","actor_username":"matt@3aequip.com","actor_via_sso":false,"log_type":"token"}	2025-08-13 19:35:09.843204+00	
00000000-0000-0000-0000-000000000000	c744a7d6-7fe9-49d1-bbe1-09e8613100f4	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 20:18:59.190248+00	
00000000-0000-0000-0000-000000000000	1e6e89c5-c1d2-48a6-9626-90425b4931dd	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 20:18:59.191128+00	
00000000-0000-0000-0000-000000000000	9bb262bf-093d-4741-bbb4-836b08e015ba	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 20:25:40.571561+00	
00000000-0000-0000-0000-000000000000	b8b90bad-91ca-47b7-ac77-9474fcfef500	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 20:25:40.572419+00	
00000000-0000-0000-0000-000000000000	a950897e-bd01-4bf6-9826-76f5cef71605	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 21:17:48.212189+00	
00000000-0000-0000-0000-000000000000	f70ffd76-eafc-43dd-a406-141085247164	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 21:17:48.213055+00	
00000000-0000-0000-0000-000000000000	72a3514f-bf2d-41a3-861f-8ddc8dcfb92c	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 21:25:51.677316+00	
00000000-0000-0000-0000-000000000000	6ccaec2d-3a98-43be-a7dd-b37dba1e67b3	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 21:25:51.678295+00	
00000000-0000-0000-0000-000000000000	8c09c6fd-0a65-4182-8d29-84f9dfd0fb7a	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-13 21:45:40.392286+00	
00000000-0000-0000-0000-000000000000	1a1640db-217e-4548-85e2-5865f2e1ecc9	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-13 21:45:40.393176+00	
00000000-0000-0000-0000-000000000000	be8a26de-06ca-41b1-83d1-117bafb16af6	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 22:16:33.860601+00	
00000000-0000-0000-0000-000000000000	db33b149-f5c2-48f7-823c-0aa4a0f10f0b	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 22:16:33.861478+00	
00000000-0000-0000-0000-000000000000	cc160e4c-6e54-4382-8c75-21bbb4985b3a	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 22:24:03.125624+00	
00000000-0000-0000-0000-000000000000	b3df619c-dc7a-4efe-9073-a984d781252e	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 22:24:03.126527+00	
00000000-0000-0000-0000-000000000000	7e4ef4f4-118c-47d2-869a-fec126fec5a9	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 23:14:51.373981+00	
00000000-0000-0000-0000-000000000000	10d893b4-3a01-4dfb-966e-6eb3251af151	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 23:14:51.375075+00	
00000000-0000-0000-0000-000000000000	99fe3d8f-9b63-4688-b318-b44464a98de2	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 23:22:22.08457+00	
00000000-0000-0000-0000-000000000000	9234eb10-b1e1-4b0b-aa17-ae7626b01880	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-13 23:22:22.085578+00	
00000000-0000-0000-0000-000000000000	a4bef5a7-083f-45f9-bbd9-381f3bf71d55	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-14 00:13:06.46675+00	
00000000-0000-0000-0000-000000000000	4775bb4b-7611-4cec-a7c6-db5538cc60c6	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-14 00:13:06.467732+00	
00000000-0000-0000-0000-000000000000	93faea67-23c1-400f-9c7b-fd50c758f764	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-14 00:20:39.117989+00	
00000000-0000-0000-0000-000000000000	61a694a3-3c47-42a5-99bf-078733dde343	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-14 00:20:39.118863+00	
00000000-0000-0000-0000-000000000000	edf94eb8-4a94-4b7b-aead-64c852995ebb	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-14 01:12:12.276042+00	
00000000-0000-0000-0000-000000000000	12093dbf-62a0-40b0-86fe-291b975ebe7b	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-14 01:12:12.276924+00	
00000000-0000-0000-0000-000000000000	c3422862-9109-4e2a-86d0-cf892908a80a	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-14 01:26:00.840277+00	
00000000-0000-0000-0000-000000000000	0cfc59d6-4440-4d43-987d-7ef62fde92d5	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-14 01:26:00.841272+00	
00000000-0000-0000-0000-000000000000	2aed2267-9a44-4b98-ae2d-787e295e2284	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-14 03:16:54.29024+00	
00000000-0000-0000-0000-000000000000	954952c2-3b22-4222-85c2-5b2d69e9eab2	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-14 03:22:08.078956+00	
00000000-0000-0000-0000-000000000000	221fdc2e-a9c3-4b36-b5eb-3c127d42adfe	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-14 03:32:53.046884+00	
00000000-0000-0000-0000-000000000000	54a2b4fe-5a26-4994-953f-b2073343952f	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-14 03:33:19.22584+00	
00000000-0000-0000-0000-000000000000	c627734e-934e-42bd-8abc-ef1da2d2c30d	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-14 03:33:19.226616+00	
00000000-0000-0000-0000-000000000000	4bd0a05e-f65b-4612-9df3-a4abbf73f17f	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-14 12:19:17.928129+00	
00000000-0000-0000-0000-000000000000	1442b8f9-350b-4836-a851-a90322fcf5ea	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-14 12:19:17.930104+00	
00000000-0000-0000-0000-000000000000	c2957eb7-e661-421b-917a-7f22abc7321b	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-14 14:24:02.444311+00	
00000000-0000-0000-0000-000000000000	9231d42c-7ebf-4614-8ff7-f8061dd3b2ce	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-14 14:24:02.446231+00	
00000000-0000-0000-0000-000000000000	75cadc6c-42f4-47ce-964c-0742541095a8	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-14 14:24:05.064786+00	
00000000-0000-0000-0000-000000000000	6942a630-629a-4167-a367-88d51802d6cb	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-14 14:24:05.065544+00	
00000000-0000-0000-0000-000000000000	4dcf08eb-c246-4285-b517-b534d754368f	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-14 17:19:09.129743+00	
00000000-0000-0000-0000-000000000000	1c099733-b6d7-4b8c-a8d0-53c4e7bcae68	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-14 17:19:09.13177+00	
00000000-0000-0000-0000-000000000000	f0cbe37a-fad1-4fc9-8979-b0295570891b	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-08-14 17:19:13.007149+00	
00000000-0000-0000-0000-000000000000	909ac002-a6a5-4e7c-960b-d8c44e0f80ea	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-16 17:58:47.206569+00	
00000000-0000-0000-0000-000000000000	01dd8f5b-6750-4849-8010-666e76393042	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-16 18:27:27.334499+00	
00000000-0000-0000-0000-000000000000	519260b2-31d4-41dc-81ae-6e5b89a00c50	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-16 18:27:27.337271+00	
00000000-0000-0000-0000-000000000000	9cfbff6d-dbf8-4d44-81cb-0451ceef10f2	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-16 18:30:46.888778+00	
00000000-0000-0000-0000-000000000000	8a3e13fd-b07d-4e5a-a026-f8af9e1f2b10	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-16 18:30:46.889883+00	
00000000-0000-0000-0000-000000000000	02e3de55-b08d-4e25-881c-da4b661359d5	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-16 19:25:45.256627+00	
00000000-0000-0000-0000-000000000000	62569f98-a3bf-4c38-841b-d512041ffae7	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-16 19:25:45.259247+00	
00000000-0000-0000-0000-000000000000	2fb122f3-78a6-4ad4-ac54-3df59b44e67e	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-16 19:32:10.885786+00	
00000000-0000-0000-0000-000000000000	dffcf223-2cf6-47f1-885d-9058f3aa4171	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-16 19:32:10.887709+00	
00000000-0000-0000-0000-000000000000	3aa3cd22-70c2-40f2-bf60-29d25b8f0868	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-16 20:25:18.530587+00	
00000000-0000-0000-0000-000000000000	04e708d0-8236-44fb-8b15-9a805baf8ffd	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-16 20:25:18.534437+00	
00000000-0000-0000-0000-000000000000	aed75ed9-0e9e-4e01-90c4-f02bfa0d29ff	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-16 20:30:41.427348+00	
00000000-0000-0000-0000-000000000000	74ba9def-3925-41ab-ba12-d36109bf34d6	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-16 20:30:41.429447+00	
00000000-0000-0000-0000-000000000000	ca4a8597-bad0-48d5-85e0-e35393370c41	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-16 21:23:29.604445+00	
00000000-0000-0000-0000-000000000000	efcbae80-f615-426d-b29b-63362c70269e	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-16 21:23:29.606243+00	
00000000-0000-0000-0000-000000000000	dad769c4-5f79-4114-a932-925a9e37eba7	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-16 21:28:59.867031+00	
00000000-0000-0000-0000-000000000000	71375efc-30d7-44d9-9abb-f6073c9519f9	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-16 21:28:59.869073+00	
00000000-0000-0000-0000-000000000000	07f31eb6-dfbd-42c6-9f24-75c4aee04c2a	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-16 22:22:29.854907+00	
00000000-0000-0000-0000-000000000000	e9e8075b-8f5d-4df8-a7da-e22c902b9f84	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-16 22:22:29.859668+00	
00000000-0000-0000-0000-000000000000	f5ce9b73-22a7-4db0-aa06-809754018071	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-16 22:27:23.628+00	
00000000-0000-0000-0000-000000000000	2957149d-aaa1-4859-9e57-bf63ba2e9ac0	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-16 22:27:23.630425+00	
00000000-0000-0000-0000-000000000000	b071bbf5-b532-4817-b928-b3cf1a0a1829	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-16 23:20:33.529002+00	
00000000-0000-0000-0000-000000000000	be0a2d33-c50b-426a-b7d0-8279cb36b551	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-16 23:20:33.52993+00	
00000000-0000-0000-0000-000000000000	b1daa780-2833-4233-9951-38d731da4a35	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-16 23:25:33.583592+00	
00000000-0000-0000-0000-000000000000	12a342ca-7079-4569-a99b-2bac16080c10	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-16 23:25:33.587759+00	
00000000-0000-0000-0000-000000000000	4d752a0d-a1db-48cb-9997-6d7367fb1937	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-17 00:18:38.320406+00	
00000000-0000-0000-0000-000000000000	af653ca3-003c-4e14-ac9c-056cd88b6cdc	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-17 00:18:38.322443+00	
00000000-0000-0000-0000-000000000000	d97f9f13-d47f-497b-b68c-081f189f67c6	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-17 00:51:18.305464+00	
00000000-0000-0000-0000-000000000000	08a0f32c-46bf-46b9-9636-6de606744235	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-17 00:51:18.307612+00	
00000000-0000-0000-0000-000000000000	bab14a31-3f0c-4c29-9d8f-d0e74c316522	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-17 01:19:22.514946+00	
00000000-0000-0000-0000-000000000000	bc6aac21-39df-409d-b165-76b17880e118	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-17 01:19:22.51768+00	
00000000-0000-0000-0000-000000000000	1acf35d0-a1de-4a6a-9f03-af472d9150c5	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-17 01:50:41.75066+00	
00000000-0000-0000-0000-000000000000	e9e16024-61f6-4ac7-8881-3cb31d1bec10	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-17 01:50:41.753674+00	
00000000-0000-0000-0000-000000000000	41105d53-8018-4dab-b2d1-984f6260dc33	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-17 02:22:22.122524+00	
00000000-0000-0000-0000-000000000000	fba16131-9e71-4c10-8039-aea9f795b514	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-17 02:22:22.125098+00	
00000000-0000-0000-0000-000000000000	46158e22-c862-4132-9ffb-77372618de7e	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-17 02:49:12.374513+00	
00000000-0000-0000-0000-000000000000	c7848a37-ab23-4fdd-8b15-2b1808abd0ba	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-17 02:49:12.377347+00	
00000000-0000-0000-0000-000000000000	af3c848f-86c2-41ff-bca4-6bbd18dfb8cc	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-17 03:25:23.782162+00	
00000000-0000-0000-0000-000000000000	4ef2719d-7e4b-4364-92df-6f2d4ca9fd8c	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-17 03:25:23.785133+00	
00000000-0000-0000-0000-000000000000	c27f7e72-e313-409f-9497-766aabf0e4b8	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-17 04:08:54.900593+00	
00000000-0000-0000-0000-000000000000	fb5b00d4-e990-4065-adac-0e4673b19115	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-17 04:08:54.901514+00	
00000000-0000-0000-0000-000000000000	6359bbad-36dd-48a2-975b-3f0395c2d003	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-17 04:23:26.108822+00	
00000000-0000-0000-0000-000000000000	731ef1d9-8ef9-4878-beac-0c2d22c5d3cd	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-17 04:23:26.109908+00	
00000000-0000-0000-0000-000000000000	34bdd217-4b76-461f-92fa-9f544ec61a91	{"action":"user_signedup","actor_id":"881e17c3-6c44-488d-8504-906fdc9146ef","actor_name":"Kurt Lee","actor_username":"kurt@mirror.work","actor_via_sso":false,"log_type":"team","traits":{"provider":"google"}}	2025-08-17 14:57:27.871328+00	
00000000-0000-0000-0000-000000000000	9330963c-06f4-48c5-b869-e79eeae229db	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-18 00:49:06.274318+00	
00000000-0000-0000-0000-000000000000	ca5ef6f6-59e2-4642-b287-959cf2950973	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-18 00:49:06.275248+00	
00000000-0000-0000-0000-000000000000	6c36b731-13dd-454f-817c-95e057170e3d	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-18 00:54:20.216335+00	
00000000-0000-0000-0000-000000000000	2cc17a73-8dea-483f-84b3-31b1b3c2cfcd	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-18 00:54:20.219984+00	
00000000-0000-0000-0000-000000000000	5ca7b638-ee7f-4ecf-92f8-1c301f8c2660	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-18 01:19:02.973789+00	
00000000-0000-0000-0000-000000000000	3c5d9634-8846-41e6-9c86-dd5e2a27cf17	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-18 01:47:08.488146+00	
00000000-0000-0000-0000-000000000000	13d4df43-61a2-4da4-baa2-e8c07139230a	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-18 01:47:08.48994+00	
00000000-0000-0000-0000-000000000000	e474ad64-2c3f-44cd-8fa4-aaeb5b0f3423	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-18 01:54:56.921923+00	
00000000-0000-0000-0000-000000000000	3eda0e7a-4f0a-4b87-a4d3-038a8b98597d	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-18 01:54:56.924803+00	
00000000-0000-0000-0000-000000000000	96c46212-ebb5-4aa0-85f0-bb4bdff9b3d5	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-19 23:16:33.441465+00	
00000000-0000-0000-0000-000000000000	2fe39654-75ab-4081-b845-e34ec381d5b2	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-18 02:20:14.502969+00	
00000000-0000-0000-0000-000000000000	123dbf2a-af21-4b81-be13-9d07be85c395	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-18 02:20:14.506872+00	
00000000-0000-0000-0000-000000000000	eda72db9-ce23-4653-9ba0-e7105ade2969	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-18 02:45:38.529278+00	
00000000-0000-0000-0000-000000000000	8f1d66a8-08df-43e3-9d64-34267e47d232	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-18 02:45:38.531279+00	
00000000-0000-0000-0000-000000000000	c5208b90-6ec9-4bd5-966a-6e527248cd35	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-18 14:07:26.249714+00	
00000000-0000-0000-0000-000000000000	ed316e8e-7173-4a56-aae0-4e6db5cc858d	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-18 14:07:26.256792+00	
00000000-0000-0000-0000-000000000000	58c80e48-3c23-41f4-be1a-bc148e47a68a	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-18 14:07:29.379203+00	
00000000-0000-0000-0000-000000000000	c2020e25-370a-4b92-af1b-e04d49912892	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-18 14:07:29.381613+00	
00000000-0000-0000-0000-000000000000	700454bb-4211-4bc4-ab79-5fda0aea342e	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-18 14:09:04.672628+00	
00000000-0000-0000-0000-000000000000	9dd6b3fd-bbfc-4ad1-90de-ad9a6e03629d	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-18 14:09:04.673631+00	
00000000-0000-0000-0000-000000000000	3703ec07-b41d-4f13-a75a-ac2e1f265337	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-18 18:19:25.092863+00	
00000000-0000-0000-0000-000000000000	40eb22b5-7f94-4fc0-a8b1-8b015278a8a1	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-18 18:19:25.095319+00	
00000000-0000-0000-0000-000000000000	53b21665-1cdc-45ba-888c-e0340f124c4c	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-18 18:19:40.195078+00	
00000000-0000-0000-0000-000000000000	da78d6bc-2809-423f-8a1d-a34545725e12	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-18 18:19:40.196235+00	
00000000-0000-0000-0000-000000000000	6719c219-91be-412e-87ec-3f0fa42d9e06	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-18 18:36:29.003083+00	
00000000-0000-0000-0000-000000000000	d426bc94-6173-4e34-9587-f0d52539eedd	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-18 18:36:29.006427+00	
00000000-0000-0000-0000-000000000000	21438ae3-d38c-4f11-8ff3-ffe04edc3cb4	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-18 19:17:53.521022+00	
00000000-0000-0000-0000-000000000000	a7b1d5d9-4796-44c4-ab27-d3048b60212b	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-18 19:17:53.523451+00	
00000000-0000-0000-0000-000000000000	220ff739-50e7-4034-8245-1786e95d63ad	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-18 19:20:27.392965+00	
00000000-0000-0000-0000-000000000000	946ce05c-1dcd-4226-a628-56bc4ee0070e	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-18 19:20:27.394302+00	
00000000-0000-0000-0000-000000000000	c5772c57-b492-4221-9751-20f4a2bb8ebd	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-18 19:37:05.8236+00	
00000000-0000-0000-0000-000000000000	b18c2392-c5ec-4dc7-a993-2f0e2758a96f	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-18 19:37:05.824711+00	
00000000-0000-0000-0000-000000000000	54652916-b89d-4f6b-922f-7930406d0387	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-18 20:28:54.318661+00	
00000000-0000-0000-0000-000000000000	335da77d-9c45-4504-b955-11f0cd95e259	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-18 20:28:54.320578+00	
00000000-0000-0000-0000-000000000000	5a0f9254-c8aa-4b0c-85fe-37f3a44ede7e	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-18 20:28:58.576385+00	
00000000-0000-0000-0000-000000000000	1e25f782-28a1-46b2-bb1f-355262dcb349	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-18 20:28:58.576984+00	
00000000-0000-0000-0000-000000000000	29fae917-e11f-4620-a76d-efe13ee85536	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-18 20:39:29.940245+00	
00000000-0000-0000-0000-000000000000	1fdf7aea-2309-4699-9577-ad599a0a1c1a	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-18 20:39:29.943359+00	
00000000-0000-0000-0000-000000000000	87754880-8a9a-4e3f-9076-1cbbeae1cd9f	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-18 20:56:35.577378+00	
00000000-0000-0000-0000-000000000000	6c728e93-8a09-43dd-8043-9e44a751c3b5	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-18 20:56:35.579646+00	
00000000-0000-0000-0000-000000000000	f9545bfd-a5f3-41bf-9f15-e054afb3adfe	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-08-18 20:56:39.565711+00	
00000000-0000-0000-0000-000000000000	3ef4d6e6-5b10-49aa-a6a0-18f4986420c4	{"action":"login","actor_id":"da1368a1-9ed1-46ef-a7dc-56bf15ebeee4","actor_name":"Nicholas King","actor_username":"nicholas.king@columbiacloudworks.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-18 20:56:44.40119+00	
00000000-0000-0000-0000-000000000000	e707e80f-df6d-40d3-90ec-ea5c8ecc6236	{"action":"logout","actor_id":"da1368a1-9ed1-46ef-a7dc-56bf15ebeee4","actor_name":"Nicholas King","actor_username":"nicholas.king@columbiacloudworks.com","actor_via_sso":false,"log_type":"account"}	2025-08-18 20:58:06.334247+00	
00000000-0000-0000-0000-000000000000	c9ec5609-227c-40d1-b712-8c4b046e507c	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-19 03:00:33.658233+00	
00000000-0000-0000-0000-000000000000	ac5adb63-e155-472b-9b38-c3768e57196f	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-19 12:08:35.236403+00	
00000000-0000-0000-0000-000000000000	b4ce8c2a-02b3-4436-b656-9ee59e42ec2d	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-19 12:08:35.237685+00	
00000000-0000-0000-0000-000000000000	e8e1be91-9ee2-4131-8c02-1db5803daf19	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-19 12:44:14.898884+00	
00000000-0000-0000-0000-000000000000	4dee5ede-3fb6-43e6-9b14-288e4caa3964	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-19 12:44:14.901237+00	
00000000-0000-0000-0000-000000000000	cd01a828-64e8-4f3d-afa6-411b0a4d7710	{"action":"user_signedup","actor_id":"ba131ec4-ad65-4d62-8ed5-4610d575b2dc","actor_name":"Test User","actor_username":"test.user@columbiacloudworks.com","actor_via_sso":false,"log_type":"team","traits":{"provider":"google"}}	2025-08-19 12:44:45.50358+00	
00000000-0000-0000-0000-000000000000	fd687769-4073-4978-8914-483d47fa961b	{"action":"logout","actor_id":"ba131ec4-ad65-4d62-8ed5-4610d575b2dc","actor_name":"Test User","actor_username":"test.user@columbiacloudworks.com","actor_via_sso":false,"log_type":"account"}	2025-08-19 12:45:40.080971+00	
00000000-0000-0000-0000-000000000000	fc5d7534-88c4-4c58-b2f2-620fd7493606	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-19 13:42:44.794266+00	
00000000-0000-0000-0000-000000000000	87eb30b9-08d3-4046-a33f-94af93d0c421	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-19 13:42:44.798294+00	
00000000-0000-0000-0000-000000000000	85f100ff-3dbd-42a2-88dc-2d8dd7c5edaa	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-19 14:32:48.402412+00	
00000000-0000-0000-0000-000000000000	c905cc09-3c8a-4a49-97c7-432fde703544	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-19 14:32:48.406701+00	
00000000-0000-0000-0000-000000000000	c1e03466-f68d-477b-80b2-bfe9e140d6a1	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-19 14:41:08.788278+00	
00000000-0000-0000-0000-000000000000	557f1c84-3fe1-4bfb-98ca-f22b1e3df5e5	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-19 14:41:08.791277+00	
00000000-0000-0000-0000-000000000000	7e8b169a-e1b3-4476-91db-96bab11159f0	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-19 15:23:13.542441+00	
00000000-0000-0000-0000-000000000000	76be2681-dca4-453c-889c-08f7c05f43d1	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-19 15:40:21.366047+00	
00000000-0000-0000-0000-000000000000	76dea3f3-4e4f-4847-910e-e526e35a6806	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-19 15:40:21.369278+00	
00000000-0000-0000-0000-000000000000	d1881d64-499c-4ecd-b4ad-1d212e7b0e1f	{"action":"login","actor_id":"ba131ec4-ad65-4d62-8ed5-4610d575b2dc","actor_name":"Test User","actor_username":"test.user@columbiacloudworks.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-19 15:41:08.165165+00	
00000000-0000-0000-0000-000000000000	a772f80c-754c-4abf-88ef-9652f8de7cbd	{"action":"logout","actor_id":"ba131ec4-ad65-4d62-8ed5-4610d575b2dc","actor_name":"Test User","actor_username":"test.user@columbiacloudworks.com","actor_via_sso":false,"log_type":"account"}	2025-08-19 16:16:22.52671+00	
00000000-0000-0000-0000-000000000000	59b83ce3-5f55-456a-aa68-04af8244bec7	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-19 16:20:18.038802+00	
00000000-0000-0000-0000-000000000000	51915bed-d8b2-440d-b422-d7fb57a6fc31	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-08-19 16:20:54.574832+00	
00000000-0000-0000-0000-000000000000	728629a9-ff34-404d-bd42-bf1a6bcaa44d	{"action":"login","actor_id":"da1368a1-9ed1-46ef-a7dc-56bf15ebeee4","actor_name":"Nicholas King","actor_username":"nicholas.king@columbiacloudworks.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-19 16:21:05.60075+00	
00000000-0000-0000-0000-000000000000	0aa55fbd-1741-465e-bee3-ca40839b8c68	{"action":"logout","actor_id":"da1368a1-9ed1-46ef-a7dc-56bf15ebeee4","actor_name":"Nicholas King","actor_username":"nicholas.king@columbiacloudworks.com","actor_via_sso":false,"log_type":"account"}	2025-08-19 16:29:39.934632+00	
00000000-0000-0000-0000-000000000000	1819fe54-8459-46da-bac8-8d06dd784f77	{"action":"login","actor_id":"da1368a1-9ed1-46ef-a7dc-56bf15ebeee4","actor_name":"Nicholas King","actor_username":"nicholas.king@columbiacloudworks.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-19 16:30:49.198143+00	
00000000-0000-0000-0000-000000000000	65540820-3fda-4bc0-bd47-4f071ca3ddcf	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-19 20:22:41.53068+00	
00000000-0000-0000-0000-000000000000	2b202d3b-724a-437e-8753-b22c65456fbb	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-19 20:22:41.532665+00	
00000000-0000-0000-0000-000000000000	5fa739d7-88bb-4c7b-aac2-3a3f3dd0199d	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-19 21:33:17.780672+00	
00000000-0000-0000-0000-000000000000	3e5b1ff7-1620-4bee-99e5-b412ebf8e5c5	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-19 21:33:17.783757+00	
00000000-0000-0000-0000-000000000000	bf2bbf80-d8cd-4ece-ad6c-d4b9d1648dca	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-19 23:13:46.278373+00	
00000000-0000-0000-0000-000000000000	74e125ea-3807-4448-8097-cd7fc4b0ef0f	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-19 23:13:46.28075+00	
00000000-0000-0000-0000-000000000000	898b35e4-af6e-4fc3-8e6a-059236dabd74	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-19 23:16:33.438022+00	
00000000-0000-0000-0000-000000000000	965d23e8-a625-4a4d-8f4b-c4a3febf1bf4	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-19 23:48:10.220023+00	
00000000-0000-0000-0000-000000000000	36ba929d-aed6-4847-95b7-4c6a049f8105	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-20 03:09:24.107665+00	
00000000-0000-0000-0000-000000000000	6a2af570-5b36-4cbc-978b-bec4af21a9fb	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-20 03:09:24.110989+00	
00000000-0000-0000-0000-000000000000	0a9d5875-5916-47c4-9958-e6a13595f612	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-21 01:46:09.094843+00	
00000000-0000-0000-0000-000000000000	02081b94-cec4-40d4-a984-5d1b2d229716	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-21 01:46:09.103209+00	
00000000-0000-0000-0000-000000000000	212d8e95-160c-4d99-805f-dbaedae3e7af	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-21 18:54:04.322425+00	
00000000-0000-0000-0000-000000000000	c447fcad-01a2-4b27-9325-192bc6e70281	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-21 18:54:04.326266+00	
00000000-0000-0000-0000-000000000000	2a4cf8f7-495e-4c9b-8712-814a350ceeec	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-21 19:26:22.520455+00	
00000000-0000-0000-0000-000000000000	b3939531-0024-4673-9d2a-6f82be6d47e6	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-21 19:26:22.521494+00	
00000000-0000-0000-0000-000000000000	bf82d367-3978-41f6-9971-f2e39e7e60d4	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-21 20:00:24.162315+00	
00000000-0000-0000-0000-000000000000	9ab5577f-cd90-43b3-ad94-6dd5085ccd36	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-21 20:00:24.165301+00	
00000000-0000-0000-0000-000000000000	1d92f998-d794-4c15-b379-a0409f0917f4	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-21 20:33:09.593098+00	
00000000-0000-0000-0000-000000000000	71b1225e-8302-4a75-9a39-7e68ef436c2b	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-21 20:33:09.595884+00	
00000000-0000-0000-0000-000000000000	33c4cfe6-8718-4c34-83f8-bd3fa7c91fd3	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-21 20:38:49.913993+00	
00000000-0000-0000-0000-000000000000	d6fad759-80bc-48c7-9ddb-360928a42174	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-21 20:58:51.702692+00	
00000000-0000-0000-0000-000000000000	fa45af15-7561-45fc-a490-a97458c5908d	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-21 20:58:51.706818+00	
00000000-0000-0000-0000-000000000000	3b4c5a86-a934-4963-ae7a-7760f96298a7	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-21 21:32:36.66828+00	
00000000-0000-0000-0000-000000000000	ec96cb64-5bcd-490c-b683-bb4691359f26	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-21 21:32:36.671924+00	
00000000-0000-0000-0000-000000000000	61a2ef28-f7c5-4c2a-9cdc-2d89d5bd52d9	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-21 21:45:42.324858+00	
00000000-0000-0000-0000-000000000000	eff8823c-fbdd-4b6b-bdda-ef38324f6aa2	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-21 21:45:42.328277+00	
00000000-0000-0000-0000-000000000000	172a9ca8-6a27-4ff6-81ab-9e7826372086	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-21 21:58:59.06186+00	
00000000-0000-0000-0000-000000000000	40536afb-f27a-47f4-923d-17cfb3b72038	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-21 21:58:59.06463+00	
00000000-0000-0000-0000-000000000000	6f0e9205-76fc-473c-a2fb-bee73cf1e992	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-21 22:36:48.514187+00	
00000000-0000-0000-0000-000000000000	8abc5c1d-6bc3-4b70-8748-d16979ad6524	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-21 22:36:48.518007+00	
00000000-0000-0000-0000-000000000000	3c4f40dd-fc50-48dd-831a-8fcf8b1d507f	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-21 22:44:22.000525+00	
00000000-0000-0000-0000-000000000000	293786b5-a18b-43fe-b38b-9a9a37f9c979	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-21 22:44:22.003451+00	
00000000-0000-0000-0000-000000000000	3c32ed43-a381-4559-bf5c-0e1344020c7b	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-21 22:57:49.506657+00	
00000000-0000-0000-0000-000000000000	726efb8f-d694-4b23-ace8-b1dc3c6badc7	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-21 22:57:49.510641+00	
00000000-0000-0000-0000-000000000000	4781cfe4-f706-4be6-89a5-9570713d879a	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-21 23:43:50.758153+00	
00000000-0000-0000-0000-000000000000	c6e821a0-6559-432a-8ace-0b08c056af31	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-21 23:43:50.761852+00	
00000000-0000-0000-0000-000000000000	15300c20-b417-4c47-ac5f-b89241295d9e	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-21 23:44:36.603456+00	
00000000-0000-0000-0000-000000000000	608bfc25-e605-4b71-9f89-3218ba33c884	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-21 23:44:36.605195+00	
00000000-0000-0000-0000-000000000000	1edd5f94-e018-491d-bf64-c3e34b4932ef	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 00:03:10.792486+00	
00000000-0000-0000-0000-000000000000	33eee9a7-9d92-4fb5-9903-fc209c9d161f	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 00:03:10.796439+00	
00000000-0000-0000-0000-000000000000	c304d8f7-8106-4b84-9fd8-fc5774195e97	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 00:42:36.455661+00	
00000000-0000-0000-0000-000000000000	e9ad3b77-b85a-44d2-98ee-a4b8d349ea62	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 00:42:36.457667+00	
00000000-0000-0000-0000-000000000000	93286009-d852-4f75-a93e-284a2f9fce46	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-22 00:45:16.238218+00	
00000000-0000-0000-0000-000000000000	7076ec7a-063f-43bb-b967-b645c6858ef2	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-22 00:45:16.240404+00	
00000000-0000-0000-0000-000000000000	1300a357-1d06-4fe8-867b-46b9ae22053b	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 01:06:18.550968+00	
00000000-0000-0000-0000-000000000000	77d8d84c-f6b6-4f26-ba94-0fc732a0636b	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 01:06:18.552603+00	
00000000-0000-0000-0000-000000000000	a27bb095-72a0-469f-9dbd-8965e5170638	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-22 01:47:11.855055+00	
00000000-0000-0000-0000-000000000000	e94dc605-bca4-4f70-ae9d-13266e52bcb5	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-22 01:47:11.85724+00	
00000000-0000-0000-0000-000000000000	6923d5e3-0e01-42f1-9b29-ac2934fa0242	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 01:49:54.812223+00	
00000000-0000-0000-0000-000000000000	165cbbe6-84cc-4a88-bcac-0b016fa75aee	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 01:49:54.815151+00	
00000000-0000-0000-0000-000000000000	36f958cb-2911-450b-95a8-9d4683bf7aff	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 02:15:55.109674+00	
00000000-0000-0000-0000-000000000000	ff861150-7843-4a84-8abb-4abf5f125ea5	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 02:15:55.111842+00	
00000000-0000-0000-0000-000000000000	3a594ee6-a9a8-424c-8519-7da60de0ef53	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 02:49:56.989189+00	
00000000-0000-0000-0000-000000000000	7421e531-773d-48b3-8449-b19f3517e437	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 02:49:56.992519+00	
00000000-0000-0000-0000-000000000000	81c15a7b-e02b-424a-abd1-bcce6a4e3c9e	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-22 02:51:31.696245+00	
00000000-0000-0000-0000-000000000000	985b88c2-3d9e-4507-9b55-3f8e20825960	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-22 02:51:31.697915+00	
00000000-0000-0000-0000-000000000000	cf872526-f271-4ddf-aae2-db75491bd13e	{"action":"user_confirmation_requested","actor_id":"39ea9c03-12ac-4072-990e-63019d163ce2","actor_username":"theerealray@gmail.com","actor_via_sso":false,"log_type":"user","traits":{"provider":"email"}}	2025-08-22 03:15:53.391228+00	
00000000-0000-0000-0000-000000000000	79833171-721e-4655-b575-ffc730266716	{"action":"user_signedup","actor_id":"39ea9c03-12ac-4072-990e-63019d163ce2","actor_username":"theerealray@gmail.com","actor_via_sso":false,"log_type":"team","traits":{"provider":"email"}}	2025-08-22 03:16:24.043854+00	
00000000-0000-0000-0000-000000000000	caf86b6f-97d4-4e4f-a2d2-abfc20107e3a	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 03:16:45.553051+00	
00000000-0000-0000-0000-000000000000	879fa43b-3f0f-4353-bcaa-83f5c34951a3	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 03:16:45.5541+00	
00000000-0000-0000-0000-000000000000	b2156d09-4029-4ed1-9b8a-f94f626d94e6	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-08-22 03:40:29.941565+00	
00000000-0000-0000-0000-000000000000	891d7277-f885-416f-8a0e-06e4fb5d78de	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 03:48:22.429353+00	
00000000-0000-0000-0000-000000000000	cb62e978-d33c-4c21-bd36-d795439ccc45	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 03:48:22.431846+00	
00000000-0000-0000-0000-000000000000	f5fdeb56-571d-4b8b-b1f0-577af70be470	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-08-22 03:53:02.012337+00	
00000000-0000-0000-0000-000000000000	1ff57635-5abd-4746-a5d5-35ad86a589c4	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-22 03:53:42.149173+00	
00000000-0000-0000-0000-000000000000	57d8f6e8-7aee-4ac6-a9ed-7d202b850ce0	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-08-22 04:05:52.862169+00	
00000000-0000-0000-0000-000000000000	e58c5019-3acf-44e9-bdb2-9300220c2dfc	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-22 04:06:17.053449+00	
00000000-0000-0000-0000-000000000000	3157d7f1-f561-4f97-8797-cba8ecbe92ab	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-22 04:35:57.016202+00	
00000000-0000-0000-0000-000000000000	11d4c65f-1a1d-4b04-aadb-250ab4bfd600	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 05:13:52.162058+00	
00000000-0000-0000-0000-000000000000	f1ac1207-e439-4038-b0be-0955048ce66b	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 05:13:52.165903+00	
00000000-0000-0000-0000-000000000000	ee68b3f1-160a-49b7-9813-1c2b3701bc97	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-22 06:03:30.811538+00	
00000000-0000-0000-0000-000000000000	908eb3d3-8fdd-415b-8c3e-4725d2631456	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-22 06:03:30.816017+00	
00000000-0000-0000-0000-000000000000	30816569-8953-4fce-936e-a67cc22dff9a	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 06:15:14.589834+00	
00000000-0000-0000-0000-000000000000	efb38107-437f-4aad-a33c-41ec27fffd82	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 06:15:14.592384+00	
00000000-0000-0000-0000-000000000000	45fad9ce-f902-45cb-a21b-40e689605cbd	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 07:13:28.609405+00	
00000000-0000-0000-0000-000000000000	b797648f-16b5-4948-adca-89d6cd1c9885	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 07:13:28.614202+00	
00000000-0000-0000-0000-000000000000	438dbef5-8fdc-413d-af54-f2215005ca34	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-22 07:22:47.987938+00	
00000000-0000-0000-0000-000000000000	c04d8e13-8a57-4c04-b341-bfcc4cfa6484	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-22 07:22:47.995807+00	
00000000-0000-0000-0000-000000000000	bbbef987-85ed-4d43-a7e3-b1b73c281f18	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 08:11:42.991322+00	
00000000-0000-0000-0000-000000000000	31b0db8c-d38d-4999-8b65-5940f7a165c5	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 08:11:42.993477+00	
00000000-0000-0000-0000-000000000000	06ba08ae-e77c-4be1-99d9-b1696e1b984f	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-22 14:10:36.026995+00	
00000000-0000-0000-0000-000000000000	10605399-894e-478f-9343-ee7783d7720f	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-22 14:10:36.031142+00	
00000000-0000-0000-0000-000000000000	1e912ef9-8043-48d9-b66f-71735835b003	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-22 14:10:51.954786+00	
00000000-0000-0000-0000-000000000000	e69e12c4-5a05-4920-a7cb-637989ef8c71	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-22 15:18:01.851054+00	
00000000-0000-0000-0000-000000000000	67f538c6-6423-498d-91ca-c055d6b2086e	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-22 15:18:01.853822+00	
00000000-0000-0000-0000-000000000000	273f54b9-b51e-4e36-a288-0f0dd5f0bfe1	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 15:18:07.174261+00	
00000000-0000-0000-0000-000000000000	14794a5c-ae3d-4b5f-a4c3-21c6820eb41a	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 15:18:07.176467+00	
00000000-0000-0000-0000-000000000000	d930a458-086d-4202-9166-7ffbc91ac156	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-22 16:48:14.250383+00	
00000000-0000-0000-0000-000000000000	92a8746a-6d49-47b9-aef4-7d6f40f8e890	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-22 16:48:14.252379+00	
00000000-0000-0000-0000-000000000000	a47fa825-a699-4578-bd0f-792162425095	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 16:48:18.667253+00	
00000000-0000-0000-0000-000000000000	e0e227fe-4389-4b13-b9b1-0fb75e49196d	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 16:48:18.668246+00	
00000000-0000-0000-0000-000000000000	10c70ccc-cab9-42f1-9302-16c4828e2f0c	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-22 18:36:38.549782+00	
00000000-0000-0000-0000-000000000000	6eabb204-71ab-4336-98c5-01825a921630	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-22 18:36:38.551218+00	
00000000-0000-0000-0000-000000000000	95cc3182-0657-44a7-85c0-61a80608cf85	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 21:18:22.034805+00	
00000000-0000-0000-0000-000000000000	a82863f9-1ae7-418f-a656-ed9cbed412ba	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 21:18:22.038751+00	
00000000-0000-0000-0000-000000000000	4ff54696-a710-460e-a581-bfa881a164e7	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 21:19:45.617999+00	
00000000-0000-0000-0000-000000000000	10883f46-8484-46e0-be07-651b41446ae4	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 21:19:45.621166+00	
00000000-0000-0000-0000-000000000000	6d7ceacc-d6d0-449a-8664-0196df994bf2	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-22 23:24:22.639275+00	
00000000-0000-0000-0000-000000000000	0b591111-e770-4f81-aeb5-df8df867ca7b	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-22 23:24:22.643392+00	
00000000-0000-0000-0000-000000000000	add7f9db-3a69-4771-b405-e945a310b34f	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 23:24:26.439309+00	
00000000-0000-0000-0000-000000000000	807c8638-acf8-4c16-96ac-f614cfd9648c	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-22 23:24:26.441263+00	
00000000-0000-0000-0000-000000000000	e7c1b720-2c7e-4bae-a80f-81e83037878d	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-08-22 23:28:05.239559+00	
00000000-0000-0000-0000-000000000000	89c1bd64-f6e8-47aa-9e56-8fd7a9905e6e	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-22 23:28:17.925817+00	
00000000-0000-0000-0000-000000000000	fc75a2a3-0905-4ae7-a7d8-68036b30023d	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-08-22 23:28:50.605285+00	
00000000-0000-0000-0000-000000000000	c4e3b1b8-280b-49f3-847d-13b8366d5a8a	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-23 16:36:54.800713+00	
00000000-0000-0000-0000-000000000000	cf1e806f-c917-44bf-a564-6057c2a5deb1	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-23 16:55:21.612242+00	
00000000-0000-0000-0000-000000000000	4cd2aff1-6b23-4314-aa2a-6ce0632ebd46	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-23 16:59:58.550676+00	
00000000-0000-0000-0000-000000000000	f8beb416-05bb-497f-8d8e-c534f4440504	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-23 17:53:48.389449+00	
00000000-0000-0000-0000-000000000000	67bb604b-45ea-4b52-aab8-daca187cfc8c	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-23 17:53:48.390669+00	
00000000-0000-0000-0000-000000000000	da9f628a-8a12-4a5c-90ac-a2765f7ed4f8	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-23 17:57:59.992333+00	
00000000-0000-0000-0000-000000000000	0777d3f0-8da7-48a7-a377-bc98298e107b	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-23 17:57:59.993752+00	
00000000-0000-0000-0000-000000000000	9528ec14-79b7-4d10-b54d-3deeecca3ac1	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-25 00:27:08.358005+00	
00000000-0000-0000-0000-000000000000	0facd0f9-f693-4f05-901e-8e7a0af533f1	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-25 00:27:08.360068+00	
00000000-0000-0000-0000-000000000000	1b129c7c-1426-44c6-9ae3-3202701aee3d	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-25 21:59:11.443822+00	
00000000-0000-0000-0000-000000000000	058e8aed-5511-4223-9e29-1ddb8d522167	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-25 21:59:11.447758+00	
00000000-0000-0000-0000-000000000000	84583340-cf0f-4ade-ab28-a443f7b7585c	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-25 22:18:34.110589+00	
00000000-0000-0000-0000-000000000000	f282d0c2-cc3b-4019-9361-8e5579c93675	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-25 22:18:34.115599+00	
00000000-0000-0000-0000-000000000000	6c734232-0086-4ca2-aadd-7944551aa15a	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-25 23:03:45.330206+00	
00000000-0000-0000-0000-000000000000	33b4858f-7e22-4033-ab6e-3ec48666090f	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-25 23:03:45.337273+00	
00000000-0000-0000-0000-000000000000	70098804-ea31-4c89-9382-cdd82422de82	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-25 23:45:45.113058+00	
00000000-0000-0000-0000-000000000000	659eef10-f1a6-41b6-adba-771c8090b263	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-25 23:45:45.124567+00	
00000000-0000-0000-0000-000000000000	eec84e7a-72a4-4082-87e7-5f5027aed748	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-26 00:02:08.202122+00	
00000000-0000-0000-0000-000000000000	e7435458-581b-433b-8119-5ec9f775d956	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-26 00:02:08.205648+00	
00000000-0000-0000-0000-000000000000	8f89ae32-a237-415e-84c5-ac0a9a136911	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-26 00:19:57.977446+00	
00000000-0000-0000-0000-000000000000	9dc434a6-0dd1-4b47-82da-dc638da60730	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-26 00:19:57.980686+00	
00000000-0000-0000-0000-000000000000	86506485-acbc-4f76-998d-256274ca4589	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-08-26 00:20:13.966018+00	
00000000-0000-0000-0000-000000000000	854c889d-5049-4e7d-867f-ab4df9dcc596	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-26 00:20:19.363824+00	
00000000-0000-0000-0000-000000000000	719ad814-3dca-45d3-af4b-1b66b0bd5d7d	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-26 00:22:12.559829+00	
00000000-0000-0000-0000-000000000000	4c7a8e66-6551-4568-8055-986103780d1e	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-26 06:23:56.755153+00	
00000000-0000-0000-0000-000000000000	cc1f83c7-c429-4e84-875c-62b4934d5e15	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-26 06:23:56.756608+00	
00000000-0000-0000-0000-000000000000	ad003138-00e3-4f57-a766-beb1b4240143	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-26 17:41:50.678557+00	
00000000-0000-0000-0000-000000000000	a226e3f3-8c8a-46ac-a81b-3c9b4d27f41b	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-26 17:41:50.682623+00	
00000000-0000-0000-0000-000000000000	36a6de9c-7f32-4295-af80-0e7233d9a9b2	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-26 17:42:21.886683+00	
00000000-0000-0000-0000-000000000000	2a59d8bb-778a-41a0-b6aa-4eeb87d0842c	{"action":"logout","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account"}	2025-08-26 17:43:45.835349+00	
00000000-0000-0000-0000-000000000000	db622985-fbb4-41f1-9929-4fe83b6781f5	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-26 17:43:55.267176+00	
00000000-0000-0000-0000-000000000000	f584961f-75e8-4b6f-a94b-1ed03e267492	{"action":"logout","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account"}	2025-08-26 17:47:08.933216+00	
00000000-0000-0000-0000-000000000000	98c21709-ddd1-4e22-97d7-508d1ed2ccb7	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-26 17:47:13.941588+00	
00000000-0000-0000-0000-000000000000	fe5eecad-ef77-4590-b6e6-7a949bc8d1ce	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-26 17:51:36.419794+00	
00000000-0000-0000-0000-000000000000	b026f778-986c-42ce-96e5-9187ea75988c	{"action":"token_refreshed","actor_id":"da1368a1-9ed1-46ef-a7dc-56bf15ebeee4","actor_name":"Nicholas King","actor_username":"nicholas.king@columbiacloudworks.com","actor_via_sso":false,"log_type":"token"}	2025-08-26 18:07:55.944298+00	
00000000-0000-0000-0000-000000000000	33e57338-4d4d-4a98-8ec3-f9a6e0762c71	{"action":"token_revoked","actor_id":"da1368a1-9ed1-46ef-a7dc-56bf15ebeee4","actor_name":"Nicholas King","actor_username":"nicholas.king@columbiacloudworks.com","actor_via_sso":false,"log_type":"token"}	2025-08-26 18:07:55.946749+00	
00000000-0000-0000-0000-000000000000	9ab54428-5c6b-4b04-afae-47385d3afaec	{"action":"logout","actor_id":"da1368a1-9ed1-46ef-a7dc-56bf15ebeee4","actor_name":"Nicholas King","actor_username":"nicholas.king@columbiacloudworks.com","actor_via_sso":false,"log_type":"account"}	2025-08-26 18:08:01.247743+00	
00000000-0000-0000-0000-000000000000	28454113-57fa-41d6-8676-9e2544d73f27	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-26 18:31:16.949145+00	
00000000-0000-0000-0000-000000000000	598bc5a1-698e-452f-869e-a60832de9949	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-26 22:38:43.3255+00	
00000000-0000-0000-0000-000000000000	7f49de74-190b-4e64-abd2-fadb7a070c1d	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-26 22:38:43.327549+00	
00000000-0000-0000-0000-000000000000	2eb609f1-7a10-42a5-b5de-9074cabc7bc7	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-26 22:47:31.158485+00	
00000000-0000-0000-0000-000000000000	87908ac0-ed3e-4153-b92f-90680c4ffe0f	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-26 23:02:08.34131+00	
00000000-0000-0000-0000-000000000000	f917be0b-1db2-4c4e-9754-54867c3f2935	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-26 23:02:08.345664+00	
00000000-0000-0000-0000-000000000000	ea110168-2d0b-4cc3-b655-0c387bc0429b	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-26 23:24:41.079895+00	
00000000-0000-0000-0000-000000000000	bb31fa0e-f471-406f-b214-b100e13cad2f	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 00:31:06.164153+00	
00000000-0000-0000-0000-000000000000	70065574-97a3-43a2-beec-c3eb0c5fcf3e	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 00:31:06.168179+00	
00000000-0000-0000-0000-000000000000	6ba3e766-19d0-4e45-8b58-a929f064c21a	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 01:34:15.599551+00	
00000000-0000-0000-0000-000000000000	850486a9-3da5-45a6-8533-e5ede701e12b	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-27 01:34:15.60309+00	
00000000-0000-0000-0000-000000000000	85d39aea-6b3e-45c4-8ce0-01620c332350	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-08-29 10:55:21.462574+00	
00000000-0000-0000-0000-000000000000	ee30d219-f132-410b-9737-55218d47eb15	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-29 18:11:20.369683+00	
00000000-0000-0000-0000-000000000000	12ecf427-ada9-4a68-b791-faeb7d8fd6be	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-29 18:11:20.381257+00	
00000000-0000-0000-0000-000000000000	7fa7247b-f943-420f-9481-9ad4518c3de8	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 17:51:49.281928+00	
00000000-0000-0000-0000-000000000000	3a12847a-2cc8-402e-a7b3-78308795b9bb	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 17:51:49.284804+00	
00000000-0000-0000-0000-000000000000	04f4c9d7-f733-49b7-97d0-37bc0779d4fb	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 20:31:13.203596+00	
00000000-0000-0000-0000-000000000000	ba977342-393a-468c-a355-05cde393029b	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 20:31:13.206311+00	
00000000-0000-0000-0000-000000000000	46bc1a79-e482-4e57-979f-af0ef7cd9b8c	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-08-31 20:33:38.020933+00	
00000000-0000-0000-0000-000000000000	86a56f62-7844-4db8-9ff9-bf991961b357	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-31 21:35:38.862702+00	
00000000-0000-0000-0000-000000000000	696c7b0c-6a80-4f0e-a6a3-e727a4e1226b	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-31 21:35:38.867083+00	
00000000-0000-0000-0000-000000000000	d1d04af2-0515-40c1-8569-522bc455f6a5	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 21:36:18.918576+00	
00000000-0000-0000-0000-000000000000	76ccbea4-315b-4968-832d-22e388399c03	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 21:36:18.919457+00	
00000000-0000-0000-0000-000000000000	c7bbf499-04bc-4e46-8a2a-45fbff8a728c	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-31 22:34:09.742183+00	
00000000-0000-0000-0000-000000000000	24b0fa5b-7604-40d1-a0fb-1999233ddeb0	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-31 22:34:09.744868+00	
00000000-0000-0000-0000-000000000000	071d58e6-b7d6-4056-83c3-e25b6ec8b09a	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 22:38:27.757609+00	
00000000-0000-0000-0000-000000000000	ece114e9-813b-43f4-b6c2-d6e4819a0db5	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 22:38:27.759002+00	
00000000-0000-0000-0000-000000000000	7f7cc9af-27d6-4c94-b52a-72b0311f971c	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 22:42:29.553686+00	
00000000-0000-0000-0000-000000000000	37784ac8-ba14-460a-9d53-373af91441c5	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 22:42:29.554943+00	
00000000-0000-0000-0000-000000000000	ad6a70b2-0362-47f2-a874-e2406dc4370e	{"action":"token_refreshed","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-31 23:32:36.093543+00	
00000000-0000-0000-0000-000000000000	e97fc799-0fff-4fbc-a7f3-21964269e5db	{"action":"token_revoked","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"token"}	2025-08-31 23:32:36.095607+00	
00000000-0000-0000-0000-000000000000	698d2346-22ac-4442-9666-989b4faac40b	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 23:42:01.757321+00	
00000000-0000-0000-0000-000000000000	1f7eeadf-a2a7-4691-bb98-dded897199d9	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-08-31 23:42:01.759813+00	
00000000-0000-0000-0000-000000000000	d3aaf1bd-537a-4e11-be25-1faf239c7914	{"action":"login","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"account","traits":{"provider":"google"}}	2025-09-01 00:31:04.918431+00	
00000000-0000-0000-0000-000000000000	ee9cf171-9705-42cd-b547-ea985c60753e	{"action":"login","actor_id":"0d73189e-e714-48e2-8c33-fe8778259064","actor_username":"admin@equipqr.app","actor_via_sso":false,"log_type":"account","traits":{"provider":"email"}}	2025-09-01 00:33:02.835502+00	
00000000-0000-0000-0000-000000000000	e5e040cd-91ea-4ea8-bb0c-14448ea09a78	{"action":"token_refreshed","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-01 02:13:48.257803+00	
00000000-0000-0000-0000-000000000000	f6c9cb72-07c4-4e98-995a-48afab6f5be8	{"action":"token_revoked","actor_id":"685efa5e-7519-486e-8643-28cfaf5408a4","actor_name":"Viral Architect","actor_username":"viral.architect@gmail.com","actor_via_sso":false,"log_type":"token"}	2025-09-01 02:13:48.260514+00	
\.


--
-- Data for Name: flow_state; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.flow_state (id, user_id, auth_code, code_challenge_method, code_challenge, provider_type, provider_access_token, provider_refresh_token, created_at, updated_at, authentication_method, auth_code_issued_at) FROM stdin;
\.


--
-- Data for Name: identities; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.identities (provider_id, user_id, identity_data, provider, last_sign_in_at, created_at, updated_at, id) FROM stdin;
0d73189e-e714-48e2-8c33-fe8778259064	0d73189e-e714-48e2-8c33-fe8778259064	{"sub": "0d73189e-e714-48e2-8c33-fe8778259064", "name": "Global Administrator", "email": "admin@equipqr.app", "email_verified": false, "phone_verified": false}	email	2025-06-17 14:46:52.820179+00	2025-06-17 14:46:52.820237+00	2025-06-17 14:46:52.820237+00	405c2f44-63ca-4ff1-8931-7ea7f3e59881
9c2bd213-3ce9-457c-a29e-dfafa277839d	9c2bd213-3ce9-457c-a29e-dfafa277839d	{"sub": "9c2bd213-3ce9-457c-a29e-dfafa277839d", "name": "Matt hankins", "email": "matthewleehankins@gmail.com", "email_verified": true, "phone_verified": false}	email	2025-07-19 04:55:12.34591+00	2025-07-19 04:55:12.345959+00	2025-07-19 04:55:12.345959+00	de840032-8da1-4640-a84a-7777ff96e27e
103235578409269212827	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	{"iss": "https://accounts.google.com", "sub": "103235578409269212827", "name": "Matthew Hankins", "email": "matt@3aequip.com", "picture": "https://lh3.googleusercontent.com/a/ACg8ocLHVf7fH5rDicDbMRP8TsCsf9VDo9VKSPc9teB3Uwsnv_ct2Q=s96-c", "full_name": "Matthew Hankins", "avatar_url": "https://lh3.googleusercontent.com/a/ACg8ocLHVf7fH5rDicDbMRP8TsCsf9VDo9VKSPc9teB3Uwsnv_ct2Q=s96-c", "provider_id": "103235578409269212827", "custom_claims": {"hd": "3aequip.com"}, "email_verified": true, "phone_verified": false}	google	2025-06-24 13:40:06.737982+00	2025-06-24 13:40:06.738032+00	2025-08-10 23:13:54.669547+00	20e94880-3b69-4b4d-8353-c265e2225e0b
108157899326591105214	9c2bd213-3ce9-457c-a29e-dfafa277839d	{"iss": "https://accounts.google.com", "sub": "108157899326591105214", "name": "Matthew Hankins", "email": "matthewleehankins@gmail.com", "picture": "https://lh3.googleusercontent.com/a/ACg8ocL99rofqk2Ao2LsKN0zoqWy9BwrS2ZjJ03uyfWF7WrS_jI1hw=s96-c", "full_name": "Matthew Hankins", "avatar_url": "https://lh3.googleusercontent.com/a/ACg8ocL99rofqk2Ao2LsKN0zoqWy9BwrS2ZjJ03uyfWF7WrS_jI1hw=s96-c", "provider_id": "108157899326591105214", "email_verified": true, "phone_verified": false}	google	2025-07-19 05:00:28.789294+00	2025-07-19 05:00:28.789348+00	2025-07-19 05:00:28.789348+00	f3c39e9f-d41d-41a9-beb4-a2933012540b
100010644895531908471	881e17c3-6c44-488d-8504-906fdc9146ef	{"iss": "https://accounts.google.com", "sub": "100010644895531908471", "name": "Kurt Lee", "email": "kurt@mirror.work", "full_name": "Kurt Lee", "provider_id": "100010644895531908471", "custom_claims": {"hd": "mirror.work"}, "email_verified": true, "phone_verified": false}	google	2025-08-17 14:57:27.8625+00	2025-08-17 14:57:27.862551+00	2025-08-17 14:57:27.862551+00	819c43ca-db38-46e7-b894-c765c2aae28f
115114255670319937517	1b7e1856-ca69-4eee-8896-f7c1cf81f942	{"iss": "https://accounts.google.com", "sub": "115114255670319937517", "name": "Mathias Rex Lindberg", "email": "mathiasrex2003@gmail.com", "picture": "https://lh3.googleusercontent.com/a/ACg8ocKRWvFZLQKKHj27krYHPXtJsJLMujOXq-VBPvPhSWKvmyMH_C6M=s96-c", "full_name": "Mathias Rex Lindberg", "avatar_url": "https://lh3.googleusercontent.com/a/ACg8ocKRWvFZLQKKHj27krYHPXtJsJLMujOXq-VBPvPhSWKvmyMH_C6M=s96-c", "provider_id": "115114255670319937517", "email_verified": true, "phone_verified": false}	google	2025-07-25 19:40:43.259302+00	2025-07-25 19:40:43.25936+00	2025-07-29 09:50:29.633102+00	a6be65ab-b96b-4b59-923b-87058da43f4d
115898931477514095081	5dfc39b8-8037-400a-a7f4-033192d62e44	{"iss": "https://accounts.google.com", "sub": "115898931477514095081", "name": "Justin Pitera", "email": "justinpitera@gmail.com", "full_name": "Justin Pitera", "provider_id": "115898931477514095081", "email_verified": true, "phone_verified": false}	google	2025-07-25 15:04:31.683954+00	2025-07-25 15:04:31.684001+00	2025-07-27 16:57:22.459794+00	5d7345e5-bd5b-4059-9245-b236ec4c35cc
115553053276018707041	ba131ec4-ad65-4d62-8ed5-4610d575b2dc	{"iss": "https://accounts.google.com", "sub": "115553053276018707041", "name": "Test User", "email": "test.user@columbiacloudworks.com", "picture": "https://lh3.googleusercontent.com/a/ACg8ocJ0Rft8HhZ2O8H2POT7tEatGNOix9Khz8f9YdGtgx_1MxFiYQ=s96-c", "full_name": "Test User", "avatar_url": "https://lh3.googleusercontent.com/a/ACg8ocJ0Rft8HhZ2O8H2POT7tEatGNOix9Khz8f9YdGtgx_1MxFiYQ=s96-c", "provider_id": "115553053276018707041", "custom_claims": {"hd": "columbiacloudworks.com"}, "email_verified": true, "phone_verified": false}	google	2025-08-19 12:44:45.499647+00	2025-08-19 12:44:45.499703+00	2025-08-19 15:41:08.160128+00	c61b4a30-25ad-41c6-8942-bc602db56340
101445503182048383952	685efa5e-7519-486e-8643-28cfaf5408a4	{"iss": "https://accounts.google.com", "sub": "101445503182048383952", "name": "Viral Architect", "email": "viral.architect@gmail.com", "picture": "https://lh3.googleusercontent.com/a/ACg8ocLhreRO8DDBod0VP62Hgle3DM50JobdoFa6_E3xqeVgj4HlPhww=s96-c", "full_name": "Viral Architect", "avatar_url": "https://lh3.googleusercontent.com/a/ACg8ocLhreRO8DDBod0VP62Hgle3DM50JobdoFa6_E3xqeVgj4HlPhww=s96-c", "provider_id": "101445503182048383952", "email_verified": true, "phone_verified": false}	google	2025-06-18 18:08:12.480623+00	2025-06-18 18:08:12.48068+00	2025-09-01 00:31:04.912401+00	e4799058-258f-4ae8-9f4d-726b4b633a9d
39ea9c03-12ac-4072-990e-63019d163ce2	39ea9c03-12ac-4072-990e-63019d163ce2	{"sub": "39ea9c03-12ac-4072-990e-63019d163ce2", "name": "r", "email": "theerealray@gmail.com", "email_verified": true, "phone_verified": false, "organization_name": "rlk"}	email	2025-08-22 03:15:53.385126+00	2025-08-22 03:15:53.385176+00	2025-08-22 03:15:53.385176+00	0732f9ae-1141-4e0d-ab65-a99a000e776c
101361402054194046106	da1368a1-9ed1-46ef-a7dc-56bf15ebeee4	{"iss": "https://accounts.google.com", "sub": "101361402054194046106", "name": "Nicholas King", "email": "nicholas.king@columbiacloudworks.com", "picture": "https://lh3.googleusercontent.com/a/ACg8ocLLOKIhduNiWAnPmn6x1ESxEWwgFYXdkOn1Q8ufARLKaZfZfOM=s96-c", "full_name": "Nicholas King", "avatar_url": "https://lh3.googleusercontent.com/a/ACg8ocLLOKIhduNiWAnPmn6x1ESxEWwgFYXdkOn1Q8ufARLKaZfZfOM=s96-c", "provider_id": "101361402054194046106", "custom_claims": {"hd": "columbiacloudworks.com"}, "email_verified": true, "phone_verified": false}	google	2025-07-19 04:05:27.493644+00	2025-07-19 04:05:27.493709+00	2025-08-19 16:30:49.19542+00	17b7a18f-ad36-4867-b201-42388d395ed1
\.


--
-- Data for Name: instances; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.instances (id, uuid, raw_base_config, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: mfa_amr_claims; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.mfa_amr_claims (session_id, created_at, updated_at, authentication_method, id) FROM stdin;
b6d6172b-fb0d-489f-95ff-2af339219452	2025-07-25 19:40:43.269597+00	2025-07-25 19:40:43.269597+00	oauth	bc828946-757b-430c-8fc0-e76f3efb346e
31335043-4561-4480-bf65-fa0fd10d60c9	2025-07-27 16:57:22.471757+00	2025-07-27 16:57:22.471757+00	oauth	336eaa3f-0879-4d65-b64f-76b18c812c31
021eedef-5667-48d1-a49c-eefdf68998c9	2025-07-29 09:50:29.639828+00	2025-07-29 09:50:29.639828+00	oauth	cf225928-5852-44f5-9818-70c931d5ea9b
36b3e7db-0db8-4fb4-ac26-481e3bb47064	2025-08-17 14:57:27.882975+00	2025-08-17 14:57:27.882975+00	oauth	e287167a-84f1-4607-b5f4-8cc2a6219856
de1f5904-1f74-459c-a31f-0dd4efff9c2e	2025-08-22 03:16:24.059504+00	2025-08-22 03:16:24.059504+00	otp	cbc6464a-b995-4eee-871b-dd2ea8717d7b
f15ff20f-c5a0-47b3-897e-b32a74ebab79	2025-08-26 17:47:13.948461+00	2025-08-26 17:47:13.948461+00	password	adf5d8d0-d641-4259-ac0c-96ee1f027be2
b553b78b-c1c3-4547-816e-c66895610981	2025-08-26 17:51:36.433355+00	2025-08-26 17:51:36.433355+00	password	1f827eac-7287-4729-ba8f-b70ae3d5518f
38ba19c1-520a-46ae-9319-63dd31c3c9c7	2025-08-26 18:31:16.959497+00	2025-08-26 18:31:16.959497+00	password	95f316c2-a0ec-4e7d-880e-58c4bfbb8306
c54eed04-2d1b-484d-a13a-572d6412958b	2025-08-26 22:47:31.167346+00	2025-08-26 22:47:31.167346+00	password	97099618-f103-4cb7-9821-d4eddc1e103e
f9be679a-c44f-4610-8979-23c12f047f80	2025-08-10 23:13:54.677598+00	2025-08-10 23:13:54.677598+00	oauth	b5d998b4-b6ac-4b3f-b9f2-ba78f0236d90
b9fba581-aecf-42e2-be4b-bc4e58f28879	2025-08-26 23:24:41.087719+00	2025-08-26 23:24:41.087719+00	oauth	35a36391-68b4-40f9-95a2-36c9dfbb928a
58fadef8-74aa-4533-9cb0-65ea9046b93b	2025-08-29 10:55:21.497962+00	2025-08-29 10:55:21.497962+00	oauth	3cb1ad2d-a6bb-45af-8543-9eaa6c395d96
6c06c200-d750-40b4-a8b6-02d953b42b2b	2025-08-31 20:33:38.035577+00	2025-08-31 20:33:38.035577+00	password	4163b02a-8d7a-4e01-84d6-f94bcf8fb123
8834a0ea-6e52-4a9f-97f3-906a8b55721d	2025-09-01 00:31:04.930637+00	2025-09-01 00:31:04.930637+00	oauth	b1341330-7927-475e-9aaa-0d167689aaf4
8225f654-2e51-412b-b890-8c63cca95973	2025-09-01 00:33:02.8425+00	2025-09-01 00:33:02.8425+00	password	cc966248-4059-4bfb-9508-b59f99d68613
\.


--
-- Data for Name: mfa_challenges; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.mfa_challenges (id, factor_id, created_at, verified_at, ip_address, otp_code, web_authn_session_data) FROM stdin;
\.


--
-- Data for Name: mfa_factors; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.mfa_factors (id, user_id, friendly_name, factor_type, status, created_at, updated_at, secret, phone, last_challenged_at, web_authn_credential, web_authn_aaguid) FROM stdin;
\.


--
-- Data for Name: one_time_tokens; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.one_time_tokens (id, user_id, token_type, token_hash, relates_to, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: refresh_tokens; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.refresh_tokens (instance_id, id, token, user_id, revoked, created_at, updated_at, parent, session_id) FROM stdin;
00000000-0000-0000-0000-000000000000	397	3tvgv2jbsgav	1b7e1856-ca69-4eee-8896-f7c1cf81f942	t	2025-07-30 10:55:34.174969+00	2025-07-30 18:46:08.201057+00	tf47frw57c7i	b6d6172b-fb0d-489f-95ff-2af339219452
00000000-0000-0000-0000-000000000000	403	z7xzaxetllow	1b7e1856-ca69-4eee-8896-f7c1cf81f942	f	2025-07-30 18:46:08.201837+00	2025-07-30 18:46:08.201837+00	3tvgv2jbsgav	b6d6172b-fb0d-489f-95ff-2af339219452
00000000-0000-0000-0000-000000000000	787	ftuzeqdbem4e	0d73189e-e714-48e2-8c33-fe8778259064	f	2025-08-26 22:47:31.162537+00	2025-08-26 22:47:31.162537+00	\N	c54eed04-2d1b-484d-a13a-572d6412958b
00000000-0000-0000-0000-000000000000	790	enyvo6hm42ch	685efa5e-7519-486e-8643-28cfaf5408a4	t	2025-08-27 00:31:06.172676+00	2025-08-27 01:34:15.605684+00	7vhwlmo4mdpr	b9fba581-aecf-42e2-be4b-bc4e58f28879
00000000-0000-0000-0000-000000000000	795	valu2qkmffiu	685efa5e-7519-486e-8643-28cfaf5408a4	t	2025-08-31 20:31:13.208941+00	2025-08-31 21:36:18.920156+00	6dujuhvxthzl	58fadef8-74aa-4533-9cb0-65ea9046b93b
00000000-0000-0000-0000-000000000000	799	rsiuthpitud6	0d73189e-e714-48e2-8c33-fe8778259064	t	2025-08-31 22:34:09.749226+00	2025-08-31 23:32:36.096264+00	pqvp5sgtwhot	6c06c200-d750-40b4-a8b6-02d953b42b2b
00000000-0000-0000-0000-000000000000	802	us4jnhwj66kl	0d73189e-e714-48e2-8c33-fe8778259064	f	2025-08-31 23:32:36.09799+00	2025-08-31 23:32:36.09799+00	rsiuthpitud6	6c06c200-d750-40b4-a8b6-02d953b42b2b
00000000-0000-0000-0000-000000000000	805	bvzukbs2lhny	0d73189e-e714-48e2-8c33-fe8778259064	f	2025-09-01 00:33:02.840266+00	2025-09-01 00:33:02.840266+00	\N	8225f654-2e51-412b-b890-8c63cca95973
00000000-0000-0000-0000-000000000000	360	eltjtp25axyh	1b7e1856-ca69-4eee-8896-f7c1cf81f942	t	2025-07-25 19:40:43.267697+00	2025-07-25 20:39:10.516336+00	\N	b6d6172b-fb0d-489f-95ff-2af339219452
00000000-0000-0000-0000-000000000000	361	qebynzmwrvoa	1b7e1856-ca69-4eee-8896-f7c1cf81f942	t	2025-07-25 20:39:10.517035+00	2025-07-26 13:05:34.945086+00	eltjtp25axyh	b6d6172b-fb0d-489f-95ff-2af339219452
00000000-0000-0000-0000-000000000000	363	x2ro62eoz6cy	1b7e1856-ca69-4eee-8896-f7c1cf81f942	t	2025-07-26 13:05:34.945786+00	2025-07-27 13:03:00.45061+00	qebynzmwrvoa	b6d6172b-fb0d-489f-95ff-2af339219452
00000000-0000-0000-0000-000000000000	365	mtdnxtfcieuv	1b7e1856-ca69-4eee-8896-f7c1cf81f942	t	2025-07-27 13:03:00.452841+00	2025-07-27 15:38:01.586468+00	x2ro62eoz6cy	b6d6172b-fb0d-489f-95ff-2af339219452
00000000-0000-0000-0000-000000000000	366	few5u3nsmwv6	1b7e1856-ca69-4eee-8896-f7c1cf81f942	t	2025-07-27 15:38:01.587348+00	2025-07-27 16:59:11.318398+00	mtdnxtfcieuv	b6d6172b-fb0d-489f-95ff-2af339219452
00000000-0000-0000-0000-000000000000	367	hv5mazbhquwp	5dfc39b8-8037-400a-a7f4-033192d62e44	t	2025-07-27 16:57:22.468829+00	2025-07-28 00:04:13.710971+00	\N	31335043-4561-4480-bf65-fa0fd10d60c9
00000000-0000-0000-0000-000000000000	369	zpfmlgy3jtdg	5dfc39b8-8037-400a-a7f4-033192d62e44	f	2025-07-28 00:04:13.711727+00	2025-07-28 00:04:13.711727+00	hv5mazbhquwp	31335043-4561-4480-bf65-fa0fd10d60c9
00000000-0000-0000-0000-000000000000	596	tu2fk6nhtdku	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	t	2025-08-11 20:47:12.646673+00	2025-08-13 19:35:09.843876+00	snpyrcqzstgo	f9be679a-c44f-4610-8979-23c12f047f80
00000000-0000-0000-0000-000000000000	368	yyllzwi5bipq	1b7e1856-ca69-4eee-8896-f7c1cf81f942	t	2025-07-27 16:59:11.319182+00	2025-07-28 20:56:02.751292+00	few5u3nsmwv6	b6d6172b-fb0d-489f-95ff-2af339219452
00000000-0000-0000-0000-000000000000	382	atyspmwljfwy	1b7e1856-ca69-4eee-8896-f7c1cf81f942	t	2025-07-29 09:50:29.637827+00	2025-07-29 11:03:35.869144+00	\N	021eedef-5667-48d1-a49c-eefdf68998c9
00000000-0000-0000-0000-000000000000	383	to5qi5utgclf	1b7e1856-ca69-4eee-8896-f7c1cf81f942	f	2025-07-29 11:03:35.869819+00	2025-07-29 11:03:35.869819+00	atyspmwljfwy	021eedef-5667-48d1-a49c-eefdf68998c9
00000000-0000-0000-0000-000000000000	375	kcmve6wka7st	1b7e1856-ca69-4eee-8896-f7c1cf81f942	t	2025-07-28 20:56:02.752053+00	2025-07-29 12:42:58.395972+00	yyllzwi5bipq	b6d6172b-fb0d-489f-95ff-2af339219452
00000000-0000-0000-0000-000000000000	384	2gyqf5tcpah6	1b7e1856-ca69-4eee-8896-f7c1cf81f942	t	2025-07-29 12:42:58.39669+00	2025-07-29 15:32:47.68805+00	kcmve6wka7st	b6d6172b-fb0d-489f-95ff-2af339219452
00000000-0000-0000-0000-000000000000	386	i2lkozhbuesh	1b7e1856-ca69-4eee-8896-f7c1cf81f942	t	2025-07-29 15:32:47.688806+00	2025-07-29 19:28:52.576902+00	2gyqf5tcpah6	b6d6172b-fb0d-489f-95ff-2af339219452
00000000-0000-0000-0000-000000000000	388	tf47frw57c7i	1b7e1856-ca69-4eee-8896-f7c1cf81f942	t	2025-07-29 19:28:52.578591+00	2025-07-30 10:55:34.174159+00	i2lkozhbuesh	b6d6172b-fb0d-489f-95ff-2af339219452
00000000-0000-0000-0000-000000000000	785	qojp5n5aypfy	0d73189e-e714-48e2-8c33-fe8778259064	f	2025-08-26 18:31:16.9555+00	2025-08-26 18:31:16.9555+00	\N	38ba19c1-520a-46ae-9319-63dd31c3c9c7
00000000-0000-0000-0000-000000000000	584	snpyrcqzstgo	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	t	2025-08-11 03:52:55.48341+00	2025-08-11 20:47:12.645788+00	sadxgfv4fstg	f9be679a-c44f-4610-8979-23c12f047f80
00000000-0000-0000-0000-000000000000	782	d22c66goeyka	0d73189e-e714-48e2-8c33-fe8778259064	t	2025-08-26 17:47:13.945446+00	2025-08-26 23:02:08.347199+00	\N	f15ff20f-c5a0-47b3-897e-b32a74ebab79
00000000-0000-0000-0000-000000000000	788	gpva5it3xacm	0d73189e-e714-48e2-8c33-fe8778259064	f	2025-08-26 23:02:08.348824+00	2025-08-26 23:02:08.348824+00	d22c66goeyka	f15ff20f-c5a0-47b3-897e-b32a74ebab79
00000000-0000-0000-0000-000000000000	793	ku25jatcbbie	685efa5e-7519-486e-8643-28cfaf5408a4	t	2025-08-29 18:11:20.388709+00	2025-08-31 17:51:49.288718+00	fgzvnksd56jw	58fadef8-74aa-4533-9cb0-65ea9046b93b
00000000-0000-0000-0000-000000000000	796	pzg4ssj5jzhb	0d73189e-e714-48e2-8c33-fe8778259064	t	2025-08-31 20:33:38.031635+00	2025-08-31 21:35:38.868719+00	\N	6c06c200-d750-40b4-a8b6-02d953b42b2b
00000000-0000-0000-0000-000000000000	575	rmhbbnhucsut	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	t	2025-08-10 23:13:54.675544+00	2025-08-11 01:47:00.541318+00	\N	f9be679a-c44f-4610-8979-23c12f047f80
00000000-0000-0000-0000-000000000000	582	sadxgfv4fstg	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	t	2025-08-11 01:47:00.542192+00	2025-08-11 03:52:55.481819+00	rmhbbnhucsut	f9be679a-c44f-4610-8979-23c12f047f80
00000000-0000-0000-0000-000000000000	791	3lhmsqsybkp3	685efa5e-7519-486e-8643-28cfaf5408a4	t	2025-08-27 01:34:15.608282+00	2025-08-31 22:42:29.55552+00	enyvo6hm42ch	b9fba581-aecf-42e2-be4b-bc4e58f28879
00000000-0000-0000-0000-000000000000	800	tqsukdczmrqb	685efa5e-7519-486e-8643-28cfaf5408a4	t	2025-08-31 22:38:27.762325+00	2025-08-31 23:42:01.761407+00	rukoaeksyl4a	58fadef8-74aa-4533-9cb0-65ea9046b93b
00000000-0000-0000-0000-000000000000	803	bbfhhwaw7y3q	685efa5e-7519-486e-8643-28cfaf5408a4	f	2025-08-31 23:42:01.762266+00	2025-08-31 23:42:01.762266+00	tqsukdczmrqb	58fadef8-74aa-4533-9cb0-65ea9046b93b
00000000-0000-0000-0000-000000000000	806	f4ffhw3sslid	685efa5e-7519-486e-8643-28cfaf5408a4	f	2025-09-01 02:13:48.263623+00	2025-09-01 02:13:48.263623+00	uvpuclseptlz	b9fba581-aecf-42e2-be4b-bc4e58f28879
00000000-0000-0000-0000-000000000000	629	pxsbwwsamnze	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	f	2025-08-13 19:35:09.84466+00	2025-08-13 19:35:09.84466+00	tu2fk6nhtdku	f9be679a-c44f-4610-8979-23c12f047f80
00000000-0000-0000-0000-000000000000	675	mouaogyyceag	881e17c3-6c44-488d-8504-906fdc9146ef	f	2025-08-17 14:57:27.880011+00	2025-08-17 14:57:27.880011+00	\N	36b3e7db-0db8-4fb4-ac26-481e3bb47064
00000000-0000-0000-0000-000000000000	783	lry5rknqykpj	0d73189e-e714-48e2-8c33-fe8778259064	t	2025-08-26 17:51:36.428746+00	2025-08-26 22:38:43.328249+00	\N	b553b78b-c1c3-4547-816e-c66895610981
00000000-0000-0000-0000-000000000000	786	2x3wrycnixj2	0d73189e-e714-48e2-8c33-fe8778259064	f	2025-08-26 22:38:43.329742+00	2025-08-26 22:38:43.329742+00	lry5rknqykpj	b553b78b-c1c3-4547-816e-c66895610981
00000000-0000-0000-0000-000000000000	789	7vhwlmo4mdpr	685efa5e-7519-486e-8643-28cfaf5408a4	t	2025-08-26 23:24:41.084333+00	2025-08-27 00:31:06.169956+00	\N	b9fba581-aecf-42e2-be4b-bc4e58f28879
00000000-0000-0000-0000-000000000000	792	fgzvnksd56jw	685efa5e-7519-486e-8643-28cfaf5408a4	t	2025-08-29 10:55:21.482234+00	2025-08-29 18:11:20.382057+00	\N	58fadef8-74aa-4533-9cb0-65ea9046b93b
00000000-0000-0000-0000-000000000000	794	6dujuhvxthzl	685efa5e-7519-486e-8643-28cfaf5408a4	t	2025-08-31 17:51:49.289465+00	2025-08-31 20:31:13.207905+00	ku25jatcbbie	58fadef8-74aa-4533-9cb0-65ea9046b93b
00000000-0000-0000-0000-000000000000	797	pqvp5sgtwhot	0d73189e-e714-48e2-8c33-fe8778259064	t	2025-08-31 21:35:38.871296+00	2025-08-31 22:34:09.747261+00	pzg4ssj5jzhb	6c06c200-d750-40b4-a8b6-02d953b42b2b
00000000-0000-0000-0000-000000000000	798	rukoaeksyl4a	685efa5e-7519-486e-8643-28cfaf5408a4	t	2025-08-31 21:36:18.920522+00	2025-08-31 22:38:27.760491+00	valu2qkmffiu	58fadef8-74aa-4533-9cb0-65ea9046b93b
00000000-0000-0000-0000-000000000000	804	cwpxvzzcbpvs	685efa5e-7519-486e-8643-28cfaf5408a4	f	2025-09-01 00:31:04.92725+00	2025-09-01 00:31:04.92725+00	\N	8834a0ea-6e52-4a9f-97f3-906a8b55721d
00000000-0000-0000-0000-000000000000	801	uvpuclseptlz	685efa5e-7519-486e-8643-28cfaf5408a4	t	2025-08-31 22:42:29.557125+00	2025-09-01 02:13:48.261153+00	3lhmsqsybkp3	b9fba581-aecf-42e2-be4b-bc4e58f28879
00000000-0000-0000-0000-000000000000	740	daz45clgpuom	39ea9c03-12ac-4072-990e-63019d163ce2	f	2025-08-22 03:16:24.051782+00	2025-08-22 03:16:24.051782+00	\N	de1f5904-1f74-459c-a31f-0dd4efff9c2e
\.


--
-- Data for Name: saml_providers; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.saml_providers (id, sso_provider_id, entity_id, metadata_xml, metadata_url, attribute_mapping, created_at, updated_at, name_id_format) FROM stdin;
\.


--
-- Data for Name: saml_relay_states; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.saml_relay_states (id, sso_provider_id, request_id, for_email, redirect_to, created_at, updated_at, flow_state_id) FROM stdin;
\.


--
-- Data for Name: schema_migrations; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.schema_migrations (version) FROM stdin;
20171026211738
20171026211808
20171026211834
20180103212743
20180108183307
20180119214651
20180125194653
00
20210710035447
20210722035447
20210730183235
20210909172000
20210927181326
20211122151130
20211124214934
20211202183645
20220114185221
20220114185340
20220224000811
20220323170000
20220429102000
20220531120530
20220614074223
20220811173540
20221003041349
20221003041400
20221011041400
20221020193600
20221021073300
20221021082433
20221027105023
20221114143122
20221114143410
20221125140132
20221208132122
20221215195500
20221215195800
20221215195900
20230116124310
20230116124412
20230131181311
20230322519590
20230402418590
20230411005111
20230508135423
20230523124323
20230818113222
20230914180801
20231027141322
20231114161723
20231117164230
20240115144230
20240214120130
20240306115329
20240314092811
20240427152123
20240612123726
20240729123726
20240802193726
20240806073726
20241009103726
20250717082212
\.


--
-- Data for Name: sessions; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.sessions (id, user_id, created_at, updated_at, factor_id, aal, not_after, refreshed_at, user_agent, ip, tag) FROM stdin;
b553b78b-c1c3-4547-816e-c66895610981	0d73189e-e714-48e2-8c33-fe8778259064	2025-08-26 17:51:36.425013+00	2025-08-26 22:38:43.333385+00	\N	aal1	\N	2025-08-26 22:38:43.333308	Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:142.0) Gecko/20100101 Firefox/142.0	73.208.142.113	\N
c54eed04-2d1b-484d-a13a-572d6412958b	0d73189e-e714-48e2-8c33-fe8778259064	2025-08-26 22:47:31.160043+00	2025-08-26 22:47:31.160043+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:142.0) Gecko/20100101 Firefox/142.0	73.208.142.113	\N
f15ff20f-c5a0-47b3-897e-b32a74ebab79	0d73189e-e714-48e2-8c33-fe8778259064	2025-08-26 17:47:13.943491+00	2025-08-26 23:02:08.35162+00	\N	aal1	\N	2025-08-26 23:02:08.351541	Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:142.0) Gecko/20100101 Firefox/142.0	73.208.142.113	\N
36b3e7db-0db8-4fb4-ac26-481e3bb47064	881e17c3-6c44-488d-8504-906fdc9146ef	2025-08-17 14:57:27.878825+00	2025-08-17 14:57:27.878825+00	\N	aal1	\N	\N	Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36	175.209.185.17	\N
021eedef-5667-48d1-a49c-eefdf68998c9	1b7e1856-ca69-4eee-8896-f7c1cf81f942	2025-07-29 09:50:29.6367+00	2025-07-29 11:03:35.872474+00	\N	aal1	\N	2025-07-29 11:03:35.872392	Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Mobile Safari/537.36	194.182.8.83	\N
31335043-4561-4480-bf65-fa0fd10d60c9	5dfc39b8-8037-400a-a7f4-033192d62e44	2025-07-27 16:57:22.465622+00	2025-07-28 00:04:13.714222+00	\N	aal1	\N	2025-07-28 00:04:13.714137	Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Mobile Safari/537.36	173.61.32.241	\N
6c06c200-d750-40b4-a8b6-02d953b42b2b	0d73189e-e714-48e2-8c33-fe8778259064	2025-08-31 20:33:38.025058+00	2025-08-31 23:32:36.102403+00	\N	aal1	\N	2025-08-31 23:32:36.102329	Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:142.0) Gecko/20100101 Firefox/142.0	73.208.142.113	\N
38ba19c1-520a-46ae-9319-63dd31c3c9c7	0d73189e-e714-48e2-8c33-fe8778259064	2025-08-26 18:31:16.952088+00	2025-08-26 18:31:16.952088+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36 Edg/139.0.0.0	73.208.142.113	\N
58fadef8-74aa-4533-9cb0-65ea9046b93b	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-29 10:55:21.472581+00	2025-08-31 23:42:01.764745+00	\N	aal1	\N	2025-08-31 23:42:01.764676	Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:142.0) Gecko/20100101 Firefox/142.0	73.208.142.113	\N
8834a0ea-6e52-4a9f-97f3-906a8b55721d	685efa5e-7519-486e-8643-28cfaf5408a4	2025-09-01 00:31:04.92079+00	2025-09-01 00:31:04.92079+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:142.0) Gecko/20100101 Firefox/142.0	73.208.142.113	\N
8225f654-2e51-412b-b890-8c63cca95973	0d73189e-e714-48e2-8c33-fe8778259064	2025-09-01 00:33:02.838002+00	2025-09-01 00:33:02.838002+00	\N	aal1	\N	\N	Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:142.0) Gecko/20100101 Firefox/142.0	73.208.142.113	\N
b9fba581-aecf-42e2-be4b-bc4e58f28879	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-26 23:24:41.083133+00	2025-09-01 02:13:48.2679+00	\N	aal1	\N	2025-09-01 02:13:48.267819	Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Mobile Safari/537.36	73.208.142.113	\N
f9be679a-c44f-4610-8979-23c12f047f80	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-10 23:13:54.674756+00	2025-08-13 19:35:09.847487+00	\N	aal1	\N	2025-08-13 19:35:09.847405	Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Mobile Safari/537.36	12.75.143.61	\N
de1f5904-1f74-459c-a31f-0dd4efff9c2e	39ea9c03-12ac-4072-990e-63019d163ce2	2025-08-22 03:16:24.049616+00	2025-08-22 03:16:24.049616+00	\N	aal1	\N	\N	Mozilla/5.0 (iPhone; CPU iPhone OS 17_6_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.6 Mobile/15E148 Safari/604.1	174.227.242.248	\N
b6d6172b-fb0d-489f-95ff-2af339219452	1b7e1856-ca69-4eee-8896-f7c1cf81f942	2025-07-25 19:40:43.266519+00	2025-07-30 18:46:08.204549+00	\N	aal1	\N	2025-07-30 18:46:08.204479	Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36	80.197.139.34	\N
\.


--
-- Data for Name: sso_domains; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.sso_domains (id, sso_provider_id, domain, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: sso_providers; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.sso_providers (id, resource_id, created_at, updated_at, disabled) FROM stdin;
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: auth; Owner: supabase_auth_admin
--

COPY auth.users (instance_id, id, aud, role, email, encrypted_password, email_confirmed_at, invited_at, confirmation_token, confirmation_sent_at, recovery_token, recovery_sent_at, email_change_token_new, email_change, email_change_sent_at, last_sign_in_at, raw_app_meta_data, raw_user_meta_data, is_super_admin, created_at, updated_at, phone, phone_confirmed_at, phone_change, phone_change_token, phone_change_sent_at, email_change_token_current, email_change_confirm_status, banned_until, reauthentication_token, reauthentication_sent_at, is_sso_user, deleted_at, is_anonymous) FROM stdin;
00000000-0000-0000-0000-000000000000	0d73189e-e714-48e2-8c33-fe8778259064	authenticated	authenticated	admin@equipqr.app	$2a$10$BfYxvdrggWC65dmGEmMte.HpddQHpqy20YP0hxu3IYoSyquAS68WC	2025-06-17 14:46:52.826057+00	\N		\N		\N			\N	2025-09-01 00:33:02.837927+00	{"provider": "email", "providers": ["email"]}	{"sub": "0d73189e-e714-48e2-8c33-fe8778259064", "name": "Global Administrator", "email": "admin@equipqr.app", "email_verified": true, "phone_verified": false}	\N	2025-06-17 14:46:52.787021+00	2025-09-01 00:33:02.8418+00	\N	\N			\N		0	\N		\N	f	\N	f
00000000-0000-0000-0000-000000000000	685efa5e-7519-486e-8643-28cfaf5408a4	authenticated	authenticated	viral.architect@gmail.com	\N	2025-06-18 18:08:12.485134+00	\N		\N		\N			\N	2025-09-01 00:31:04.920689+00	{"provider": "google", "providers": ["google"]}	{"iss": "https://accounts.google.com", "sub": "101445503182048383952", "name": "Viral Architect", "email": "viral.architect@gmail.com", "picture": "https://lh3.googleusercontent.com/a/ACg8ocLhreRO8DDBod0VP62Hgle3DM50JobdoFa6_E3xqeVgj4HlPhww=s96-c", "full_name": "Viral Architect", "avatar_url": "https://lh3.googleusercontent.com/a/ACg8ocLhreRO8DDBod0VP62Hgle3DM50JobdoFa6_E3xqeVgj4HlPhww=s96-c", "provider_id": "101445503182048383952", "email_verified": true, "phone_verified": false}	\N	2025-06-18 18:08:12.465268+00	2025-09-01 02:13:48.264774+00	\N	\N			\N		0	\N		\N	f	\N	f
00000000-0000-0000-0000-000000000000	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	authenticated	authenticated	matt@3aequip.com	\N	2025-06-24 13:40:06.741839+00	\N		\N		\N			\N	2025-08-10 23:13:54.674667+00	{"provider": "google", "providers": ["google"]}	{"iss": "https://accounts.google.com", "sub": "103235578409269212827", "name": "Matthew Hankins", "email": "matt@3aequip.com", "picture": "https://lh3.googleusercontent.com/a/ACg8ocLHVf7fH5rDicDbMRP8TsCsf9VDo9VKSPc9teB3Uwsnv_ct2Q=s96-c", "full_name": "Matthew Hankins", "avatar_url": "https://lh3.googleusercontent.com/a/ACg8ocLHVf7fH5rDicDbMRP8TsCsf9VDo9VKSPc9teB3Uwsnv_ct2Q=s96-c", "provider_id": "103235578409269212827", "custom_claims": {"hd": "3aequip.com"}, "email_verified": true, "phone_verified": false}	\N	2025-06-24 13:40:06.720205+00	2025-08-13 19:35:09.845941+00	\N	\N			\N		0	\N		\N	f	\N	f
00000000-0000-0000-0000-000000000000	9c2bd213-3ce9-457c-a29e-dfafa277839d	authenticated	authenticated	matthewleehankins@gmail.com	$2a$10$IeJbrkYwHI2N8i/WOSs31eOBpK0d90XhWqhnFx4DMZUCopOVV/Kv.	2025-07-19 04:55:53.985259+00	\N		2025-07-19 04:55:12.34927+00		\N			\N	2025-08-10 23:13:12.786174+00	{"provider": "email", "providers": ["email", "google"]}	{"iss": "https://accounts.google.com", "sub": "108157899326591105214", "name": "Matthew Hankins", "email": "matthewleehankins@gmail.com", "picture": "https://lh3.googleusercontent.com/a/ACg8ocL99rofqk2Ao2LsKN0zoqWy9BwrS2ZjJ03uyfWF7WrS_jI1hw=s96-c", "full_name": "Matthew Hankins", "avatar_url": "https://lh3.googleusercontent.com/a/ACg8ocL99rofqk2Ao2LsKN0zoqWy9BwrS2ZjJ03uyfWF7WrS_jI1hw=s96-c", "provider_id": "108157899326591105214", "email_verified": true, "phone_verified": false}	\N	2025-07-19 04:55:12.336522+00	2025-08-10 23:13:12.788885+00	\N	\N			\N		0	\N		\N	f	\N	f
00000000-0000-0000-0000-000000000000	5dfc39b8-8037-400a-a7f4-033192d62e44	authenticated	authenticated	justinpitera@gmail.com	\N	2025-07-25 15:04:31.688741+00	\N		2025-07-25 15:04:18.341693+00		\N			\N	2025-07-27 16:57:22.465548+00	{"provider": "google", "providers": ["google"]}	{"iss": "https://accounts.google.com", "sub": "115898931477514095081", "name": "Justin Pitera", "email": "justinpitera@gmail.com", "full_name": "Justin Pitera", "provider_id": "115898931477514095081", "email_verified": true, "phone_verified": false}	\N	2025-07-25 15:04:18.292621+00	2025-07-28 00:04:13.712822+00	\N	\N			\N		0	\N		\N	f	\N	f
00000000-0000-0000-0000-000000000000	da1368a1-9ed1-46ef-a7dc-56bf15ebeee4	authenticated	authenticated	nicholas.king@columbiacloudworks.com	\N	2025-07-19 04:05:27.497878+00	\N		\N		\N			\N	2025-08-19 16:30:49.19937+00	{"provider": "google", "providers": ["google"]}	{"iss": "https://accounts.google.com", "sub": "101361402054194046106", "name": "Nicholas King", "email": "nicholas.king@columbiacloudworks.com", "picture": "https://lh3.googleusercontent.com/a/ACg8ocLLOKIhduNiWAnPmn6x1ESxEWwgFYXdkOn1Q8ufARLKaZfZfOM=s96-c", "full_name": "Nicholas King", "avatar_url": "https://lh3.googleusercontent.com/a/ACg8ocLLOKIhduNiWAnPmn6x1ESxEWwgFYXdkOn1Q8ufARLKaZfZfOM=s96-c", "provider_id": "101361402054194046106", "custom_claims": {"hd": "columbiacloudworks.com"}, "email_verified": true, "phone_verified": false}	\N	2025-07-19 04:05:27.472615+00	2025-08-26 18:07:55.950566+00	\N	\N			\N		0	\N		\N	f	\N	f
00000000-0000-0000-0000-000000000000	1b7e1856-ca69-4eee-8896-f7c1cf81f942	authenticated	authenticated	mathiasrex2003@gmail.com	\N	2025-07-25 19:40:43.264418+00	\N		\N		\N			\N	2025-07-29 09:50:29.636624+00	{"provider": "google", "providers": ["google"]}	{"iss": "https://accounts.google.com", "sub": "115114255670319937517", "name": "Mathias Rex Lindberg", "email": "mathiasrex2003@gmail.com", "picture": "https://lh3.googleusercontent.com/a/ACg8ocKRWvFZLQKKHj27krYHPXtJsJLMujOXq-VBPvPhSWKvmyMH_C6M=s96-c", "full_name": "Mathias Rex Lindberg", "avatar_url": "https://lh3.googleusercontent.com/a/ACg8ocKRWvFZLQKKHj27krYHPXtJsJLMujOXq-VBPvPhSWKvmyMH_C6M=s96-c", "provider_id": "115114255670319937517", "email_verified": true, "phone_verified": false}	\N	2025-07-25 19:40:43.250005+00	2025-07-30 18:46:08.203075+00	\N	\N			\N		0	\N		\N	f	\N	f
00000000-0000-0000-0000-000000000000	881e17c3-6c44-488d-8504-906fdc9146ef	authenticated	authenticated	kurt@mirror.work	\N	2025-08-17 14:57:27.872191+00	\N		\N		\N			\N	2025-08-17 14:57:27.878747+00	{"provider": "google", "providers": ["google"]}	{"iss": "https://accounts.google.com", "sub": "100010644895531908471", "name": "Kurt Lee", "email": "kurt@mirror.work", "full_name": "Kurt Lee", "provider_id": "100010644895531908471", "custom_claims": {"hd": "mirror.work"}, "email_verified": true, "phone_verified": false}	\N	2025-08-17 14:57:27.801582+00	2025-08-17 14:57:27.882468+00	\N	\N			\N		0	\N		\N	f	\N	f
00000000-0000-0000-0000-000000000000	39ea9c03-12ac-4072-990e-63019d163ce2	authenticated	authenticated	theerealray@gmail.com	$2a$10$7NB./crrmJeTdzknxubFqO8ZgElJAlMkEoVeR3gnFyzbSsNmLRWZ.	2025-08-22 03:16:24.04618+00	\N		2025-08-22 03:15:53.392949+00		\N			\N	2025-08-22 03:16:24.049546+00	{"provider": "email", "providers": ["email"]}	{"sub": "39ea9c03-12ac-4072-990e-63019d163ce2", "name": "r", "email": "theerealray@gmail.com", "email_verified": true, "phone_verified": false, "organization_name": "rlk"}	\N	2025-08-22 03:15:53.321206+00	2025-08-22 03:16:24.058988+00	\N	\N			\N		0	\N		\N	f	\N	f
00000000-0000-0000-0000-000000000000	ba131ec4-ad65-4d62-8ed5-4610d575b2dc	authenticated	authenticated	test.user@columbiacloudworks.com	\N	2025-08-19 12:44:45.505761+00	\N		\N		\N			\N	2025-08-19 15:41:08.166307+00	{"provider": "google", "providers": ["google"]}	{"iss": "https://accounts.google.com", "sub": "115553053276018707041", "name": "Test User", "email": "test.user@columbiacloudworks.com", "picture": "https://lh3.googleusercontent.com/a/ACg8ocJ0Rft8HhZ2O8H2POT7tEatGNOix9Khz8f9YdGtgx_1MxFiYQ=s96-c", "full_name": "Test User", "avatar_url": "https://lh3.googleusercontent.com/a/ACg8ocJ0Rft8HhZ2O8H2POT7tEatGNOix9Khz8f9YdGtgx_1MxFiYQ=s96-c", "provider_id": "115553053276018707041", "custom_claims": {"hd": "columbiacloudworks.com"}, "email_verified": true, "phone_verified": false}	\N	2025-08-19 12:44:45.458976+00	2025-08-19 15:41:08.169382+00	\N	\N			\N		0	\N		\N	f	\N	f
\.


--
-- Data for Name: billing_events; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.billing_events (id, organization_id, event_type, user_id, event_data, amount_change, effective_date, created_at, processed) FROM stdin;
bbd101f4-58d2-49b9-be01-b299a6781404	5a54dd83-f546-4149-8ff5-d44cbc570217	member_added	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	{"role": "owner", "status": "active"}	0.00	2025-06-24 13:40:06.712935+00	2025-06-24 13:40:06.712935+00	f
3b1a29d2-b524-4941-afc6-f49ea0c1d312	dabce056-c0d8-46dd-b173-a3c0084f3133	member_added	685efa5e-7519-486e-8643-28cfaf5408a4	{"role": "admin", "status": "active"}	0.00	2025-07-10 04:53:47.789966+00	2025-07-10 04:53:47.789966+00	f
644b8883-cc7e-4bfd-9055-6f5c018bb0be	dabce056-c0d8-46dd-b173-a3c0084f3133	member_added	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	{"role": "admin", "status": "active"}	0.00	2025-07-10 16:30:19.135896+00	2025-07-10 16:30:19.135896+00	f
b0c61e3d-5f12-4892-9ab9-f32502592bd4	dabce056-c0d8-46dd-b173-a3c0084f3133	member_removed	685efa5e-7519-486e-8643-28cfaf5408a4	{"role": "admin", "status": "active"}	0.00	2025-07-18 20:39:26.727881+00	2025-07-18 20:39:26.727881+00	f
73f1047a-7675-4d8b-bbdf-be28c9d1376c	dabce056-c0d8-46dd-b173-a3c0084f3133	member_added	685efa5e-7519-486e-8643-28cfaf5408a4	{"role": "member", "status": "active"}	0.00	2025-07-18 22:01:22.749439+00	2025-07-18 22:01:22.749439+00	f
efd06417-cec6-496a-a87f-415484016965	dabce056-c0d8-46dd-b173-a3c0084f3133	member_removed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	{"role": "admin", "status": "active"}	0.00	2025-07-19 00:54:15.244715+00	2025-07-19 00:54:15.244715+00	f
a5fa92e9-e0b6-4fec-a0bd-6c56c9e9573e	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	member_added	da1368a1-9ed1-46ef-a7dc-56bf15ebeee4	{"role": "owner", "status": "active"}	0.00	2025-07-19 04:05:27.467145+00	2025-07-19 04:05:27.467145+00	f
06ff8347-f9da-4073-bde7-56828c7407e2	b490b4f5-a5c5-4f01-b05e-bfe9c59ed281	member_added	9c2bd213-3ce9-457c-a29e-dfafa277839d	{"role": "owner", "status": "active"}	0.00	2025-07-19 04:55:12.336186+00	2025-07-19 04:55:12.336186+00	f
db5a6ec5-aeb1-4b64-a13d-c408c33b7fef	5a54dd83-f546-4149-8ff5-d44cbc570217	member_added	9c2bd213-3ce9-457c-a29e-dfafa277839d	{"role": "member", "status": "active"}	0.00	2025-07-19 13:03:14.419634+00	2025-07-19 13:03:14.419634+00	f
53090579-32f8-421b-b5c0-aa8651d4358d	c0d64dd4-4796-4749-b1d1-b070f7ddb4b7	member_added	\N	{"role": "owner", "status": "active"}	0.00	2025-07-21 15:33:30.76568+00	2025-07-21 15:33:30.76568+00	f
729105d2-98eb-491f-a4bb-d4c0324e155d	c0d64dd4-4796-4749-b1d1-b070f7ddb4b7	member_removed	\N	{"role": "owner", "status": "active"}	0.00	2025-07-23 07:05:17.974692+00	2025-07-23 07:05:17.974692+00	f
41a4d738-6672-4c9d-9e33-609a7a63e615	ab177901-a1f1-45e8-96ab-ea6b06f33922	member_added	5dfc39b8-8037-400a-a7f4-033192d62e44	{"role": "owner", "status": "active"}	0.00	2025-07-25 15:04:18.292282+00	2025-07-25 15:04:18.292282+00	f
525d7a8c-a3ad-4f46-9786-e875b38ac765	2542f069-27c9-4833-8fdb-f4b40c8cf291	member_added	1b7e1856-ca69-4eee-8896-f7c1cf81f942	{"role": "owner", "status": "active"}	0.00	2025-07-25 19:40:43.245361+00	2025-07-25 19:40:43.245361+00	f
4451e038-033f-4715-b751-b1fa886972b0	96061a65-7e91-4ed3-9df1-282ff19a8471	member_added	0d73189e-e714-48e2-8c33-fe8778259064	{"role": "member", "status": "active"}	0.00	2025-08-10 10:26:17.268857+00	2025-08-10 10:26:17.268857+00	f
fbcfba18-3059-43b8-9aaf-d5dbcbfc5007	dabce056-c0d8-46dd-b173-a3c0084f3133	member_removed	685efa5e-7519-486e-8643-28cfaf5408a4	{"role": "member", "status": "active"}	0.00	2025-08-10 23:38:59.10693+00	2025-08-10 23:38:59.10693+00	f
de64da98-b6b1-4fa0-813f-39c97f6470c3	7bafbd3e-2ddb-483f-84f2-27a18b6b9a1b	member_added	881e17c3-6c44-488d-8504-906fdc9146ef	{"role": "owner", "status": "active"}	0.00	2025-08-17 14:57:27.795946+00	2025-08-17 14:57:27.795946+00	f
e1688955-4f50-4da4-90c2-57d57575632b	739a0d01-b9ac-4b93-a389-131bd09b9f78	member_added	ba131ec4-ad65-4d62-8ed5-4610d575b2dc	{"role": "owner", "status": "active"}	0.00	2025-08-19 12:44:45.455353+00	2025-08-19 12:44:45.455353+00	f
2c0198dd-7199-4e7d-b8c4-e005113b35a0	243e46be-acb6-4af1-a11f-528b05ea91b0	member_added	39ea9c03-12ac-4072-990e-63019d163ce2	{"role": "owner", "status": "active"}	0.00	2025-08-22 03:15:53.320872+00	2025-08-22 03:15:53.320872+00	f
\.


--
-- Data for Name: billing_exemptions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.billing_exemptions (id, organization_id, exemption_type, exemption_value, reason, granted_by, granted_at, expires_at, is_active, created_at, updated_at) FROM stdin;
d92bf7d3-72f0-413e-860c-f4fdefe4a48c	5a54dd83-f546-4149-8ff5-d44cbc570217	user_licenses	2	Special arrangement - 2 free user licenses	\N	2025-07-21 15:40:01.594211+00	\N	t	2025-07-21 15:40:01.594211+00	2025-07-21 15:40:01.594211+00
18ef2bd0-f456-4aa2-bd72-1b83e89b5a7f	96061a65-7e91-4ed3-9df1-282ff19a8471	user_licenses	5	Testing exemption for development - allows testing member addition and organization switching	\N	2025-08-10 10:10:00.419712+00	\N	t	2025-08-10 10:10:00.419712+00	2025-08-10 10:10:00.419712+00
\.


--
-- Data for Name: billing_usage; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.billing_usage (id, organization_id, usage_type, usage_value, billing_period_start, billing_period_end, created_at) FROM stdin;
\.


--
-- Data for Name: customer_contacts; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.customer_contacts (customer_id, user_id, role, created_at) FROM stdin;
\.


--
-- Data for Name: customer_sites; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.customer_sites (id, customer_id, name, address, created_at) FROM stdin;
\.


--
-- Data for Name: customers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.customers (id, organization_id, name, status, created_at) FROM stdin;
\.


--
-- Data for Name: equipment; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.equipment (id, organization_id, name, manufacturer, model, serial_number, status, location, installation_date, warranty_expiration, last_maintenance, notes, image_url, custom_attributes, last_known_location, created_at, updated_at, team_id, working_hours, default_pm_template_id, import_id, customer_id) FROM stdin;
ad86f6eb-7750-43c7-a517-c161993e2425	96061a65-7e91-4ed3-9df1-282ff19a8471	Portable Generator	Generac	G3500	GN-4K2D8P6	maintenance	Dallas, TX	2025-06-18	\N	2025-06-18	3.5 kW inverter generator for emergency backup	\N	{"Capacity": "3.5 kW"}	\N	2025-06-18 20:53:29.287484+00	2025-06-18 20:53:29.287484+00	\N	0	\N	\N	\N
9d7d1413-4e3c-404c-af7b-0f7e27dfaed7	96061a65-7e91-4ed3-9df1-282ff19a8471	Portable Light Tower	Atlas Copco	PLT-800	LT-2W3Z5V7	active	Seattle, WA	2025-06-18	\N	2025-06-18	Four-head LED light tower, 24 kW diesel generator\n	\N	{}	\N	2025-06-18 21:00:44.757322+00	2025-06-18 21:00:44.757322+00	\N	0	\N	\N	\N
bf45799e-5f1d-4797-881d-a9fd9e367f29	96061a65-7e91-4ed3-9df1-282ff19a8471	Hydraulic Breaker	Bosch	HBX-45	HB-4R8U1N6	maintenance	Denver, CO	2025-06-18	\N	2025-06-18	45 kg hydraulic hammer for excavators and skid steers\n	\N	{}	\N	2025-06-18 21:01:07.789923+00	2025-06-18 21:01:07.789923+00	\N	0	\N	\N	\N
c9a7d194-5608-4117-a1eb-a6408fa89e39	5a54dd83-f546-4149-8ff5-d44cbc570217	Example 1 a	Ea	Dg1	Fuckoff	active	Mobile 	2025-06-25	\N	\N		\N	{}	\N	2025-06-25 19:15:17.302648+00	2025-06-25 19:15:17.302648+00	\N	0	\N	\N	\N
8a35ba88-03e0-4d1f-9dcc-ecca3d398c41	96061a65-7e91-4ed3-9df1-282ff19a8471	Gas Pressure Washer	Kärcher	GPW-4000	PW-3D8K7X1	active	Miami, FL	2025-06-18	\N	2025-06-18	4 L/min at 4,000 psi—ideal for heavy-duty cleaning\n	https://ymxkzronkhwxzcdcbnwq.supabase.co/storage/v1/object/public/equipment-note-images/685efa5e-7519-486e-8643-28cfaf5408a4/8a35ba88-03e0-4d1f-9dcc-ecca3d398c41/6ddc2582-74ae-4000-9820-03e35a278d67/1754454110410.jpg	{}	\N	2025-06-18 20:59:51.48204+00	2025-08-22 07:53:36.428526+00	46331cc1-3b20-4999-98a7-7a9b64249fa5	563	\N	\N	\N
c2b7b011-8187-4c30-982d-fe84124278f6	96061a65-7e91-4ed3-9df1-282ff19a8471	Mobile Crane	Grove	MC-30	MC-8J1V6L4	active	Los Angeles, CA	2025-06-18	\N	2025-06-18	30-ton telescopic boom crane	https://ymxkzronkhwxzcdcbnwq.supabase.co/storage/v1/object/public/equipment-note-images/685efa5e-7519-486e-8643-28cfaf5408a4/c2b7b011-8187-4c30-982d-fe84124278f6/3a89f4ba-fb73-404b-b884-2fa84e30f8a6/1752966580275.jpg	{}	\N	2025-06-18 20:57:23.957085+00	2025-07-19 23:09:47.192258+00	\N	0	\N	\N	\N
8c97474d-a2e8-41dc-acbf-fdffce5a268e	96061a65-7e91-4ed3-9df1-282ff19a8471	Backhoe Loader	John Deere	BL85	BH-1T6Y9E3	active	Atlanta, GA	2025-06-18	2025-08-21	2025-06-18	Combination loader/backhoe with extendahoe boom\n	https://ymxkzronkhwxzcdcbnwq.supabase.co/storage/v1/object/public/equipment-note-images/685efa5e-7519-486e-8643-28cfaf5408a4/8c97474d-a2e8-41dc-acbf-fdffce5a268e/c6101077-1a51-40d2-abe7-fefbd769bc83/1754453969140.png	{"MAINTANENCE_MANUAL": "https://manuals.equipqr.info/1656699"}	\N	2025-06-18 21:00:18.887298+00	2025-08-22 05:31:20.822214+00	46331cc1-3b20-4999-98a7-7a9b64249fa5	425	\N	\N	\N
e421aac0-97f5-4ac7-a37d-4facdeb8b71d	96061a65-7e91-4ed3-9df1-282ff19a8471	HD Forklift	UniLift	FLX-2000	FL-9A3B7C1	active	Houston, TX	2025-06-18	\N	2025-06-18	6,000-lb capacity with side-shift attachment\n	\N	{"Capacity": "6,000 lbs.", "MAINTANENCE_MANUAL": "https://manuals.equipqr.info/123456"}	\N	2025-06-18 20:56:00.713737+00	2025-08-14 14:25:27.596026+00	\N	0	\N	\N	\N
e3c4f41f-024b-4ad1-8fe7-8ecd56e97618	dabce056-c0d8-46dd-b173-a3c0084f3133	Jim's Portable Generator	Ingersoll Rand	G5500	G5-GNSFG144	active	Miami, FL	2025-06-19	\N	2025-06-19	Inverter generator for backup power (G5500 model), max load 3000 lbs for field ops with remote monitoring recently serviced operator cabin with A/C all-weather capable low emissions certified\n	https://ymxkzronkhwxzcdcbnwq.supabase.co/storage/v1/object/public/equipment-note-images/0d73189e-e714-48e2-8c33-fe8778259064/e3c4f41f-024b-4ad1-8fe7-8ecd56e97618/06ed814e-30c8-481e-a9e8-05136cf5e368/1751493596857.jpg	{}	\N	2025-06-19 04:29:24.215961+00	2025-07-11 02:40:49.454854+00	da907dda-b5c2-4e1a-b923-07f699d8ef4a	0	\N	\N	\N
cc436c35-f709-4c9c-b0ed-43722bf01c62	dabce056-c0d8-46dd-b173-a3c0084f3133	M&N Hydraulic Breaker	Bobcat	HBX-70	test	inactive	Cleveland, OH	2022-05-21	\N	2023-06-15	Hydraulic hammer for excavators (HBX-70 model), max load 3500 lbs for field ops with remote monitoring recently serviced operator cabin with A/C all-weather capable low emissions certified\n	https://ymxkzronkhwxzcdcbnwq.supabase.co/storage/v1/object/public/equipment-note-images/0d73189e-e714-48e2-8c33-fe8778259064/cc436c35-f709-4c9c-b0ed-43722bf01c62/06a21a90-a22f-461f-aca0-694d4a7025a2/1751641006758.jpg	{}	\N	2025-06-19 05:28:10.455626+00	2025-07-19 19:42:51.447054+00	\N	0	\N	\N	\N
824b97ef-a58a-4415-8d24-1e4935e3fdc7	5a54dd83-f546-4149-8ff5-d44cbc570217	Bobcat 1358	Bobcat	D45S-9	FDB43-5110-01358	active	Woodson Brenham 	2025-06-26	\N	\N	Newest forklift Woodson brenham	\N	{}	\N	2025-06-26 16:46:33.249204+00	2025-08-04 00:05:07.804314+00	83356601-c718-414e-a84c-8b99cc590df3	0	\N	\N	\N
989dba12-f0f4-4f58-9ba0-48ca5fa95f55	5a54dd83-f546-4149-8ff5-d44cbc570217	Doosan 2105 Woodson 	Doosan	D45S-7	FDB12-1980-02105	active	Brenham woodson	2025-07-10	\N	\N	Doosan 2105 for woodson brenham	\N	{}	\N	2025-07-10 16:51:59.237018+00	2025-08-04 00:05:24.463482+00	83356601-c718-414e-a84c-8b99cc590df3	0	\N	\N	\N
211c9a38-b65b-4043-a96e-58460799b21a	5a54dd83-f546-4149-8ff5-d44cbc570217	Doosan 2514 woodson	Doosan 	D45S-7	FDB12-1930-02514	active	Brenham woodson	2025-07-10	\N	\N	Doosan 2514 woodson brenham	\N	{}	\N	2025-07-10 18:16:46.441483+00	2025-08-04 00:05:35.519343+00	83356601-c718-414e-a84c-8b99cc590df3	0	\N	\N	\N
f7ef5e64-f272-45c6-822a-0844569ff63e	96061a65-7e91-4ed3-9df1-282ff19a8471	Excavator XR	Komatsu	XR50	EX-7H5R3T2	active	Chicago, IL	2025-06-18	\N	2025-06-18	5-ton mini-excavator with hydraulic thumb\n	https://ymxkzronkhwxzcdcbnwq.supabase.co/storage/v1/object/public/equipment-note-images/685efa5e-7519-486e-8643-28cfaf5408a4/f7ef5e64-f272-45c6-822a-0844569ff63e/2a36f8cb-4dd4-429f-b980-bad0b939d78b/1754454257473.jpg	{"Capacity": "5 Tons", "Thumb Type": "Hydraulic"}	\N	2025-06-18 20:55:13.801525+00	2025-08-06 04:24:20.539755+00	\N	0	\N	\N	\N
e1064edd-c3ae-492f-9ff1-91d8abfffb47	5a54dd83-f546-4149-8ff5-d44cbc570217	Princeton 5207	Princeton	Pb50	138175207	active	Woodson brenham	2025-07-02	\N	\N		\N	{}	\N	2025-07-02 15:53:27.68705+00	2025-08-04 02:07:06.378301+00	83356601-c718-414e-a84c-8b99cc590df3	0	\N	\N	\N
ad229b8f-9e20-4b60-b7fb-03d9e2ba2b60	96061a65-7e91-4ed3-9df1-282ff19a8471	Weld Master 200	Lincoln Electric	WM200	WM-5C4N2Q9	active	Phoenix, AZ	2025-06-18	\N	2025-06-18	MIG welder with spool gun and high-duty cable\n	\N	{"MAINTANENCE_MANUAL": "https://manuals.equipqr.info/998777444"}	\N	2025-06-18 20:57:52.341095+00	2025-08-14 14:26:33.316062+00	\N	0	\N	\N	\N
1740e3e0-f58d-4249-adc1-ef0b9955955f	5a54dd83-f546-4149-8ff5-d44cbc570217	Raymond 18 EPJ	Rsymond	840	821-21-55842	active	Dallas location 	2025-07-19	\N	\N	EPJ 18 rsymond dallas location 	\N	{}	\N	2025-07-19 00:51:15.911403+00	2025-07-19 00:54:53.230112+00	71d94563-7c58-4d22-b121-88f3c624af17	0	\N	\N	\N
cc363af5-50a1-4a0d-bbb1-6ce5902d9ff9	5a54dd83-f546-4149-8ff5-d44cbc570217	Raymond 17 EPJ	Rsymond	840	821-20-45075	active	Dallas location 	2025-07-19	\N	\N	Electric pallet jack 17 rsymond dallas location 	\N	{}	\N	2025-07-19 03:50:22.648664+00	2025-07-19 03:50:49.805191+00	71d94563-7c58-4d22-b121-88f3c624af17	0	\N	\N	\N
f017a274-82ce-4b95-8bcf-f21d5f421558	5a54dd83-f546-4149-8ff5-d44cbc570217	Raymond 16 EPJ dallas	Raymond 	840	821-20-45095	active	Dallas location 	2025-07-19	\N	\N	EPJ 16 raymond dallas location	\N	{}	\N	2025-07-19 03:52:51.752295+00	2025-07-19 03:53:06.631645+00	71d94563-7c58-4d22-b121-88f3c624af17	0	\N	\N	\N
f6fbe22f-ab61-4abc-8ee9-3d056aa408d4	5a54dd83-f546-4149-8ff5-d44cbc570217	Mitsubishi 13 forklift dallas	Mitsubishi 	2 35ec	A2BC22642	active	Dallas location 	2025-07-19	\N	\N	Sit down counterbalance forklift 13, dallas location 	\N	{}	\N	2025-07-19 04:18:51.586225+00	2025-07-19 04:19:25.553303+00	71d94563-7c58-4d22-b121-88f3c624af17	0	\N	\N	\N
2fc419f5-2f03-42a9-852f-dd4c6543f149	5a54dd83-f546-4149-8ff5-d44cbc570217	Raymond 15 EPJ	Raymond 	840	821-21-55808	active	Dallas location 	2025-07-19	\N	\N	Eletric pallet jack 15 dallas location TXWS	\N	{}	\N	2025-07-19 03:58:36.841358+00	2025-07-19 04:19:37.478415+00	71d94563-7c58-4d22-b121-88f3c624af17	0	\N	\N	\N
9faf4856-4365-4590-9988-1f0fffdeb3ac	5a54dd83-f546-4149-8ff5-d44cbc570217	Hyster 12 EPJ dallas TxWs	Hyster	840 	B218N16782F	active	Dallas location 	2025-07-19	\N	\N	hyster Electric pallet jack 12 dallas location 	\N	{}	\N	2025-07-19 04:21:02.508386+00	2025-07-19 04:21:18.181362+00	71d94563-7c58-4d22-b121-88f3c624af17	0	\N	\N	\N
893b7055-3d49-4443-a442-ef695ce17a9e	5a54dd83-f546-4149-8ff5-d44cbc570217	Hyster 11 EPJ TxWs dallas	Hsyter	840	A419N13016S	active	Dallas location 	2025-07-19	\N	\N	Hyster EPJ 11 dallas location 	\N	{}	\N	2025-07-19 04:22:33.464052+00	2025-07-19 04:23:16.146039+00	71d94563-7c58-4d22-b121-88f3c624af17	0	\N	\N	\N
28af8d05-bb75-4ff7-b722-1f5c49a643f0	5a54dd83-f546-4149-8ff5-d44cbc570217	Raymond 19 EPJ TxWs dallas	Raymond 	840	821-20-45096	active	Dallas location 	2025-07-19	\N	\N	Eletric pallet jack 19, Raymond, dallas location 	\N	{}	\N	2025-07-19 04:24:48.284743+00	2025-07-19 04:25:26.478829+00	71d94563-7c58-4d22-b121-88f3c624af17	0	\N	\N	\N
ff88eff6-1954-408b-ac7a-d109f77f18c1	5a54dd83-f546-4149-8ff5-d44cbc570217	Raymond 21 EPJ TxWs 	Raymond 	840	821-20-45089	active	Dallas location 	2025-07-19	\N	\N	Electric pallet jack, 20, Raymond, dallas location 	\N	{}	\N	2025-07-19 04:28:02.389447+00	2025-07-19 04:28:18.917348+00	71d94563-7c58-4d22-b121-88f3c624af17	0	\N	\N	\N
1190ca62-f001-47d9-8226-df81469efbaf	5a54dd83-f546-4149-8ff5-d44cbc570217	Raymond EPJ 22 TxWs 	Raymond 	840	821-21-55841	active	Dallas location 	2025-07-19	\N	\N	Electric pallet jack 21, Raymond, dallas location 	\N	{}	\N	2025-07-19 04:29:35.37872+00	2025-07-19 04:30:53.126458+00	71d94563-7c58-4d22-b121-88f3c624af17	0	\N	\N	\N
5ef590dd-7ebc-4640-90a8-2e4e1efe3455	5a54dd83-f546-4149-8ff5-d44cbc570217	Raymond 23 EPJ TxWs 	Raymond 	840	821-20-45079	active	Dallas location 	2025-07-19	\N	\N	Electric pallet jack 23, Raymond, dallas location 	\N	{}	\N	2025-07-19 04:32:02.381814+00	2025-07-19 04:32:23.732306+00	71d94563-7c58-4d22-b121-88f3c624af17	0	\N	\N	\N
4b004576-593a-467e-843f-a97cbd8d6e71	5a54dd83-f546-4149-8ff5-d44cbc570217	Raymond 20 EPJ TxWs 	Raymond 	840	821-21-55809	active	Dallas location 	2025-07-19	\N	\N	Electric pallet jack 20, Raymond, dallas location 	\N	{}	\N	2025-07-19 04:26:33.993759+00	2025-07-19 12:32:25.006983+00	71d94563-7c58-4d22-b121-88f3c624af17	0	\N	\N	\N
49a65f0a-5baf-4dca-abd5-3cea4fc1f785	2542f069-27c9-4833-8fdb-f4b40c8cf291	Vandvong	Volvoq	djjsfd	S34455-312	active	Ekch	2025-07-25	\N	\N		\N	{}	\N	2025-07-25 19:41:38.65337+00	2025-07-25 19:41:38.65337+00	\N	0	\N	\N	\N
68d57a2e-a54a-41e8-b4d7-51d880392b5b	5a54dd83-f546-4149-8ff5-d44cbc570217	Clark 0879	Clark	C50SD	P455DD8799913KF	active	Woodson Brenham	2025-08-04	\N	\N	Clark 0879 woodson brenham	\N	{}	\N	2025-08-04 00:03:20.705767+00	2025-08-04 00:04:53.551439+00	83356601-c718-414e-a84c-8b99cc590df3	0	\N	\N	\N
bf8dea0a-eeff-417d-8af9-097865692fca	5a54dd83-f546-4149-8ff5-d44cbc570217	Princeton 3604	Princeton	Pb 50	961193605	active	Woodson Brenham	2025-07-11	\N	\N	Woodson pb50 3604 located at Woodson brenham	\N	{}	\N	2025-07-11 17:29:00.255069+00	2025-08-04 00:05:57.908493+00	83356601-c718-414e-a84c-8b99cc590df3	0	\N	\N	\N
34eab4c6-3f14-46bd-a8e8-e72caae26a29	dabce056-c0d8-46dd-b173-a3c0084f3133	Compressor #2	Generic	CP294	CP-N34-2109	active	Dallas, TX	2025-06-19	\N	2025-06-11		https://ymxkzronkhwxzcdcbnwq.supabase.co/storage/v1/object/public/equipment-note-images/0d73189e-e714-48e2-8c33-fe8778259064/34eab4c6-3f14-46bd-a8e8-e72caae26a29/13a53780-8e76-4ce4-8786-34ae2c449bca/1751641138660.jpg	{"Weight": "2,150 lbs", "Condition": "Good", "GPS Enabled": "No", "Impact Rate": "1,100 blows/min", "Noise Level": "92 dB(A)", "Bit Diameter": "5.5 inches", "Last Operator": "J. Ramirez", "Mounting Type": "Universal Quick Attach", "Service Interval": "250 hours", "Remote Monitoring": "Enabled", "Field Kit Included": "Yes", "Lubrication System": "Automatic grease pump", "Operating Pressure": "2,400 psi", "Oil Flow Requirement": "28 gal/min"}	\N	2025-06-19 16:03:42.152477+00	2025-07-30 03:28:15.659726+00	\N	30	\N	\N	\N
80998051-cb1d-47b2-96c5-2e59b10ca643	5a54dd83-f546-4149-8ff5-d44cbc570217	Clark 0965	Clark	C50SD	P4550 0965 9913 KF	active	Woodson Brenham	2025-08-04	\N	\N	Clark 0965 located at Woodson lumber brenham texas	\N	{}	\N	2025-08-04 00:14:09.154261+00	2025-08-04 00:14:09.154261+00	83356601-c718-414e-a84c-8b99cc590df3	0	\N	\N	\N
18a81643-0fce-4b42-8d47-917768e7a097	5a54dd83-f546-4149-8ff5-d44cbc570217	Doosan 2515	Doosan	D45S-7	FDB12-1930-02515	active	Woodson Brenham	2025-07-11	\N	\N	Doosan 2515 at Woodson brenham 	\N	{}	\N	2025-07-11 20:05:24.667272+00	2025-08-04 01:34:35.359519+00	83356601-c718-414e-a84c-8b99cc590df3	0	\N	\N	\N
67f7cfcb-c48a-4540-85be-a4296c317bce	5a54dd83-f546-4149-8ff5-d44cbc570217	Clark 0813 woodson lumber 	Clark	C45D	P455d-0183-9913	active	Woodson Brenham	2025-08-04	\N	\N	Clark 0813 woodson lumber brenham texas 	\N	{}	\N	2025-08-04 05:01:05.811041+00	2025-08-04 05:01:05.811041+00	83356601-c718-414e-a84c-8b99cc590df3	0	\N	\N	\N
50a2195f-9ac5-44aa-a975-b79ba6c3dd7c	dabce056-c0d8-46dd-b173-a3c0084f3133	Doosan 2515 woodson	Doosan	D45S-7	FDB12-1930-02516	active	Woodson Brenham	2025-07-11	\N	\N	Doosan 2515 at Woodson brenham 	https://ymxkzronkhwxzcdcbnwq.supabase.co/storage/v1/object/public/equipment-note-images/685efa5e-7519-486e-8643-28cfaf5408a4/50a2195f-9ac5-44aa-a975-b79ba6c3dd7c/5a523cc7-d4d3-428e-99a9-196cfcdef57b/1754453598749.jpg	{}	\N	2025-07-11 20:03:00.129578+00	2025-08-06 04:13:57.152437+00	4b2c45ee-f229-4508-9543-b7df6ddf280f	0	\N	\N	\N
94d9186a-841d-4a96-a79e-f07c55eaa79b	dabce056-c0d8-46dd-b173-a3c0084f3133	PJ 18 Raymond TXWS Dallas	Raymond 	Raymond 840	821-21-55842	active	Dallas location 	2025-07-19	\N	\N	Electric pallet jack number 18. Dallas location.	https://ymxkzronkhwxzcdcbnwq.supabase.co/storage/v1/object/public/equipment-note-images/685efa5e-7519-486e-8643-28cfaf5408a4/94d9186a-841d-4a96-a79e-f07c55eaa79b/0ae97dfd-d663-41f6-ac39-ec5706157a42/1754453701038.jpg	{}	\N	2025-07-19 00:48:59.105196+00	2025-08-06 04:15:11.593021+00	4b2c45ee-f229-4508-9543-b7df6ddf280f	0	\N	\N	\N
23a3a405-afe5-45ed-99c1-c61a091c5cd7	dabce056-c0d8-46dd-b173-a3c0084f3133	Lee County Faigrounds' Excavator XR	Volvo	XR100	XR-5YQY42ZL	active	Giddings, TX	2025-06-19	\N	2025-06-19	Mini-excavator with hydraulic thumb (XR100 model), max load 3500 lbs for field ops with remote monitoring recently serviced operator cabin with A/C all-weather capable low emissions certified\n	https://ymxkzronkhwxzcdcbnwq.supabase.co/storage/v1/object/public/equipment-note-images/0d73189e-e714-48e2-8c33-fe8778259064/23a3a405-afe5-45ed-99c1-c61a091c5cd7/5ad76d0f-dc31-4099-8f6d-964e668722a6/1751488699739.jpg	{}	\N	2025-06-19 04:30:17.172822+00	2025-08-13 19:26:04.906326+00	\N	0	c97adb9a-30c4-4c80-bd77-8471bf4f2beb	\N	\N
35d78c96-b0ad-4103-9332-79a527119c02	739a0d01-b9ac-4b93-a389-131bd09b9f78	Cromulift FL3300	Cromulift	FL3300	53-44120	active	Lot 43	2025-08-19	\N	2025-06-10	\N	\N	{"weight": "2,150 lbs", "fork_type": "Heavy Duty", "noise_level": "92 dB(A)", "assigned_operator": "Miguel S."}	\N	2025-08-19 15:41:27.107366+00	2025-08-19 15:41:27.107366+00	\N	0	\N	import_1755618073226_sgeyubf89	\N
3cb45a39-50c7-49c0-84ca-faedea091647	739a0d01-b9ac-4b93-a389-131bd09b9f78	Cromulift FL4240	Cromulift	FL4240	14-63221	active	Lot 42	2025-08-19	\N	2025-06-10	\N	\N	{"weight": "2,150 lbs", "fork_type": "Heavy Duty", "noise_level": "92 dB(A)", "assigned_operator": "Miguel S."}	\N	2025-08-19 15:41:27.196492+00	2025-08-19 15:41:27.196492+00	\N	0	\N	import_1755618073226_sgeyubf89	\N
2e9a84bb-b6df-418c-8dcf-e9598c7d7507	739a0d01-b9ac-4b93-a389-131bd09b9f78	Cromulift FL3300	Cromulift	FL3300	12-98256	active	Lot 45	2025-08-19	\N	2025-06-10	\N	\N	{"weight": "2,150 lbs", "fork_type": "Heavy Duty", "noise_level": "92 dB(A)", "assigned_operator": "Miguel S."}	\N	2025-08-19 15:41:27.248785+00	2025-08-19 15:41:27.248785+00	\N	0	\N	import_1755618073226_sgeyubf89	\N
dac53c45-d890-42cc-bf69-00851179f6fb	739a0d01-b9ac-4b93-a389-131bd09b9f78	Cromulift FL4200	Cromulift	FL4200	75-21479	active	Loading / Unloading	2025-08-19	\N	2025-06-10	\N	\N	{"weight": "2,150 lbs", "fork_type": "Heavy Duty", "noise_level": "92 dB(A)", "assigned_operator": "Loading Crew"}	\N	2025-08-19 15:41:27.323779+00	2025-08-19 15:41:27.323779+00	\N	0	\N	import_1755618073226_sgeyubf89	\N
74261bd3-67ed-4e42-9059-e2130a305f03	739a0d01-b9ac-4b93-a389-131bd09b9f78	Cromulift FL3300	Cromulift	FL3300	97-26654	active	Loading / Unloading	2025-08-19	\N	2025-06-10	\N	\N	{"weight": "2,150 lbs", "fork_type": "Heavy Duty", "noise_level": "92 dB(A)", "assigned_operator": "Loading Crew"}	\N	2025-08-19 15:41:27.376636+00	2025-08-19 15:41:27.376636+00	\N	0	\N	import_1755618073226_sgeyubf89	\N
3792b75d-a2f8-4d44-b75b-83a73f98bda9	739a0d01-b9ac-4b93-a389-131bd09b9f78	Cromulift FL3300	Cromulift	FL3300	09-37494	active	Loading / Unloading	2025-08-19	\N	2025-06-10	\N	\N	{"weight": "1,300 lbs", "fork_type": "Stock", "noise_level": "92 dB(A)", "assigned_operator": "Loading Crew"}	\N	2025-08-19 15:41:27.445149+00	2025-08-19 15:41:27.445149+00	\N	0	\N	import_1755618073226_sgeyubf89	\N
fd9ca6c9-eb60-4021-8a01-06990e047c4c	739a0d01-b9ac-4b93-a389-131bd09b9f78	Cromulift FL4200	Cromulift	FL4200	11-69753	active	Loading / Unloading	2025-08-19	\N	2025-06-10	\N	\N	{"weight": "1,300 lbs", "fork_type": "Stock", "noise_level": "92 dB(A)", "assigned_operator": "Loading Crew"}	\N	2025-08-19 15:41:27.536313+00	2025-08-19 15:41:27.536313+00	\N	0	\N	import_1755618073226_sgeyubf89	\N
b0c39d7e-5405-446a-9602-35d5d0383815	739a0d01-b9ac-4b93-a389-131bd09b9f78	Cromulift FL4200	Cromulift	FL4200	92-66214	active	Lot 45	2025-08-19	\N	2025-06-10	\N	\N	{"weight": "1,300 lbs", "fork_type": "Stock", "noise_level": "92 dB(A)"}	\N	2025-08-19 15:41:27.607539+00	2025-08-19 15:41:27.607539+00	\N	0	\N	import_1755618073226_sgeyubf89	\N
142ee999-a78b-4007-8fa5-5ca5fa3bba37	739a0d01-b9ac-4b93-a389-131bd09b9f78	Cromulift FL4200	Cromulift	FL4200	55-56977	active	Storage	2025-08-19	\N	2025-06-10	\N	\N	{"weight": "1,300 lbs", "fork_type": "Stock", "noise_level": "92 dB(A)"}	\N	2025-08-19 15:41:27.681053+00	2025-08-19 15:41:27.681053+00	\N	0	\N	import_1755618073226_sgeyubf89	\N
3c806f05-ea3c-400f-b93a-fcfe405b7d3c	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Toyota 8FGCU25	Toyota	8FGCU25	TY8F-342155	active	Chicago, IL	2025-08-19	\N	2025-06-12	\N	\N	{"year": 2019, "notes": "Needs new seat", "owner": "ABC Logistics", "status": "Active", "fuel_type": "Gasoline", "department": "Warehouse", "hours_used": 4321, "engine_type": "4CYL", "capacity_lbs": 5000, "license_plate": "IL-FK123", "purchase_date": "8/15/2019", "service_vendor": "Central Equip Co.", "next_inspection": "12/1/2025", "operator_assigned": "John Smith", "warranty_expiration": "8/15/2026", "insurance_expiration": "3/30/2026"}	\N	2025-08-19 16:31:52.507624+00	2025-08-19 16:31:52.507624+00	\N	0	\N	import_1755621055147_z2xie9b8h	\N
4e8a11a3-e50a-4d29-a69c-1592d4de2674	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Caterpillar D6T XL	Caterpillar	D6T XL	CATD6-771934	active	Houston, TX	2025-08-19	\N	2025-04-30	\N	\N	{"year": 2018, "owner": "HeavyWorks Inc.", "status": "Active", "fuel_type": "Diesel", "department": "Construction", "hours_used": 6789, "engine_type": "V8", "capacity_lbs": 52000, "license_plate": "TX-DOZ88", "purchase_date": "5/20/2018", "service_vendor": "Yellow Iron LLC", "next_inspection": "10/12/2025", "operator_assigned": "Maria Lopez", "warranty_expiration": "5/20/2025", "insurance_expiration": "1/5/2026"}	\N	2025-08-19 16:31:52.606016+00	2025-08-19 16:31:52.606016+00	\N	0	\N	import_1755621055147_z2xie9b8h	\N
99d09cc6-4141-45d6-906c-dcd7f242dda1	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	JLG 1930ES	JLG	1930ES	JLG19-455889	active	Denver, CO	2025-08-19	\N	2025-07-01	\N	\N	{"year": 2021, "notes": "Battery replaced Jan 2025", "owner": "SkyReach Rentals", "status": "Active", "fuel_type": "Electric", "department": "Facilities", "hours_used": 1120, "engine_type": "Electric", "capacity_lbs": 500, "license_plate": "CO-LFT43", "purchase_date": "11/2/2021", "service_vendor": "Rocky Mtn Equip", "next_inspection": "9/15/2025"}	\N	2025-08-19 16:31:52.668602+00	2025-08-19 16:31:52.668602+00	\N	0	\N	import_1755621055147_z2xie9b8h	\N
415bc14d-d85e-4f40-b52c-0222b634f7d4	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Komatsu PC210LC-11	Komatsu	PC210LC-11	KMPC2-881045	active	Unknown	2025-08-19	\N	2025-05-15	\N	\N	{"year": 2020, "notes": "Operator reports slow hydraulics", "owner": "Earthmovers Ltd.", "status": "Active", "fuel_type": "Diesel", "department": "Excavation", "hours_used": 3550, "engine_type": "6CYL", "capacity_lbs": 46300, "purchase_date": "9/19/2020", "service_vendor": "Kansas Equip", "next_inspection": "8/20/2025", "operator_assigned": "Mike Carter", "warranty_expiration": "9/19/2025", "insurance_expiration": "5/10/2026"}	\N	2025-08-19 16:31:52.725362+00	2025-08-19 16:31:52.725362+00	\N	0	\N	import_1755621055147_z2xie9b8h	\N
e17d57c9-6068-4064-841e-951b4749f2cc	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Hyster H50FT	Hyster	H50FT	HY50-229811	active	Atlanta, GA	2025-08-19	\N	\N	\N	\N	{"year": 2017, "notes": "Overheats in summer", "owner": "Global Freight", "status": "Inactive", "fuel_type": "LPG", "department": "Warehouse", "hours_used": 9210, "engine_type": "4CYL", "capacity_lbs": 5000, "license_plate": "GA-FK555", "purchase_date": "6/10/2017", "service_vendor": "Southline Lift Co.", "next_inspection": "11/1/2025", "operator_assigned": "Susan Taylor", "warranty_expiration": "6/10/2018", "insurance_expiration": "12/31/2025"}	\N	2025-08-19 16:31:52.805489+00	2025-08-19 16:31:52.805489+00	\N	0	\N	import_1755621055147_z2xie9b8h	\N
0bdc7052-a75d-43a2-a71d-c9b96fa3837b	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Bobcat E35	Bobcat	E35	RJX-356772	active	Cleveland, OH	2025-08-19	\N	2025-03-20	\N	\N	{"year": 2022, "notes": "Track replaced 2024", "owner": "Delta Contractors", "status": "Active", "fuel_type": "Diesel", "department": "Excavation", "hours_used": 1480, "engine_type": "4CYL", "capacity_lbs": 8000, "license_plate": "OH-EX101", "purchase_date": "3/22/2022", "service_vendor": "Northern Equip", "next_inspection": "7/18/2025", "operator_assigned": "Kevin Tran", "warranty_expiration": "9/22/2025", "insurance_expiration": "2/14/2026"}	\N	2025-08-19 16:31:52.869532+00	2025-08-19 16:31:52.869532+00	\N	0	\N	import_1755621055147_z2xie9b8h	\N
f2fe8cda-241b-4184-b625-65279344eca2	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Crown RC 5535	Crown	RC 5535	CR55-612908	active	St. Louis, MO	2025-08-19	\N	2025-07-28	\N	\N	{"year": 2020, "owner": "Metro Warehouse", "status": "Active", "fuel_type": "Electric", "department": "Warehouse", "hours_used": 2200, "engine_type": "Electric", "capacity_lbs": 3500, "license_plate": "MO-FK332", "purchase_date": "4/12/2020", "service_vendor": "St. Louis Equip Co.", "next_inspection": "1/11/2026", "operator_assigned": "Laura Green", "warranty_expiration": "4/12/2023"}	\N	2025-08-19 16:31:52.953269+00	2025-08-19 16:31:52.953269+00	\N	0	\N	import_1755621055147_z2xie9b8h	\N
02249950-579c-4cd8-a5f9-43299b2ff52d	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Genie GS-3246	Genie	GS-3246	GEN32-993211	active	Dallas, TX	2025-08-19	\N	2025-05-04	\N	\N	{"year": 2021, "owner": "HighLift Inc.", "status": "Active", "fuel_type": "Electric", "department": "Facilities", "hours_used": 980, "engine_type": "Electric", "capacity_lbs": 700, "license_plate": "TX-LFT22", "purchase_date": "7/30/2021", "service_vendor": "DFW Equipment", "next_inspection": "12/22/2025", "operator_assigned": "Tom Baker", "warranty_expiration": "7/30/2026", "insurance_expiration": "1/11/2026"}	\N	2025-08-19 16:31:53.044424+00	2025-08-19 16:31:53.044424+00	\N	0	\N	import_1755621055147_z2xie9b8h	\N
c10495f4-a4ce-4df4-b1e9-1c249b1df4ed	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	John Deere 350G LC	John Deere	350G LC	JD35-872314	active	Kansas City, KS	2025-08-19	\N	2025-02-18	\N	\N	{"year": 2019, "notes": "Undercarriage worn", "owner": "Great Plains Const.", "status": "Active", "fuel_type": "Diesel", "department": "Earthworks", "hours_used": 4920, "engine_type": "6CYL", "capacity_lbs": 77400, "license_plate": "KS-EX777", "purchase_date": "3/28/2019", "service_vendor": "Heartland Equip", "next_inspection": "6/10/2025", "operator_assigned": "Derek Hall", "warranty_expiration": "3/28/2024", "insurance_expiration": "9/1/2026"}	\N	2025-08-19 16:31:53.112361+00	2025-08-19 16:31:53.112361+00	\N	0	\N	import_1755621055147_z2xie9b8h	\N
04a15ebd-43f0-4da2-a028-80532440a3ec	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Doosan D30S-7	Doosan	D30S-7	DS30-120587	active	Memphis, TN	2025-08-19	\N	2025-06-09	\N	\N	{"year": 2018, "notes": "Brake service due", "owner": "Delta Logistics", "status": "Active", "fuel_type": "Diesel", "department": "Warehouse", "hours_used": 5400, "engine_type": "4CYL", "capacity_lbs": 6000, "license_plate": "AR-FK908", "purchase_date": "12/3/2018", "service_vendor": "MidSouth Equip", "next_inspection": "9/8/2025", "warranty_expiration": "12/3/2021"}	\N	2025-08-19 16:31:53.177818+00	2025-08-19 16:31:53.177818+00	\N	0	\N	import_1755621055147_z2xie9b8h	\N
2426236b-bd80-4140-897b-eac07bcb0917	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Mitsubishi FD25N	Mitsubishi	FD25N	MFD25-447612	active	Seattle, WA	2025-08-19	\N	2025-07-14	\N	\N	{"year": 2020, "owner": "Seaport Services", "status": "Active", "fuel_type": "LPG", "department": "Dockside", "hours_used": 2750, "engine_type": "4CYL", "capacity_lbs": 5000, "license_plate": "WA-FK211", "purchase_date": "6/21/2020", "service_vendor": "MitsuLift NW", "next_inspection": "10/1/2025", "operator_assigned": "Ryan White", "warranty_expiration": "6/21/2025", "insurance_expiration": "12/15/2025"}	\N	2025-08-19 16:31:53.229143+00	2025-08-19 16:31:53.229143+00	\N	0	\N	import_1755621055147_z2xie9b8h	\N
66319a47-e905-49a0-a8b2-e66ef63dee70	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Case CX210D	Case	CX210D	CX21-978422	active	Indianapolis, IN	2025-08-19	\N	\N	\N	\N	{"year": 2017, "owner": "CaseWorks LLC", "status": "Inactive", "fuel_type": "Diesel", "department": "Excavation", "hours_used": 8410, "engine_type": "6CYL", "capacity_lbs": 47000, "license_plate": "IN-EX215", "purchase_date": "10/9/2017", "service_vendor": "Hoosier Equip", "next_inspection": "8/2/2025", "operator_assigned": "Paul Nguyen", "warranty_expiration": "10/9/2019", "insurance_expiration": "9/9/2025"}	\N	2025-08-19 16:31:53.281659+00	2025-08-19 16:31:53.281659+00	\N	0	\N	import_1755621055147_z2xie9b8h	\N
34f0e555-6ae0-4a66-a49e-e6db127cb8f2	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Skyjack SJIII 3226	Skyjack	SJIII 3226	SJ32-553087	active	Detroit, MI	2025-08-19	\N	2025-03-29	\N	\N	{"year": 2022, "owner": "City Maint.", "status": "Active", "fuel_type": "Electric", "department": "Facilities", "hours_used": 770, "engine_type": "Electric", "capacity_lbs": 700, "license_plate": "MI-LFT09", "purchase_date": "12/15/2022", "service_vendor": "Great Lakes Equip", "next_inspection": "6/15/2025", "warranty_expiration": "12/15/2025", "insurance_expiration": "3/12/2026"}	\N	2025-08-19 16:31:53.330457+00	2025-08-19 16:31:53.330457+00	\N	0	\N	import_1755621055147_z2xie9b8h	\N
7f7f540b-891b-4a4b-b22e-f43cbf5ec39b	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Yale ERP040VT36TE084	Yale	ERP040VT36TE084	YAL40-777210	active	Minneapolis, MN	2025-08-19	\N	2025-04-11	\N	\N	{"year": 2021, "notes": "Battery inspection due", "owner": "North Freight", "status": "Active", "fuel_type": "Electric", "department": "Warehouse", "hours_used": 1980, "engine_type": "Electric", "capacity_lbs": 4000, "license_plate": "MN-FK447", "purchase_date": "1/19/2021", "service_vendor": "Midwest Equip", "next_inspection": "10/27/2025", "operator_assigned": "Sara Kim", "warranty_expiration": "1/19/2026", "insurance_expiration": "2/20/2026"}	\N	2025-08-19 16:31:53.381198+00	2025-08-19 16:31:53.381198+00	\N	0	\N	import_1755621055147_z2xie9b8h	\N
04885ad9-f23f-4cc6-bc50-45da2bdce00f	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Hitachi ZX250LC-6	Hitachi	ZX250LC-6	HIT25-114593	active	Orlando, FL	2025-08-19	\N	2025-06-27	\N	\N	{"year": 2019, "notes": "Crack in bucket arm", "owner": "Atlantic Contractors", "status": "Active", "fuel_type": "Diesel", "department": "Earthworks", "hours_used": 5620, "engine_type": "6CYL", "capacity_lbs": 55100, "license_plate": "FL-EX301", "purchase_date": "9/5/2019", "service_vendor": "Sunstate Equip", "next_inspection": "11/19/2025", "operator_assigned": "Juan Perez", "warranty_expiration": "9/5/2025", "insurance_expiration": "8/1/2026"}	\N	2025-08-19 16:31:53.443596+00	2025-08-19 16:31:53.443596+00	\N	0	\N	import_1755621055147_z2xie9b8h	\N
0d937d73-a835-464b-b90b-32614935d261	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Komatsu D85EX-18	Komatsu	D85EX-18	KOD8-564006	active	Chicago, IL	2025-08-19	\N	2025-12-02	\N	\N	{"year": 2020, "notes": "Brake service due", "owner": "Delta Logistics", "status": "Active", "fuel_type": "LPG", "department": "Construction", "hours_used": 3891, "engine_type": "V8", "capacity_lbs": 3500, "license_plate": "Ch-303", "purchase_date": "2017-05-22", "service_vendor": "MitsuLift NW", "next_inspection": "2026-10-28", "warranty_expiration": "2022-05-22", "insurance_expiration": "2026-10-12"}	\N	2025-08-19 16:42:02.211378+00	2025-08-19 16:42:02.211378+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
95c9ff1e-25c1-47fa-85cc-4ac2f827a361	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Genie GS-1930	Genie	GS-1930	GEGS-929684	active	Memphis, TN	2025-08-19	\N	2025-03-28	\N	\N	{"year": 2020, "owner": "Great Plains Const.", "status": "In Repair", "fuel_type": "LPG", "department": "Construction", "hours_used": 8478, "engine_type": "V8", "capacity_lbs": 500, "license_plate": "Me-764", "purchase_date": "2021-07-08", "service_vendor": "Heartland Equip", "next_inspection": "2027-07-23", "operator_assigned": "Kevin Tran", "insurance_expiration": "2025-12-01"}	\N	2025-08-19 16:42:02.274951+00	2025-08-19 16:42:02.274951+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
99609fe2-d65f-4ba7-bd34-1e0cf7bb626f	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Caterpillar D8T	Caterpillar	D8T	CAD8-370360	active	Houston, TX	2025-08-19	\N	2025-12-23	\N	\N	{"year": 2017, "notes": "Hydraulic leak observed", "owner": "Global Freight", "status": "Inactive", "fuel_type": "Electric", "department": "Excavation", "hours_used": 8860, "engine_type": "Electric", "capacity_lbs": 12000, "license_plate": "Ho-388", "purchase_date": "2017-03-20", "service_vendor": "Rocky Mtn Equip", "next_inspection": "2025-10-09", "operator_assigned": "Sara Kim", "warranty_expiration": "2022-03-20", "insurance_expiration": "2027-01-19"}	\N	2025-08-19 16:42:02.33676+00	2025-08-19 16:42:02.33676+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
540e001e-5b37-43bc-bc13-272a356b2a56	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Skyjack SJIII 3219	Skyjack	SJIII 3219	SKSJ-885789	active	Memphis, TN	2025-08-19	\N	2024-03-16	\N	\N	{"year": 2020, "notes": "Battery replaced", "owner": "Atlantic Contractors", "status": "Active", "fuel_type": "Electric", "department": "Construction", "hours_used": 3702, "engine_type": "Electric", "capacity_lbs": 500, "license_plate": "Me-673", "purchase_date": "2021-06-04", "service_vendor": "MidSouth Equip", "next_inspection": "2026-09-18", "operator_assigned": "Ryan White", "insurance_expiration": "2025-10-25"}	\N	2025-08-19 16:42:02.409404+00	2025-08-19 16:42:02.409404+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
172c4634-63f6-47c6-8c8c-adcb2790e623	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Case 1650M	Case	1650M	CA16-308629	active	Cleveland, OH	2025-08-19	\N	2025-11-01	\N	\N	{"year": 2019, "notes": "Hydraulic leak observed", "owner": "North Freight", "status": "Inactive", "fuel_type": "LPG", "department": "Excavation", "hours_used": 5986, "engine_type": "4CYL", "capacity_lbs": 55000, "license_plate": "Cl-266", "purchase_date": "2023-01-19", "service_vendor": "DFW Equipment", "next_inspection": "2026-12-08"}	\N	2025-08-19 16:42:02.472394+00	2025-08-19 16:42:02.472394+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
83251944-5369-4983-ab8a-b8635a49a60d	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Mitsubishi FD50N	Mitsubishi	FD50N	MIFD-170025	active	Indianapolis, IN	2025-08-19	\N	2025-09-26	\N	\N	{"year": 2022, "notes": "Hydraulic leak observed", "owner": "Atlantic Contractors", "status": "Inactive", "fuel_type": "Diesel", "department": "Facilities", "hours_used": 7845, "engine_type": "V8", "capacity_lbs": 12000, "license_plate": "In-101", "purchase_date": "2023-02-21", "service_vendor": "Yellow Iron LLC", "next_inspection": "2026-01-18", "operator_assigned": "Tom Baker", "insurance_expiration": "2026-11-13"}	\N	2025-08-19 16:42:02.528314+00	2025-08-19 16:42:02.528314+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
74a67f49-d275-437c-a3c4-99e9d29ddea2	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Yale GDP080	Yale	GDP080	YAGD-109365	active	Atlanta, GA	2025-08-19	\N	2024-09-18	\N	\N	{"year": 2018, "notes": "Needs new tires", "owner": "Atlantic Contractors", "status": "Inactive", "fuel_type": "Diesel", "department": "Excavation", "hours_used": 2703, "engine_type": "6CYL", "capacity_lbs": 12000, "license_plate": "At-825", "purchase_date": "2017-04-23", "service_vendor": "Great Lakes Equip", "next_inspection": "2027-02-10", "operator_assigned": "Susan Taylor", "warranty_expiration": "2022-04-23"}	\N	2025-08-19 16:42:02.597335+00	2025-08-19 16:42:02.597335+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
8fbecef5-30f2-42b5-ac6f-bbf156221061	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Bobcat E85	Bobcat	E85	BOE8-648631	active	Phoenix, AZ	2025-08-19	\N	2025-12-20	\N	\N	{"year": 2020, "owner": "City Maint.", "status": "Inactive", "fuel_type": "Gasoline", "department": "Excavation", "hours_used": 4488, "engine_type": "V8", "capacity_lbs": 55000, "license_plate": "Ph-514", "purchase_date": "2020-11-05", "service_vendor": "MidSouth Equip", "next_inspection": "2026-01-31", "operator_assigned": "Juan Perez", "warranty_expiration": "2025-11-05", "insurance_expiration": "2026-07-08"}	\N	2025-08-19 16:42:02.675655+00	2025-08-19 16:42:02.675655+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
75b68ac7-4935-4be2-b219-7dfd45cf3656	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Genie GS-3246	Genie	GS-3246	GEGS-310447	active	Salt Lake City, UT	2025-08-19	\N	2024-06-23	\N	\N	{"year": 2018, "notes": "Overheats occasionally", "owner": "City Maint.", "status": "Inactive", "fuel_type": "Electric", "department": "Dockside", "hours_used": 1314, "engine_type": "Electric", "capacity_lbs": 5000, "license_plate": "Sa-678", "purchase_date": "2018-08-09", "service_vendor": "Heartland Equip", "next_inspection": "2027-06-23", "operator_assigned": "Tom Baker", "warranty_expiration": "2023-08-09", "insurance_expiration": "2027-06-03"}	\N	2025-08-19 16:42:02.766867+00	2025-08-19 16:42:02.766867+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
e0e1197b-af64-4d1c-bbe4-234aac56a285	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Komatsu D85EX-18	Komatsu	D85EX-18	KOD8-678749	active	Memphis, TN	2025-08-19	\N	\N	\N	\N	{"year": 2018, "notes": "Hydraulic leak observed", "owner": "City Maint.", "status": "In Repair", "fuel_type": "Gasoline", "department": "Excavation", "hours_used": 8729, "engine_type": "V8", "capacity_lbs": 5000, "license_plate": "Me-303", "purchase_date": "2022-02-15", "service_vendor": "MitsuLift NW", "next_inspection": "2026-02-25", "operator_assigned": "Mike Carter", "insurance_expiration": "2027-07-11"}	\N	2025-08-19 16:42:02.846592+00	2025-08-19 16:42:02.846592+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
cf252f60-9821-431b-bc5a-3e802780058a	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Caterpillar D5K2	Caterpillar	D5K2	CAD5-981200	active	Seattle, WA	2025-08-19	\N	2025-02-03	\N	\N	{"year": 2017, "notes": "Needs new tires", "owner": "North Freight", "status": "In Repair", "fuel_type": "Gasoline", "department": "Earthworks", "hours_used": 9492, "engine_type": "4CYL", "capacity_lbs": 55000, "license_plate": "Se-655", "purchase_date": "2020-11-03", "service_vendor": "Heartland Equip", "next_inspection": "2027-05-18", "operator_assigned": "John Smith", "warranty_expiration": "2025-11-03"}	\N	2025-08-19 16:42:02.906263+00	2025-08-19 16:42:02.906263+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
5becba70-8647-4204-bedb-36f048b6b226	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Komatsu D65EX-17	Komatsu	D65EX-17	KOD6-735141	active	St. Louis, MO	2025-08-19	\N	\N	\N	\N	{"year": 2017, "notes": "Needs new tires", "owner": "Atlantic Contractors", "status": "Active", "fuel_type": "LPG", "department": "Excavation", "hours_used": 5398, "engine_type": "4CYL", "capacity_lbs": 5000, "license_plate": "St-679", "purchase_date": "2020-01-18", "service_vendor": "Southline Lift Co.", "next_inspection": "2026-09-12", "operator_assigned": "Mike Carter", "warranty_expiration": "2025-01-18", "insurance_expiration": "2026-11-27"}	\N	2025-08-19 16:42:02.962574+00	2025-08-19 16:42:02.962574+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
fe45513a-518f-436a-b2cd-bab6d4b32b03	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Caterpillar D6T XL	Caterpillar	D6T XL	CAD6-236676	active	Atlanta, GA	2025-08-19	\N	2025-02-21	\N	\N	{"year": 2020, "notes": "Hydraulic leak observed", "owner": "Great Plains Const.", "status": "Inactive", "fuel_type": "Diesel", "department": "Excavation", "hours_used": 1256, "engine_type": "4CYL", "capacity_lbs": 77000, "license_plate": "At-866", "purchase_date": "2019-05-15", "service_vendor": "DFW Equipment", "next_inspection": "2026-01-23", "operator_assigned": "John Smith", "warranty_expiration": "2024-05-15", "insurance_expiration": "2027-03-28"}	\N	2025-08-19 16:42:03.599604+00	2025-08-19 16:42:03.599604+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
d5626b33-9179-407c-a2db-eb4752e94d4f	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Hyster H50FT	Hyster	H50FT	HYH5-446496	active	Memphis, TN	2025-08-19	\N	2024-11-26	\N	\N	{"year": 2023, "notes": "Needs new tires", "owner": "City Maint.", "status": "Inactive", "fuel_type": "Diesel", "department": "Facilities", "hours_used": 1103, "engine_type": "4CYL", "capacity_lbs": 12000, "license_plate": "Me-298", "purchase_date": "2018-07-06", "service_vendor": "Northern Equip", "next_inspection": "2025-11-01", "operator_assigned": "Maria Lopez", "warranty_expiration": "2023-07-06", "insurance_expiration": "2025-10-10"}	\N	2025-08-19 16:42:04.204655+00	2025-08-19 16:42:04.204655+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
e1a1cc81-828c-48b5-ab5f-ce325f2f00ac	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	JLG 2630ES	JLG	2630ES	JL26-838683	active	Houston, TX	2025-08-19	\N	\N	\N	\N	{"year": 2018, "notes": "Battery replaced", "owner": "ABC Logistics", "status": "In Repair", "fuel_type": "Diesel", "department": "Facilities", "hours_used": 1784, "engine_type": "V8", "capacity_lbs": 3500, "license_plate": "Ho-325", "purchase_date": "2017-11-24", "service_vendor": "Sunstate Equip", "next_inspection": "2025-12-29", "operator_assigned": "Sara Kim", "warranty_expiration": "2022-11-24"}	\N	2025-08-19 16:42:04.797865+00	2025-08-19 16:42:04.797865+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
f0571568-33fa-4125-a728-4edb7b726850	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Yale ERP040VT	Yale	ERP040VT	YAER-170391	active	Orlando, FL	2025-08-19	\N	2025-07-20	\N	\N	{"year": 2018, "notes": "Needs new tires", "owner": "City Maint.", "status": "In Repair", "fuel_type": "LPG", "department": "Earthworks", "hours_used": 6270, "engine_type": "V8", "capacity_lbs": 12000, "license_plate": "Or-759", "purchase_date": "2023-08-05", "service_vendor": "Heartland Equip", "next_inspection": "2026-08-12", "operator_assigned": "Laura Green", "insurance_expiration": "2026-01-13"}	\N	2025-08-19 16:42:03.036169+00	2025-08-19 16:42:03.036169+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
90c376fe-d51c-4192-adb3-d97c20d35d92	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Yale ERP040VT	Yale	ERP040VT	YAER-439579	active	Chicago, IL	2025-08-19	\N	2025-09-22	\N	\N	{"year": 2022, "notes": "Needs new tires", "owner": "HeavyWorks Inc.", "status": "Active", "fuel_type": "Electric", "department": "Construction", "hours_used": 3145, "engine_type": "Electric", "capacity_lbs": 500, "license_plate": "Ch-491", "purchase_date": "2018-02-14", "service_vendor": "Southline Lift Co.", "next_inspection": "2027-03-14", "operator_assigned": "Paul Nguyen", "warranty_expiration": "2023-02-14", "insurance_expiration": "2026-08-06"}	\N	2025-08-19 16:42:03.651421+00	2025-08-19 16:42:03.651421+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
05c74185-52da-4005-a419-1b7f93bb6e9e	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Case 1650M	Case	1650M	CA16-186080	active	Unknown	2025-08-19	\N	2025-04-29	\N	\N	{"year": 2023, "notes": "Needs new tires", "owner": "North Freight", "status": "In Repair", "fuel_type": "LPG", "department": "Earthworks", "hours_used": 7518, "engine_type": "6CYL", "capacity_lbs": 8000, "purchase_date": "2020-02-24", "service_vendor": "Heartland Equip", "next_inspection": "2026-07-13", "operator_assigned": "Derek Hall", "warranty_expiration": "2025-02-24", "insurance_expiration": "2026-01-21"}	\N	2025-08-19 16:42:04.263378+00	2025-08-19 16:42:04.263378+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
c35e2dc1-7ce3-4a18-994a-34854e2856e6	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Skyjack SJ4740	Skyjack	SJ4740	SKSJ-439622	active	Kansas City, KS	2025-08-19	\N	2025-10-11	\N	\N	{"year": 2019, "notes": "Overheats occasionally", "owner": "SkyReach Rentals", "status": "In Repair", "fuel_type": "Electric", "department": "Earthworks", "hours_used": 7144, "engine_type": "Electric", "capacity_lbs": 8000, "license_plate": "Ka-986", "purchase_date": "2023-09-22", "service_vendor": "Central Equip Co.", "next_inspection": "2026-01-04", "operator_assigned": "Laura Green", "insurance_expiration": "2026-12-05"}	\N	2025-08-19 16:42:04.85587+00	2025-08-19 16:42:04.85587+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
427e5575-d3ef-411d-bdcf-610fd645af83	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Crown FC 5700	Crown	FC 5700	CRFC-376648	active	Salt Lake City, UT	2025-08-19	\N	2025-10-22	\N	\N	{"year": 2021, "notes": "Brake service due", "owner": "Global Freight", "status": "Active", "fuel_type": "Gasoline", "department": "Construction", "hours_used": 2097, "engine_type": "6CYL", "capacity_lbs": 55000, "license_plate": "Sa-796", "purchase_date": "2017-11-16", "service_vendor": "Hoosier Equip", "next_inspection": "2025-11-27", "operator_assigned": "Juan Perez", "warranty_expiration": "2022-11-16", "insurance_expiration": "2026-03-17"}	\N	2025-08-19 16:42:03.093328+00	2025-08-19 16:42:03.093328+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
a4bc1ca8-52e1-4b77-93a1-4562fd6d334e	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Crown FC 5700	Crown	FC 5700	CRFC-816729	active	Unknown	2025-08-19	\N	2025-03-29	\N	\N	{"year": 2022, "notes": "Brake service due", "owner": "CaseWorks LLC", "status": "Active", "fuel_type": "Electric", "department": "Facilities", "hours_used": 6637, "engine_type": "Electric", "capacity_lbs": 12000, "purchase_date": "2021-06-25", "service_vendor": "Yellow Iron LLC", "next_inspection": "2025-10-20", "operator_assigned": "John Smith", "insurance_expiration": "2026-04-21"}	\N	2025-08-19 16:42:03.720645+00	2025-08-19 16:42:03.720645+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
d051d130-fc60-4a62-8f11-32807ba9b269	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Bobcat E85	Bobcat	E85	BOE8-324563	active	Denver, CO	2025-08-19	\N	2024-09-24	\N	\N	{"year": 2017, "notes": "Brake service due", "owner": "Global Freight", "status": "In Repair", "fuel_type": "Diesel", "department": "Excavation", "hours_used": 6512, "engine_type": "6CYL", "capacity_lbs": 77000, "license_plate": "De-460", "purchase_date": "2018-05-11", "service_vendor": "Rocky Mtn Equip", "next_inspection": "2027-06-14", "operator_assigned": "Susan Taylor", "warranty_expiration": "2023-05-11", "insurance_expiration": "2027-07-11"}	\N	2025-08-19 16:42:04.31773+00	2025-08-19 16:42:04.31773+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
93a2154e-7902-426f-817f-554ad712407d	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Crown SC 5200	Crown	SC 5200	CRSC-564998	active	Seattle, WA	2025-08-19	\N	2025-09-03	\N	\N	{"year": 2023, "owner": "SkyReach Rentals", "status": "Active", "fuel_type": "Diesel", "department": "Dockside", "hours_used": 1283, "engine_type": "4CYL", "capacity_lbs": 55000, "license_plate": "Se-717", "purchase_date": "2023-05-13", "service_vendor": "MidSouth Equip", "next_inspection": "2025-12-23", "operator_assigned": "Kevin Tran", "insurance_expiration": "2027-05-02"}	\N	2025-08-19 16:42:04.916797+00	2025-08-19 16:42:04.916797+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
4a6dd8d9-1d62-450c-b264-0c17bb94b86a	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Skyjack SJIII 3226	Skyjack	SJIII 3226	SKSJ-881971	active	Atlanta, GA	2025-08-19	\N	2025-03-31	\N	\N	{"year": 2020, "notes": "Hydraulic leak observed", "owner": "North Freight", "status": "Inactive", "fuel_type": "Diesel", "department": "Earthworks", "hours_used": 1150, "engine_type": "V8", "capacity_lbs": 77000, "license_plate": "At-852", "purchase_date": "2020-05-01", "service_vendor": "Central Equip Co.", "next_inspection": "2026-10-19", "operator_assigned": "Maria Lopez", "warranty_expiration": "2025-05-01", "insurance_expiration": "2026-07-21"}	\N	2025-08-19 16:42:03.167668+00	2025-08-19 16:42:03.167668+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
655d9005-3013-4fd2-b4aa-6d08dd0b6cc9	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	John Deere 470G LC	John Deere	470G LC	JO47-993349	active	Unknown	2025-08-19	\N	2024-07-08	\N	\N	{"year": 2019, "notes": "Brake service due", "owner": "Earthmovers Ltd.", "status": "Active", "fuel_type": "Gasoline", "department": "Dockside", "hours_used": 1648, "engine_type": "4CYL", "capacity_lbs": 55000, "purchase_date": "2020-01-01", "service_vendor": "Rocky Mtn Equip", "next_inspection": "2027-08-14", "operator_assigned": "Derek Hall", "warranty_expiration": "2025-01-01", "insurance_expiration": "2026-05-11"}	\N	2025-08-19 16:42:03.795484+00	2025-08-19 16:42:03.795484+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
d115b9c4-e6a1-4133-9fbb-1fa09641a88a	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	John Deere 210G LC	John Deere	210G LC	JO21-538557	active	Kansas City, KS	2025-08-19	\N	2024-07-28	\N	\N	{"year": 2020, "notes": "Battery replaced", "owner": "Metro Warehouse", "status": "Inactive", "fuel_type": "Gasoline", "department": "Construction", "hours_used": 3990, "engine_type": "V8", "capacity_lbs": 47000, "license_plate": "Ka-627", "purchase_date": "2023-10-24", "service_vendor": "Northern Equip", "next_inspection": "2027-03-01", "operator_assigned": "Kevin Tran", "insurance_expiration": "2026-06-02"}	\N	2025-08-19 16:42:04.375838+00	2025-08-19 16:42:04.375838+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
e278d691-fb20-4c11-b00e-0fd267eeb22c	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Mitsubishi FD25N	Mitsubishi	FD25N	MIFD-533794	active	Philadelphia, PA	2025-08-19	\N	2024-02-09	\N	\N	{"year": 2022, "notes": "Battery replaced", "owner": "Metro Warehouse", "status": "Active", "fuel_type": "LPG", "department": "Earthworks", "hours_used": 8106, "engine_type": "V8", "capacity_lbs": 500, "license_plate": "Ph-439", "purchase_date": "2018-04-28", "service_vendor": "Kansas Equip", "next_inspection": "2027-06-15", "operator_assigned": "Ryan White", "warranty_expiration": "2023-04-28", "insurance_expiration": "2027-05-17"}	\N	2025-08-19 16:42:04.984091+00	2025-08-19 16:42:04.984091+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
12ce40b5-57db-4352-a08f-252541aefcbc	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Genie GS-1930	Genie	GS-1930	GEGS-114497	active	Detroit, MI	2025-08-19	\N	\N	\N	\N	{"year": 2018, "notes": "Hydraulic leak observed", "owner": "HeavyWorks Inc.", "status": "In Repair", "fuel_type": "Diesel", "department": "Excavation", "hours_used": 4518, "engine_type": "4CYL", "capacity_lbs": 12000, "license_plate": "De-138", "purchase_date": "2022-04-11", "service_vendor": "Southline Lift Co.", "next_inspection": "2026-08-30", "operator_assigned": "Paul Nguyen"}	\N	2025-08-19 16:42:03.222272+00	2025-08-19 16:42:03.222272+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
85c5cca5-7de4-4956-939c-c78ee993ead0	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Caterpillar D5K2	Caterpillar	D5K2	CAD5-980365	active	Phoenix, AZ	2025-08-19	\N	2025-09-23	\N	\N	{"year": 2017, "notes": "Overheats occasionally", "owner": "North Freight", "status": "In Repair", "fuel_type": "Diesel", "department": "Dockside", "hours_used": 7609, "engine_type": "4CYL", "capacity_lbs": 8000, "license_plate": "Ph-724", "purchase_date": "2017-06-30", "service_vendor": "DFW Equipment", "next_inspection": "2025-12-28", "operator_assigned": "Mike Carter", "warranty_expiration": "2022-06-30", "insurance_expiration": "2026-12-27"}	\N	2025-08-19 16:42:03.864886+00	2025-08-19 16:42:03.864886+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
3a604be7-1b57-4c70-afc8-cbea53cb08f9	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Bobcat E85	Bobcat	E85	BOE8-373372	active	Atlanta, GA	2025-08-19	\N	2025-02-17	\N	\N	{"year": 2019, "notes": "Needs new tires", "owner": "HighLift Inc.", "status": "Active", "fuel_type": "Gasoline", "department": "Excavation", "hours_used": 4333, "engine_type": "6CYL", "capacity_lbs": 77000, "license_plate": "At-157", "purchase_date": "2018-12-20", "service_vendor": "Midwest Equip", "next_inspection": "2027-07-23", "operator_assigned": "Kevin Tran", "warranty_expiration": "2023-12-20", "insurance_expiration": "2027-05-03"}	\N	2025-08-19 16:42:04.426445+00	2025-08-19 16:42:04.426445+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
74b918b9-e6bb-4d05-aa01-3554756352d5	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Case 1150M	Case	1150M	CA11-684285	active	Houston, TX	2025-08-19	\N	2025-03-14	\N	\N	{"year": 2018, "notes": "Brake service due", "owner": "CaseWorks LLC", "status": "Active", "fuel_type": "LPG", "department": "Construction", "hours_used": 4700, "engine_type": "4CYL", "capacity_lbs": 8000, "license_plate": "Ho-141", "purchase_date": "2020-02-26", "service_vendor": "St. Louis Equip Co.", "next_inspection": "2025-08-28", "operator_assigned": "Ryan White", "warranty_expiration": "2025-02-26", "insurance_expiration": "2025-12-04"}	\N	2025-08-19 16:42:05.055443+00	2025-08-19 16:42:05.055443+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
ff73999a-8c52-43e9-a4dd-0b49ea190556	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Crown RC 5535	Crown	RC 5535	CRRC-391804	active	Nashville, TN	2025-08-19	\N	\N	\N	\N	{"year": 2018, "owner": "Delta Logistics", "status": "In Repair", "fuel_type": "Gasoline", "department": "Construction", "hours_used": 4934, "engine_type": "V8", "capacity_lbs": 8000, "license_plate": "Na-735", "purchase_date": "2018-04-24", "service_vendor": "Kansas Equip", "next_inspection": "2027-07-05", "operator_assigned": "Kevin Tran", "warranty_expiration": "2023-04-24", "insurance_expiration": "2026-09-06"}	\N	2025-08-19 16:42:03.28957+00	2025-08-19 16:42:03.28957+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
1c4f76a5-3c38-41da-bc69-45ab8f179cc1	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Caterpillar D6T XL	Caterpillar	D6T XL	CAD6-269972	active	Nashville, TN	2025-08-19	\N	2024-10-08	\N	\N	{"year": 2018, "notes": "Needs new tires", "owner": "Atlantic Contractors", "status": "In Repair", "fuel_type": "Gasoline", "department": "Earthworks", "hours_used": 5697, "engine_type": "V8", "capacity_lbs": 12000, "license_plate": "Na-404", "purchase_date": "2019-06-10", "service_vendor": "Northern Equip", "next_inspection": "2026-07-12", "operator_assigned": "Mike Carter", "warranty_expiration": "2024-06-10", "insurance_expiration": "2026-04-12"}	\N	2025-08-19 16:42:03.921586+00	2025-08-19 16:42:03.921586+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
64ae01e9-906e-483f-b187-546c4a3aef94	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Yale GLP060VX	Yale	GLP060VX	YAGL-840006	active	Charlotte, NC	2025-08-19	\N	2024-03-24	\N	\N	{"year": 2017, "notes": "Needs new tires", "owner": "HighLift Inc.", "status": "Inactive", "fuel_type": "Diesel", "department": "Dockside", "hours_used": 3227, "engine_type": "6CYL", "capacity_lbs": 55000, "license_plate": "Ch-694", "purchase_date": "2022-07-07", "service_vendor": "Yellow Iron LLC", "next_inspection": "2026-07-13", "operator_assigned": "Maria Lopez", "insurance_expiration": "2027-03-04"}	\N	2025-08-19 16:42:04.485666+00	2025-08-19 16:42:04.485666+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
72245c3c-8cd4-4bd6-92d2-c3361912eaa8	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Bobcat E165	Bobcat	E165	BOE1-454656	active	New Orleans, LA	2025-08-19	\N	\N	\N	\N	{"year": 2020, "notes": "Brake service due", "owner": "CaseWorks LLC", "status": "Active", "fuel_type": "Diesel", "department": "Warehouse", "hours_used": 8477, "engine_type": "V8", "capacity_lbs": 3500, "license_plate": "Ne-423", "purchase_date": "2022-10-26", "service_vendor": "Yellow Iron LLC", "next_inspection": "2027-04-06", "operator_assigned": "John Smith", "insurance_expiration": "2026-12-09"}	\N	2025-08-19 16:42:05.118025+00	2025-08-19 16:42:05.118025+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
033a425a-0b67-4699-8944-ffb35523b768	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	John Deere 470G LC	John Deere	470G LC	JO47-408348	active	Chicago, IL	2025-08-19	\N	2024-06-03	\N	\N	{"year": 2023, "notes": "Overheats occasionally", "owner": "Great Plains Const.", "status": "In Repair", "fuel_type": "LPG", "department": "Dockside", "hours_used": 4170, "engine_type": "6CYL", "capacity_lbs": 500, "license_plate": "Ch-972", "purchase_date": "2022-10-27", "service_vendor": "MitsuLift NW", "next_inspection": "2027-04-08", "operator_assigned": "Laura Green", "insurance_expiration": "2026-11-19"}	\N	2025-08-19 16:42:03.348796+00	2025-08-19 16:42:03.348796+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
4ab92e3b-d83c-4c36-bdb1-8d44305a948a	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Komatsu D61PXi-24	Komatsu	D61PXi-24	KOD6-199338	active	Indianapolis, IN	2025-08-19	\N	2025-10-27	\N	\N	{"year": 2017, "notes": "Brake service due", "owner": "Earthmovers Ltd.", "status": "Active", "fuel_type": "Diesel", "department": "Dockside", "hours_used": 7144, "engine_type": "6CYL", "capacity_lbs": 5000, "license_plate": "In-951", "purchase_date": "2018-06-06", "service_vendor": "Hoosier Equip", "next_inspection": "2027-07-10", "operator_assigned": "Sara Kim", "warranty_expiration": "2023-06-06", "insurance_expiration": "2025-11-16"}	\N	2025-08-19 16:42:03.975118+00	2025-08-19 16:42:03.975118+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
6224a748-70b1-4621-9f0f-7c7e5b7012bd	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Mitsubishi FD25N	Mitsubishi	FD25N	MIFD-108452	active	Memphis, TN	2025-08-19	\N	2024-02-28	\N	\N	{"year": 2021, "owner": "Great Plains Const.", "status": "In Repair", "fuel_type": "Diesel", "department": "Construction", "hours_used": 1408, "engine_type": "V8", "capacity_lbs": 5000, "license_plate": "Me-943", "purchase_date": "2017-06-21", "service_vendor": "Rocky Mtn Equip", "next_inspection": "2026-03-04", "operator_assigned": "Derek Hall", "warranty_expiration": "2022-06-21", "insurance_expiration": "2026-05-17"}	\N	2025-08-19 16:42:04.54347+00	2025-08-19 16:42:04.54347+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
1c2cf404-11c6-4eb9-9260-a0f0b9e3c407	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Toyota 7FBEU18	Toyota	7FBEU18	TO7F-817685	active	Phoenix, AZ	2025-08-19	\N	2025-06-21	\N	\N	{"year": 2019, "notes": "Battery replaced", "owner": "HighLift Inc.", "status": "Inactive", "fuel_type": "LPG", "department": "Construction", "hours_used": 9728, "engine_type": "6CYL", "capacity_lbs": 55000, "license_plate": "Ph-371", "purchase_date": "2023-07-26", "service_vendor": "St. Louis Equip Co.", "next_inspection": "2026-09-27", "operator_assigned": "John Smith"}	\N	2025-08-19 16:42:05.205542+00	2025-08-19 16:42:05.205542+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
d8e370d2-62c9-40a8-a8cc-37206a5c897e	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Hitachi ZX350LC-6	Hitachi	ZX350LC-6	HIZX-140690	active	Salt Lake City, UT	2025-08-19	\N	2024-08-16	\N	\N	{"year": 2020, "notes": "Overheats occasionally", "owner": "Earthmovers Ltd.", "status": "Active", "fuel_type": "Electric", "department": "Construction", "hours_used": 9793, "engine_type": "Electric", "capacity_lbs": 5000, "license_plate": "Sa-584", "purchase_date": "2020-02-28", "service_vendor": "St. Louis Equip Co.", "next_inspection": "2026-06-02", "operator_assigned": "Susan Taylor", "warranty_expiration": "2025-02-28", "insurance_expiration": "2026-01-03"}	\N	2025-08-19 16:42:03.409419+00	2025-08-19 16:42:03.409419+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
48b94c9a-e3d8-4751-afdb-0f97ebabd8c1	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Hyster H50FT	Hyster	H50FT	HYH5-808145	active	Seattle, WA	2025-08-19	\N	2025-12-04	\N	\N	{"year": 2023, "notes": "Overheats occasionally", "owner": "City Maint.", "status": "Inactive", "fuel_type": "Electric", "department": "Facilities", "hours_used": 1339, "engine_type": "Electric", "capacity_lbs": 12000, "license_plate": "Se-839", "purchase_date": "2021-02-08", "service_vendor": "Rocky Mtn Equip", "next_inspection": "2025-12-26", "operator_assigned": "Mike Carter", "insurance_expiration": "2027-05-28"}	\N	2025-08-19 16:42:04.03157+00	2025-08-19 16:42:04.03157+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
50f03f2d-f5b8-49e6-ab8d-ad66112979b5	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Doosan DX225LC	Doosan	DX225LC	DODX-951179	active	Charlotte, NC	2025-08-19	\N	2025-05-14	\N	\N	{"year": 2019, "notes": "Battery replaced", "owner": "Metro Warehouse", "status": "Active", "fuel_type": "LPG", "department": "Construction", "hours_used": 5939, "engine_type": "6CYL", "capacity_lbs": 47000, "license_plate": "Ch-997", "purchase_date": "2022-07-06", "service_vendor": "Midwest Equip", "next_inspection": "2025-12-05", "operator_assigned": "Mike Carter", "insurance_expiration": "2027-06-14"}	\N	2025-08-19 16:42:04.60148+00	2025-08-19 16:42:04.60148+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
2bbcdfa5-bcd5-412e-bff5-c94dc0c67786	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Doosan DX225LC	Doosan	DX225LC	DODX-659745	active	Atlanta, GA	2025-08-19	\N	\N	\N	\N	{"year": 2017, "notes": "Hydraulic leak observed", "owner": "HighLift Inc.", "status": "Active", "fuel_type": "LPG", "department": "Construction", "hours_used": 9422, "engine_type": "6CYL", "capacity_lbs": 500, "license_plate": "At-852", "purchase_date": "2021-10-29", "service_vendor": "Central Equip Co.", "next_inspection": "2025-11-25", "operator_assigned": "Kevin Tran"}	\N	2025-08-19 16:42:05.261927+00	2025-08-19 16:42:05.261927+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
fcab5a54-c455-4a9b-afbb-0a5744782963	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Mitsubishi FGC70K	Mitsubishi	FGC70K	MIFG-677078	active	Phoenix, AZ	2025-08-19	\N	2025-10-10	\N	\N	{"year": 2021, "owner": "ABC Logistics", "status": "In Repair", "fuel_type": "Electric", "department": "Construction", "hours_used": 4765, "engine_type": "Electric", "capacity_lbs": 500, "license_plate": "Ph-591", "purchase_date": "2018-09-21", "service_vendor": "Kansas Equip", "next_inspection": "2027-06-20", "operator_assigned": "Ryan White", "warranty_expiration": "2023-09-21", "insurance_expiration": "2025-09-10"}	\N	2025-08-19 16:42:03.4682+00	2025-08-19 16:42:03.4682+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
e37c6036-24cd-412a-a5f5-c2208ef3c772	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Komatsu PC210LC-11	Komatsu	PC210LC-11	KOPC-851228	active	Atlanta, GA	2025-08-19	\N	2024-04-15	\N	\N	{"year": 2023, "notes": "Brake service due", "owner": "Great Plains Const.", "status": "Active", "fuel_type": "Electric", "department": "Construction", "hours_used": 3653, "engine_type": "Electric", "capacity_lbs": 12000, "license_plate": "At-634", "purchase_date": "2021-05-12", "service_vendor": "Central Equip Co.", "next_inspection": "2025-10-27", "operator_assigned": "Sara Kim", "insurance_expiration": "2027-05-30"}	\N	2025-08-19 16:42:04.087183+00	2025-08-19 16:42:04.087183+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
f4934c0c-8e67-4f16-b421-db8e3b33ccf5	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Toyota 7FBEU18	Toyota	7FBEU18	TO7F-842754	active	Minneapolis, MN	2025-08-19	\N	2024-07-23	\N	\N	{"year": 2020, "notes": "Needs new tires", "owner": "Delta Contractors", "status": "Active", "fuel_type": "Diesel", "department": "Excavation", "hours_used": 2420, "engine_type": "4CYL", "capacity_lbs": 3500, "license_plate": "Mi-516", "purchase_date": "2021-12-07", "service_vendor": "Hoosier Equip", "next_inspection": "2026-01-27", "operator_assigned": "John Smith", "insurance_expiration": "2026-09-22"}	\N	2025-08-19 16:42:04.664063+00	2025-08-19 16:42:04.664063+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
40b0fb98-35f4-4421-8f69-de2ad537bd1f	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Skyjack SJIII 3219	Skyjack	SJIII 3219	SKSJ-793315	active	Charlotte, NC	2025-08-19	\N	2024-04-29	\N	\N	{"year": 2018, "notes": "Battery replaced", "owner": "SkyReach Rentals", "status": "Active", "fuel_type": "Electric", "department": "Facilities", "hours_used": 4870, "engine_type": "Electric", "capacity_lbs": 12000, "license_plate": "Ch-904", "purchase_date": "2017-11-17", "service_vendor": "Rocky Mtn Equip", "next_inspection": "2026-08-08", "operator_assigned": "Juan Perez", "warranty_expiration": "2022-11-17", "insurance_expiration": "2026-04-11"}	\N	2025-08-19 16:42:05.33784+00	2025-08-19 16:42:05.33784+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
0daf37b2-9c47-420d-9016-1ad664c61ff8	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Komatsu D65EX-17	Komatsu	D65EX-17	KOD6-447983	active	St. Louis, MO	2025-08-19	\N	2025-01-31	\N	\N	{"year": 2018, "notes": "Needs new tires", "owner": "Metro Warehouse", "status": "Active", "fuel_type": "LPG", "department": "Construction", "hours_used": 5380, "engine_type": "4CYL", "capacity_lbs": 12000, "license_plate": "St-849", "purchase_date": "2017-02-24", "service_vendor": "Southline Lift Co.", "next_inspection": "2027-01-25", "operator_assigned": "Paul Nguyen", "warranty_expiration": "2022-02-24"}	\N	2025-08-19 16:42:03.525929+00	2025-08-19 16:42:03.525929+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
1df9f97a-ffa3-4ba0-a7cc-5724fc379707	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Crown FC 5700	Crown	FC 5700	CRFC-963727	active	Atlanta, GA	2025-08-19	\N	2025-12-29	\N	\N	{"year": 2023, "notes": "Battery replaced", "owner": "City Maint.", "status": "Active", "fuel_type": "Gasoline", "department": "Earthworks", "hours_used": 3174, "engine_type": "4CYL", "capacity_lbs": 3500, "license_plate": "At-125", "purchase_date": "2018-09-29", "service_vendor": "St. Louis Equip Co.", "next_inspection": "2026-08-17", "operator_assigned": "Tom Baker", "warranty_expiration": "2023-09-29", "insurance_expiration": "2025-08-25"}	\N	2025-08-19 16:42:04.131526+00	2025-08-19 16:42:04.131526+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
df39637a-32c2-4df6-a226-3195b39e84f8	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Skyjack SJIII 3219	Skyjack	SJIII 3219	SKSJ-868614	active	Denver, CO	2025-08-19	\N	2025-03-07	\N	\N	{"year": 2017, "notes": "Needs new tires", "owner": "ABC Logistics", "status": "Inactive", "fuel_type": "Gasoline", "department": "Dockside", "hours_used": 6394, "engine_type": "6CYL", "capacity_lbs": 55000, "license_plate": "De-297", "purchase_date": "2023-08-08", "service_vendor": "Sunstate Equip", "next_inspection": "2025-09-22", "operator_assigned": "Sara Kim", "insurance_expiration": "2025-12-13"}	\N	2025-08-19 16:42:04.72375+00	2025-08-19 16:42:04.72375+00	11a22d1e-bd02-4f57-bc4a-2157a688d144	0	\N	import_1755621701611_25kwymooo	\N
\.


--
-- Data for Name: equipment_note_images; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.equipment_note_images (id, equipment_note_id, file_name, file_url, file_size, mime_type, description, uploaded_by, created_at, uploaded_by_name) FROM stdin;
5de01558-6f75-42a0-a86c-342596007eba	5ad76d0f-dc31-4099-8f6d-964e668722a6	61cfbaeb-5f90-44ec-8755-42d78c4b1938.jpg	https://ymxkzronkhwxzcdcbnwq.supabase.co/storage/v1/object/public/equipment-note-images/0d73189e-e714-48e2-8c33-fe8778259064/23a3a405-afe5-45ed-99c1-c61a091c5cd7/5ad76d0f-dc31-4099-8f6d-964e668722a6/1751488699739.jpg	186543	image/jpeg	\N	0d73189e-e714-48e2-8c33-fe8778259064	2025-07-02 20:38:21.318761+00	\N
03ab3927-bcb1-4877-8b99-69a215a6ae08	06ed814e-30c8-481e-a9e8-05136cf5e368	1bbc583f-3c1d-494d-a507-777fe5ffacd5.jpg	https://ymxkzronkhwxzcdcbnwq.supabase.co/storage/v1/object/public/equipment-note-images/0d73189e-e714-48e2-8c33-fe8778259064/e3c4f41f-024b-4ad1-8fe7-8ecd56e97618/06ed814e-30c8-481e-a9e8-05136cf5e368/1751493596857.jpg	90672	image/jpeg	\N	0d73189e-e714-48e2-8c33-fe8778259064	2025-07-02 21:59:58.400524+00	\N
73c3aa1e-bdbc-4483-83e1-811304047241	13a53780-8e76-4ce4-8786-34ae2c449bca	72af56cf-9a90-40b6-85ce-3628164118df.jpg	https://ymxkzronkhwxzcdcbnwq.supabase.co/storage/v1/object/public/equipment-note-images/0d73189e-e714-48e2-8c33-fe8778259064/34eab4c6-3f14-46bd-a8e8-e72caae26a29/13a53780-8e76-4ce4-8786-34ae2c449bca/1751641138660.jpg	98892	image/jpeg	\N	0d73189e-e714-48e2-8c33-fe8778259064	2025-07-04 14:58:59.417715+00	\N
77db1e7e-72b4-40e1-b23c-ac7e037281be	45102176-d11c-4aca-be9e-22afd0c14e2c	1000018266.jpg	https://ymxkzronkhwxzcdcbnwq.supabase.co/storage/v1/object/public/equipment-note-images/15d8cd2d-595c-44e2-8cdf-ed7e1028b436/5ef590dd-7ebc-4640-90a8-2e4e1efe3455/45102176-d11c-4aca-be9e-22afd0c14e2c/1752928151748.jpg	3531689	image/jpeg	\N	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-19 12:29:17.600008+00	\N
0e5679f5-32e0-4733-adcf-7855593bb315	ca171931-bf42-4f5d-ac4e-19cb1c97067a	1000018264.jpg	https://ymxkzronkhwxzcdcbnwq.supabase.co/storage/v1/object/public/equipment-note-images/15d8cd2d-595c-44e2-8cdf-ed7e1028b436/ff88eff6-1954-408b-ac7a-d109f77f18c1/ca171931-bf42-4f5d-ac4e-19cb1c97067a/1752928526683.jpg	3774578	image/jpeg	\N	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-19 12:35:32.611727+00	\N
6d132565-6152-47ff-ac13-34cd6833f5b2	8e98d2dc-1a12-43b4-8a3e-cbeb4b5257ba	1000014291.jpg	https://ymxkzronkhwxzcdcbnwq.supabase.co/storage/v1/object/public/equipment-note-images/15d8cd2d-595c-44e2-8cdf-ed7e1028b436/2fc419f5-2f03-42a9-852f-dd4c6543f149/8e98d2dc-1a12-43b4-8a3e-cbeb4b5257ba/1752928845646.jpg	4766109	image/jpeg	\N	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-19 12:40:57.131258+00	\N
fd942ba6-6e27-427c-9d8b-e6b99f1d7dfd	18e47069-47d0-42c5-a102-66e8540d19fb	1000015405.jpg	https://ymxkzronkhwxzcdcbnwq.supabase.co/storage/v1/object/public/equipment-note-images/15d8cd2d-595c-44e2-8cdf-ed7e1028b436/f6fbe22f-ab61-4abc-8ee9-3d056aa408d4/18e47069-47d0-42c5-a102-66e8540d19fb/1752929040959.jpg	1667908	image/jpeg	\N	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-19 12:44:05.002762+00	\N
544de203-8ed5-4994-aa5c-21d2306c15af	2e75906b-dfac-4269-aead-735d55561e6e	1000018344.jpg	https://ymxkzronkhwxzcdcbnwq.supabase.co/storage/v1/object/public/equipment-note-images/15d8cd2d-595c-44e2-8cdf-ed7e1028b436/1190ca62-f001-47d9-8226-df81469efbaf/2e75906b-dfac-4269-aead-735d55561e6e/1752932641552.jpg	4021934	image/jpeg	\N	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-19 13:44:06.694787+00	\N
d9c97ced-82fe-4fb1-9a50-f989c87aa658	3a89f4ba-fb73-404b-b884-2fa84e30f8a6	2e83da6e-211c-4ccd-b23d-929b1fb62ef7.jpg	https://ymxkzronkhwxzcdcbnwq.supabase.co/storage/v1/object/public/equipment-note-images/685efa5e-7519-486e-8643-28cfaf5408a4/c2b7b011-8187-4c30-982d-fe84124278f6/3a89f4ba-fb73-404b-b884-2fa84e30f8a6/1752966580275.jpg	111855	image/jpeg	\N	685efa5e-7519-486e-8643-28cfaf5408a4	2025-07-19 23:09:41.236971+00	Viral Architect
737ce6b4-9022-4922-9599-7ebe217255f4	5a523cc7-d4d3-428e-99a9-196cfcdef57b	Doosan 2515 woodson.jpg	https://ymxkzronkhwxzcdcbnwq.supabase.co/storage/v1/object/public/equipment-note-images/685efa5e-7519-486e-8643-28cfaf5408a4/50a2195f-9ac5-44aa-a975-b79ba6c3dd7c/5a523cc7-d4d3-428e-99a9-196cfcdef57b/1754453598749.jpg	153725	image/jpeg	\N	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-06 04:13:19.825975+00	Viral Architect
2ff60902-0167-45c4-8b3c-ad4206aa2a3f	0ae97dfd-d663-41f6-ac39-ec5706157a42	PJ 18 Raymond TXWS.jpg	https://ymxkzronkhwxzcdcbnwq.supabase.co/storage/v1/object/public/equipment-note-images/685efa5e-7519-486e-8643-28cfaf5408a4/94d9186a-841d-4a96-a79e-f07c55eaa79b/0ae97dfd-d663-41f6-ac39-ec5706157a42/1754453701038.jpg	172043	image/jpeg	\N	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-06 04:15:02.124374+00	Viral Architect
f4f38bad-74ba-41cb-b794-cf370464dea2	c6101077-1a51-40d2-abe7-fefbd769bc83	Backhoe Loader.png	https://ymxkzronkhwxzcdcbnwq.supabase.co/storage/v1/object/public/equipment-note-images/685efa5e-7519-486e-8643-28cfaf5408a4/8c97474d-a2e8-41dc-acbf-fdffce5a268e/c6101077-1a51-40d2-abe7-fefbd769bc83/1754453969140.png	2709335	image/png	\N	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-06 04:19:30.69449+00	Viral Architect
7403fb56-94d4-4c15-af41-94433f3c64f4	6ddc2582-74ae-4000-9820-03e35a278d67	Gas Pressure Washer.jpg	https://ymxkzronkhwxzcdcbnwq.supabase.co/storage/v1/object/public/equipment-note-images/685efa5e-7519-486e-8643-28cfaf5408a4/8a35ba88-03e0-4d1f-9dcc-ecca3d398c41/6ddc2582-74ae-4000-9820-03e35a278d67/1754454110410.jpg	780066	image/jpeg	\N	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-06 04:21:51.441148+00	Viral Architect
1c316fba-c957-46ec-99df-1f82bc1d34b4	2a36f8cb-4dd4-429f-b980-bad0b939d78b	Excavator XR.jpg	https://ymxkzronkhwxzcdcbnwq.supabase.co/storage/v1/object/public/equipment-note-images/685efa5e-7519-486e-8643-28cfaf5408a4/f7ef5e64-f272-45c6-822a-0844569ff63e/2a36f8cb-4dd4-429f-b980-bad0b939d78b/1754454257473.jpg	72855	image/jpeg	\N	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-06 04:24:18.078732+00	Viral Architect
\.


--
-- Data for Name: equipment_notes; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.equipment_notes (id, equipment_id, content, author_id, is_private, hours_worked, created_at, updated_at, last_modified_by, last_modified_at, author_name) FROM stdin;
86e6cc43-ac28-4033-abd5-ce30c7a02da7	e3c4f41f-024b-4ad1-8fe7-8ecd56e97618	Test	0d73189e-e714-48e2-8c33-fe8778259064	f	0	2025-07-02 16:24:17.895365+00	2025-07-02 16:24:17.895365+00	\N	2025-07-02 16:24:17.895365+00	\N
679455d0-557c-4bd8-ace2-0d778368d518	e3c4f41f-024b-4ad1-8fe7-8ecd56e97618	Another test	0d73189e-e714-48e2-8c33-fe8778259064	f	0	2025-07-02 16:27:16.801562+00	2025-07-02 16:27:16.801562+00	\N	2025-07-02 16:27:16.801562+00	\N
35ecc6f9-63d4-4205-97f2-d66ccb496e18	e3c4f41f-024b-4ad1-8fe7-8ecd56e97618	test	0d73189e-e714-48e2-8c33-fe8778259064	f	0	2025-07-02 16:27:32.51991+00	2025-07-02 16:27:32.51991+00	\N	2025-07-02 16:27:32.51991+00	\N
5ad76d0f-dc31-4099-8f6d-964e668722a6	23a3a405-afe5-45ed-99c1-c61a091c5cd7	Display image upload	0d73189e-e714-48e2-8c33-fe8778259064	f	0	2025-07-02 20:38:20.657493+00	2025-07-02 20:38:20.657493+00	\N	2025-07-02 20:38:20.657493+00	\N
6af68e96-5624-4a7e-8759-ff253c57d356	e3c4f41f-024b-4ad1-8fe7-8ecd56e97618	Everything looks good.	0d73189e-e714-48e2-8c33-fe8778259064	f	0	2025-07-02 21:59:47.474126+00	2025-07-02 21:59:47.474126+00	\N	2025-07-02 21:59:47.474126+00	\N
06ed814e-30c8-481e-a9e8-05136cf5e368	e3c4f41f-024b-4ad1-8fe7-8ecd56e97618	Looks good	0d73189e-e714-48e2-8c33-fe8778259064	f	0	2025-07-02 21:59:57.792514+00	2025-07-02 21:59:57.792514+00	\N	2025-07-02 21:59:57.792514+00	\N
13a53780-8e76-4ce4-8786-34ae2c449bca	34eab4c6-3f14-46bd-a8e8-e72caae26a29	The compressor is almost brand new.	0d73189e-e714-48e2-8c33-fe8778259064	f	0	2025-07-04 14:58:58.928449+00	2025-07-04 14:58:58.928449+00	\N	2025-07-04 14:58:58.928449+00	\N
45102176-d11c-4aca-be9e-22afd0c14e2c	5ef590dd-7ebc-4640-90a8-2e4e1efe3455	Found last in drinks	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	f	0	2025-07-19 12:29:12.174684+00	2025-07-19 12:29:12.174684+00	\N	2025-07-19 12:29:12.174684+00	\N
ca171931-bf42-4f5d-ac4e-19cb1c97067a	ff88eff6-1954-408b-ac7a-d109f77f18c1	Found is recieving 	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	f	0	2025-07-19 12:35:27.120097+00	2025-07-19 12:35:27.120097+00	\N	2025-07-19 12:35:27.120097+00	\N
8e98d2dc-1a12-43b4-8a3e-cbeb4b5257ba	2fc419f5-2f03-42a9-852f-dd4c6543f149	Found in cannify building	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	f	0	2025-07-19 12:40:46.089229+00	2025-07-19 12:40:46.089229+00	\N	2025-07-19 12:40:46.089229+00	\N
18e47069-47d0-42c5-a102-66e8540d19fb	f6fbe22f-ab61-4abc-8ee9-3d056aa408d4	Located in cannify building	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	f	0	2025-07-19 12:44:01.391731+00	2025-07-19 12:44:01.391731+00	\N	2025-07-19 12:44:01.391731+00	\N
2e75906b-dfac-4269-aead-735d55561e6e	1190ca62-f001-47d9-8226-df81469efbaf	Found in receiving 	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	f	0	2025-07-19 13:44:01.989886+00	2025-07-19 13:44:01.989886+00	\N	2025-07-19 13:44:01.989886+00	\N
eab3310b-bba5-40b1-92c8-2fd75b7f624d	8c97474d-a2e8-41dc-acbf-fdffce5a268e	Use Mr. Clean on the dashboard	685efa5e-7519-486e-8643-28cfaf5408a4	t	0	2025-08-18 02:32:16.09637+00	2025-08-18 02:32:16.09637+00	\N	2025-08-18 02:32:16.09637+00	\N
5d74bf0b-506e-439a-9346-65697b2a5d15	8c97474d-a2e8-41dc-acbf-fdffce5a268e	Test	685efa5e-7519-486e-8643-28cfaf5408a4	f	0	2025-07-02 15:23:45.164416+00	2025-08-10 23:38:59.10693+00	685efa5e-7519-486e-8643-28cfaf5408a4	2025-07-02 15:23:45.164416+00	Viral Architect
3a89f4ba-fb73-404b-b884-2fa84e30f8a6	c2b7b011-8187-4c30-982d-fe84124278f6	Upload 2025-07-18T12_21_11_2990	685efa5e-7519-486e-8643-28cfaf5408a4	f	0	2025-07-19 23:09:40.584046+00	2025-08-10 23:38:59.10693+00	\N	2025-07-19 23:09:40.584046+00	Viral Architect
5a523cc7-d4d3-428e-99a9-196cfcdef57b	50a2195f-9ac5-44aa-a975-b79ba6c3dd7c	Doosan 2515 woodson	685efa5e-7519-486e-8643-28cfaf5408a4	f	0	2025-08-06 04:13:18.808739+00	2025-08-10 23:38:59.10693+00	\N	2025-08-06 04:13:18.808739+00	Viral Architect
0ae97dfd-d663-41f6-ac39-ec5706157a42	94d9186a-841d-4a96-a79e-f07c55eaa79b	PJ 18 Raymond TXWS	685efa5e-7519-486e-8643-28cfaf5408a4	f	0	2025-08-06 04:15:01.106898+00	2025-08-10 23:38:59.10693+00	\N	2025-08-06 04:15:01.106898+00	Viral Architect
c6101077-1a51-40d2-abe7-fefbd769bc83	8c97474d-a2e8-41dc-acbf-fdffce5a268e	Stock photo	685efa5e-7519-486e-8643-28cfaf5408a4	f	0	2025-08-06 04:19:29.233843+00	2025-08-10 23:38:59.10693+00	\N	2025-08-06 04:19:29.233843+00	Viral Architect
6ddc2582-74ae-4000-9820-03e35a278d67	8a35ba88-03e0-4d1f-9dcc-ecca3d398c41	Gas Pressure Washer	685efa5e-7519-486e-8643-28cfaf5408a4	f	0	2025-08-06 04:21:50.500799+00	2025-08-10 23:38:59.10693+00	\N	2025-08-06 04:21:50.500799+00	Viral Architect
2a36f8cb-4dd4-429f-b980-bad0b939d78b	f7ef5e64-f272-45c6-822a-0844569ff63e	Here is the closest display image I could find	685efa5e-7519-486e-8643-28cfaf5408a4	f	0	2025-08-06 04:24:17.548524+00	2025-08-10 23:38:59.10693+00	\N	2025-08-06 04:24:17.548524+00	Viral Architect
\.


--
-- Data for Name: equipment_working_hours_history; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.equipment_working_hours_history (id, equipment_id, old_hours, new_hours, hours_added, updated_by, updated_by_name, update_source, work_order_id, notes, created_at) FROM stdin;
c25237c0-a524-47f7-8fe0-0705d0d2a4dd	34eab4c6-3f14-46bd-a8e8-e72caae26a29	0	15	15	0d73189e-e714-48e2-8c33-fe8778259064	Global Administrator	work_order	abbaa24a-9c18-47d5-8e57-9eee228016e6	Updated from work order: WH Test 1	2025-07-24 02:20:04.168787+00
76599550-9034-4433-89be-d27bd3934810	34eab4c6-3f14-46bd-a8e8-e72caae26a29	15	25	10	0d73189e-e714-48e2-8c33-fe8778259064	Global Administrator	work_order	4b0b6529-53df-45ae-9051-41b09bc76380	Updated from work order: WH Test 2	2025-07-24 02:20:43.084469+00
3cf8b410-50ba-4373-b19b-8639999b33ac	34eab4c6-3f14-46bd-a8e8-e72caae26a29	25	30	5	0d73189e-e714-48e2-8c33-fe8778259064	Global Administrator	manual	\N	OOPS!	2025-07-24 02:21:59.62607+00
5d532db2-c02a-4ebe-8e98-7435ac2397d8	f9e776f0-2d11-4b59-bb3e-0fb3a95dbd65	0	400	400	0d73189e-e714-48e2-8c33-fe8778259064	Global Administrator	work_order	d7d7b553-33ea-42ae-8ebd-875bd942b6a3	Updated from work order: Work Order No. 3347	2025-08-01 00:14:35.102756+00
56c823ae-8d4b-48cf-97f3-510af2b22db4	8a35ba88-03e0-4d1f-9dcc-ecca3d398c41	0	563	563	685efa5e-7519-486e-8643-28cfaf5408a4	Viral Architect	work_order	\N	\N	2025-08-04 20:46:12.819375+00
763421f6-9a8a-4c06-97ff-30a41456254e	5b9ef621-fd88-451e-bf12-7c6a72d45c98	0	2500	2500	0d73189e-e714-48e2-8c33-fe8778259064	Global Administrator	manual	\N	operational	2025-08-05 19:30:19.457732+00
a050c52f-1a18-4e22-9621-31534eccfa74	c9671fbe-f39e-4dc1-9fed-ecdb3d3c37f7	0	2700	2700	685efa5e-7519-486e-8643-28cfaf5408a4	Viral Architect	work_order	\N	\N	2025-08-05 19:36:23.434897+00
c04e5411-c54a-469b-a5e2-693e4927d54c	8c97474d-a2e8-41dc-acbf-fdffce5a268e	0	425	425	685efa5e-7519-486e-8643-28cfaf5408a4	Viral Architect	manual	\N	\N	2025-08-18 02:33:10.169235+00
\.


--
-- Data for Name: geocoded_locations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.geocoded_locations (id, organization_id, input_text, normalized_text, latitude, longitude, formatted_address, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: invitation_performance_logs; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.invitation_performance_logs (id, function_name, execution_time_ms, success, error_message, created_at) FROM stdin;
a7d54cbe-036c-4642-a3a6-3de5adb7e741	create_invitation	226.09999999403954	f	INVITATION_ERROR: stack depth limit exceeded	2025-07-06 14:37:35.144949+00
ff8d9024-1b11-4c6a-b1db-54da9b78bfac	invitation_creation	620.5999999940395	f	INVITATION_ERROR: stack depth limit exceeded	2025-07-06 14:37:35.267505+00
82f7c890-e526-4038-85f8-26b35f1ccda8	create_invitation	114.69999998807907	f	INVITATION_ERROR: stack depth limit exceeded	2025-07-06 14:37:56.654755+00
d64d8d1a-62ca-4397-843c-9efd4b5cf83e	invitation_creation	332.29999999701977	f	INVITATION_ERROR: stack depth limit exceeded	2025-07-06 14:37:56.755202+00
cc2908b7-e966-440c-9ab0-5a0340a2db10	create_invitation	158.70000000298023	f	INVITATION_ERROR: stack depth limit exceeded	2025-07-06 14:49:21.025623+00
54a652b9-84fe-4e25-b110-f2c26bcefad4	invitation_creation	413.3999999910593	f	INVITATION_ERROR: stack depth limit exceeded	2025-07-06 14:49:21.112174+00
44aeba09-451f-44f1-9753-48f98e89ee49	get_invitations	125.70000000298023	f	column reference "role" is ambiguous	2025-07-06 14:53:50.217243+00
8f1b26b8-691a-42c5-8315-f09d2292ebea	get_invitations	88.29999999701977	f	column reference "role" is ambiguous	2025-07-06 15:00:31.437927+00
bcd17b26-2c3f-4f38-a5e0-a1ddb3109dff	get_invitations	93.8999999910593	f	column reference "role" is ambiguous	2025-07-06 15:00:32.703593+00
e4c3dab9-592a-4a09-98d8-6b45578f9734	get_invitations	130.6000000089407	f	column reference "role" is ambiguous	2025-07-06 15:01:00.969266+00
629bb935-16db-42ad-982b-c3773c7d7e6e	get_invitations	93.29999999701977	f	column reference "role" is ambiguous	2025-07-06 15:03:33.95454+00
cc851c9b-02d8-4623-9028-c05a87738002	get_invitations	179.40000000596046	f	column reference "role" is ambiguous	2025-07-06 15:03:35.389765+00
8eb70870-4d75-4ea6-9d2c-4184c579c80e	get_invitations	151.09999999403954	t	\N	2025-07-06 15:04:41.577603+00
15e62843-2d9b-4c31-b35b-7a994add44a8	create_invitation	139.20000000298023	f	INVITATION_ERROR: stack depth limit exceeded	2025-07-06 15:04:51.426757+00
41221b6c-c418-4209-88f4-56f0b7691979	invitation_creation	417	f	INVITATION_ERROR: stack depth limit exceeded	2025-07-06 15:04:51.538199+00
65716bd5-1666-4a7f-8a24-2bc98182ad18	get_invitations	268.90000000596046	t	\N	2025-07-06 15:05:17.607084+00
fecf1476-754a-4735-944b-87e727af1eb8	create_invitation	241.5	f	INVITATION_ERROR: stack depth limit exceeded	2025-07-06 15:09:26.672609+00
8c682b28-2ce6-4ae3-a5fc-36afa059eff8	invitation_creation	816.5999999940395	f	INVITATION_ERROR: stack depth limit exceeded	2025-07-06 15:09:26.862994+00
ca25613a-7f89-4c6f-bc80-bb3f26430c7d	create_invitation	215.5	f	INVITATION_ERROR: stack depth limit exceeded	2025-07-06 15:13:57.62815+00
4463d7c3-0e39-4351-ae84-21c3940739e1	invitation_creation	466.20000000298023	f	INVITATION_ERROR: stack depth limit exceeded	2025-07-06 15:13:57.784467+00
2434d3a0-7e78-4965-b652-2ad067cabc54	create_invitation	147	f	INVITATION_ERROR: stack depth limit exceeded	2025-07-06 15:14:08.316235+00
cb47f10b-a817-41a2-87d4-1bd12b751165	invitation_creation	422.40000000596046	f	INVITATION_ERROR: stack depth limit exceeded	2025-07-06 15:14:08.414132+00
381a85af-9d58-4668-ad3c-ac8ad5e5a5ad	get_invitations	304.79999999701977	t	\N	2025-07-06 15:29:21.830511+00
fd0e83b2-0671-4283-8830-79e66325009f	get_invitations	229.79999999701977	t	\N	2025-07-06 15:31:24.128419+00
74039b52-7cdb-46f7-8f99-259e3749eea8	create_invitation	149.7999999821186	f	INVITATION_ERROR: stack depth limit exceeded	2025-07-07 07:59:35.803457+00
e576cae3-e6d1-489a-93bc-181768258bf0	invitation_creation	448.19999998807907	f	INVITATION_ERROR: stack depth limit exceeded	2025-07-07 07:59:35.902759+00
36380218-7845-444b-abb6-65feffd087cd	invitation_creation	440.39999997615814	f	stack depth limit exceeded	2025-07-07 08:21:06.414356+00
b25f2dc4-a502-48cd-8cd3-9822c710bfc6	get_invitations	223.90000000596046	t	\N	2025-07-07 08:27:28.283818+00
7dcbac7a-af3c-431b-86e9-d1b26bbf1a5e	invitation_creation	630.5	f	Failed to create invitation	2025-07-07 08:39:29.929118+00
37053d1a-7dba-4706-bc93-c211805fbb5b	invitation_creation	380	f	Failed to create invitation	2025-07-07 08:39:35.1253+00
07f40369-5d37-4344-92ff-67ee94d8ec81	get_invitations	423	t	\N	2025-07-08 03:02:45.980482+00
f4ee07f4-55ab-4c7e-91ee-ed8370de4b39	get_invitations	356.69999998807907	t	\N	2025-07-09 03:50:25.157403+00
85e76dbc-0eaa-433e-a8e6-e026a4cfeb06	get_invitations	343.39999997615814	t	\N	2025-07-09 03:51:17.403738+00
dd0c3b9d-e296-45d3-9c39-41367a98fbaf	create_invitation	307.30000001192093	f	INVITATION_ERROR: stack depth limit exceeded	2025-07-09 03:53:06.533145+00
0e36fae9-9303-448f-9d71-b2cc5b0930d3	invitation_creation	589	f	INVITATION_ERROR: stack depth limit exceeded	2025-07-09 03:53:06.676612+00
da579c70-1c43-4990-8f18-402646ac253e	create_invitation	77.89999997615814	t	\N	2025-07-09 04:01:02.999744+00
2317c853-c09f-4e0e-969c-d32b762123dd	invitation_creation	597.5	t	\N	2025-07-09 04:01:03.304006+00
99264127-7806-49e2-aa23-a194cb224ac1	get_invitations	176.30000001192093	t	\N	2025-07-09 04:01:03.684503+00
1f4028cf-83b2-4020-b7b6-952f27fba4e1	get_invitations	364.69999998807907	t	\N	2025-07-09 04:01:48.526373+00
3d91e28e-cddc-47d0-8dd2-ceaca49f13c5	get_invitations	315.5	t	\N	2025-07-09 04:02:04.381952+00
f7e3ae68-17a7-45b1-988b-d7e5e6af3d37	get_invitations	245.30000001192093	t	\N	2025-07-09 04:02:17.521648+00
5de57947-402a-4a02-ad06-8fce2bdea413	get_invitations	387	t	\N	2025-07-10 04:21:51.101872+00
0a846a03-28b9-482a-a24c-6b3b1f4cc5e8	create_invitation	143.09999999403954	t	\N	2025-07-10 04:22:03.783595+00
0e7b2370-8262-49cf-9ed9-48ea48d61f4b	invitation_creation	603.5	t	\N	2025-07-10 04:22:04.149215+00
47082704-be13-4830-8f75-420cda991581	get_invitations	234.20000000298023	t	\N	2025-07-10 04:22:04.434723+00
a2e8db65-5733-4fd4-9436-881c0ee0d8f4	get_invitations	224.5	t	\N	2025-07-10 04:27:23.796958+00
98f267a8-6f1d-418b-afa7-08b2db863c8d	get_invitations	205.40000000596046	t	\N	2025-07-10 04:27:27.89158+00
604a47b8-ba3b-4d84-87f3-e2e0cfe4e879	get_invitations	276.29999999701977	t	\N	2025-07-10 04:28:35.535246+00
93430014-5eb6-47c0-9b85-e564a9fb3f81	get_invitations	299.40000000596046	t	\N	2025-07-10 04:28:42.956852+00
e6621be5-e22d-4674-9f30-daa278365b02	get_invitations	308.40000000596046	t	\N	2025-07-10 04:29:04.186166+00
8df2e561-4286-41fa-a6b8-22c79a580d1f	get_invitations	278.1000000089407	t	\N	2025-07-10 04:29:12.030669+00
8ead0db3-ecd5-49d0-87cc-098fcf2a3452	get_invitations	291.20000000298023	t	\N	2025-07-10 04:29:24.436704+00
e1273688-d917-47e5-b521-a64b86545721	get_invitations	172.70000000298023	t	\N	2025-07-10 04:29:29.150014+00
5a373a94-ee0a-4ded-aa4c-b6105476212a	create_invitation	191.20000000298023	f	INVITATION_ERROR: DUPLICATE_INVITATION: An active invitation already exists for this email	2025-07-10 04:30:14.952114+00
8e45663d-76af-45d4-8134-50ff48c99dcb	invitation_creation	444.80000001192093	f	INVITATION_ERROR: DUPLICATE_INVITATION: An active invitation already exists for this email	2025-07-10 04:30:15.103978+00
3909eac5-d27b-4765-baa2-d6c14cfe6fea	get_invitations	185.8999999910593	t	\N	2025-07-10 04:30:31.253958+00
675b9409-e979-45aa-8c8b-1ca9ea355635	get_invitations	237.20000000298023	t	\N	2025-07-10 04:31:03.25732+00
79931e2d-ab75-4de1-abe0-428aefdce0b7	get_invitations	201.59999999403954	t	\N	2025-07-10 04:33:48.915913+00
97a66abe-5934-4754-9226-cd69977469d7	get_invitations	206.40000000596046	t	\N	2025-07-10 04:35:54.309531+00
9c5765b3-9daf-408b-a592-a52891ef6167	get_invitations	234.70000000298023	t	\N	2025-07-10 04:35:57.681603+00
0c1ce6ef-7e48-4f1b-abee-7c7ad85d2441	create_invitation	108.59999999403954	t	\N	2025-07-10 04:36:12.504+00
a786bbd9-ff8e-487f-a889-31ca43abd33b	invitation_creation	530.2000000029802	t	\N	2025-07-10 04:36:12.838061+00
847ca397-26ec-4e82-bc5d-da62c63e5733	get_invitations	170.70000000298023	t	\N	2025-07-10 04:36:13.003445+00
3005a568-6a70-4af2-9c88-1ff89483b5db	get_invitations	166.70000000298023	t	\N	2025-07-10 04:40:54.661482+00
327a19c9-882f-45a5-a807-d0b67b82491e	get_invitations	180.3999999910593	t	\N	2025-07-10 04:40:58.996306+00
a56d6630-48fe-431d-a90a-101baf1826be	get_invitations	157	t	\N	2025-07-10 04:41:19.525471+00
1628565e-438e-44a2-afb3-a6ae0852c996	create_invitation	79.29999999701977	t	\N	2025-07-10 04:41:34.121132+00
73460bcf-63e9-4b70-9955-3f97bc213384	invitation_creation	373.1000000089407	t	\N	2025-07-10 04:41:34.421185+00
9d5c3556-d502-48fb-b60a-1f4a902c1802	get_invitations	167.29999999701977	t	\N	2025-07-10 04:41:34.592027+00
83fd31bf-6e3d-4061-8369-a7189b66827d	get_invitations	197.5	t	\N	2025-07-10 04:55:08.50454+00
c7f91e32-a727-465c-878a-4c90986f50fc	create_invitation	176.20000000298023	t	\N	2025-07-10 04:55:57.606719+00
e2a98ffb-b23f-4834-85eb-c9a88836bc52	invitation_creation	746.7999999970198	t	\N	2025-07-10 04:55:57.927667+00
08ed1f88-915d-4072-9730-e0ae64dd4b38	get_invitations	220.09999999403954	t	\N	2025-07-10 04:55:58.208036+00
48eacd23-c760-4000-a8a9-344cae85d2b3	get_invitations	208.20000000298023	t	\N	2025-07-10 04:58:11.992215+00
bdba4b9a-1a4e-4c2e-8637-61f1c77caf4a	get_invitations	191.29999999701977	t	\N	2025-07-10 04:59:02.063169+00
954588f6-279a-40d3-bca5-b1ac195c00ba	get_invitations	392.1000000014901	t	\N	2025-07-10 22:20:44.308212+00
2c695394-ae82-4529-be1a-0272df6b9145	get_invitations	290.79999999701977	t	\N	2025-07-10 22:23:08.457441+00
0053d29a-0e28-4daf-b426-1c707bd05837	get_invitations	201.70000000298023	t	\N	2025-07-10 22:27:52.120243+00
681286a8-f685-4398-b1a7-fc809b5b4e2f	get_invitations	135.69999999552965	t	\N	2025-07-10 22:31:04.861129+00
2fda8808-9b44-4319-8d5c-6c9fe2de71cb	get_invitations	268.5	t	\N	2025-07-10 22:37:08.305279+00
ebda9ea8-7e04-4dec-b9f1-143335a7810f	get_invitations	382.70000000298023	t	\N	2025-07-11 02:02:37.811454+00
9f65602f-9a8c-45b6-ab70-50abff536abd	get_invitations	238.79999995231628	t	\N	2025-07-18 07:03:34.941882+00
ee532b5d-5f95-4c75-96e2-59af8a52e59f	get_invitations	271.19999998807907	t	\N	2025-07-18 08:49:11.127818+00
e4a66fbf-6a59-4b26-b71c-5ab659de5c17	get_invitations	218.4000000357628	t	\N	2025-07-18 20:48:25.363842+00
984774fb-8b63-41a3-abb1-f44a1ec188ff	get_invitations	248.5	t	\N	2025-07-18 20:55:19.966905+00
79424bfd-7fbd-4a43-b316-5dbd17f003be	get_invitations	383	t	\N	2025-07-18 21:45:07.455353+00
2832a7d3-7bc6-4eda-8641-61cf8a8316ed	create_invitation	251.20000004768372	t	\N	2025-07-18 21:45:18.491307+00
9e842772-d715-4294-aeea-35f362acb899	invitation_creation	712.5	t	\N	2025-07-18 21:45:18.902484+00
4e7ce990-05a7-479c-bfa5-06747c0176f7	get_invitations	297.89999997615814	t	\N	2025-07-18 21:45:19.30461+00
aac134ca-6b10-4b93-9da4-ddc716ce737f	get_invitations	250.5	t	\N	2025-07-19 00:53:57.495617+00
f4e9d811-6a96-4f8a-8038-31f54834f2f5	get_invitations	377.3000000715256	t	\N	2025-07-19 04:58:21.629354+00
a0a6cc11-17f0-4832-9fc6-1e9c7b9222fe	create_invitation	233.39999997615814	t	\N	2025-07-19 04:58:50.27785+00
aa34766d-6e22-4c25-8d56-51993d670c2c	invitation_creation	966.7999999523163	t	\N	2025-07-19 04:58:50.736086+00
6dd46c71-1790-4e2e-9bb5-da0a398ceae5	get_invitations	255.79999995231628	t	\N	2025-07-19 04:58:50.985864+00
736c0b63-1ea0-4a81-b8c3-6b7512b9af12	get_invitations	413.3000000715256	t	\N	2025-07-19 12:47:27.374071+00
3f29b7bb-c654-427a-b39c-56fc75d462e6	get_invitations	232.79999995231628	t	\N	2025-07-19 13:02:16.572846+00
492f7e21-7ab5-4cc6-858a-adbb0ffc7ed2	get_invitations	250	t	\N	2025-07-19 13:02:33.41351+00
ef04290e-bc35-4f2c-8b6b-006002bed552	get_invitations	294	t	\N	2025-07-19 18:28:51.016831+00
8645b74d-56f3-4b1c-a26e-ae12060d1fdd	get_invitations	227.89999997615814	t	\N	2025-07-19 18:47:29.692982+00
71a04be5-2b14-4bf5-bdf3-e145c78ea213	get_invitations	275.7000000476837	t	\N	2025-07-19 19:12:32.392189+00
24052cd3-06e2-41b2-8fef-c0c61cff85c9	get_invitations	224.10000002384186	t	\N	2025-07-19 19:21:43.811821+00
e8f90245-eb6f-44e2-9b9c-c1ad9b9f7c0c	get_invitations	298.7000000476837	t	\N	2025-07-19 19:41:33.977218+00
d2530eee-30fe-46e7-82e5-22334209e7d2	get_invitations	207.89999997615814	t	\N	2025-07-19 19:53:29.552043+00
e63f326a-897c-4dbe-84fa-1ee2711f1385	get_invitations	407.2000000476837	t	\N	2025-07-19 20:31:22.309844+00
0c5276df-95b0-4981-9164-009297c59058	get_invitations	491	t	\N	2025-07-21 15:59:58.120577+00
8818c522-caea-492f-99f2-1918b109aba6	get_invitations	600.2000000476837	t	\N	2025-07-21 17:20:09.928268+00
d902a7bb-b996-42be-bb2c-ea46e1cd0523	get_invitations	400.59999999403954	t	\N	2025-07-21 18:30:49.429173+00
a60d45b5-3e6f-4623-abbc-e79fd49488b4	get_invitations	340	t	\N	2025-07-22 01:19:43.960365+00
6f7da19d-b078-4312-97d1-83d34bfb6a37	get_invitations	303	t	\N	2025-07-24 01:57:46.778494+00
bb266cf5-0a7e-498a-afc1-a9b458d69e19	get_invitations	275	t	\N	2025-07-24 01:58:22.585828+00
bd86fa91-0e5a-4e86-9888-ffd6c8f624d9	get_invitations	452	t	\N	2025-07-24 02:56:50.590559+00
128bd754-3b13-49d9-ae78-4f70a726f4ab	get_invitations	346.2999999523163	t	\N	2025-07-25 19:53:49.188222+00
23a91d91-0e53-4783-9298-34dbdb662929	get_invitations	328	t	\N	2025-07-25 19:59:46.004513+00
28107a3b-de45-4565-a4dc-6b1c50f9a7be	get_invitations	469.8000000715256	t	\N	2025-07-25 20:34:39.025347+00
2318b87f-a4d3-4265-bf59-1edc3d5803ef	get_invitations	594	t	\N	2025-07-28 19:12:41.149492+00
9e68a183-10f9-4429-a1b4-a962bafcc82c	get_invitations	384.5	t	\N	2025-07-28 19:29:52.747286+00
742fd115-7be6-45fe-8cf1-853fcfbaa3f6	get_invitations	225.5	t	\N	2025-07-28 19:29:58.279748+00
d9ea53df-1674-4298-84ee-606b0b39cd3e	get_invitations	491	t	\N	2025-07-28 21:15:07.123012+00
6168b4b3-f65e-4296-ae0d-5970161598e7	get_invitations	252	t	\N	2025-07-28 22:33:57.749723+00
035d6b2d-9177-45e9-b04e-24019ce2dada	get_invitations	379	t	\N	2025-07-30 02:29:43.373769+00
fc1c774e-33e9-46da-b4ad-4405f74aa271	create_invitation	241	t	\N	2025-07-30 02:42:48.98085+00
4acfc488-8f3e-4191-8b19-b4fe66ce2c19	get_invitations	355	t	\N	2025-07-30 02:42:49.935661+00
547d60c3-f8be-44c4-9ebe-fea26db15abb	get_invitations	402	t	\N	2025-07-30 02:43:47.223699+00
28d96995-e0a2-462c-aec8-e7795bac6ba3	get_invitations	305	t	\N	2025-07-30 02:46:21.939523+00
c744bf7d-edbe-4722-9019-4cc51c91871f	get_invitations	176	t	\N	2025-07-30 02:47:39.71889+00
d5435ce8-3ae4-4646-92be-ef2c2f50ee94	get_invitations	203	t	\N	2025-07-30 02:47:43.601413+00
b411b6d6-4153-404f-b93d-ac4cb5ec0dd6	get_invitations	363	t	\N	2025-07-30 02:48:07.204559+00
d3622e0d-4aa9-4361-a004-be62b5250da4	create_invitation	123	t	\N	2025-07-30 02:48:25.515223+00
dc5754c4-02dc-42d1-befa-caf92f2dbedd	get_invitations	249	t	\N	2025-07-30 02:48:26.116477+00
9b900fd3-f374-475c-9f08-92c7d54890cc	get_invitations	384	t	\N	2025-07-30 02:49:01.673574+00
9cf429bf-cca7-4421-98e2-b9df4c0fd15d	get_invitations	286	t	\N	2025-07-30 02:50:26.169649+00
7f287bb9-4056-473c-b1d8-e8c7ce691750	create_invitation	159	t	\N	2025-07-30 02:50:41.359888+00
ca605334-f391-4386-8eb4-209d9fc249a8	get_invitations	353	t	\N	2025-07-30 02:50:42.134552+00
62a58081-d99e-4f51-8037-b28a72248bc4	get_invitations	346	t	\N	2025-07-30 02:51:14.001963+00
f8c73714-88a3-4c63-854a-46bf006195ea	get_invitations	247	t	\N	2025-07-30 02:53:08.968561+00
2135d204-357f-46eb-8fc3-556fcdfe7b46	get_invitations	223	t	\N	2025-07-30 02:53:14.645962+00
382147fe-2aac-429f-8dbf-033ba0e93d61	get_invitations	247	t	\N	2025-07-30 02:54:01.513527+00
7314280a-96f8-4934-9165-34b841d003eb	get_invitations	336	t	\N	2025-07-30 03:25:59.610225+00
b937e8d5-d2ae-4ca7-9b29-d01aa45c3855	get_invitations	247	t	\N	2025-07-30 03:29:00.837808+00
01ce5dfd-8d95-4298-994b-390182fe01af	create_invitation	151	t	\N	2025-07-30 03:29:16.268935+00
c329870d-e184-4777-93c3-280f7917704c	get_invitations	229	t	\N	2025-07-30 03:29:17.089685+00
d8be431c-e2ec-4e15-afa5-704367c8cb07	get_invitations	361	t	\N	2025-07-30 03:30:09.787436+00
733bd968-9695-4c3c-8ad3-c868f5870af2	get_invitations	430	t	\N	2025-07-30 03:33:50.405617+00
d611f218-ed93-409e-a43d-4ef25d16170d	get_invitations	203	t	\N	2025-07-30 03:34:04.447745+00
7a251506-cb7f-4d93-a971-db06c9d6ba0e	create_invitation	101	t	\N	2025-07-30 03:34:10.34954+00
8d0fc77b-c464-4f8f-a70c-c394cca24be9	get_invitations	196	t	\N	2025-07-30 03:34:11.026384+00
7456fb78-11a2-4f51-b833-63ef68a65fc1	get_invitations	595	t	\N	2025-07-30 03:35:29.732261+00
90954c26-d8c5-4d6e-a3c7-c5bf0e63825b	get_invitations	294	t	\N	2025-07-30 03:36:13.532059+00
85fe92ca-3bed-438c-9bfb-d8261d8a8e8f	get_invitations	305	t	\N	2025-07-30 03:37:28.559741+00
d123b15f-309b-4a5e-ada5-481e676dd8fc	get_invitations	553	t	\N	2025-08-06 22:53:17.586805+00
9491d5e7-bfbe-43a1-8dc6-4609204c6e3f	get_invitations	480	t	\N	2025-08-06 23:01:06.876583+00
a7b28e73-a604-43cb-a8e4-4e8c032094d0	get_invitations	199	t	\N	2025-08-06 23:02:30.01479+00
57a368e1-a9ec-4f06-a6dd-a8fd5a476569	get_invitations	257	t	\N	2025-08-06 23:07:14.304535+00
0a6ee3f6-4bd3-4cd2-a7ec-49917449a183	get_invitations	228	t	\N	2025-08-06 23:15:23.145999+00
b97b5dbc-6d3b-4a4d-931b-e08c30e70a30	get_invitations	174	t	\N	2025-08-06 23:20:13.887132+00
e470c101-9d0f-4d7d-ba43-6b7b53f86ae4	get_invitations	344	t	\N	2025-08-07 01:44:12.316314+00
6e46d61b-2d80-448e-898f-500dab7b7d5a	get_invitations	335	t	\N	2025-08-07 07:06:33.258186+00
dd55883d-1888-4021-a4ba-cd48bad86935	get_invitations	351	t	\N	2025-08-10 10:21:51.955112+00
c2e9a346-a6b8-4f7c-8077-daa16e741578	create_invitation	155	t	\N	2025-08-10 10:25:11.250254+00
1abb8c18-9c83-44c3-9cb3-5bb93dbb2079	get_invitations	227	t	\N	2025-08-10 10:25:11.902415+00
e01fca44-2a4f-466a-81c3-cd6c027fa902	get_invitations	315	t	\N	2025-08-10 10:26:01.618025+00
cfd65ee0-4479-479f-a21e-66a284204fc1	get_invitations	248	t	\N	2025-08-10 10:27:02.6271+00
f09f5114-a41b-4b89-95fd-f4a8e8cc784e	get_invitations	427	t	\N	2025-08-11 14:59:56.357627+00
fe3ea1ec-60b0-4003-b5d6-830a9a2577a5	get_invitations	357	t	\N	2025-08-12 21:35:01.891732+00
2cd384f2-01db-43f3-b5b1-f057c77a3f92	get_invitations	1072	t	\N	2025-08-12 21:57:11.632857+00
a05ff8a7-f702-4ff0-a7df-a6f90ebf320a	get_invitations	771	t	\N	2025-08-13 06:56:41.845428+00
fb8d7b4c-0aa8-4bfa-a728-c7c4493b6a69	get_invitations	535	t	\N	2025-08-13 13:35:54.809601+00
de091ab5-a7c0-4ae7-b92a-688af76e33fc	get_invitations	511	t	\N	2025-08-13 22:47:00.591687+00
4b9e8fed-7091-4560-b7b2-a3ad62ee8bc9	get_invitations	530	t	\N	2025-08-14 00:55:14.065625+00
d2e6e8f7-d41e-4f29-84fd-13cb005534dc	get_invitations	958	t	\N	2025-08-16 19:25:08.573113+00
1ce0c7e1-6fd7-4111-a04c-93dd47b93d94	get_invitations	982	t	\N	2025-08-18 01:08:50.956628+00
0940a7de-4999-4abd-a469-c3fad5aac403	get_invitations	977	t	\N	2025-08-18 01:09:24.070899+00
357dc71c-f0fb-4bd3-84a8-73ded6be91ff	get_invitations	527	t	\N	2025-08-18 01:10:12.983202+00
c01cd47c-3c22-4668-bb11-bb593be44ae6	get_invitations	381	t	\N	2025-08-18 14:27:34.531526+00
b0685579-fbf3-443f-beb0-4d0c8e45c38e	get_invitations	518	t	\N	2025-08-18 18:54:53.796998+00
b09fcd38-edb0-4a78-8f85-707d1a0f4559	get_invitations	333	t	\N	2025-08-18 18:55:52.054114+00
ddf386b2-d850-46d5-90c6-451befecff0b	get_invitations	428	t	\N	2025-08-18 19:38:48.780823+00
86735cd9-4603-4285-b672-00098f7f5e06	get_invitations	327	t	\N	2025-08-18 19:41:59.946966+00
7254011c-0175-42a3-9770-61fbb33e2cf2	get_invitations	414.09999999403954	t	\N	2025-08-18 20:57:19.377757+00
306771b6-630a-4a02-adf5-b6da195ca3ef	get_invitations	334.6000000089407	t	\N	2025-08-18 20:57:56.183028+00
5d37fb6a-d976-4dee-a541-fbddf7fb32e1	get_invitations	516	t	\N	2025-08-20 00:00:27.650775+00
9d3a8b85-0506-4ae9-a97a-38a8de4d4dc3	get_invitations	438	t	\N	2025-08-21 22:11:36.114686+00
c78cbf6d-b7b0-489d-be12-ece1774c503d	get_invitations	224	t	\N	2025-08-22 06:53:12.369211+00
\.


--
-- Data for Name: member_removal_audit; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.member_removal_audit (id, organization_id, removed_user_id, removed_user_name, removed_user_role, removed_by, teams_transferred, new_manager_id, removal_reason, created_at, metadata) FROM stdin;
\.


--
-- Data for Name: notes; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.notes (id, equipment_id, content, author_id, is_private, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: notification_preferences; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.notification_preferences (id, user_id, email_invitations, email_work_orders, email_equipment_alerts, email_billing, push_notifications, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: notifications; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.notifications (id, organization_id, user_id, type, title, message, data, read, created_at, updated_at) FROM stdin;
ddcd01d3-fcac-48a0-b437-4a492a6dd8d0	dabce056-c0d8-46dd-b173-a3c0084f3133	0d73189e-e714-48e2-8c33-fe8778259064	general	Member Removed	Viral Architect was removed from the organization	{"timestamp": "2025-08-10T23:38:59.10693+00:00", "removed_by": "0d73189e-e714-48e2-8c33-fe8778259064", "removed_user_id": "685efa5e-7519-486e-8643-28cfaf5408a4", "removed_user_name": "Viral Architect", "removed_user_role": "member", "teams_transferred": 0}	t	2025-08-10 23:38:59.10693+00	2025-08-23 17:00:41.057754+00
\.


--
-- Data for Name: organization_invitations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.organization_invitations (id, organization_id, email, role, invited_by, status, message, invitation_token, expires_at, created_at, updated_at, accepted_at, accepted_by, slot_reserved, slot_purchase_id, declined_at, expired_at, offers_account_creation) FROM stdin;
972fd392-2c86-46bf-a658-c028acd88411	dabce056-c0d8-46dd-b173-a3c0084f3133	viral.architect@gmail.com	admin	0d73189e-e714-48e2-8c33-fe8778259064	expired	\N	8006f353-fa92-4413-a851-13ce9de8e192	2025-07-16 04:01:02.836049+00	2025-07-09 04:01:02.836049+00	2025-07-09 04:02:03.854897+00	\N	\N	f	\N	\N	2025-07-09 04:02:02.746+00	f
7dea4fc1-a39a-471b-9cb0-dfd7eba523e2	dabce056-c0d8-46dd-b173-a3c0084f3133	test.user@columbiacloudworks.com	admin	0d73189e-e714-48e2-8c33-fe8778259064	expired	Welcome to the app	3cf72633-d8bd-40ac-bbe9-bd3fe9a1d109	2025-08-06 02:47:42.853+00	2025-07-30 02:42:48.690526+00	2025-07-30 02:48:06.664582+00	\N	\N	f	\N	\N	2025-07-30 02:48:06.452+00	f
5e990e93-0bbc-4756-a487-6d101031f714	dabce056-c0d8-46dd-b173-a3c0084f3133	viral.architect@gmail.com	admin	0d73189e-e714-48e2-8c33-fe8778259064	expired	Test	81a95a8e-4e39-43e4-8372-fadce05fdcb1	2025-07-17 04:29:28.461+00	2025-07-10 04:22:03.681654+00	2025-07-10 04:35:57.287429+00	\N	\N	f	\N	\N	2025-07-10 04:35:56.999+00	f
0b39b00e-6a74-4f18-93f5-b6a59f9ea08a	dabce056-c0d8-46dd-b173-a3c0084f3133	test.user@columbiacloudworks.com	member	0d73189e-e714-48e2-8c33-fe8778259064	expired	Test	115a1335-110a-4f2a-acfa-deee00e51876	2025-08-06 02:48:25.430254+00	2025-07-30 02:48:25.430254+00	2025-07-30 02:50:25.644129+00	\N	\N	f	\N	\N	2025-07-30 02:50:25.305+00	f
799cef52-5ffe-4fdf-903d-d0f87e3015c3	dabce056-c0d8-46dd-b173-a3c0084f3133	viral.architect@gmail.com	admin	0d73189e-e714-48e2-8c33-fe8778259064	expired	TESTESTEST	de36646d-9bc6-417c-b9df-30cfbb3246ce	2025-07-17 04:40:58.331+00	2025-07-10 04:36:12.349374+00	2025-07-10 04:41:19.213+00	\N	\N	f	\N	\N	2025-07-10 04:41:18.972+00	f
e1761219-533d-426f-be20-2459e0f9e5b3	dabce056-c0d8-46dd-b173-a3c0084f3133	viral.architect@gmail.com	admin	0d73189e-e714-48e2-8c33-fe8778259064	accepted	Final Test	5bdea032-0498-4edb-b567-010d3db793cc	2025-07-17 04:41:34.04105+00	2025-07-10 04:41:34.04105+00	2025-07-10 04:53:47.789966+00	2025-07-10 04:53:47.789966+00	685efa5e-7519-486e-8643-28cfaf5408a4	f	\N	\N	\N	f
4598d3d4-924b-40ff-9cad-f569ed7a0d46	dabce056-c0d8-46dd-b173-a3c0084f3133	matt@3aequip.com	admin	685efa5e-7519-486e-8643-28cfaf5408a4	accepted	Use this organizaiton to play around with equipment and work orders and stuff without affecting any of your production stuff.	066e8e9e-3a9c-48ad-9a03-0d8d4faf3e11	2025-07-17 04:55:57.458398+00	2025-07-10 04:55:57.458398+00	2025-07-10 16:30:19.135896+00	2025-07-10 16:30:19.135896+00	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	f	\N	\N	\N	f
206fccb0-4b91-4175-b44d-fce2a92d257b	dabce056-c0d8-46dd-b173-a3c0084f3133	viral.architect@gmail.com	member	0d73189e-e714-48e2-8c33-fe8778259064	accepted	Test	c4876cea-d170-45e0-b0e5-548ea34b02d0	2025-07-25 21:45:18.332758+00	2025-07-18 21:45:18.332758+00	2025-07-18 22:01:22.749439+00	2025-07-18 22:01:22.749439+00	685efa5e-7519-486e-8643-28cfaf5408a4	f	\N	\N	\N	f
76f4a5b7-e001-4192-a4fc-151e796c0c9d	5a54dd83-f546-4149-8ff5-d44cbc570217	matthewleehankins@gmail.com	member	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	accepted	Join bitch tits	214c6f9f-b0a3-4380-a8b5-c78093f45845	2025-07-26 13:02:32.245+00	2025-07-19 04:58:50.160506+00	2025-07-19 13:03:14.419634+00	2025-07-19 13:03:14.419634+00	9c2bd213-3ce9-457c-a29e-dfafa277839d	f	\N	\N	\N	f
9ea049cc-f4df-42e9-8ef3-26789e81d7a4	dabce056-c0d8-46dd-b173-a3c0084f3133	test.user@columbiacloudworks.com	member	0d73189e-e714-48e2-8c33-fe8778259064	expired	\N	33d1c50b-f47f-435c-9ce1-0fd600f01005	2025-08-06 02:50:41.265534+00	2025-07-30 02:50:41.265534+00	2025-07-30 02:53:14.127513+00	\N	\N	f	\N	\N	2025-07-30 02:53:13.787+00	f
278712db-b3ce-48f3-af14-b4df9577ac58	dabce056-c0d8-46dd-b173-a3c0084f3133	test.user@columbiacloudworks.com	member	0d73189e-e714-48e2-8c33-fe8778259064	expired	\N	57545bfb-2a76-4ffa-b5cf-f212a8342ee6	2025-08-06 03:29:16.1707+00	2025-07-30 03:29:16.1707+00	2025-07-30 03:34:03.951151+00	\N	\N	f	\N	\N	2025-07-30 03:34:03.611+00	f
45d08e5c-5440-4505-a7a9-75ff04353347	dabce056-c0d8-46dd-b173-a3c0084f3133	test.user@columbiacloudworks.com	member	0d73189e-e714-48e2-8c33-fe8778259064	expired	\N	d72186fd-bd97-4d3a-82c5-125893c3ea19	2025-08-06 03:34:10.220879+00	2025-07-30 03:34:10.220879+00	2025-08-10 10:25:11.080515+00	\N	\N	f	\N	\N	2025-08-10 10:25:11.080515+00	f
f29cb5fc-b88d-426f-b300-37a053df5e49	96061a65-7e91-4ed3-9df1-282ff19a8471	admin@equipqr.app	member	685efa5e-7519-486e-8643-28cfaf5408a4	accepted	test	6eb4b7d5-0caa-42cd-8807-a5ed1a4ec5ae	2025-08-17 10:25:11.080515+00	2025-08-10 10:25:11.080515+00	2025-08-10 10:26:17.268857+00	2025-08-10 10:26:17.268857+00	0d73189e-e714-48e2-8c33-fe8778259064	f	\N	\N	\N	f
\.


--
-- Data for Name: organization_members; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.organization_members (id, organization_id, user_id, role, status, joined_date, slot_purchase_id, activated_slot_at) FROM stdin;
f3cab83b-0721-4124-ac55-7243db795359	dabce056-c0d8-46dd-b173-a3c0084f3133	0d73189e-e714-48e2-8c33-fe8778259064	owner	active	2025-06-17 14:46:52.786052+00	\N	\N
4a93b342-f331-4d42-be13-9f69a20c9f9e	96061a65-7e91-4ed3-9df1-282ff19a8471	685efa5e-7519-486e-8643-28cfaf5408a4	owner	active	2025-06-18 18:08:12.459588+00	\N	\N
139acfe7-f4b8-40e9-a31e-fe0aa6bd0596	5a54dd83-f546-4149-8ff5-d44cbc570217	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	owner	active	2025-06-24 13:40:06.712935+00	\N	\N
dc66fd6a-94e9-4da6-bd6c-136f50b55709	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	da1368a1-9ed1-46ef-a7dc-56bf15ebeee4	owner	active	2025-07-19 04:05:27.467145+00	\N	\N
30d3ef48-3e37-431e-aafd-5da71a0d7484	b490b4f5-a5c5-4f01-b05e-bfe9c59ed281	9c2bd213-3ce9-457c-a29e-dfafa277839d	owner	active	2025-07-19 04:55:12.336186+00	\N	\N
de484eef-3f81-4395-a972-42f0040aad92	5a54dd83-f546-4149-8ff5-d44cbc570217	9c2bd213-3ce9-457c-a29e-dfafa277839d	member	active	2025-07-19 13:03:14.419634+00	\N	\N
7b0c4a4f-4822-43df-9404-4ae704744a7c	ab177901-a1f1-45e8-96ab-ea6b06f33922	5dfc39b8-8037-400a-a7f4-033192d62e44	owner	active	2025-07-25 15:04:18.292282+00	\N	\N
8cc3c667-d87b-4a41-89a5-ad11f599335c	2542f069-27c9-4833-8fdb-f4b40c8cf291	1b7e1856-ca69-4eee-8896-f7c1cf81f942	owner	active	2025-07-25 19:40:43.245361+00	\N	\N
0a6efdc8-38e3-4b59-b73e-e3775018b349	96061a65-7e91-4ed3-9df1-282ff19a8471	0d73189e-e714-48e2-8c33-fe8778259064	member	active	2025-08-10 10:26:17.268857+00	\N	\N
b4ebcefe-f4bb-4609-830a-ee7a3a7897ee	7bafbd3e-2ddb-483f-84f2-27a18b6b9a1b	881e17c3-6c44-488d-8504-906fdc9146ef	owner	active	2025-08-17 14:57:27.795946+00	\N	\N
d9577627-323f-4e5f-8424-9dd5f87ad664	739a0d01-b9ac-4b93-a389-131bd09b9f78	ba131ec4-ad65-4d62-8ed5-4610d575b2dc	owner	active	2025-08-19 12:44:45.455353+00	\N	\N
85dc0144-756f-4c72-8465-134cf1a8b00a	243e46be-acb6-4af1-a11f-528b05ea91b0	39ea9c03-12ac-4072-990e-63019d163ce2	owner	active	2025-08-22 03:15:53.320872+00	\N	\N
\.


--
-- Data for Name: organization_slots; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.organization_slots (id, organization_id, slot_type, purchased_slots, used_slots, billing_period_start, billing_period_end, stripe_payment_intent_id, amount_paid_cents, created_at, updated_at, stripe_subscription_id, stripe_price_id, auto_renew) FROM stdin;
3ee2875b-936e-4e76-9db6-935efeea55fe	dabce056-c0d8-46dd-b173-a3c0084f3133	user_license	2	0	2025-07-05 21:31:48+00	2025-08-05 21:31:48+00	\N	2000	2025-07-05 21:32:03.75285+00	2025-07-05 21:32:03.75285+00	sub_1RhdgWF7dmK1pWnRnOM4bz0A	\N	t
fa52a5ed-9f96-47ce-a306-7351efc59244	96061a65-7e91-4ed3-9df1-282ff19a8471	user_license	1	0	2025-08-21 22:09:26+00	2025-09-21 22:09:26+00	\N	1000	2025-08-21 22:09:35.001361+00	2025-08-21 22:09:35.001361+00	sub_1RygfjF7dmK1pWnRTygExnQx	\N	t
\.


--
-- Data for Name: organization_subscriptions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.organization_subscriptions (id, organization_id, stripe_subscription_id, status, feature_type, quantity, unit_price_cents, billing_cycle, current_period_start, current_period_end, cancel_at_period_end, created_at, updated_at) FROM stdin;
a7b2f69c-d6e4-43b6-be38-60f36bed8abc	96061a65-7e91-4ed3-9df1-282ff19a8471	sub_1S2JK6F7dmK1pWnR8P7MtHlZ	active	fleet_map	1	1000	monthly	2025-08-31 22:02:06+00	2025-09-30 22:02:06+00	f	2025-08-31 22:15:19.875474+00	2025-08-31 22:15:19.875474+00
\.


--
-- Data for Name: organizations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.organizations (id, name, plan, member_count, max_members, features, billing_cycle, next_billing_date, created_at, updated_at, billable_members, storage_used_mb, fleet_map_enabled, last_billing_calculation, logo, background_color, customers_feature_enabled) FROM stdin;
dabce056-c0d8-46dd-b173-a3c0084f3133	Columbia Cloudworks	free	1	5	{"Equipment Management","Work Orders","Team Management"}	\N	\N	2025-06-17 14:46:52.786052+00	2025-08-10 23:38:59.10693+00	0	0	f	2025-08-10 23:38:59.10693+00	https://media.licdn.com/dms/image/v2/D560BAQHIv43_1xclOA/company-logo_200_200/B56Zb8zgN7GsAI-/0/1747998082840/columbia_cloudworks_logo?e=1756944000&v=beta&t=3t-2bxR-a3g8UI_5JYhC_VnqriNtuldCZ5JnOkDdJOU	\N	f
26856ebb-1c28-4422-b8e5-08c62f7bd8ad	CCW	free	1	5	{"Equipment Management","Work Orders","Team Management"}	\N	\N	2025-07-19 04:05:27.467145+00	2025-08-11 03:31:58.428422+00	0	0	f	2025-07-19 04:05:27.467145+00	\N	\N	f
7bafbd3e-2ddb-483f-84f2-27a18b6b9a1b	Kurt Lee	free	1	5	{"Equipment Management","Work Orders","Team Management"}	\N	\N	2025-08-17 14:57:27.795946+00	2025-08-17 14:57:27.795946+00	0	0	f	2025-08-17 14:57:27.795946+00	\N	\N	f
739a0d01-b9ac-4b93-a389-131bd09b9f78	Test User	free	1	5	{"Equipment Management","Work Orders","Team Management"}	\N	\N	2025-08-19 12:44:45.455353+00	2025-08-19 12:44:45.455353+00	0	0	f	2025-08-19 12:44:45.455353+00	\N	\N	f
c0d64dd4-4796-4749-b1d1-b070f7ddb4b7	My Organization	free	0	5	{"Equipment Management","Work Orders","Team Management"}	\N	\N	2025-07-21 15:33:30.76568+00	2025-07-23 07:05:17.974692+00	0	0	f	2025-07-23 07:05:17.974692+00	\N	\N	f
ab177901-a1f1-45e8-96ab-ea6b06f33922	J ap	free	1	5	{"Equipment Management","Work Orders","Team Management"}	\N	\N	2025-07-25 15:04:18.292282+00	2025-07-25 15:04:18.292282+00	0	0	f	2025-07-25 15:04:18.292282+00	\N	\N	f
2542f069-27c9-4833-8fdb-f4b40c8cf291	Mathias Rex Lindberg	free	1	5	{"Equipment Management","Work Orders","Team Management"}	\N	\N	2025-07-25 19:40:43.245361+00	2025-07-25 19:40:43.245361+00	0	0	f	2025-07-25 19:40:43.245361+00	\N	\N	f
243e46be-acb6-4af1-a11f-528b05ea91b0	r	free	1	5	{"Equipment Management","Work Orders","Team Management"}	\N	\N	2025-08-22 03:15:53.320872+00	2025-08-22 03:15:53.320872+00	0	0	f	2025-08-22 03:15:53.320872+00	\N	\N	f
b490b4f5-a5c5-4f01-b05e-bfe9c59ed281	Matt hankins	free	1	5	{"Equipment Management","Work Orders","Team Management"}	\N	\N	2025-07-19 04:55:12.336186+00	2025-07-19 04:55:12.336186+00	0	0	f	2025-07-19 04:55:12.336186+00	\N	\N	f
5a54dd83-f546-4149-8ff5-d44cbc570217	Matthew Hankins	free	2	5	{"Equipment Management","Work Orders","Team Management"}	\N	\N	2025-06-24 13:40:06.712935+00	2025-07-19 13:03:14.419634+00	1	0	f	2025-07-19 13:03:14.419634+00	\N	\N	f
96061a65-7e91-4ed3-9df1-282ff19a8471	VA Enterprises	free	2	5	{"Equipment Management","Work Orders","Team Management"}	\N	\N	2025-06-18 18:08:12.459588+00	2025-08-10 10:26:17.268857+00	1	0	f	2025-08-10 10:26:17.268857+00	https://www.viralarchitect.com/wp-content/uploads/2025/07/viralarchitect.comLOGO-300x300.png	#231b75	f
\.


--
-- Data for Name: pm_checklist_templates; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.pm_checklist_templates (id, organization_id, name, description, is_protected, template_data, created_by, updated_by, created_at, updated_at) FROM stdin;
c97adb9a-30c4-4c80-bd77-8471bf4f2beb	\N	Forklift PM (Default)	Comprehensive preventive maintenance checklist for forklifts. This template provides detailed inspection items covering all major systems.	t	[{"id": "visual-1", "notes": "", "title": "Oil/Coolant Leaks", "section": "Visual Inspection", "required": true, "condition": null, "description": "Inspect under and around the forklift for signs of oil or coolant leaks."}, {"id": "visual-2", "notes": "", "title": "Carriage, Mast & LBR Assembly", "section": "Visual Inspection", "required": true, "condition": null, "description": "Examine the carriage, mast, and load backrest for damage, cracks, or deformation."}, {"id": "visaul-3", "notes": "", "title": "Forks and Fork Pins", "section": "Visual Inspection", "required": true, "condition": null, "description": "Check that forks and fork pins are straight, undamaged, and securely attached."}, {"id": "visual-4", "notes": "", "title": "Mast Chains, Rollers & Hoses", "section": "Visual Inspection", "required": true, "condition": null, "description": "Inspect mast chains, rollers, and hoses for wear, proper tension, and leaks."}, {"id": "visaul-5", "notes": "", "title": "Tire & Wheel Condition", "section": "Visual Inspection", "required": true, "condition": null, "description": "Inspect tires and wheels for cuts, excessive wear, or missing lug nuts."}, {"id": "visual-6", "notes": "", "title": "Seat & Seat Belt Condition", "section": "Visual Inspection", "required": true, "condition": null, "description": "Ensure seat and seat belt are present, undamaged, and functioning properly."}, {"id": "visual-7", "notes": "", "title": "Decals & Capacity Plates", "section": "Visual Inspection", "required": true, "condition": null, "description": "Verify that all safety decals and capacity plates are present and legible."}, {"id": "visual-8", "notes": "", "title": "Overhead Guard Condition", "section": "Visual Inspection", "required": true, "condition": null, "description": "Check the overhead guard for bends, cracks, or missing hardware."}, {"id": "visual-9", "notes": "", "title": "Check Cylinders for Leaks", "section": "Visual Inspection", "required": true, "condition": null, "description": "Inspect all visible hydraulic cylinders for leaks or damage."}, {"id": "engine-compartment-1", "notes": "", "title": "Blow Out Engine Compartment", "section": "Engine Compartment", "required": true, "condition": null, "description": "Use compressed air to clean debris and dust from the engine compartment."}, {"id": "engine-compartment-2", "notes": "", "title": "Check Condition of Air Filter", "section": "Engine Compartment", "required": true, "condition": null, "description": "Inspect and replace the air filter if dirty or clogged."}, {"id": "engine-compartment-3", "notes": "", "title": "Change Engine Oil & Filter", "section": "Engine Compartment", "required": true, "condition": null, "description": "Drain engine oil, replace with new oil, and install a new oil filter as specified."}, {"id": "engine-compartment-4", "notes": "", "title": "Check hood Latch, Hinges & Hood Strut", "section": "Engine Compartment", "required": true, "condition": null, "description": "Confirm hood latch, hinges, and strut function smoothly and securely."}, {"id": "engine-compartment-5", "notes": "", "title": "Inspect Air Intake Hoses & Clamps", "section": "Engine Compartment", "required": true, "condition": null, "description": "Examine air intake hoses and clamps for cracks, leaks, or loose fittings."}, {"id": "engine-compartment-6", "notes": "", "title": "Check Ring Gear Condition", "section": "Engine Compartment", "required": true, "condition": null, "description": "Inspect ring gear for visible damage or abnormal wear."}, {"id": "engine-compartment-7", "notes": "", "title": "Check Hood Insulation & Hood Condition", "section": "Engine Compartment", "required": true, "condition": null, "description": "Ensure hood insulation is intact and hood is free of damage."}, {"id": "engine-compartment-8", "notes": "", "title": "Engine Noise / Smoke / Idle RPMs", "section": "Engine Compartment", "required": true, "condition": null, "description": "Start the engine and check for abnormal noises, smoke, or incorrect idle speed."}, {"id": "engine-compartment-9", "notes": "", "title": "Exhaust System / Muffler / Catalyst", "section": "Engine Compartment", "required": true, "condition": null, "description": "Examine the exhaust system, muffler, and catalyst for leaks, noise, or damage."}, {"id": "engine-compartment-10", "notes": "", "title": "Check for Engine Oil Leaks", "section": "Engine Compartment", "required": true, "condition": null, "description": "Look for evidence of engine oil leaks under and around the engine."}, {"id": "engine-compartment-11", "notes": "", "title": "Check Vacuum Lines / PCV Valve", "section": "Engine Compartment", "required": true, "condition": null, "description": "Inspect vacuum lines and PCV valve for cracks, leaks, or blockages."}, {"id": "electrical-1", "notes": "", "title": "Check Headlights, Strobe, Taillights", "section": "Electrical Inspection", "required": true, "condition": null, "description": "Verify all headlights, taillights, and strobe lights operate correctly."}, {"id": "electrical-2", "notes": "", "title": "Clean Battery Terminals / Load Test", "section": "Electrical Inspection", "required": true, "condition": null, "description": "Clean corrosion from battery terminals and perform a battery load test."}, {"id": "electrical-3", "notes": "", "title": "Inspect Wire Harness / Connections", "section": "Electrical Inspection", "required": true, "condition": null, "description": "Check wire harnesses and electrical connections for wear or loose fittings."}, {"id": "electrical-4", "notes": "", "title": "Check Neutral Safety Switch", "section": "Electrical Inspection", "required": true, "condition": null, "description": "Test the neutral safety switch for correct operation."}, {"id": "electrical-5", "notes": "", "title": "Check All Gauges & Hour Meter", "section": "Electrical Inspection", "required": true, "condition": null, "description": "Ensure all dashboard gauges and the hour meter function accurately."}, {"id": "electrical-6", "notes": "", "title": "Condition of Fuse Panel / Relay Box", "section": "Electrical Inspection", "required": true, "condition": null, "description": "Open and inspect the fuse panel and relay box for corrosion, damage, or missing fuses."}, {"id": "electrical-7", "notes": "", "title": "Inspect Alternator / Record Voltage", "section": "Electrical Inspection", "required": true, "condition": null, "description": "Inspect the alternator for damage and record operating voltage output."}, {"id": "hydraulic-1", "notes": "", "title": "Inspect Fluid Level & Quality", "section": "Hydraulic Inspection", "required": true, "condition": null, "description": "Check hydraulic fluid level and assess fluid for contamination or discoloration."}, {"id": "hydraulic-2", "notes": "", "title": "Inspect Pump / Control Valve", "section": "Hydraulic Inspection", "required": true, "condition": null, "description": "Visually inspect pump and control valve for leaks or damage."}, {"id": "hydraulic-3", "notes": "", "title": "Check Hydraulic Valve Levers", "section": "Hydraulic Inspection", "required": true, "condition": null, "description": "Operate all hydraulic levers to ensure smooth and proper function."}, {"id": "hydraulic-4", "notes": "", "title": "Check Pump Drive Shaft & U-Joints", "section": "Hydraulic Inspection", "required": true, "condition": null, "description": "Inspect the pump drive shaft and U-joints for wear or looseness."}, {"id": "hydraulic-5", "notes": "", "title": "Remove & Clean / Replace Tank Breather", "section": "Hydraulic Inspection", "required": true, "condition": null, "description": "Remove the tank breather, clean or replace as needed."}, {"id": "hydraulic-6", "notes": "", "title": "Inspect All Hoses & Fittings", "section": "Hydraulic Inspection", "required": true, "condition": null, "description": "Examine all hydraulic hoses and fittings for cracks, leaks, or abrasion."}, {"id": "hydraulic-7", "notes": "", "title": "Inspect Cylinders for Leaks", "section": "Hydraulic Inspection", "required": true, "condition": null, "description": "Check hydraulic cylinders for oil leaks or physical damage."}, {"id": "brakes-1", "notes": "", "title": "Check Fluid Level & Quality", "section": "Brake", "required": true, "condition": null, "description": "Inspect the brake fluid reservoir for proper level and clear, uncontaminated fluid."}, {"id": "brakes-2", "notes": "", "title": "Test PB Operation, Check Cables", "section": "Brake", "required": true, "condition": null, "description": "Test parking brake operation and inspect cables for wear or binding."}, {"id": "brakes-3", "notes": "", "title": "Test Service Brake Operation", "section": "Brake", "required": true, "condition": null, "description": "Depress the service brake and confirm the forklift stops smoothly and promptly."}, {"id": "brakes-4", "notes": "", "title": "Check Pedal Pads & Inching Pedal Cables", "section": "Brake", "required": true, "condition": null, "description": "Inspect pedal pads for wear and inching pedal cables for proper function."}, {"id": "brakes-5", "notes": "", "title": "Check Wheels & Cylinder for Leaks", "section": "Brake", "required": true, "condition": null, "description": "Look for brake fluid leaks around wheel cylinders and brake assemblies."}, {"id": "brakes-6", "notes": "", "title": "Check Brake / Inching Pedal Linkage", "section": "Brake", "required": true, "condition": null, "description": "Inspect brake and inching pedal linkage for looseness or damage."}, {"id": "brakes-7", "notes": "", "title": "Check Brak / Inching Pedal Free Play", "section": "Brake", "required": true, "condition": null, "description": "Verify correct amount of free play in brake and inching pedals."}, {"id": "steering-1", "notes": "", "title": "Inspect Steering Cylinder for Leaks", "section": "Steering", "required": true, "condition": null, "description": "Check steering cylinder for hydraulic leaks or visible damage."}, {"id": "steering-2", "notes": "", "title": "Inspect Gear Box & Steer Column", "section": "Steering", "required": true, "condition": null, "description": "Inspect the steering gear box and column for proper operation and leaks."}, {"id": "steering-3", "notes": "", "title": "Check King Pins & Spindles", "section": "Steering", "required": true, "condition": null, "description": "Check king pins and spindles for excessive play or wear."}, {"id": "steering-4", "notes": "", "title": "Test Steer Wheel Bearings", "section": "Steering", "required": true, "condition": null, "description": "Spin and rock steer wheels to check for noisy or loose bearings."}, {"id": "steering-5", "notes": "", "title": "Check Steer Axle Mounts & Stops", "section": "Steering", "required": true, "condition": null, "description": "Ensure steer axle mounts and stops are secure and undamaged."}, {"id": "steering-6", "notes": "", "title": "Check Steering tie Rods & Pings", "section": "Steering", "required": true, "condition": null, "description": "Inspect tie rods and pins for looseness or excessive wear."}, {"id": "steering-7", "notes": "", "title": "Check Steer Wheel Bearings", "section": "Steering", "required": true, "condition": null, "description": "Verify steer wheel bearings turn smoothly without noise or resistance."}, {"id": "steering-8", "notes": "", "title": "Inspect Steer Wheel Lug Nuts / Rim / Cap", "section": "Steering", "required": true, "condition": null, "description": "Check steer wheel lug nuts for tightness and inspect rim/cap for damage."}, {"id": "steering-9", "notes": "", "title": "Check Steering Hoses at Cylinder & Box", "section": "Steering", "required": true, "condition": null, "description": "Inspect steering hoses at both the cylinder and box for leaks or wear."}, {"id": "differential-transmission-1", "notes": "", "title": "Check Fluid Levels & Condition", "section": "Differential & Transmission", "required": true, "condition": null, "description": "Inspect differential and transmission fluid levels and assess for contamination."}, {"id": "differential-transmission-2", "notes": "", "title": "Check for Abnormal Noise", "section": "Differential & Transmission", "required": true, "condition": null, "description": "Listen for unusual noises from differential or transmission during operation."}, {"id": "differential-transmission-3", "notes": "", "title": "Check Drive Wheel Bearings & Lug Nuts", "section": "Differential & Transmission", "required": true, "condition": null, "description": "Inspect drive wheel bearings for play and verify lug nuts are tight."}, {"id": "differential-transmission-4", "notes": "", "title": "Check Mounts & Bolts", "section": "Differential & Transmission", "required": true, "condition": null, "description": "Check that all mounts and bolts are secure and undamaged."}, {"id": "differential-transmission-5", "notes": "", "title": "Check for Leaks", "section": "Differential & Transmission", "required": true, "condition": null, "description": "Inspect the differential and transmission for signs of oil leaks."}, {"id": "differential-transmission-6", "notes": "", "title": "Check Drive Shaft & U-Joints", "section": "Differential & Transmission", "required": true, "condition": null, "description": "Examine drive shaft and U-joints for excessive play or wear."}, {"id": "differential-transmission-7", "notes": "", "title": "Check Shift Lever Linkage / Cables", "section": "Differential & Transmission", "required": true, "condition": null, "description": "Test shift lever linkage and cables for proper adjustment and smooth operation."}, {"id": "differential-transmission-8", "notes": "", "title": "Replace Fluid & Filters per OEM Spec", "section": "Differential & Transmission", "required": true, "condition": null, "description": "Replace differential and transmission fluids and filters according to manufacturer specification."}, {"id": "ignition-1", "notes": "", "title": "Test Ignition Switch", "section": "Ignition System", "required": true, "condition": null, "description": "Turn the ignition switch to verify smooth operation and proper start."}, {"id": "ignition-2", "notes": "", "title": "Check Coil / Coil Packs", "section": "Ignition System", "required": true, "condition": null, "description": "Inspect ignition coil or coil packs for damage or signs of arcing."}, {"id": "ignition-3", "notes": "", "title": "Check Distributor Cap & Rotor", "section": "Ignition System", "required": true, "condition": null, "description": "Remove and check distributor cap and rotor for wear or corrosion."}, {"id": "ignition-4", "notes": "", "title": "Check Spark Plug Condition & Wires", "section": "Ignition System", "required": true, "condition": null, "description": "Remove and inspect spark plugs and wires for fouling or damage."}, {"id": "mast-carriage-1", "notes": "", "title": "Check Lift Chains & Anchors", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Inspect lift chains and anchors for wear, proper lubrication, and correct tension."}, {"id": "mast-carriage-2", "notes": "", "title": "Check Cylinders for Leaks", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Examine all mast cylinders for hydraulic leaks or damage."}, {"id": "mast-carriage-3", "notes": "", "title": "Check Cylinder Brackets", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Inspect cylinder brackets for secure attachment and absence of cracks."}, {"id": "mast-carriage-4", "notes": "", "title": "Check Hose Pulleys & Chain / Hose Guards", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Check that hose pulleys, chain guards, and hose guards are intact and functional."}, {"id": "mast-carriage-5", "notes": "", "title": "Check Tilt Cylinder Mounts & Pins", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Verify tilt cylinder mounts and pins are secure and show no excessive wear."}, {"id": "mast-carriage-6", "notes": "", "title": "Check Trunion Bushings / Mounts", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Inspect trunion bushings and mounts for wear or looseness."}, {"id": "mast-carriage-7", "notes": "", "title": "Check Forks, Pins & Carriage Condition", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Examine forks, pins, and carriage for cracks, bending, or other defects."}, {"id": "mast-carriage-8", "notes": "", "title": "Check Hoses for Leaks", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Inspect hydraulic hoses on mast and carriage for leaks, abrasion, or damage."}, {"id": "mast-carriage-9", "notes": "", "title": "Check Mast Shims & Side Play", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Check mast shims for tightness and look for excessive side play in mast."}, {"id": "mast-carriage-10", "notes": "", "title": "Check Carriage & Mast Rollers", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Inspect rollers for flat spots, wear, or improper rotation."}, {"id": "mast-carriage-11", "notes": "", "title": "Check Mast Rails for Wear", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Look for wear, cracks, or bending along mast rails."}, {"id": "mast-carriage-12", "notes": "", "title": "Check Side Shift Bushings", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Inspect side shift bushings for excessive wear or movement."}, {"id": "cooling-1", "notes": "", "title": "Blow Out Radiator", "section": "Cooling System", "required": true, "condition": null, "description": "Use compressed air to remove dust and debris from the radiator fins."}, {"id": "cooling-2", "notes": "", "title": "Coolant Level, Condition & Leaks", "section": "Cooling System", "required": true, "condition": null, "description": "Check coolant level, ensure coolant is clean, and inspect for leaks."}, {"id": "cooling-3", "notes": "", "title": "Check Radiator Condition & Shroud", "section": "Cooling System", "required": true, "condition": null, "description": "Inspect radiator and fan shroud for damage or obstructions."}, {"id": "cooling-4", "notes": "", "title": "Check Water Pump for Leaks & Play", "section": "Cooling System", "required": true, "condition": null, "description": "Check water pump for coolant leaks or excessive shaft play."}, {"id": "cooling-5", "notes": "", "title": "Check Belt Condition & Tension", "section": "Cooling System", "required": true, "condition": null, "description": "Inspect all drive belts for cracks, fraying, and correct tension."}, {"id": "cooling-6", "notes": "", "title": "Check Fan Blade Condition", "section": "Cooling System", "required": true, "condition": null, "description": "Examine fan blades for cracks, chips, or loose mounting."}, {"id": "cooling-7", "notes": "", "title": "Cooland Good To (°F)", "section": "Cooling System", "required": true, "condition": null, "description": "Verify coolant protection is adequate for expected low temperatures using a tester."}, {"id": "fuel-1", "notes": "", "title": "Check LP Tank, Hoses & Fittings", "section": "Fuel System", "required": true, "condition": null, "description": "Inspect LP tank, hoses, and fittings for leaks, damage, or loose connections."}, {"id": "fuel-2", "notes": "", "title": "Drain LPG Regulator", "section": "Fuel System", "required": true, "condition": null, "description": "Drain condensation from the LPG regulator per manufacturer instructions."}, {"id": "fuel-3", "notes": "", "title": "Check LP System for Leaks", "section": "Fuel System", "required": true, "condition": null, "description": "Use leak detector solution or sniffer to check LP system for leaks."}, {"id": "fuel-4", "notes": "", "title": "Check LPG Lockoff Operation", "section": "Fuel System", "required": true, "condition": null, "description": "Test LPG lockoff valve for proper engagement and operation."}, {"id": "fuel-5", "notes": "", "title": "Check Carburetor & Linkages", "section": "Fuel System", "required": true, "condition": null, "description": "Inspect carburetor and throttle/choke linkages for smooth movement and secure attachment."}, {"id": "fuel-6", "notes": "", "title": "Check throttle Pedal Linkages / Cable", "section": "Fuel System", "required": true, "condition": null, "description": "Check throttle pedal linkages and cable for free movement and secure connections."}, {"id": "fuel-7", "notes": "", "title": "Check Governor for Proper Operation", "section": "Fuel System", "required": true, "condition": null, "description": "Inspect and test governor for correct operation and smooth throttle response."}, {"id": "fuel-8", "notes": "", "title": "Change Diesel Fuel Filters", "section": "Fuel System", "required": true, "condition": null, "description": "Replace diesel fuel filters according to the service schedule."}, {"id": "fuel-9", "notes": "", "title": "Drain Water Separator / Sediment Filter", "section": "Fuel System", "required": true, "condition": null, "description": "Drain water separator and sediment filter of any collected water or contaminants."}, {"id": "final-inspection-1", "notes": "", "title": "Test Horn Operation", "section": "Final Inspection", "required": true, "condition": null, "description": "Press horn button to verify loud, consistent sound."}, {"id": "final-inspection-2", "notes": "", "title": "Does Back Up Alarm Sound in Reverse", "section": "Final Inspection", "required": true, "condition": null, "description": "Shift into reverse and confirm the backup alarm activates."}, {"id": "final-inspection-3", "notes": "", "title": "Test Brake Lights / Turn Signals / BU Lights", "section": "Final Inspection", "required": true, "condition": null, "description": "Check that all brake lights, turn signals, and backup lights function properly."}, {"id": "final-inspection-4", "notes": "", "title": "Test Strobe Light for Proper Operation", "section": "Final Inspection", "required": true, "condition": null, "description": "Activate the strobe light and ensure it flashes correctly."}, {"id": "final-inspection-5", "notes": "", "title": "Test Seat Belt", "section": "Final Inspection", "required": true, "condition": null, "description": "Buckle and unbuckle seat belt to confirm proper latching and release."}, {"id": "final-inspection-6", "notes": "", "title": "Test Operator Presence System", "section": "Final Inspection", "required": true, "condition": null, "description": "Confirm that the operator presence system disables movement when the seat is unoccupied."}, {"id": "final-inspection-7", "notes": "", "title": "Check All Work Lights", "section": "Final Inspection", "required": true, "condition": null, "description": "Turn on all work lights and confirm they illuminate properly."}, {"id": "final-inspection-8", "notes": "", "title": "Test Both Service & Parking Brake", "section": "Final Inspection", "required": true, "condition": null, "description": "Apply both brakes and ensure they hold the forklift stationary."}, {"id": "final-inspection-9", "notes": "", "title": "Test Forward & Reverse Travel", "section": "Final Inspection", "required": true, "condition": null, "description": "Drive forklift forward and in reverse to confirm smooth operation."}, {"id": "final-inspection-10", "notes": "", "title": "Test All Hydraulic Functions", "section": "Final Inspection", "required": true, "condition": null, "description": "Operate all hydraulic controls and ensure smooth, correct response."}, {"id": "final-inspection-11", "notes": "", "title": "Test Seat Belt Alarm", "section": "Final Inspection", "required": true, "condition": null, "description": "Confirm seat belt alarm sounds if the seat belt is not engaged during operation."}, {"id": "final-inspection-12", "notes": "", "title": "Wipe Down Forklift, Dash Area", "section": "Final Inspection", "required": true, "condition": null, "description": "Clean the forklift and dashboard area of dirt and debris."}, {"id": "final-inspection-13", "notes": "", "title": "Install PM Sticker", "section": "Final Inspection", "required": true, "condition": null, "description": "Place the preventative maintenance sticker in the designated area to indicate service is complete."}]	0d73189e-e714-48e2-8c33-fe8778259064	0d73189e-e714-48e2-8c33-fe8778259064	2025-08-13 06:09:06.511766+00	2025-08-13 06:09:06.511766+00
c3451e3d-d388-4eb6-b539-7a49e5d8b8a6	dabce056-c0d8-46dd-b173-a3c0084f3133	Bulldozer PM	Comprehensive preventive maintenance checklist for forklifts. This template provides detailed inspection items covering all major systems. (Cloned)	f	[{"id": "rgnSV52rOAwTB2ehxxGJp", "notes": "", "title": "Oil/Coolant Leaks", "section": "Visual Inspection FOR BULLDOZERS", "required": true, "condition": null, "description": "Inspect under and around the forklift for signs of oil or coolant leaks."}, {"id": "6wgzmfUK2IImTCnH2NArt", "notes": "", "title": "Carriage, Mast & LBR Assembly", "section": "Visual Inspection FOR BULLDOZERS", "required": true, "condition": null, "description": "Examine the carriage, mast, and load backrest for damage, cracks, or deformation."}, {"id": "h7dPcPDJ6AryVknL4lLU7", "notes": "", "title": "Forks and Fork Pins", "section": "Visual Inspection FOR BULLDOZERS", "required": true, "condition": null, "description": "Check that forks and fork pins are straight, undamaged, and securely attached."}, {"id": "xYdH2bEIZJ52ZPx4fLS-v", "notes": "", "title": "Mast Chains, Rollers & Hoses", "section": "Visual Inspection FOR BULLDOZERS", "required": true, "condition": null, "description": "Inspect mast chains, rollers, and hoses for wear, proper tension, and leaks."}, {"id": "_xs5H8HYtaj2fPeC5p0O0", "notes": "", "title": "Tire & Wheel Condition", "section": "Visual Inspection FOR BULLDOZERS", "required": true, "condition": null, "description": "Inspect tires and wheels for cuts, excessive wear, or missing lug nuts."}, {"id": "Yz_7f0n5lQ_-eobTSku8Z", "notes": "", "title": "Seat & Seat Belt Condition", "section": "Visual Inspection FOR BULLDOZERS", "required": true, "condition": null, "description": "Ensure seat and seat belt are present, undamaged, and functioning properly."}, {"id": "oPmD5AL6rQKoFXvLeX__Q", "notes": "", "title": "Decals & Capacity Plates", "section": "Visual Inspection FOR BULLDOZERS", "required": true, "condition": null, "description": "Verify that all safety decals and capacity plates are present and legible."}, {"id": "OxnFlWFw81raxFNnymPu3", "notes": "", "title": "Overhead Guard Condition", "section": "Visual Inspection FOR BULLDOZERS", "required": true, "condition": null, "description": "Check the overhead guard for bends, cracks, or missing hardware."}, {"id": "dyw5yQ0grLYVORgNaHw-P", "notes": "", "title": "Check Cylinders for Leaks", "section": "Visual Inspection FOR BULLDOZERS", "required": true, "condition": null, "description": "Inspect all visible hydraulic cylinders for leaks or damage."}, {"id": "PshuNI41Xbt1TF46jDxRt", "notes": "", "title": "Blow Out Engine Compartment", "section": "Engine Compartment", "required": true, "condition": null, "description": "Use compressed air to clean debris and dust from the engine compartment."}, {"id": "xCkSUKfVsIUKpG7yTDal4", "notes": "", "title": "Check Condition of Air Filter", "section": "Engine Compartment", "required": true, "condition": null, "description": "Inspect and replace the air filter if dirty or clogged."}, {"id": "Lp8W9-tW--JRNfrs835ow", "notes": "", "title": "Change Engine Oil & Filter", "section": "Engine Compartment", "required": true, "condition": null, "description": "Drain engine oil, replace with new oil, and install a new oil filter as specified."}, {"id": "NFnJ23K7C0jt7myFBpm_H", "notes": "", "title": "Check hood Latch, Hinges & Hood Strut", "section": "Engine Compartment", "required": true, "condition": null, "description": "Confirm hood latch, hinges, and strut function smoothly and securely."}, {"id": "VENpaZGLg6oinxF0Yh5iZ", "notes": "", "title": "Inspect Air Intake Hoses & Clamps", "section": "Engine Compartment", "required": true, "condition": null, "description": "Examine air intake hoses and clamps for cracks, leaks, or loose fittings."}, {"id": "TOiebw1KRM283j5UFLYZt", "notes": "", "title": "Check Ring Gear Condition", "section": "Engine Compartment", "required": true, "condition": null, "description": "Inspect ring gear for visible damage or abnormal wear."}, {"id": "jFdy3KLpmBL5ObQB_Aajr", "notes": "", "title": "Check Hood Insulation & Hood Condition", "section": "Engine Compartment", "required": true, "condition": null, "description": "Ensure hood insulation is intact and hood is free of damage."}, {"id": "Iiq7IOH9PMrhImfUgeiz2", "notes": "", "title": "Engine Noise / Smoke / Idle RPMs", "section": "Engine Compartment", "required": true, "condition": null, "description": "Start the engine and check for abnormal noises, smoke, or incorrect idle speed."}, {"id": "stmpwvswyjhGuFS9WZGwE", "notes": "", "title": "Exhaust System / Muffler / Catalyst", "section": "Engine Compartment", "required": true, "condition": null, "description": "Examine the exhaust system, muffler, and catalyst for leaks, noise, or damage."}, {"id": "tpOhCSk5-oV19c2vP-m7x", "notes": "", "title": "Check for Engine Oil Leaks", "section": "Engine Compartment", "required": true, "condition": null, "description": "Look for evidence of engine oil leaks under and around the engine."}, {"id": "igi3nd8TActON9nUM2RQ-", "notes": "", "title": "Check Vacuum Lines / PCV Valve", "section": "Engine Compartment", "required": true, "condition": null, "description": "Inspect vacuum lines and PCV valve for cracks, leaks, or blockages."}, {"id": "yHwVz0QFyfjKzWll7I_3S", "notes": "", "title": "Check Headlights, Strobe, Taillights", "section": "Electrical Inspection", "required": true, "condition": null, "description": "Verify all headlights, taillights, and strobe lights operate correctly."}, {"id": "yVoX5GFwkyKIJSSTlQkEc", "notes": "", "title": "Clean Battery Terminals / Load Test", "section": "Electrical Inspection", "required": true, "condition": null, "description": "Clean corrosion from battery terminals and perform a battery load test."}, {"id": "PZfIL9SO1-sKSPCOCmjSZ", "notes": "", "title": "Inspect Wire Harness / Connections", "section": "Electrical Inspection", "required": true, "condition": null, "description": "Check wire harnesses and electrical connections for wear or loose fittings."}, {"id": "w9wKmt4f6iZ_Ik42S4tad", "notes": "", "title": "Check Neutral Safety Switch", "section": "Electrical Inspection", "required": true, "condition": null, "description": "Test the neutral safety switch for correct operation."}, {"id": "he3_HNKu8G537e1tFBAHE", "notes": "", "title": "Check All Gauges & Hour Meter", "section": "Electrical Inspection", "required": true, "condition": null, "description": "Ensure all dashboard gauges and the hour meter function accurately."}, {"id": "4fmh-NEEB5fwLFNhNuwGE", "notes": "", "title": "Condition of Fuse Panel / Relay Box", "section": "Electrical Inspection", "required": true, "condition": null, "description": "Open and inspect the fuse panel and relay box for corrosion, damage, or missing fuses."}, {"id": "1AUkkPicAbL9EWFN4B3WL", "notes": "", "title": "Inspect Alternator / Record Voltage", "section": "Electrical Inspection", "required": true, "condition": null, "description": "Inspect the alternator for damage and record operating voltage output."}, {"id": "jtyb1amMSToQuaG7V4Aiq", "notes": "", "title": "Inspect Fluid Level & Quality", "section": "Hydraulic Inspection", "required": true, "condition": null, "description": "Check hydraulic fluid level and assess fluid for contamination or discoloration."}, {"id": "PJpWIiZ3A_e7SQ-eA_mtB", "notes": "", "title": "Inspect Pump / Control Valve", "section": "Hydraulic Inspection", "required": true, "condition": null, "description": "Visually inspect pump and control valve for leaks or damage."}, {"id": "WRB63LH1CJkEyIJ7GJ36e", "notes": "", "title": "Check Hydraulic Valve Levers", "section": "Hydraulic Inspection", "required": true, "condition": null, "description": "Operate all hydraulic levers to ensure smooth and proper function."}, {"id": "IbwF26vQ6qm8cnfY0SI-_", "notes": "", "title": "Check Pump Drive Shaft & U-Joints", "section": "Hydraulic Inspection", "required": true, "condition": null, "description": "Inspect the pump drive shaft and U-joints for wear or looseness."}, {"id": "FNWcowzUZ0SJTdpYpvIxR", "notes": "", "title": "Remove & Clean / Replace Tank Breather", "section": "Hydraulic Inspection", "required": true, "condition": null, "description": "Remove the tank breather, clean or replace as needed."}, {"id": "tuPOHdilUBtcKkvXFfOLM", "notes": "", "title": "Inspect All Hoses & Fittings", "section": "Hydraulic Inspection", "required": true, "condition": null, "description": "Examine all hydraulic hoses and fittings for cracks, leaks, or abrasion."}, {"id": "uhtk_ZPvMx5fZE_mlNKO6", "notes": "", "title": "Inspect Cylinders for Leaks", "section": "Hydraulic Inspection", "required": true, "condition": null, "description": "Check hydraulic cylinders for oil leaks or physical damage."}, {"id": "xGYW6LCXEZHgRy-S5He03", "notes": "", "title": "Check Fluid Level & Quality", "section": "Brake", "required": true, "condition": null, "description": "Inspect the brake fluid reservoir for proper level and clear, uncontaminated fluid."}, {"id": "f-Kdci1tEl7XvdNpI7iKq", "notes": "", "title": "Test PB Operation, Check Cables", "section": "Brake", "required": true, "condition": null, "description": "Test parking brake operation and inspect cables for wear or binding."}, {"id": "lyM4JAc7ND2h2CaMM_PaF", "notes": "", "title": "Test Service Brake Operation", "section": "Brake", "required": true, "condition": null, "description": "Depress the service brake and confirm the forklift stops smoothly and promptly."}, {"id": "VCT0nUFT4Lr0Vbxqtw_QI", "notes": "", "title": "Check Pedal Pads & Inching Pedal Cables", "section": "Brake", "required": true, "condition": null, "description": "Inspect pedal pads for wear and inching pedal cables for proper function."}, {"id": "hSeQP-SIcZL0UXYs_hQfg", "notes": "", "title": "Check Wheels & Cylinder for Leaks", "section": "Brake", "required": true, "condition": null, "description": "Look for brake fluid leaks around wheel cylinders and brake assemblies."}, {"id": "xV6kX7RCtR4QR7NWL-vmC", "notes": "", "title": "Check Brake / Inching Pedal Linkage", "section": "Brake", "required": true, "condition": null, "description": "Inspect brake and inching pedal linkage for looseness or damage."}, {"id": "I9lYV4D2gUfG-yIH1MlLq", "notes": "", "title": "Check Brak / Inching Pedal Free Play", "section": "Brake", "required": true, "condition": null, "description": "Verify correct amount of free play in brake and inching pedals."}, {"id": "kwUf4e98fNSRa30psZEjH", "notes": "", "title": "Inspect Steering Cylinder for Leaks", "section": "Steering", "required": true, "condition": null, "description": "Check steering cylinder for hydraulic leaks or visible damage."}, {"id": "QHsMqWnS6v6zCta2CGtDu", "notes": "", "title": "Inspect Gear Box & Steer Column", "section": "Steering", "required": true, "condition": null, "description": "Inspect the steering gear box and column for proper operation and leaks."}, {"id": "PZ20258PtxueFLvd9HWj1", "notes": "", "title": "Check King Pins & Spindles", "section": "Steering", "required": true, "condition": null, "description": "Check king pins and spindles for excessive play or wear."}, {"id": "-_wWHA69_PFtfg2CvAqgN", "notes": "", "title": "Test Steer Wheel Bearings", "section": "Steering", "required": true, "condition": null, "description": "Spin and rock steer wheels to check for noisy or loose bearings."}, {"id": "ic_xvsD9Q7PZ1XMlUrujd", "notes": "", "title": "Check Steer Axle Mounts & Stops", "section": "Steering", "required": true, "condition": null, "description": "Ensure steer axle mounts and stops are secure and undamaged."}, {"id": "rQY-cLzKk3DKcY7R8MJLs", "notes": "", "title": "Check Steering tie Rods & Pings", "section": "Steering", "required": true, "condition": null, "description": "Inspect tie rods and pins for looseness or excessive wear."}, {"id": "TyyQcFHjyupYdtr965Itq", "notes": "", "title": "Check Steer Wheel Bearings", "section": "Steering", "required": true, "condition": null, "description": "Verify steer wheel bearings turn smoothly without noise or resistance."}, {"id": "6XJ8SbHtKMUKcpGbGeK4H", "notes": "", "title": "Inspect Steer Wheel Lug Nuts / Rim / Cap", "section": "Steering", "required": true, "condition": null, "description": "Check steer wheel lug nuts for tightness and inspect rim/cap for damage."}, {"id": "3QGmZGSgFiaQNmhTE3XvL", "notes": "", "title": "Check Steering Hoses at Cylinder & Box", "section": "Steering", "required": true, "condition": null, "description": "Inspect steering hoses at both the cylinder and box for leaks or wear."}, {"id": "DKm_bQ4NVR_Nj09Zg2wcg", "notes": "", "title": "Check Fluid Levels & Condition", "section": "Differential & Transmission", "required": true, "condition": null, "description": "Inspect differential and transmission fluid levels and assess for contamination."}, {"id": "s4QIprTOi_uUiVw319pk0", "notes": "", "title": "Check for Abnormal Noise", "section": "Differential & Transmission", "required": true, "condition": null, "description": "Listen for unusual noises from differential or transmission during operation."}, {"id": "o4KNa8D4y0WWCD0ODp3YH", "notes": "", "title": "Check Drive Wheel Bearings & Lug Nuts", "section": "Differential & Transmission", "required": true, "condition": null, "description": "Inspect drive wheel bearings for play and verify lug nuts are tight."}, {"id": "Zi59DGgDRfYfTxY68tAU8", "notes": "", "title": "Check Mounts & Bolts", "section": "Differential & Transmission", "required": true, "condition": null, "description": "Check that all mounts and bolts are secure and undamaged."}, {"id": "3rNn5A9kNlggnxnFtavBC", "notes": "", "title": "Check for Leaks", "section": "Differential & Transmission", "required": true, "condition": null, "description": "Inspect the differential and transmission for signs of oil leaks."}, {"id": "DEO6PIr0ko5Xua7bUutcL", "notes": "", "title": "Check Drive Shaft & U-Joints", "section": "Differential & Transmission", "required": true, "condition": null, "description": "Examine drive shaft and U-joints for excessive play or wear."}, {"id": "uuwqas7vnUQi395YlTiXt", "notes": "", "title": "Check Shift Lever Linkage / Cables", "section": "Differential & Transmission", "required": true, "condition": null, "description": "Test shift lever linkage and cables for proper adjustment and smooth operation."}, {"id": "vvIM-B2JUaUy9QBi92bOp", "notes": "", "title": "Replace Fluid & Filters per OEM Spec", "section": "Differential & Transmission", "required": true, "condition": null, "description": "Replace differential and transmission fluids and filters according to manufacturer specification."}, {"id": "wNCJpO_dKuzCxSsOceG8F", "notes": "", "title": "Test Ignition Switch", "section": "Ignition System", "required": true, "condition": null, "description": "Turn the ignition switch to verify smooth operation and proper start."}, {"id": "qPhZ_jujUaiKbgNSaDZIQ", "notes": "", "title": "Check Coil / Coil Packs", "section": "Ignition System", "required": true, "condition": null, "description": "Inspect ignition coil or coil packs for damage or signs of arcing."}, {"id": "un6CgmB6uS6qGoXieFZT_", "notes": "", "title": "Check Distributor Cap & Rotor", "section": "Ignition System", "required": true, "condition": null, "description": "Remove and check distributor cap and rotor for wear or corrosion."}, {"id": "p4kQps7pznOmj8_komE4x", "notes": "", "title": "Check Spark Plug Condition & Wires", "section": "Ignition System", "required": true, "condition": null, "description": "Remove and inspect spark plugs and wires for fouling or damage."}, {"id": "MtaSQNAl8IYdY6O5DQVup", "notes": "", "title": "Check Lift Chains & Anchors", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Inspect lift chains and anchors for wear, proper lubrication, and correct tension."}, {"id": "GHylzv4YNjDAhovFV8cQh", "notes": "", "title": "Check Cylinders for Leaks", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Examine all mast cylinders for hydraulic leaks or damage."}, {"id": "wb6Cg6RWl0uFz2yQT36or", "notes": "", "title": "Check Cylinder Brackets", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Inspect cylinder brackets for secure attachment and absence of cracks."}, {"id": "CrQ-jLVU3hfUl4AnqGvYF", "notes": "", "title": "Check Hose Pulleys & Chain / Hose Guards", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Check that hose pulleys, chain guards, and hose guards are intact and functional."}, {"id": "ib96k-MZ9O9g-R9DYKoBL", "notes": "", "title": "Check Tilt Cylinder Mounts & Pins", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Verify tilt cylinder mounts and pins are secure and show no excessive wear."}, {"id": "B_vn8KVCZZvWC9UVs800n", "notes": "", "title": "Check Trunion Bushings / Mounts", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Inspect trunion bushings and mounts for wear or looseness."}, {"id": "o3a5vH-NpY7jf_KbJoY1R", "notes": "", "title": "Check Forks, Pins & Carriage Condition", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Examine forks, pins, and carriage for cracks, bending, or other defects."}, {"id": "mgoZ9cqESSRYX8oSVvbUJ", "notes": "", "title": "Check Hoses for Leaks", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Inspect hydraulic hoses on mast and carriage for leaks, abrasion, or damage."}, {"id": "lXTz6I-bcgGyUVJLx2kt-", "notes": "", "title": "Check Mast Shims & Side Play", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Check mast shims for tightness and look for excessive side play in mast."}, {"id": "LslDZeDGwTxuAjtx0sw-h", "notes": "", "title": "Check Carriage & Mast Rollers", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Inspect rollers for flat spots, wear, or improper rotation."}, {"id": "AGMeB-IXY_lC_f2EBz2wo", "notes": "", "title": "Check Mast Rails for Wear", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Look for wear, cracks, or bending along mast rails."}, {"id": "YqwlMm74dDo_dUuRioJZg", "notes": "", "title": "Check Side Shift Bushings", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Inspect side shift bushings for excessive wear or movement."}, {"id": "I6UUBOh4V3bOAxqPv0HT3", "notes": "", "title": "Blow Out Radiator", "section": "Cooling System", "required": true, "condition": null, "description": "Use compressed air to remove dust and debris from the radiator fins."}, {"id": "e6ct4qhRc0ZWSS-_UDBc-", "notes": "", "title": "Coolant Level, Condition & Leaks", "section": "Cooling System", "required": true, "condition": null, "description": "Check coolant level, ensure coolant is clean, and inspect for leaks."}, {"id": "4WjEojAS84L14M-NdQ-fh", "notes": "", "title": "Check Radiator Condition & Shroud", "section": "Cooling System", "required": true, "condition": null, "description": "Inspect radiator and fan shroud for damage or obstructions."}, {"id": "-Zy1mHkWxIe-Ls8t5yf7J", "notes": "", "title": "Check Water Pump for Leaks & Play", "section": "Cooling System", "required": true, "condition": null, "description": "Check water pump for coolant leaks or excessive shaft play."}, {"id": "Sy3SU-H93yJbRu7QUBZrj", "notes": "", "title": "Check Belt Condition & Tension", "section": "Cooling System", "required": true, "condition": null, "description": "Inspect all drive belts for cracks, fraying, and correct tension."}, {"id": "TZB_NnJLYZw7ilSxZZ-sD", "notes": "", "title": "Check Fan Blade Condition", "section": "Cooling System", "required": true, "condition": null, "description": "Examine fan blades for cracks, chips, or loose mounting."}, {"id": "907tagMeOWsFpN_HfiWtL", "notes": "", "title": "Cooland Good To (°F)", "section": "Cooling System", "required": true, "condition": null, "description": "Verify coolant protection is adequate for expected low temperatures using a tester."}, {"id": "6wlBP-iXheNujhNwFb3f0", "notes": "", "title": "Check LP Tank, Hoses & Fittings", "section": "Fuel System", "required": true, "condition": null, "description": "Inspect LP tank, hoses, and fittings for leaks, damage, or loose connections."}, {"id": "JP1R_eXA0mwVhGSK2beX-", "notes": "", "title": "Drain LPG Regulator", "section": "Fuel System", "required": true, "condition": null, "description": "Drain condensation from the LPG regulator per manufacturer instructions."}, {"id": "kRndYuGbIzBV8EniOg9sO", "notes": "", "title": "Check LP System for Leaks", "section": "Fuel System", "required": true, "condition": null, "description": "Use leak detector solution or sniffer to check LP system for leaks."}, {"id": "95lcV3qQ_x_2c1xiqQOUz", "notes": "", "title": "Check LPG Lockoff Operation", "section": "Fuel System", "required": true, "condition": null, "description": "Test LPG lockoff valve for proper engagement and operation."}, {"id": "l4DdeMCenLY4HyBb6Eqtj", "notes": "", "title": "Check Carburetor & Linkages", "section": "Fuel System", "required": true, "condition": null, "description": "Inspect carburetor and throttle/choke linkages for smooth movement and secure attachment."}, {"id": "cFoNVWgxoTOyf9Y1h2dAR", "notes": "", "title": "Check throttle Pedal Linkages / Cable", "section": "Fuel System", "required": true, "condition": null, "description": "Check throttle pedal linkages and cable for free movement and secure connections."}, {"id": "nhrOVwtRvNsGDpjRCM25g", "notes": "", "title": "Check Governor for Proper Operation", "section": "Fuel System", "required": true, "condition": null, "description": "Inspect and test governor for correct operation and smooth throttle response."}, {"id": "d9LziVmD8S29-RhcyXAfl", "notes": "", "title": "Change Diesel Fuel Filters", "section": "Fuel System", "required": true, "condition": null, "description": "Replace diesel fuel filters according to the service schedule."}, {"id": "q9s2hdne5W-PghJ0O6teG", "notes": "", "title": "Drain Water Separator / Sediment Filter", "section": "Fuel System", "required": true, "condition": null, "description": "Drain water separator and sediment filter of any collected water or contaminants."}, {"id": "I3FzlYT8WEXSHcRvIugT9", "notes": "", "title": "Test Horn Operation", "section": "Final Inspection", "required": true, "condition": null, "description": "Press horn button to verify loud, consistent sound."}, {"id": "1A1MNsU2qOzWnENsaqQ-0", "notes": "", "title": "Does Back Up Alarm Sound in Reverse", "section": "Final Inspection", "required": true, "condition": null, "description": "Shift into reverse and confirm the backup alarm activates."}, {"id": "gNzZqxwwfNJ2a2xzAfVs3", "notes": "", "title": "Test Brake Lights / Turn Signals / BU Lights", "section": "Final Inspection", "required": true, "condition": null, "description": "Check that all brake lights, turn signals, and backup lights function properly."}, {"id": "U2wbM3NQYY6PogNKPUGFQ", "notes": "", "title": "Test Strobe Light for Proper Operation", "section": "Final Inspection", "required": true, "condition": null, "description": "Activate the strobe light and ensure it flashes correctly."}, {"id": "jMCQ5ryEIVYyBYDXCrsHA", "notes": "", "title": "Test Seat Belt", "section": "Final Inspection", "required": true, "condition": null, "description": "Buckle and unbuckle seat belt to confirm proper latching and release."}, {"id": "4ZQ61wo9NDag0JBPjKkDQ", "notes": "", "title": "Test Operator Presence System", "section": "Final Inspection", "required": true, "condition": null, "description": "Confirm that the operator presence system disables movement when the seat is unoccupied."}, {"id": "IrpvHByo4D-3ilRdPWdN-", "notes": "", "title": "Check All Work Lights", "section": "Final Inspection", "required": true, "condition": null, "description": "Turn on all work lights and confirm they illuminate properly."}, {"id": "iZETKv7Fxfp9P2c1wnYhv", "notes": "", "title": "Test Both Service & Parking Brake", "section": "Final Inspection", "required": true, "condition": null, "description": "Apply both brakes and ensure they hold the forklift stationary."}, {"id": "OhUQheGT4bo7_bVFwDPtl", "notes": "", "title": "Test Forward & Reverse Travel", "section": "Final Inspection", "required": true, "condition": null, "description": "Drive forklift forward and in reverse to confirm smooth operation."}, {"id": "BFhTC7hBl81_mkCH65Bug", "notes": "", "title": "Test All Hydraulic Functions", "section": "Final Inspection", "required": true, "condition": null, "description": "Operate all hydraulic controls and ensure smooth, correct response."}, {"id": "8UlCs-IYKIR3wJLh-_4t8", "notes": "", "title": "Test Seat Belt Alarm", "section": "Final Inspection", "required": true, "condition": null, "description": "Confirm seat belt alarm sounds if the seat belt is not engaged during operation."}, {"id": "Bh1tQj4QC6jS9_MmNYsCL", "notes": "", "title": "Wipe Down Forklift, Dash Area", "section": "Final Inspection", "required": true, "condition": null, "description": "Clean the forklift and dashboard area of dirt and debris."}, {"id": "hpxq4855JU0GTg7wVTM7u", "notes": "", "title": "Install PM Sticker", "section": "Final Inspection", "required": true, "condition": null, "description": "Place the preventative maintenance sticker in the designated area to indicate service is complete."}]	0d73189e-e714-48e2-8c33-fe8778259064	0d73189e-e714-48e2-8c33-fe8778259064	2025-08-13 06:12:25.43316+00	2025-08-13 06:25:32.188901+00
a0658161-55f6-449f-b64a-36c2e65ed857	96061a65-7e91-4ed3-9df1-282ff19a8471	Forklift PM (Default) (Copy)	Comprehensive preventive maintenance checklist for forklifts. This template provides detailed inspection items covering all major systems. (Cloned)	f	[{"id": "GHpACCOS5gh_G9U1SrHSB", "notes": "", "title": "Oil/Coolant Leaks", "section": "Visual Inspection", "required": true, "condition": null, "description": "Inspect under and around the forklift for signs of oil or coolant leaks."}, {"id": "vkF2jY4TkYYxcU9AaQ4rM", "notes": "", "title": "Carriage, Mast & LBR Assembly", "section": "Visual Inspection", "required": true, "condition": null, "description": "Examine the carriage, mast, and load backrest for damage, cracks, or deformation."}, {"id": "YG9YGuhq_sYkMf0jjYVUY", "notes": "", "title": "Forks and Fork Pins", "section": "Visual Inspection", "required": true, "condition": null, "description": "Check that forks and fork pins are straight, undamaged, and securely attached."}, {"id": "eBeE0QO0w66goDGCEyfMR", "notes": "", "title": "Mast Chains, Rollers & Hoses", "section": "Visual Inspection", "required": true, "condition": null, "description": "Inspect mast chains, rollers, and hoses for wear, proper tension, and leaks."}, {"id": "78Lnk1_Lvg9asSVrvUXfk", "notes": "", "title": "Tire & Wheel Condition", "section": "Visual Inspection", "required": true, "condition": null, "description": "Inspect tires and wheels for cuts, excessive wear, or missing lug nuts."}, {"id": "5Mb8WBDv1xbtulx0KUX0F", "notes": "", "title": "Seat & Seat Belt Condition", "section": "Visual Inspection", "required": true, "condition": null, "description": "Ensure seat and seat belt are present, undamaged, and functioning properly."}, {"id": "TQPQzK7hcP702RWWKHem_", "notes": "", "title": "Decals & Capacity Plates", "section": "Visual Inspection", "required": true, "condition": null, "description": "Verify that all safety decals and capacity plates are present and legible."}, {"id": "CzOSDsPxBMqCv0_sTHDVF", "notes": "", "title": "Overhead Guard Condition", "section": "Visual Inspection", "required": true, "condition": null, "description": "Check the overhead guard for bends, cracks, or missing hardware."}, {"id": "Qia8RNEAjOCHwbu-v-HmP", "notes": "", "title": "Check Cylinders for Leaks", "section": "Visual Inspection", "required": true, "condition": null, "description": "Inspect all visible hydraulic cylinders for leaks or damage."}, {"id": "F7B0uOFXHo23lXtksNWqp", "notes": "", "title": "Blow Out Engine Compartment", "section": "Engine Compartment", "required": true, "condition": null, "description": "Use compressed air to clean debris and dust from the engine compartment."}, {"id": "EMJw1F3OB0AnTT1aTe_0A", "notes": "", "title": "Check Condition of Air Filter", "section": "Engine Compartment", "required": true, "condition": null, "description": "Inspect and replace the air filter if dirty or clogged."}, {"id": "7JzAqAQnlataCmKE-WRHS", "notes": "", "title": "Change Engine Oil & Filter", "section": "Engine Compartment", "required": true, "condition": null, "description": "Drain engine oil, replace with new oil, and install a new oil filter as specified."}, {"id": "J2DNewBy-UDe-cOhwQ_m4", "notes": "", "title": "Check hood Latch, Hinges & Hood Strut", "section": "Engine Compartment", "required": true, "condition": null, "description": "Confirm hood latch, hinges, and strut function smoothly and securely."}, {"id": "-M3Lkx3ILrRzbgUVVq797", "notes": "", "title": "Inspect Air Intake Hoses & Clamps", "section": "Engine Compartment", "required": true, "condition": null, "description": "Examine air intake hoses and clamps for cracks, leaks, or loose fittings."}, {"id": "rHGcwljh1ktILel0T9Vhl", "notes": "", "title": "Check Ring Gear Condition", "section": "Engine Compartment", "required": true, "condition": null, "description": "Inspect ring gear for visible damage or abnormal wear."}, {"id": "j0YPAo_LxqIxmjJMkoQni", "notes": "", "title": "Check Hood Insulation & Hood Condition", "section": "Engine Compartment", "required": true, "condition": null, "description": "Ensure hood insulation is intact and hood is free of damage."}, {"id": "kgs4SO_caETu6RJutDTSv", "notes": "", "title": "Engine Noise / Smoke / Idle RPMs", "section": "Engine Compartment", "required": true, "condition": null, "description": "Start the engine and check for abnormal noises, smoke, or incorrect idle speed."}, {"id": "jNxrXdbUUoK7MIYSgshfk", "notes": "", "title": "Exhaust System / Muffler / Catalyst", "section": "Engine Compartment", "required": true, "condition": null, "description": "Examine the exhaust system, muffler, and catalyst for leaks, noise, or damage."}, {"id": "TFaArOL1yZlNFtxGyN_z2", "notes": "", "title": "Check for Engine Oil Leaks", "section": "Engine Compartment", "required": true, "condition": null, "description": "Look for evidence of engine oil leaks under and around the engine."}, {"id": "18fQqMI9mugiS5Kk0gWrH", "notes": "", "title": "Check Vacuum Lines / PCV Valve", "section": "Engine Compartment", "required": true, "condition": null, "description": "Inspect vacuum lines and PCV valve for cracks, leaks, or blockages."}, {"id": "8u8DLhhn0H4mL7JptF0Jq", "notes": "", "title": "Check Headlights, Strobe, Taillights", "section": "Electrical Inspection", "required": true, "condition": null, "description": "Verify all headlights, taillights, and strobe lights operate correctly."}, {"id": "bwgPP6YHWFGYomYlO1Whb", "notes": "", "title": "Clean Battery Terminals / Load Test", "section": "Electrical Inspection", "required": true, "condition": null, "description": "Clean corrosion from battery terminals and perform a battery load test."}, {"id": "XLJtJ_BgKcJH0dfPxhC94", "notes": "", "title": "Inspect Wire Harness / Connections", "section": "Electrical Inspection", "required": true, "condition": null, "description": "Check wire harnesses and electrical connections for wear or loose fittings."}, {"id": "kKovlvulHCCo3fqpVBedn", "notes": "", "title": "Check Neutral Safety Switch", "section": "Electrical Inspection", "required": true, "condition": null, "description": "Test the neutral safety switch for correct operation."}, {"id": "LkOUp1lTUTmvZYjLwSvjn", "notes": "", "title": "Check All Gauges & Hour Meter", "section": "Electrical Inspection", "required": true, "condition": null, "description": "Ensure all dashboard gauges and the hour meter function accurately."}, {"id": "Q_fPIuuOmp2Y9oiGil3KR", "notes": "", "title": "Condition of Fuse Panel / Relay Box", "section": "Electrical Inspection", "required": true, "condition": null, "description": "Open and inspect the fuse panel and relay box for corrosion, damage, or missing fuses."}, {"id": "R5qf3My2Yr3rTubQe41Cx", "notes": "", "title": "Inspect Alternator / Record Voltage", "section": "Electrical Inspection", "required": true, "condition": null, "description": "Inspect the alternator for damage and record operating voltage output."}, {"id": "zxE2byxxpfNGwh_eHqL-g", "notes": "", "title": "Inspect Fluid Level & Quality", "section": "Hydraulic Inspection", "required": true, "condition": null, "description": "Check hydraulic fluid level and assess fluid for contamination or discoloration."}, {"id": "GYYqcvEUdV1wQD17zwReh", "notes": "", "title": "Inspect Pump / Control Valve", "section": "Hydraulic Inspection", "required": true, "condition": null, "description": "Visually inspect pump and control valve for leaks or damage."}, {"id": "_afwtLFQyfW8yEtVrpH75", "notes": "", "title": "Check Hydraulic Valve Levers", "section": "Hydraulic Inspection", "required": true, "condition": null, "description": "Operate all hydraulic levers to ensure smooth and proper function."}, {"id": "J0jzfyeMW01GgrVy-WvcK", "notes": "", "title": "Check Pump Drive Shaft & U-Joints", "section": "Hydraulic Inspection", "required": true, "condition": null, "description": "Inspect the pump drive shaft and U-joints for wear or looseness."}, {"id": "xrw6nUTbq6XHrdQIfSXkk", "notes": "", "title": "Remove & Clean / Replace Tank Breather", "section": "Hydraulic Inspection", "required": true, "condition": null, "description": "Remove the tank breather, clean or replace as needed."}, {"id": "z3pLcWwfuP8gwk3urU0HH", "notes": "", "title": "Inspect All Hoses & Fittings", "section": "Hydraulic Inspection", "required": true, "condition": null, "description": "Examine all hydraulic hoses and fittings for cracks, leaks, or abrasion."}, {"id": "U0QdzZIVM6cswZodHLVdI", "notes": "", "title": "Inspect Cylinders for Leaks", "section": "Hydraulic Inspection", "required": true, "condition": null, "description": "Check hydraulic cylinders for oil leaks or physical damage."}, {"id": "HXnZ4hKBf3pcNsnQBHyEx", "notes": "", "title": "Check Fluid Level & Quality", "section": "Brake", "required": true, "condition": null, "description": "Inspect the brake fluid reservoir for proper level and clear, uncontaminated fluid."}, {"id": "dxyKXiRl2x_Uzu_s-_6iI", "notes": "", "title": "Test PB Operation, Check Cables", "section": "Brake", "required": true, "condition": null, "description": "Test parking brake operation and inspect cables for wear or binding."}, {"id": "xtKLpBUbhinVRFD5byv_h", "notes": "", "title": "Test Service Brake Operation", "section": "Brake", "required": true, "condition": null, "description": "Depress the service brake and confirm the forklift stops smoothly and promptly."}, {"id": "6hNGWZ-6VwqNblkXkZst0", "notes": "", "title": "Check Pedal Pads & Inching Pedal Cables", "section": "Brake", "required": true, "condition": null, "description": "Inspect pedal pads for wear and inching pedal cables for proper function."}, {"id": "4lnYjIpeZxP_pIvP_0C7C", "notes": "", "title": "Check Wheels & Cylinder for Leaks", "section": "Brake", "required": true, "condition": null, "description": "Look for brake fluid leaks around wheel cylinders and brake assemblies."}, {"id": "oO5EaqokGTP8hNPNyfr0w", "notes": "", "title": "Check Brake / Inching Pedal Linkage", "section": "Brake", "required": true, "condition": null, "description": "Inspect brake and inching pedal linkage for looseness or damage."}, {"id": "m_P6HTSmq9cogOz431K3P", "notes": "", "title": "Check Brak / Inching Pedal Free Play", "section": "Brake", "required": true, "condition": null, "description": "Verify correct amount of free play in brake and inching pedals."}, {"id": "mjguCFucLep8S7LeSOzE5", "notes": "", "title": "Inspect Steering Cylinder for Leaks", "section": "Steering", "required": true, "condition": null, "description": "Check steering cylinder for hydraulic leaks or visible damage."}, {"id": "d3oMbWiBb1-GWR0dLpaKX", "notes": "", "title": "Inspect Gear Box & Steer Column", "section": "Steering", "required": true, "condition": null, "description": "Inspect the steering gear box and column for proper operation and leaks."}, {"id": "gsQtPr4ROR_x2udq7wIKr", "notes": "", "title": "Check King Pins & Spindles", "section": "Steering", "required": true, "condition": null, "description": "Check king pins and spindles for excessive play or wear."}, {"id": "nLkpDIg-VTqi2twEEOh4w", "notes": "", "title": "Test Steer Wheel Bearings", "section": "Steering", "required": true, "condition": null, "description": "Spin and rock steer wheels to check for noisy or loose bearings."}, {"id": "oGXvNdN0PhShkJIL9ENXM", "notes": "", "title": "Check Steer Axle Mounts & Stops", "section": "Steering", "required": true, "condition": null, "description": "Ensure steer axle mounts and stops are secure and undamaged."}, {"id": "web7VVEiwgszJbHfPzim9", "notes": "", "title": "Check Steering tie Rods & Pings", "section": "Steering", "required": true, "condition": null, "description": "Inspect tie rods and pins for looseness or excessive wear."}, {"id": "C8XENL2JINBBzDLYv45Fi", "notes": "", "title": "Check Steer Wheel Bearings", "section": "Steering", "required": true, "condition": null, "description": "Verify steer wheel bearings turn smoothly without noise or resistance."}, {"id": "EBwziG5il84HbigOUwATg", "notes": "", "title": "Inspect Steer Wheel Lug Nuts / Rim / Cap", "section": "Steering", "required": true, "condition": null, "description": "Check steer wheel lug nuts for tightness and inspect rim/cap for damage."}, {"id": "KWYO3tkjiYNzfBM74ydPz", "notes": "", "title": "Check Steering Hoses at Cylinder & Box", "section": "Steering", "required": true, "condition": null, "description": "Inspect steering hoses at both the cylinder and box for leaks or wear."}, {"id": "QfLfPalt1Y7D1FQeZtekK", "notes": "", "title": "Check Fluid Levels & Condition", "section": "Differential & Transmission", "required": true, "condition": null, "description": "Inspect differential and transmission fluid levels and assess for contamination."}, {"id": "Ye70lsct-MHNUzKNI4V7U", "notes": "", "title": "Check for Abnormal Noise", "section": "Differential & Transmission", "required": true, "condition": null, "description": "Listen for unusual noises from differential or transmission during operation."}, {"id": "j4gkrBIDaAYUQ6R8KSHLo", "notes": "", "title": "Check Drive Wheel Bearings & Lug Nuts", "section": "Differential & Transmission", "required": true, "condition": null, "description": "Inspect drive wheel bearings for play and verify lug nuts are tight."}, {"id": "OYnTlrBRRd5nAKpACRQtg", "notes": "", "title": "Check Mounts & Bolts", "section": "Differential & Transmission", "required": true, "condition": null, "description": "Check that all mounts and bolts are secure and undamaged."}, {"id": "v_OKWAX71U9PLSwopjmii", "notes": "", "title": "Check for Leaks", "section": "Differential & Transmission", "required": true, "condition": null, "description": "Inspect the differential and transmission for signs of oil leaks."}, {"id": "M2bQEaeczjN6uirDRzIr6", "notes": "", "title": "Check Drive Shaft & U-Joints", "section": "Differential & Transmission", "required": true, "condition": null, "description": "Examine drive shaft and U-joints for excessive play or wear."}, {"id": "6SdeUnaZZtZc4u3_WYl6X", "notes": "", "title": "Check Shift Lever Linkage / Cables", "section": "Differential & Transmission", "required": true, "condition": null, "description": "Test shift lever linkage and cables for proper adjustment and smooth operation."}, {"id": "FuuToGHtQt2F6nEQpt0Ne", "notes": "", "title": "Replace Fluid & Filters per OEM Spec", "section": "Differential & Transmission", "required": true, "condition": null, "description": "Replace differential and transmission fluids and filters according to manufacturer specification."}, {"id": "xLCtgwOqnFT6-Rn0vt2vO", "notes": "", "title": "Test Ignition Switch", "section": "Ignition System", "required": true, "condition": null, "description": "Turn the ignition switch to verify smooth operation and proper start."}, {"id": "O41hU7RcxZS4Pl6zA6uLN", "notes": "", "title": "Check Coil / Coil Packs", "section": "Ignition System", "required": true, "condition": null, "description": "Inspect ignition coil or coil packs for damage or signs of arcing."}, {"id": "Al5XBdT-QWRI_pE4kjweW", "notes": "", "title": "Check Distributor Cap & Rotor", "section": "Ignition System", "required": true, "condition": null, "description": "Remove and check distributor cap and rotor for wear or corrosion."}, {"id": "LFWpqw41XKu6w5gY6tLFA", "notes": "", "title": "Check Spark Plug Condition & Wires", "section": "Ignition System", "required": true, "condition": null, "description": "Remove and inspect spark plugs and wires for fouling or damage."}, {"id": "rMyM0J0cJLjR2rsJGloE8", "notes": "", "title": "Check Lift Chains & Anchors", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Inspect lift chains and anchors for wear, proper lubrication, and correct tension."}, {"id": "YecLlWyYXubkcenF-o4jZ", "notes": "", "title": "Check Cylinders for Leaks", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Examine all mast cylinders for hydraulic leaks or damage."}, {"id": "VUDPv5TKME_XBVfJjfJgt", "notes": "", "title": "Check Cylinder Brackets", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Inspect cylinder brackets for secure attachment and absence of cracks."}, {"id": "WTsmp8NagglsAK1VPiLTt", "notes": "", "title": "Check Hose Pulleys & Chain / Hose Guards", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Check that hose pulleys, chain guards, and hose guards are intact and functional."}, {"id": "lYL-O06HcoriZBCn93Ndv", "notes": "", "title": "Check Tilt Cylinder Mounts & Pins", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Verify tilt cylinder mounts and pins are secure and show no excessive wear."}, {"id": "ftqT8s0M2KpYyRdzzXoc8", "notes": "", "title": "Check Trunion Bushings / Mounts", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Inspect trunion bushings and mounts for wear or looseness."}, {"id": "2fNhE-_7H_UT8VQVhJtxO", "notes": "", "title": "Check Forks, Pins & Carriage Condition", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Examine forks, pins, and carriage for cracks, bending, or other defects."}, {"id": "9LIsXCeG8ccPivfXNQr23", "notes": "", "title": "Check Hoses for Leaks", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Inspect hydraulic hoses on mast and carriage for leaks, abrasion, or damage."}, {"id": "V57aQkeFBtrCRLxTuquZm", "notes": "", "title": "Check Mast Shims & Side Play", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Check mast shims for tightness and look for excessive side play in mast."}, {"id": "EMxTk2T-aInqxxqj8_dtC", "notes": "", "title": "Check Carriage & Mast Rollers", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Inspect rollers for flat spots, wear, or improper rotation."}, {"id": "aB0d7RildL3gXgavlpZTc", "notes": "", "title": "Check Mast Rails for Wear", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Look for wear, cracks, or bending along mast rails."}, {"id": "YCxWodaBVZyFMl1eXTQE5", "notes": "", "title": "Check Side Shift Bushings", "section": "Mast & Carriage", "required": true, "condition": null, "description": "Inspect side shift bushings for excessive wear or movement."}, {"id": "qpgOKh5xbyh04Bdbd2xqP", "notes": "", "title": "Blow Out Radiator", "section": "Cooling System", "required": true, "condition": null, "description": "Use compressed air to remove dust and debris from the radiator fins."}, {"id": "3VkjjSC-dQawBj7AOPnjn", "notes": "", "title": "Coolant Level, Condition & Leaks", "section": "Cooling System", "required": true, "condition": null, "description": "Check coolant level, ensure coolant is clean, and inspect for leaks."}, {"id": "-uK8my4lWnGU_hWHGu4ZG", "notes": "", "title": "Check Radiator Condition & Shroud", "section": "Cooling System", "required": true, "condition": null, "description": "Inspect radiator and fan shroud for damage or obstructions."}, {"id": "8RPvayxn_OklKTThH2iZ7", "notes": "", "title": "Check Water Pump for Leaks & Play", "section": "Cooling System", "required": true, "condition": null, "description": "Check water pump for coolant leaks or excessive shaft play."}, {"id": "0a4oaZg3whflILtp4NqvG", "notes": "", "title": "Check Belt Condition & Tension", "section": "Cooling System", "required": true, "condition": null, "description": "Inspect all drive belts for cracks, fraying, and correct tension."}, {"id": "R18Oz050fogOrL3Z0RBNa", "notes": "", "title": "Check Fan Blade Condition", "section": "Cooling System", "required": true, "condition": null, "description": "Examine fan blades for cracks, chips, or loose mounting."}, {"id": "DQS2SsvlDfOoK8qD7cfiR", "notes": "", "title": "Cooland Good To (°F)", "section": "Cooling System", "required": true, "condition": null, "description": "Verify coolant protection is adequate for expected low temperatures using a tester."}, {"id": "buFMhOgZSNou5DVSnqnDo", "notes": "", "title": "Check LP Tank, Hoses & Fittings", "section": "Fuel System", "required": true, "condition": null, "description": "Inspect LP tank, hoses, and fittings for leaks, damage, or loose connections."}, {"id": "n97gt0kCP6Lfc-EPUuxoZ", "notes": "", "title": "Drain LPG Regulator", "section": "Fuel System", "required": true, "condition": null, "description": "Drain condensation from the LPG regulator per manufacturer instructions."}, {"id": "wKtOQlKP04OkntqMh-178", "notes": "", "title": "Check LP System for Leaks", "section": "Fuel System", "required": true, "condition": null, "description": "Use leak detector solution or sniffer to check LP system for leaks."}, {"id": "65YlRgm8MUhoO5q9AU7Cq", "notes": "", "title": "Check LPG Lockoff Operation", "section": "Fuel System", "required": true, "condition": null, "description": "Test LPG lockoff valve for proper engagement and operation."}, {"id": "k1Cb1C8graloJbiddcLz4", "notes": "", "title": "Check Carburetor & Linkages", "section": "Fuel System", "required": true, "condition": null, "description": "Inspect carburetor and throttle/choke linkages for smooth movement and secure attachment."}, {"id": "hE9jAW7xtfYlni_cnZC1i", "notes": "", "title": "Check throttle Pedal Linkages / Cable", "section": "Fuel System", "required": true, "condition": null, "description": "Check throttle pedal linkages and cable for free movement and secure connections."}, {"id": "5PzfOt3l1_7s8ldWy-TEF", "notes": "", "title": "Check Governor for Proper Operation", "section": "Fuel System", "required": true, "condition": null, "description": "Inspect and test governor for correct operation and smooth throttle response."}, {"id": "DXD1EQ0OepsZZaDwlQU_C", "notes": "", "title": "Change Diesel Fuel Filters", "section": "Fuel System", "required": true, "condition": null, "description": "Replace diesel fuel filters according to the service schedule."}, {"id": "LLnb1UK8HBPSYFdgILU55", "notes": "", "title": "Drain Water Separator / Sediment Filter", "section": "Fuel System", "required": true, "condition": null, "description": "Drain water separator and sediment filter of any collected water or contaminants."}, {"id": "f0mHJx2uZan42My2LjB0c", "notes": "", "title": "Test Horn Operation", "section": "Final Inspection", "required": true, "condition": null, "description": "Press horn button to verify loud, consistent sound."}, {"id": "FX1XhaDz37FHOJY0DcN_5", "notes": "", "title": "Does Back Up Alarm Sound in Reverse", "section": "Final Inspection", "required": true, "condition": null, "description": "Shift into reverse and confirm the backup alarm activates."}, {"id": "f5Yfs9-5_Yc3FU-SoCI5w", "notes": "", "title": "Test Brake Lights / Turn Signals / BU Lights", "section": "Final Inspection", "required": true, "condition": null, "description": "Check that all brake lights, turn signals, and backup lights function properly."}, {"id": "r76ZHvBFpBHc4t3wosAcG", "notes": "", "title": "Test Strobe Light for Proper Operation", "section": "Final Inspection", "required": true, "condition": null, "description": "Activate the strobe light and ensure it flashes correctly."}, {"id": "BjGzzZpwbNT0vilrCWDAH", "notes": "", "title": "Test Seat Belt", "section": "Final Inspection", "required": true, "condition": null, "description": "Buckle and unbuckle seat belt to confirm proper latching and release."}, {"id": "MKnJlIEYTj8CY0GBmLoe3", "notes": "", "title": "Test Operator Presence System", "section": "Final Inspection", "required": true, "condition": null, "description": "Confirm that the operator presence system disables movement when the seat is unoccupied."}, {"id": "j5YFlOyMBMMjLh3dHhe6i", "notes": "", "title": "Check All Work Lights", "section": "Final Inspection", "required": true, "condition": null, "description": "Turn on all work lights and confirm they illuminate properly."}, {"id": "OE2ye231Lqcbv61AFPCxv", "notes": "", "title": "Test Both Service & Parking Brake", "section": "Final Inspection", "required": true, "condition": null, "description": "Apply both brakes and ensure they hold the forklift stationary."}, {"id": "XaUuNUHn_Oc6la14-_eNp", "notes": "", "title": "Test Forward & Reverse Travel", "section": "Final Inspection", "required": true, "condition": null, "description": "Drive forklift forward and in reverse to confirm smooth operation."}, {"id": "4dxu0U3xn8rORf51GfxRS", "notes": "", "title": "Test All Hydraulic Functions", "section": "Final Inspection", "required": true, "condition": null, "description": "Operate all hydraulic controls and ensure smooth, correct response."}, {"id": "TW0gjbbZO9oGqd-s0mBVO", "notes": "", "title": "Test Seat Belt Alarm", "section": "Final Inspection", "required": true, "condition": null, "description": "Confirm seat belt alarm sounds if the seat belt is not engaged during operation."}, {"id": "XtCkEAAM1i8qYROV0WOpb", "notes": "", "title": "Wipe Down Forklift, Dash Area", "section": "Final Inspection", "required": true, "condition": null, "description": "Clean the forklift and dashboard area of dirt and debris."}, {"id": "fEz6dkXfGjUYmxAlXBRU4", "notes": "", "title": "Install PM Sticker", "section": "Final Inspection", "required": true, "condition": null, "description": "Place the preventative maintenance sticker in the designated area to indicate service is complete."}]	685efa5e-7519-486e-8643-28cfaf5408a4	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-13 21:45:55.02054+00	2025-08-13 21:45:55.02054+00
\.


--
-- Data for Name: pm_status_history; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.pm_status_history (id, pm_id, old_status, new_status, changed_by, changed_at, reason, metadata, created_at) FROM stdin;
a98a3377-8b54-41ec-bc24-de79d9385101	d6d4884b-df6f-469a-9617-b007b6ed7374	pending	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-11 17:30:33.020485+00	Status updated	{}	2025-07-11 17:30:33.020485+00
f096b17c-efc6-42e4-b127-b75730bf5ced	e4dda52d-974c-42b7-b120-f92c607bb800	pending	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-11 20:07:14.153464+00	Status updated	{}	2025-07-11 20:07:14.153464+00
1de38509-64c4-4b11-ba12-ae53ed7f0297	e4dda52d-974c-42b7-b120-f92c607bb800	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:20:59.788023+00	Status updated	{}	2025-08-04 00:20:59.788023+00
ae2e69c8-fdff-4da0-9a02-7d7cc6e0bb03	55e2e453-c8af-47d5-b50a-b5ba4210f1a1	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:27:48.469706+00	Status updated	{}	2025-08-04 00:27:48.469706+00
aecc9acd-b761-4e16-9242-74193bdd75ed	e89dfeb8-53d0-4833-a61b-024e71e677d7	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:31:26.538397+00	Status updated	{}	2025-08-04 00:31:26.538397+00
6506c987-0753-4cee-89db-b8c05baeed3f	d6d4884b-df6f-469a-9617-b007b6ed7374	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:39:07.399053+00	Status updated	{}	2025-08-04 00:39:07.399053+00
f5302766-67b1-4796-9621-1b1ae5ce56fd	d6d4884b-df6f-469a-9617-b007b6ed7374	completed	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:39:12.426684+00	Status updated	{}	2025-08-04 00:39:12.426684+00
02a80da5-c6f8-4c1c-8bbe-24dba39b3cdf	c8398bfd-b70d-48da-a780-843d7d3f92da	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:40:57.148993+00	Status updated	{}	2025-08-04 00:40:57.148993+00
13200e1c-14a2-4b83-8981-d275a7c02d74	96d3ca47-8326-46ba-9a5a-3c473ccbb108	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:43:19.872559+00	Status updated	{}	2025-08-04 00:43:19.872559+00
511aaa90-2411-4346-ba6c-344e386f9e0e	c8398bfd-b70d-48da-a780-843d7d3f92da	completed	pending	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:44:36.351623+00	PM completion reverted by admin	{"reverted_at": "2025-08-04T00:44:36.351623+00:00", "reverted_from": "completed"}	2025-08-04 00:44:36.351623+00
25fb3884-8ce4-4c66-9339-141532951720	c8398bfd-b70d-48da-a780-843d7d3f92da	pending	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:44:47.190492+00	Status updated	{}	2025-08-04 00:44:47.190492+00
c772239e-ca6c-49de-ac1e-1dd569b791ba	c8398bfd-b70d-48da-a780-843d7d3f92da	completed	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:44:52.708475+00	Status updated	{}	2025-08-04 00:44:52.708475+00
a0559864-bd31-411f-b6f1-65a297fb107b	e4dda52d-974c-42b7-b120-f92c607bb800	completed	pending	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:47:49.197381+00	PM completion reverted by admin	{"reverted_at": "2025-08-04T00:47:49.197381+00:00", "reverted_from": "completed"}	2025-08-04 00:47:49.197381+00
49aa2744-50df-4c10-8ac6-f09769a53137	e4dda52d-974c-42b7-b120-f92c607bb800	pending	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:48:00.58063+00	Status updated	{}	2025-08-04 00:48:00.58063+00
f60b0774-aa1b-4d39-bf03-28a016206c47	e4dda52d-974c-42b7-b120-f92c607bb800	completed	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:48:05.879376+00	Status updated	{}	2025-08-04 00:48:05.879376+00
cc287926-bb27-47e0-8452-1dbe2abe39ed	d6d4884b-df6f-469a-9617-b007b6ed7374	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:48:38.347404+00	Status updated	{}	2025-08-04 00:48:38.347404+00
47afa371-3627-42c5-8ae3-de08047bc522	96d3ca47-8326-46ba-9a5a-3c473ccbb108	completed	pending	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:48:50.638533+00	PM completion reverted by admin	{"reverted_at": "2025-08-04T00:48:50.638533+00:00", "reverted_from": "completed"}	2025-08-04 00:48:50.638533+00
ad3f0ac3-b929-4269-929e-4e2ef6056507	96d3ca47-8326-46ba-9a5a-3c473ccbb108	pending	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:49:14.410827+00	Status updated	{}	2025-08-04 00:49:14.410827+00
db2712df-563e-4e5c-964c-2a9e17e30078	96d3ca47-8326-46ba-9a5a-3c473ccbb108	completed	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:49:21.674233+00	Status updated	{}	2025-08-04 00:49:21.674233+00
40bde0c5-85d9-4b41-b741-85d2d778534b	c8398bfd-b70d-48da-a780-843d7d3f92da	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:49:59.683401+00	Status updated	{}	2025-08-04 00:49:59.683401+00
e380f1c1-8ac3-442c-9a54-9f419f593fe8	c8398bfd-b70d-48da-a780-843d7d3f92da	completed	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:50:06.781099+00	Status updated	{}	2025-08-04 00:50:06.781099+00
e0119e20-13be-48be-9bc3-a64ea5000ffa	55e2e453-c8af-47d5-b50a-b5ba4210f1a1	completed	pending	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:51:38.683307+00	PM completion reverted by admin	{"reverted_at": "2025-08-04T00:51:38.683307+00:00", "reverted_from": "completed"}	2025-08-04 00:51:38.683307+00
77bdedbf-32f4-484d-9042-6ff106964fba	55e2e453-c8af-47d5-b50a-b5ba4210f1a1	pending	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:51:50.681711+00	Status updated	{}	2025-08-04 00:51:50.681711+00
160dbc14-e8bb-4099-9566-54f733e857c9	55e2e453-c8af-47d5-b50a-b5ba4210f1a1	completed	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:51:57.326902+00	Status updated	{}	2025-08-04 00:51:57.326902+00
f83b2cc0-c54c-414a-a9e6-1959172bc615	55e2e453-c8af-47d5-b50a-b5ba4210f1a1	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:52:44.76082+00	Status updated	{}	2025-08-04 00:52:44.76082+00
60d17e2a-9448-4bad-adf6-9af4c0cd549f	e89dfeb8-53d0-4833-a61b-024e71e677d7	completed	pending	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:53:15.956637+00	PM completion reverted by admin	{"reverted_at": "2025-08-04T00:53:15.956637+00:00", "reverted_from": "completed"}	2025-08-04 00:53:15.956637+00
04406e58-9892-48c8-bb45-3cc9792434e8	e89dfeb8-53d0-4833-a61b-024e71e677d7	pending	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:53:24.576615+00	Status updated	{}	2025-08-04 00:53:24.576615+00
e9909d2e-8bd4-4c08-8dab-8f75c02319c4	2302ce09-a5d6-44de-9774-1734f185e765	pending	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:57:36.64394+00	Status updated	{}	2025-08-04 00:57:36.64394+00
e65444e0-3e32-45d6-8b70-0ee416dd8088	2302ce09-a5d6-44de-9774-1734f185e765	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 01:05:07.053411+00	Status updated	{}	2025-08-04 01:05:07.053411+00
443f0060-72e2-439a-918a-d93024aa8a86	2302ce09-a5d6-44de-9774-1734f185e765	completed	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 01:05:13.559477+00	Status updated	{}	2025-08-04 01:05:13.559477+00
b5f75c57-af8f-4245-9073-d75a29a32a94	401f9b75-e69f-4bf5-9f1e-be5ddff07366	pending	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 01:08:17.696525+00	Status updated	{}	2025-08-04 01:08:17.696525+00
d2214384-367c-4115-b35e-122700bf5611	401f9b75-e69f-4bf5-9f1e-be5ddff07366	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 01:15:24.065262+00	Status updated	{}	2025-08-04 01:15:24.065262+00
f835267d-b1c1-4b95-939b-67d9272f680a	401f9b75-e69f-4bf5-9f1e-be5ddff07366	completed	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 01:15:31.349353+00	Status updated	{}	2025-08-04 01:15:31.349353+00
5ce605db-edd3-419a-8bd8-3c720a4444af	05234038-4973-4ee4-a316-b2fbafc1e0e8	pending	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 03:09:07.20593+00	Status updated	{}	2025-08-04 03:09:07.20593+00
7b88ed24-6fe3-4dec-8802-0aac96020b34	05234038-4973-4ee4-a316-b2fbafc1e0e8	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 03:33:00.055886+00	Status updated	{}	2025-08-04 03:33:00.055886+00
98028aa5-c592-47bd-99d2-0121dbda211e	e22484e0-cf88-49f1-9087-f12327d506e2	pending	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 03:36:37.281475+00	Status updated	{}	2025-08-04 03:36:37.281475+00
e4af8596-ef87-43a9-b963-7f764eadfa58	e22484e0-cf88-49f1-9087-f12327d506e2	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 03:46:52.088653+00	Status updated	{}	2025-08-04 03:46:52.088653+00
76110205-da1a-4866-af5a-436a8d2563bb	57330e39-c55a-4b0a-bafb-c22faa286741	pending	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 04:10:33.183612+00	Status updated	{}	2025-08-04 04:10:33.183612+00
25967d7b-8cad-41bf-9e81-1b8f70a0a28c	57330e39-c55a-4b0a-bafb-c22faa286741	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 04:24:07.731928+00	Status updated	{}	2025-08-04 04:24:07.731928+00
356dc629-3651-488c-a19a-4bcdb56cd177	57330e39-c55a-4b0a-bafb-c22faa286741	completed	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 04:24:14.099006+00	Status updated	{}	2025-08-04 04:24:14.099006+00
bef94f8b-db5b-4388-a688-57ccccaaba63	e2456f76-1cb8-4c6f-aa2d-274c9e879897	pending	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 04:26:20.00456+00	Status updated	{}	2025-08-04 04:26:20.00456+00
7fb48264-3d46-4346-80b2-ef0e69125fc5	e2456f76-1cb8-4c6f-aa2d-274c9e879897	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 04:32:18.331531+00	Status updated	{}	2025-08-04 04:32:18.331531+00
524d3a9f-48df-4dfa-89f0-10025a789673	e2456f76-1cb8-4c6f-aa2d-274c9e879897	completed	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 04:32:23.740977+00	Status updated	{}	2025-08-04 04:32:23.740977+00
be506872-1026-4225-9209-805b7cfe5c9f	56bd119d-af24-4a10-9e1a-bb1ccfe6fb3e	pending	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 04:36:09.306589+00	Status updated	{}	2025-08-04 04:36:09.306589+00
999276c3-b3b3-4502-9222-0abb5e22de11	2302ce09-a5d6-44de-9774-1734f185e765	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 04:38:17.275699+00	Status updated	{}	2025-08-04 04:38:17.275699+00
0f22b700-4cc4-48f8-af7d-34b6f8244662	2302ce09-a5d6-44de-9774-1734f185e765	completed	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 04:38:24.301288+00	Status updated	{}	2025-08-04 04:38:24.301288+00
6a487bd6-544c-483d-a74b-daf05a605b71	c8398bfd-b70d-48da-a780-843d7d3f92da	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 04:43:28.196156+00	Status updated	{}	2025-08-04 04:43:28.196156+00
4c0270ec-f50f-4309-bcc2-523591b66a86	56bd119d-af24-4a10-9e1a-bb1ccfe6fb3e	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 04:46:26.91088+00	Status updated	{}	2025-08-04 04:46:26.91088+00
b2e81f67-721d-4273-bcaf-d10bb1d7f532	d610c855-4955-4f9c-a8dc-5d3a405f8fb1	pending	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 04:51:37.898139+00	Status updated	{}	2025-08-04 04:51:37.898139+00
199bf5e2-9de8-498f-8bc8-8bc86462fb60	d610c855-4955-4f9c-a8dc-5d3a405f8fb1	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 04:59:44.407778+00	Status updated	{}	2025-08-04 04:59:44.407778+00
7d801880-8a3b-44dc-92a4-529b3421f589	0230b656-5cf2-4567-b1cf-61275a2beb0f	pending	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 05:04:12.656943+00	Status updated	{}	2025-08-04 05:04:12.656943+00
aee6c050-07b2-4fa6-b76c-648d3da7833c	0230b656-5cf2-4567-b1cf-61275a2beb0f	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 05:10:02.019021+00	Status updated	{}	2025-08-04 05:10:02.019021+00
221726e3-c755-45cb-bf7c-3efc53ae3807	6c2fde12-d234-4716-940d-7013bdcf9e33	pending	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 05:15:21.06921+00	Status updated	{}	2025-08-04 05:15:21.06921+00
961f7897-6b90-408a-b38c-95eef9031840	6c2fde12-d234-4716-940d-7013bdcf9e33	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 05:19:31.266445+00	Status updated	{}	2025-08-04 05:19:31.266445+00
ffaa5171-e956-44a3-aa58-5f9283fa6a97	05234038-4973-4ee4-a316-b2fbafc1e0e8	completed	pending	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 05:20:20.794443+00	PM completion reverted by admin	{"reverted_at": "2025-08-04T05:20:20.794443+00:00", "reverted_from": "completed"}	2025-08-04 05:20:20.794443+00
128c6340-1767-41c3-92b5-4b6792665935	05234038-4973-4ee4-a316-b2fbafc1e0e8	pending	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 05:20:41.512195+00	Status updated	{}	2025-08-04 05:20:41.512195+00
234aee6d-5271-4435-ac0f-9cdb5713d354	05234038-4973-4ee4-a316-b2fbafc1e0e8	completed	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 05:20:50.233357+00	Status updated	{}	2025-08-04 05:20:50.233357+00
a80b3f9f-335c-4cb7-be74-d02628fc4fb7	55e2e453-c8af-47d5-b50a-b5ba4210f1a1	completed	pending	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 05:22:49.913667+00	PM completion reverted by admin	{"reverted_at": "2025-08-04T05:22:49.913667+00:00", "reverted_from": "completed"}	2025-08-04 05:22:49.913667+00
59264368-3cae-43a3-a367-ada28618e7ae	55e2e453-c8af-47d5-b50a-b5ba4210f1a1	pending	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 05:22:53.800917+00	Status updated	{}	2025-08-04 05:22:53.800917+00
fb97aac3-015b-495f-b086-a286d7ac1c99	7bd1b07d-8a72-479b-ae07-3eb0f340a7db	pending	in_progress	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-06 01:37:17.825002+00	Status updated	{}	2025-08-06 01:37:17.825002+00
4f921193-6de8-4d82-92cb-1de61ee61b9e	7bd1b07d-8a72-479b-ae07-3eb0f340a7db	in_progress	completed	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-13 15:15:37.310347+00	Status updated	{}	2025-08-13 15:15:37.310347+00
fa8e9736-acba-482e-894b-219e896b995a	766b33e4-3ebd-40cf-8fe5-abb2b867e2db	pending	completed	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-18 02:30:25.949399+00	Status updated	{}	2025-08-18 02:30:25.949399+00
\.


--
-- Data for Name: preventative_maintenance; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.preventative_maintenance (id, work_order_id, equipment_id, organization_id, created_by, created_at, updated_at, completed_at, completed_by, status, checklist_data, notes, is_historical, historical_completion_date, historical_notes, template_id) FROM stdin;
7bd1b07d-8a72-479b-ae07-3eb0f340a7db	35924521-e2f8-4393-bea7-e1bcbda9d829	bf45799e-5f1d-4797-881d-a9fd9e367f29	96061a65-7e91-4ed3-9df1-282ff19a8471	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-06 01:35:46.230199+00	2025-08-18 02:26:44.566249+00	2025-08-13 15:15:36.675+00	685efa5e-7519-486e-8643-28cfaf5408a4	in_progress	[{"id": "visual-1", "title": "Oil/Coolant Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect under and around the forklift for signs of oil or coolant leaks."}, {"id": "visual-2", "title": "Carriage, Mast & LBR Assembly", "section": "Visual Inspection", "required": true, "condition": 3, "description": "Examine the carriage, mast, and load backrest for damage, cracks, or deformation."}, {"id": "visaul-3", "title": "Forks and Fork Pins", "section": "Visual Inspection", "required": true, "condition": 3, "description": "Check that forks and fork pins are straight, undamaged, and securely attached."}, {"id": "visual-4", "title": "Mast Chains, Rollers & Hoses", "section": "Visual Inspection", "required": true, "condition": 4, "description": "Inspect mast chains, rollers, and hoses for wear, proper tension, and leaks."}, {"id": "visaul-5", "title": "Tire & Wheel Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect tires and wheels for cuts, excessive wear, or missing lug nuts."}, {"id": "visual-6", "title": "Seat & Seat Belt Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Ensure seat and seat belt are present, undamaged, and functioning properly."}, {"id": "visual-7", "title": "Decals & Capacity Plates", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Verify that all safety decals and capacity plates are present and legible."}, {"id": "visual-8", "title": "Overhead Guard Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check the overhead guard for bends, cracks, or missing hardware."}, {"id": "visual-9", "title": "Check Cylinders for Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect all visible hydraulic cylinders for leaks or damage."}, {"id": "engine-compartment-1", "title": "Blow Out Engine Compartment", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Use compressed air to clean debris and dust from the engine compartment."}, {"id": "engine-compartment-2", "title": "Check Condition of Air Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect and replace the air filter if dirty or clogged."}, {"id": "engine-compartment-3", "title": "Change Engine Oil & Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Drain engine oil, replace with new oil, and install a new oil filter as specified."}, {"id": "engine-compartment-4", "title": "Check hood Latch, Hinges & Hood Strut", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Confirm hood latch, hinges, and strut function smoothly and securely."}, {"id": "engine-compartment-5", "notes": "Hoses are rotted out and need to be replaced", "title": "Inspect Air Intake Hoses & Clamps", "section": "Engine Compartment", "required": true, "condition": 4, "description": "Examine air intake hoses and clamps for cracks, leaks, or loose fittings."}, {"id": "engine-compartment-6", "title": "Check Ring Gear Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect ring gear for visible damage or abnormal wear."}, {"id": "engine-compartment-7", "title": "Check Hood Insulation & Hood Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Ensure hood insulation is intact and hood is free of damage."}, {"id": "engine-compartment-8", "title": "Engine Noise / Smoke / Idle RPMs", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Start the engine and check for abnormal noises, smoke, or incorrect idle speed."}, {"id": "engine-compartment-9", "title": "Exhaust System / Muffler / Catalyst", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine the exhaust system, muffler, and catalyst for leaks, noise, or damage."}, {"id": "engine-compartment-10", "title": "Check for Engine Oil Leaks", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Look for evidence of engine oil leaks under and around the engine."}, {"id": "engine-compartment-11", "title": "Check Vacuum Lines / PCV Valve", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect vacuum lines and PCV valve for cracks, leaks, or blockages."}, {"id": "electrical-1", "title": "Check Headlights, Strobe, Taillights", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Verify all headlights, taillights, and strobe lights operate correctly."}, {"id": "electrical-2", "title": "Clean Battery Terminals / Load Test", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Clean corrosion from battery terminals and perform a battery load test."}, {"id": "electrical-3", "notes": "This is completely destroyed and needs to be replaced but you could use a workaround until ", "title": "Inspect Wire Harness / Connections", "section": "Electrical Inspection", "required": true, "condition": 3, "description": "Check wire harnesses and electrical connections for wear or loose fittings."}, {"id": "electrical-4", "title": "Check Neutral Safety Switch", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Test the neutral safety switch for correct operation."}, {"id": "electrical-5", "title": "Check All Gauges & Hour Meter", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Ensure all dashboard gauges and the hour meter function accurately."}, {"id": "electrical-6", "title": "Condition of Fuse Panel / Relay Box", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Open and inspect the fuse panel and relay box for corrosion, damage, or missing fuses."}, {"id": "electrical-7", "title": "Inspect Alternator / Record Voltage", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Inspect the alternator for damage and record operating voltage output."}, {"id": "hydraulic-1", "title": "Inspect Fluid Level & Quality", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic fluid level and assess fluid for contamination or discoloration."}, {"id": "hydraulic-2", "title": "Inspect Pump / Control Valve", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Visually inspect pump and control valve for leaks or damage."}, {"id": "hydraulic-3", "title": "Check Hydraulic Valve Levers", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic levers to ensure smooth and proper function."}, {"id": "hydraulic-4", "title": "Check Pump Drive Shaft & U-Joints", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Inspect the pump drive shaft and U-joints for wear or looseness."}, {"id": "hydraulic-5", "title": "Remove & Clean / Replace Tank Breather", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Remove the tank breather, clean or replace as needed."}, {"id": "hydraulic-6", "title": "Inspect All Hoses & Fittings", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Examine all hydraulic hoses and fittings for cracks, leaks, or abrasion."}, {"id": "hydraulic-7", "title": "Inspect Cylinders for Leaks", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic cylinders for oil leaks or physical damage."}, {"id": "brakes-1", "title": "Check Fluid Level & Quality", "section": "Brake", "required": true, "condition": 1, "description": "Inspect the brake fluid reservoir for proper level and clear, uncontaminated fluid."}, {"id": "brakes-2", "title": "Test PB Operation, Check Cables", "section": "Brake", "required": true, "condition": 1, "description": "Test parking brake operation and inspect cables for wear or binding."}, {"id": "brakes-3", "title": "Test Service Brake Operation", "section": "Brake", "required": true, "condition": 1, "description": "Depress the service brake and confirm the forklift stops smoothly and promptly."}, {"id": "brakes-4", "title": "Check Pedal Pads & Inching Pedal Cables", "section": "Brake", "required": true, "condition": 1, "description": "Inspect pedal pads for wear and inching pedal cables for proper function."}, {"id": "brakes-5", "title": "Check Wheels & Cylinder for Leaks", "section": "Brake", "required": true, "condition": 1, "description": "Look for brake fluid leaks around wheel cylinders and brake assemblies."}, {"id": "brakes-6", "title": "Check Brake / Inching Pedal Linkage", "section": "Brake", "required": true, "condition": 1, "description": "Inspect brake and inching pedal linkage for looseness or damage."}, {"id": "brakes-7", "title": "Check Brak / Inching Pedal Free Play", "section": "Brake", "required": true, "condition": 1, "description": "Verify correct amount of free play in brake and inching pedals."}, {"id": "steering-1", "title": "Inspect Steering Cylinder for Leaks", "section": "Steering", "required": true, "condition": 1, "description": "Check steering cylinder for hydraulic leaks or visible damage."}, {"id": "steering-2", "title": "Inspect Gear Box & Steer Column", "section": "Steering", "required": true, "condition": 1, "description": "Inspect the steering gear box and column for proper operation and leaks."}, {"id": "steering-3", "title": "Check King Pins & Spindles", "section": "Steering", "required": true, "condition": 1, "description": "Check king pins and spindles for excessive play or wear."}, {"id": "steering-4", "title": "Test Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Spin and rock steer wheels to check for noisy or loose bearings."}, {"id": "steering-5", "title": "Check Steer Axle Mounts & Stops", "section": "Steering", "required": true, "condition": 1, "description": "Ensure steer axle mounts and stops are secure and undamaged."}, {"id": "steering-6", "title": "Check Steering tie Rods & Pings", "section": "Steering", "required": true, "condition": 1, "description": "Inspect tie rods and pins for looseness or excessive wear."}, {"id": "steering-7", "title": "Check Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Verify steer wheel bearings turn smoothly without noise or resistance."}, {"id": "steering-8", "title": "Inspect Steer Wheel Lug Nuts / Rim / Cap", "section": "Steering", "required": true, "condition": 1, "description": "Check steer wheel lug nuts for tightness and inspect rim/cap for damage."}, {"id": "steering-9", "title": "Check Steering Hoses at Cylinder & Box", "section": "Steering", "required": true, "condition": 1, "description": "Inspect steering hoses at both the cylinder and box for leaks or wear."}, {"id": "differential-transmission-1", "title": "Check Fluid Levels & Condition", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect differential and transmission fluid levels and assess for contamination."}, {"id": "differential-transmission-2", "title": "Check for Abnormal Noise", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Listen for unusual noises from differential or transmission during operation."}, {"id": "differential-transmission-3", "title": "Check Drive Wheel Bearings & Lug Nuts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect drive wheel bearings for play and verify lug nuts are tight."}, {"id": "differential-transmission-4", "title": "Check Mounts & Bolts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Check that all mounts and bolts are secure and undamaged."}, {"id": "differential-transmission-5", "title": "Check for Leaks", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect the differential and transmission for signs of oil leaks."}, {"id": "differential-transmission-6", "title": "Check Drive Shaft & U-Joints", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Examine drive shaft and U-joints for excessive play or wear."}, {"id": "differential-transmission-7", "title": "Check Shift Lever Linkage / Cables", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Test shift lever linkage and cables for proper adjustment and smooth operation."}, {"id": "differential-transmission-8", "title": "Replace Fluid & Filters per OEM Spec", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Replace differential and transmission fluids and filters according to manufacturer specification."}, {"id": "ignition-1", "title": "Test Ignition Switch", "section": "Ignition System", "required": true, "condition": 1, "description": "Turn the ignition switch to verify smooth operation and proper start."}, {"id": "ignition-2", "title": "Check Coil / Coil Packs", "section": "Ignition System", "required": true, "condition": 1, "description": "Inspect ignition coil or coil packs for damage or signs of arcing."}, {"id": "ignition-3", "title": "Check Distributor Cap & Rotor", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and check distributor cap and rotor for wear or corrosion."}, {"id": "ignition-4", "title": "Check Spark Plug Condition & Wires", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and inspect spark plugs and wires for fouling or damage."}, {"id": "mast-carriage-1", "title": "Check Lift Chains & Anchors", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect lift chains and anchors for wear, proper lubrication, and correct tension."}, {"id": "mast-carriage-2", "title": "Check Cylinders for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine all mast cylinders for hydraulic leaks or damage."}, {"id": "mast-carriage-3", "title": "Check Cylinder Brackets", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect cylinder brackets for secure attachment and absence of cracks."}, {"id": "mast-carriage-4", "title": "Check Hose Pulleys & Chain / Hose Guards", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check that hose pulleys, chain guards, and hose guards are intact and functional."}, {"id": "mast-carriage-5", "title": "Check Tilt Cylinder Mounts & Pins", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Verify tilt cylinder mounts and pins are secure and show no excessive wear."}, {"id": "mast-carriage-6", "title": "Check Trunion Bushings / Mounts", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect trunion bushings and mounts for wear or looseness."}, {"id": "mast-carriage-7", "title": "Check Forks, Pins & Carriage Condition", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine forks, pins, and carriage for cracks, bending, or other defects."}, {"id": "mast-carriage-8", "title": "Check Hoses for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect hydraulic hoses on mast and carriage for leaks, abrasion, or damage."}, {"id": "mast-carriage-9", "title": "Check Mast Shims & Side Play", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check mast shims for tightness and look for excessive side play in mast."}, {"id": "mast-carriage-10", "title": "Check Carriage & Mast Rollers", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect rollers for flat spots, wear, or improper rotation."}, {"id": "mast-carriage-11", "title": "Check Mast Rails for Wear", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Look for wear, cracks, or bending along mast rails."}, {"id": "mast-carriage-12", "title": "Check Side Shift Bushings", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect side shift bushings for excessive wear or movement."}, {"id": "cooling-1", "title": "Blow Out Radiator", "section": "Cooling System", "required": true, "condition": 1, "description": "Use compressed air to remove dust and debris from the radiator fins."}, {"id": "cooling-2", "title": "Coolant Level, Condition & Leaks", "section": "Cooling System", "required": true, "condition": 1, "description": "Check coolant level, ensure coolant is clean, and inspect for leaks."}, {"id": "cooling-3", "title": "Check Radiator Condition & Shroud", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect radiator and fan shroud for damage or obstructions."}, {"id": "cooling-4", "title": "Check Water Pump for Leaks & Play", "section": "Cooling System", "required": true, "condition": 1, "description": "Check water pump for coolant leaks or excessive shaft play."}, {"id": "cooling-5", "title": "Check Belt Condition & Tension", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect all drive belts for cracks, fraying, and correct tension."}, {"id": "cooling-6", "title": "Check Fan Blade Condition", "section": "Cooling System", "required": true, "condition": 1, "description": "Examine fan blades for cracks, chips, or loose mounting."}, {"id": "cooling-7", "title": "Cooland Good To (°F)", "section": "Cooling System", "required": true, "condition": 1, "description": "Verify coolant protection is adequate for expected low temperatures using a tester."}, {"id": "fuel-1", "title": "Check LP Tank, Hoses & Fittings", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect LP tank, hoses, and fittings for leaks, damage, or loose connections."}, {"id": "fuel-2", "title": "Drain LPG Regulator", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain condensation from the LPG regulator per manufacturer instructions."}, {"id": "fuel-3", "title": "Check LP System for Leaks", "section": "Fuel System", "required": true, "condition": 1, "description": "Use leak detector solution or sniffer to check LP system for leaks."}, {"id": "fuel-4", "title": "Check LPG Lockoff Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Test LPG lockoff valve for proper engagement and operation."}, {"id": "fuel-5", "title": "Check Carburetor & Linkages", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect carburetor and throttle/choke linkages for smooth movement and secure attachment."}, {"id": "fuel-6", "title": "Check throttle Pedal Linkages / Cable", "section": "Fuel System", "required": true, "condition": 1, "description": "Check throttle pedal linkages and cable for free movement and secure connections."}, {"id": "fuel-7", "title": "Check Governor for Proper Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect and test governor for correct operation and smooth throttle response."}, {"id": "fuel-8", "title": "Change Diesel Fuel Filters", "section": "Fuel System", "required": true, "condition": 1, "description": "Replace diesel fuel filters according to the service schedule."}, {"id": "fuel-9", "title": "Drain Water Separator / Sediment Filter", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain water separator and sediment filter of any collected water or contaminants."}, {"id": "final-inspection-1", "title": "Test Horn Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Press horn button to verify loud, consistent sound."}, {"id": "final-inspection-2", "title": "Does Back Up Alarm Sound in Reverse", "section": "Final Inspection", "required": true, "condition": 1, "description": "Shift into reverse and confirm the backup alarm activates."}, {"id": "final-inspection-3", "title": "Test Brake Lights / Turn Signals / BU Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Check that all brake lights, turn signals, and backup lights function properly."}, {"id": "final-inspection-4", "title": "Test Strobe Light for Proper Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Activate the strobe light and ensure it flashes correctly."}, {"id": "final-inspection-5", "title": "Test Seat Belt", "section": "Final Inspection", "required": true, "condition": 1, "description": "Buckle and unbuckle seat belt to confirm proper latching and release."}, {"id": "final-inspection-6", "title": "Test Operator Presence System", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm that the operator presence system disables movement when the seat is unoccupied."}, {"id": "final-inspection-7", "title": "Check All Work Lights", "section": "Final Inspection", "required": true, "condition": 2, "description": "Turn on all work lights and confirm they illuminate properly."}, {"id": "final-inspection-8", "title": "Test Both Service & Parking Brake", "section": "Final Inspection", "required": true, "condition": 1, "description": "Apply both brakes and ensure they hold the forklift stationary."}, {"id": "final-inspection-9", "title": "Test Forward & Reverse Travel", "section": "Final Inspection", "required": true, "condition": 1, "description": "Drive forklift forward and in reverse to confirm smooth operation."}, {"id": "final-inspection-10", "title": "Test All Hydraulic Functions", "section": "Final Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic controls and ensure smooth, correct response."}, {"id": "final-inspection-11", "title": "Test Seat Belt Alarm", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm seat belt alarm sounds if the seat belt is not engaged during operation."}, {"id": "final-inspection-12", "title": "Wipe Down Forklift, Dash Area", "section": "Final Inspection", "required": true, "condition": 1, "description": "Clean the forklift and dashboard area of dirt and debris."}, {"id": "final-inspection-13", "title": "Install PM Sticker", "section": "Final Inspection", "required": true, "condition": 1, "description": "Place the preventative maintenance sticker in the designated area to indicate service is complete."}]		f	\N	\N	\N
f10a29f2-278b-421c-8fa5-835d8b170d93	57dc7336-9606-4758-b1d5-2fe1c6ad4f8d	c9a7d194-5608-4117-a1eb-a6408fa89e39	5a54dd83-f546-4149-8ff5-d44cbc570217	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-06-25 19:15:45.835317+00	2025-06-25 19:15:58.304101+00	\N	\N	in_progress	[{"id": "engine-1", "title": "Engine Oil Level and Condition", "section": "Engine/Motor System", "required": true, "description": "Check oil level and inspect for contamination or metal particles"}, {"id": "engine-2", "title": "Engine Oil Filter", "section": "Engine/Motor System", "required": true, "description": "Inspect and replace if necessary"}, {"id": "engine-3", "title": "Air Filter", "section": "Engine/Motor System", "required": true, "description": "Check for dirt, debris, or damage"}, {"id": "engine-4", "title": "Fuel Filter", "section": "Engine/Motor System", "required": true, "description": "Inspect and replace if clogged"}, {"id": "engine-5", "title": "Cooling System", "section": "Engine/Motor System", "required": true, "description": "Check coolant level, hoses, and radiator condition"}, {"id": "engine-6", "title": "Belt Tension and Condition", "section": "Engine/Motor System", "required": true, "description": "Inspect all belts for proper tension, cracks, or fraying"}, {"id": "hydraulic-1", "title": "Hydraulic Fluid Level", "section": "Hydraulic System", "required": true, "description": "Check fluid level in reservoir"}, {"id": "hydraulic-2", "title": "Hydraulic Fluid Condition", "section": "Hydraulic System", "required": true, "description": "Inspect for contamination, color, and consistency"}, {"id": "hydraulic-3", "title": "Hydraulic Filter", "section": "Hydraulic System", "required": true, "description": "Check and replace hydraulic filter"}, {"id": "hydraulic-4", "title": "Hydraulic Hoses and Fittings", "section": "Hydraulic System", "required": true, "description": "Inspect for leaks, cracks, or damage"}, {"id": "hydraulic-5", "title": "Lift Cylinder Operation", "section": "Hydraulic System", "required": true, "description": "Test lift, lower, and tilt functions"}, {"id": "hydraulic-6", "title": "Hydraulic Pump Performance", "section": "Hydraulic System", "required": true, "description": "Check pump operation and pressure"}, {"id": "mast-1", "title": "Mast Wear Pads", "section": "Mast and Forks", "required": true, "description": "Inspect for excessive wear or damage"}, {"id": "mast-2", "title": "Lift Chains", "section": "Mast and Forks", "required": true, "description": "Check for stretch, broken links, or wear"}, {"id": "mast-3", "title": "Fork Inspection", "section": "Mast and Forks", "required": true, "description": "Check for cracks, bends, or wear on heel and blade"}, {"id": "mast-4", "title": "Carriage and Attachments", "section": "Mast and Forks", "required": true, "description": "Inspect carriage rails and attachment mounting"}, {"id": "mast-5", "title": "Mast Alignment", "section": "Mast and Forks", "required": true, "description": "Check mast for straightness and proper alignment"}, {"id": "transmission-1", "title": "Transmission Fluid", "section": "Transmission and Drive Train", "required": true, "description": "Check level and condition of transmission fluid"}, {"id": "transmission-2", "title": "Drive Axle Operation", "section": "Transmission and Drive Train", "required": true, "description": "Test forward and reverse operation"}, {"id": "transmission-3", "title": "Differential", "section": "Transmission and Drive Train", "required": true, "description": "Check differential fluid level and operation"}, {"id": "transmission-4", "title": "Drive Chain/Belt", "section": "Transmission and Drive Train", "required": false, "description": "Inspect drive chain or belt for wear and tension"}, {"id": "steering-1", "title": "Steering Wheel Play", "section": "Steering System", "required": true, "description": "Check for excessive play in steering wheel"}, {"id": "steering-2", "title": "Steering Cylinder", "section": "Steering System", "required": true, "description": "Inspect steering cylinder for leaks and operation"}, {"id": "steering-3", "title": "Steering Linkage", "section": "Steering System", "required": true, "description": "Check all steering linkage components"}, {"id": "steering-4", "title": "Power Steering Fluid", "section": "Steering System", "required": true, "description": "Check fluid level and condition"}, {"id": "brake-1", "title": "Service Brake Operation", "section": "Brake System", "required": true, "description": "Test service brake effectiveness"}, {"id": "brake-2", "title": "Parking Brake", "section": "Brake System", "required": true, "description": "Test parking brake engagement and holding ability"}, {"id": "brake-3", "title": "Brake Fluid Level", "section": "Brake System", "required": true, "description": "Check brake fluid reservoir level"}, {"id": "brake-4", "title": "Brake Lines and Hoses", "section": "Brake System", "required": true, "description": "Inspect for leaks, cracks, or damage"}, {"id": "tires-1", "title": "Tire Condition", "section": "Tires and Wheels", "required": true, "description": "Inspect for wear, cuts, or embedded objects"}, {"id": "tires-2", "title": "Tire Pressure", "section": "Tires and Wheels", "required": true, "description": "Check and adjust tire pressure to specifications"}, {"id": "tires-3", "title": "Wheel Mounting", "section": "Tires and Wheels", "required": true, "description": "Check wheel lug nuts and mounting hardware"}, {"id": "tires-4", "title": "Rim Condition", "section": "Tires and Wheels", "required": true, "description": "Inspect rims for cracks, bends, or damage"}, {"id": "electrical-1", "title": "Battery Condition", "section": "Electrical System", "required": true, "description": "Check battery terminals, cables, and charge level"}, {"id": "electrical-2", "title": "Lights and Indicators", "section": "Electrical System", "required": true, "description": "Test all lights, beacons, and warning indicators"}, {"id": "electrical-3", "title": "Horn Operation", "section": "Electrical System", "required": true, "description": "Test horn functionality"}, {"id": "electrical-4", "title": "Backup Alarm", "section": "Electrical System", "required": true, "description": "Test backup alarm operation"}, {"id": "electrical-5", "title": "Wiring Harness", "section": "Electrical System", "required": true, "description": "Inspect wiring for damage, chafing, or loose connections"}, {"id": "safety-1", "title": "Overhead Guard", "section": "Safety Systems", "required": true, "description": "Inspect overhead guard for damage or loose mounting"}, {"id": "safety-2", "title": "Load Backrest", "section": "Safety Systems", "required": true, "description": "Check load backrest condition and mounting"}, {"id": "safety-3", "title": "Seat Belt", "section": "Safety Systems", "required": true, "description": "Inspect seat belt for proper operation and condition"}, {"id": "safety-4", "title": "Operator Presence System", "section": "Safety Systems", "required": true, "description": "Test operator presence sensing system"}, {"id": "safety-5", "title": "Load Handling Attachments", "section": "Safety Systems", "required": false, "description": "Inspect all load handling attachments"}, {"id": "operator-1", "title": "Seat Condition", "section": "Operator Compartment", "required": true, "description": "Check seat adjustment, cushioning, and mounting"}, {"id": "operator-2", "title": "Control Linkages", "section": "Operator Compartment", "required": true, "description": "Test all control levers and pedals for proper operation"}, {"id": "operator-3", "title": "Instruments and Gauges", "section": "Operator Compartment", "required": true, "description": "Check all gauges and warning lights"}, {"id": "operator-4", "title": "Mirrors", "section": "Operator Compartment", "required": true, "description": "Inspect mirrors for clarity and proper adjustment"}, {"id": "frame-1", "title": "Frame Inspection", "section": "Frame and Body", "required": true, "description": "Check frame for cracks, bends, or structural damage"}, {"id": "frame-2", "title": "Counterweight", "section": "Frame and Body", "required": true, "description": "Inspect counterweight mounting and condition"}, {"id": "frame-3", "title": "Body Panels", "section": "Frame and Body", "required": false, "description": "Check body panels for damage or loose mounting"}, {"id": "frame-4", "title": "Access Panels", "section": "Frame and Body", "required": false, "description": "Ensure all access panels are secure and functional"}, {"id": "lubrication-1", "title": "Mast Lubrication", "section": "Lubrication Points", "required": true, "description": "Lubricate all mast grease fittings"}, {"id": "lubrication-2", "title": "Steering Lubrication", "section": "Lubrication Points", "required": true, "description": "Lubricate steering linkage grease fittings"}, {"id": "lubrication-3", "title": "Drive Axle Lubrication", "section": "Lubrication Points", "required": true, "description": "Lubricate drive axle components"}, {"id": "lubrication-4", "title": "General Lubrication", "section": "Lubrication Points", "required": true, "description": "Apply lubrication to all other specified points"}]	PM checklist initialized with default forklift maintenance items.	f	\N	\N	\N
b7532e50-6ee4-44f4-99b4-3b484419d45d	b8928921-ceb8-40dd-9c83-d6b16d20fbb2	e1064edd-c3ae-492f-9ff1-91d8abfffb47	5a54dd83-f546-4149-8ff5-d44cbc570217	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-02 15:54:24.178749+00	2025-07-02 15:54:24.178749+00	\N	\N	pending	[]	\N	f	\N	\N	\N
e4dda52d-974c-42b7-b120-f92c607bb800	2ac9f215-e400-49af-aef6-9249abf979ff	18a81643-0fce-4b42-8d47-917768e7a097	5a54dd83-f546-4149-8ff5-d44cbc570217	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-11 20:06:14.304183+00	2025-08-04 00:48:05.879376+00	2025-08-04 00:48:00.776+00	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	in_progress	[{"id": "visual-1", "title": "Oil/Coolant Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect under and around the forklift for signs of oil or coolant leaks."}, {"id": "visual-2", "title": "Carriage, Mast & LBR Assembly", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Examine the carriage, mast, and load backrest for damage, cracks, or deformation."}, {"id": "visaul-3", "title": "Forks and Fork Pins", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check that forks and fork pins are straight, undamaged, and securely attached."}, {"id": "visual-4", "title": "Mast Chains, Rollers & Hoses", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect mast chains, rollers, and hoses for wear, proper tension, and leaks."}, {"id": "visaul-5", "title": "Tire & Wheel Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect tires and wheels for cuts, excessive wear, or missing lug nuts."}, {"id": "visual-6", "title": "Seat & Seat Belt Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Ensure seat and seat belt are present, undamaged, and functioning properly."}, {"id": "visual-7", "title": "Decals & Capacity Plates", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Verify that all safety decals and capacity plates are present and legible."}, {"id": "visual-8", "title": "Overhead Guard Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check the overhead guard for bends, cracks, or missing hardware."}, {"id": "visual-9", "title": "Check Cylinders for Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect all visible hydraulic cylinders for leaks or damage."}, {"id": "engine-compartment-1", "title": "Blow Out Engine Compartment", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Use compressed air to clean debris and dust from the engine compartment."}, {"id": "engine-compartment-2", "title": "Check Condition of Air Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect and replace the air filter if dirty or clogged."}, {"id": "engine-compartment-3", "title": "Change Engine Oil & Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Drain engine oil, replace with new oil, and install a new oil filter as specified."}, {"id": "engine-compartment-4", "title": "Check hood Latch, Hinges & Hood Strut", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Confirm hood latch, hinges, and strut function smoothly and securely."}, {"id": "engine-compartment-5", "title": "Inspect Air Intake Hoses & Clamps", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine air intake hoses and clamps for cracks, leaks, or loose fittings."}, {"id": "engine-compartment-6", "title": "Check Ring Gear Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect ring gear for visible damage or abnormal wear."}, {"id": "engine-compartment-7", "title": "Check Hood Insulation & Hood Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Ensure hood insulation is intact and hood is free of damage."}, {"id": "engine-compartment-8", "title": "Engine Noise / Smoke / Idle RPMs", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Start the engine and check for abnormal noises, smoke, or incorrect idle speed."}, {"id": "engine-compartment-9", "title": "Exhaust System / Muffler / Catalyst", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine the exhaust system, muffler, and catalyst for leaks, noise, or damage."}, {"id": "engine-compartment-10", "title": "Check for Engine Oil Leaks", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Look for evidence of engine oil leaks under and around the engine."}, {"id": "engine-compartment-11", "title": "Check Vacuum Lines / PCV Valve", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect vacuum lines and PCV valve for cracks, leaks, or blockages."}, {"id": "electrical-1", "title": "Check Headlights, Strobe, Taillights", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Verify all headlights, taillights, and strobe lights operate correctly."}, {"id": "electrical-2", "title": "Clean Battery Terminals / Load Test", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Clean corrosion from battery terminals and perform a battery load test."}, {"id": "electrical-3", "title": "Inspect Wire Harness / Connections", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Check wire harnesses and electrical connections for wear or loose fittings."}, {"id": "electrical-4", "title": "Check Neutral Safety Switch", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Test the neutral safety switch for correct operation."}, {"id": "electrical-5", "title": "Check All Gauges & Hour Meter", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Ensure all dashboard gauges and the hour meter function accurately."}, {"id": "electrical-6", "title": "Condition of Fuse Panel / Relay Box", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Open and inspect the fuse panel and relay box for corrosion, damage, or missing fuses."}, {"id": "electrical-7", "title": "Inspect Alternator / Record Voltage", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Inspect the alternator for damage and record operating voltage output."}, {"id": "hydraulic-1", "title": "Inspect Fluid Level & Quality", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic fluid level and assess fluid for contamination or discoloration."}, {"id": "hydraulic-2", "title": "Inspect Pump / Control Valve", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Visually inspect pump and control valve for leaks or damage."}, {"id": "hydraulic-3", "title": "Check Hydraulic Valve Levers", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic levers to ensure smooth and proper function."}, {"id": "hydraulic-4", "title": "Check Pump Drive Shaft & U-Joints", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Inspect the pump drive shaft and U-joints for wear or looseness."}, {"id": "hydraulic-5", "title": "Remove & Clean / Replace Tank Breather", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Remove the tank breather, clean or replace as needed."}, {"id": "hydraulic-6", "title": "Inspect All Hoses & Fittings", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Examine all hydraulic hoses and fittings for cracks, leaks, or abrasion."}, {"id": "hydraulic-7", "title": "Inspect Cylinders for Leaks", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic cylinders for oil leaks or physical damage."}, {"id": "brakes-1", "title": "Check Fluid Level & Quality", "section": "Brake", "required": true, "condition": 1, "description": "Inspect the brake fluid reservoir for proper level and clear, uncontaminated fluid."}, {"id": "brakes-2", "title": "Test PB Operation, Check Cables", "section": "Brake", "required": true, "condition": 1, "description": "Test parking brake operation and inspect cables for wear or binding."}, {"id": "brakes-3", "title": "Test Service Brake Operation", "section": "Brake", "required": true, "condition": 1, "description": "Depress the service brake and confirm the forklift stops smoothly and promptly."}, {"id": "brakes-4", "title": "Check Pedal Pads & Inching Pedal Cables", "section": "Brake", "required": true, "condition": 1, "description": "Inspect pedal pads for wear and inching pedal cables for proper function."}, {"id": "brakes-5", "title": "Check Wheels & Cylinder for Leaks", "section": "Brake", "required": true, "condition": 1, "description": "Look for brake fluid leaks around wheel cylinders and brake assemblies."}, {"id": "brakes-6", "title": "Check Brake / Inching Pedal Linkage", "section": "Brake", "required": true, "condition": 1, "description": "Inspect brake and inching pedal linkage for looseness or damage."}, {"id": "brakes-7", "title": "Check Brak / Inching Pedal Free Play", "section": "Brake", "required": true, "condition": 1, "description": "Verify correct amount of free play in brake and inching pedals."}, {"id": "steering-1", "title": "Inspect Steering Cylinder for Leaks", "section": "Steering", "required": true, "condition": 1, "description": "Check steering cylinder for hydraulic leaks or visible damage."}, {"id": "steering-2", "title": "Inspect Gear Box & Steer Column", "section": "Steering", "required": true, "condition": 1, "description": "Inspect the steering gear box and column for proper operation and leaks."}, {"id": "steering-3", "title": "Check King Pins & Spindles", "section": "Steering", "required": true, "condition": 1, "description": "Check king pins and spindles for excessive play or wear."}, {"id": "steering-4", "title": "Test Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Spin and rock steer wheels to check for noisy or loose bearings."}, {"id": "steering-5", "title": "Check Steer Axle Mounts & Stops", "section": "Steering", "required": true, "condition": 1, "description": "Ensure steer axle mounts and stops are secure and undamaged."}, {"id": "steering-6", "title": "Check Steering tie Rods & Pings", "section": "Steering", "required": true, "condition": 1, "description": "Inspect tie rods and pins for looseness or excessive wear."}, {"id": "steering-7", "title": "Check Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Verify steer wheel bearings turn smoothly without noise or resistance."}, {"id": "steering-8", "title": "Inspect Steer Wheel Lug Nuts / Rim / Cap", "section": "Steering", "required": true, "condition": 1, "description": "Check steer wheel lug nuts for tightness and inspect rim/cap for damage."}, {"id": "steering-9", "title": "Check Steering Hoses at Cylinder & Box", "section": "Steering", "required": true, "condition": 1, "description": "Inspect steering hoses at both the cylinder and box for leaks or wear."}, {"id": "differential-transmission-1", "title": "Check Fluid Levels & Condition", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect differential and transmission fluid levels and assess for contamination."}, {"id": "differential-transmission-2", "title": "Check for Abnormal Noise", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Listen for unusual noises from differential or transmission during operation."}, {"id": "differential-transmission-3", "title": "Check Drive Wheel Bearings & Lug Nuts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect drive wheel bearings for play and verify lug nuts are tight."}, {"id": "differential-transmission-4", "title": "Check Mounts & Bolts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Check that all mounts and bolts are secure and undamaged."}, {"id": "differential-transmission-5", "title": "Check for Leaks", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect the differential and transmission for signs of oil leaks."}, {"id": "differential-transmission-6", "title": "Check Drive Shaft & U-Joints", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Examine drive shaft and U-joints for excessive play or wear."}, {"id": "differential-transmission-7", "title": "Check Shift Lever Linkage / Cables", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Test shift lever linkage and cables for proper adjustment and smooth operation."}, {"id": "differential-transmission-8", "title": "Replace Fluid & Filters per OEM Spec", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Replace differential and transmission fluids and filters according to manufacturer specification."}, {"id": "ignition-1", "title": "Test Ignition Switch", "section": "Ignition System", "required": true, "condition": 1, "description": "Turn the ignition switch to verify smooth operation and proper start."}, {"id": "ignition-2", "title": "Check Coil / Coil Packs", "section": "Ignition System", "required": true, "condition": 1, "description": "Inspect ignition coil or coil packs for damage or signs of arcing."}, {"id": "ignition-3", "title": "Check Distributor Cap & Rotor", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and check distributor cap and rotor for wear or corrosion."}, {"id": "ignition-4", "title": "Check Spark Plug Condition & Wires", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and inspect spark plugs and wires for fouling or damage."}, {"id": "mast-carriage-1", "title": "Check Lift Chains & Anchors", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect lift chains and anchors for wear, proper lubrication, and correct tension."}, {"id": "mast-carriage-2", "title": "Check Cylinders for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine all mast cylinders for hydraulic leaks or damage."}, {"id": "mast-carriage-3", "title": "Check Cylinder Brackets", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect cylinder brackets for secure attachment and absence of cracks."}, {"id": "mast-carriage-4", "title": "Check Hose Pulleys & Chain / Hose Guards", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check that hose pulleys, chain guards, and hose guards are intact and functional."}, {"id": "mast-carriage-5", "title": "Check Tilt Cylinder Mounts & Pins", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Verify tilt cylinder mounts and pins are secure and show no excessive wear."}, {"id": "mast-carriage-6", "title": "Check Trunion Bushings / Mounts", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect trunion bushings and mounts for wear or looseness."}, {"id": "mast-carriage-7", "title": "Check Forks, Pins & Carriage Condition", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine forks, pins, and carriage for cracks, bending, or other defects."}, {"id": "mast-carriage-8", "title": "Check Hoses for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect hydraulic hoses on mast and carriage for leaks, abrasion, or damage."}, {"id": "mast-carriage-9", "title": "Check Mast Shims & Side Play", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check mast shims for tightness and look for excessive side play in mast."}, {"id": "mast-carriage-10", "title": "Check Carriage & Mast Rollers", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect rollers for flat spots, wear, or improper rotation."}, {"id": "mast-carriage-11", "title": "Check Mast Rails for Wear", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Look for wear, cracks, or bending along mast rails."}, {"id": "mast-carriage-12", "title": "Check Side Shift Bushings", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect side shift bushings for excessive wear or movement."}, {"id": "cooling-1", "title": "Blow Out Radiator", "section": "Cooling System", "required": true, "condition": 1, "description": "Use compressed air to remove dust and debris from the radiator fins."}, {"id": "cooling-2", "title": "Coolant Level, Condition & Leaks", "section": "Cooling System", "required": true, "condition": 1, "description": "Check coolant level, ensure coolant is clean, and inspect for leaks."}, {"id": "cooling-3", "title": "Check Radiator Condition & Shroud", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect radiator and fan shroud for damage or obstructions."}, {"id": "cooling-4", "notes": "Belt needs replaced", "title": "Check Water Pump for Leaks & Play", "section": "Cooling System", "required": true, "condition": 3, "description": "Check water pump for coolant leaks or excessive shaft play."}, {"id": "cooling-5", "notes": "Belt showing wear ", "title": "Check Belt Condition & Tension", "section": "Cooling System", "required": true, "condition": 3, "description": "Inspect all drive belts for cracks, fraying, and correct tension."}, {"id": "cooling-6", "title": "Check Fan Blade Condition", "section": "Cooling System", "required": true, "condition": 1, "description": "Examine fan blades for cracks, chips, or loose mounting."}, {"id": "cooling-7", "title": "Cooland Good To (°F)", "section": "Cooling System", "required": true, "condition": 1, "description": "Verify coolant protection is adequate for expected low temperatures using a tester."}, {"id": "fuel-1", "notes": "N/A", "title": "Check LP Tank, Hoses & Fittings", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect LP tank, hoses, and fittings for leaks, damage, or loose connections."}, {"id": "fuel-2", "notes": "N/A", "title": "Drain LPG Regulator", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain condensation from the LPG regulator per manufacturer instructions."}, {"id": "fuel-3", "notes": "N/A", "title": "Check LP System for Leaks", "section": "Fuel System", "required": true, "condition": 1, "description": "Use leak detector solution or sniffer to check LP system for leaks."}, {"id": "fuel-4", "notes": "N/A", "title": "Check LPG Lockoff Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Test LPG lockoff valve for proper engagement and operation."}, {"id": "fuel-5", "notes": "N/A", "title": "Check Carburetor & Linkages", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect carburetor and throttle/choke linkages for smooth movement and secure attachment."}, {"id": "fuel-6", "title": "Check throttle Pedal Linkages / Cable", "section": "Fuel System", "required": true, "condition": 1, "description": "Check throttle pedal linkages and cable for free movement and secure connections."}, {"id": "fuel-7", "title": "Check Governor for Proper Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect and test governor for correct operation and smooth throttle response."}, {"id": "fuel-8", "title": "Change Diesel Fuel Filters", "section": "Fuel System", "required": true, "condition": 1, "description": "Replace diesel fuel filters according to the service schedule."}, {"id": "fuel-9", "title": "Drain Water Separator / Sediment Filter", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain water separator and sediment filter of any collected water or contaminants."}, {"id": "final-inspection-1", "title": "Test Horn Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Press horn button to verify loud, consistent sound."}, {"id": "final-inspection-2", "title": "Does Back Up Alarm Sound in Reverse", "section": "Final Inspection", "required": true, "condition": 1, "description": "Shift into reverse and confirm the backup alarm activates."}, {"id": "final-inspection-3", "title": "Test Brake Lights / Turn Signals / BU Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Check that all brake lights, turn signals, and backup lights function properly."}, {"id": "final-inspection-4", "title": "Test Strobe Light for Proper Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Activate the strobe light and ensure it flashes correctly."}, {"id": "final-inspection-5", "title": "Test Seat Belt", "section": "Final Inspection", "required": true, "condition": 1, "description": "Buckle and unbuckle seat belt to confirm proper latching and release."}, {"id": "final-inspection-6", "title": "Test Operator Presence System", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm that the operator presence system disables movement when the seat is unoccupied."}, {"id": "final-inspection-7", "title": "Check All Work Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Turn on all work lights and confirm they illuminate properly."}, {"id": "final-inspection-8", "title": "Test Both Service & Parking Brake", "section": "Final Inspection", "required": true, "condition": 1, "description": "Apply both brakes and ensure they hold the forklift stationary."}, {"id": "final-inspection-9", "title": "Test Forward & Reverse Travel", "section": "Final Inspection", "required": true, "condition": 1, "description": "Drive forklift forward and in reverse to confirm smooth operation."}, {"id": "final-inspection-10", "title": "Test All Hydraulic Functions", "section": "Final Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic controls and ensure smooth, correct response."}, {"id": "final-inspection-11", "title": "Test Seat Belt Alarm", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm seat belt alarm sounds if the seat belt is not engaged during operation."}, {"id": "final-inspection-12", "title": "Wipe Down Forklift, Dash Area", "section": "Final Inspection", "required": true, "condition": 1, "description": "Clean the forklift and dashboard area of dirt and debris."}, {"id": "final-inspection-13", "title": "Install PM Sticker", "section": "Final Inspection", "required": true, "condition": 1, "description": "Place the preventative maintenance sticker in the designated area to indicate service is complete."}]	Doosan 251\n3689.1 hours. Needs new seat, seat completely destroyed. Chains at less then .5% wear. Recommend alternator belt replacemnt, worn. 	f	\N	\N	\N
d6d4884b-df6f-469a-9617-b007b6ed7374	3b9b5bd9-2f26-4d5a-8a7f-88ae3f5ff1b9	bf8dea0a-eeff-417d-8af9-097865692fca	5a54dd83-f546-4149-8ff5-d44cbc570217	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-11 17:29:56.508579+00	2025-08-04 00:48:38.347404+00	2025-08-04 00:48:38.606+00	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	completed	[{"id": "visual-1", "notes": "Slight valve cover leak", "title": "Oil/Coolant Leaks", "section": "Visual Inspection", "required": true, "condition": 3, "description": "Inspect under and around the forklift for signs of oil or coolant leaks."}, {"id": "visual-2", "title": "Carriage, Mast & LBR Assembly", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Examine the carriage, mast, and load backrest for damage, cracks, or deformation."}, {"id": "visaul-3", "title": "Forks and Fork Pins", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check that forks and fork pins are straight, undamaged, and securely attached."}, {"id": "visual-4", "notes": "Slight hose leak from extension assembly", "title": "Mast Chains, Rollers & Hoses", "section": "Visual Inspection", "required": true, "condition": 3, "description": "Inspect mast chains, rollers, and hoses for wear, proper tension, and leaks."}, {"id": "visaul-5", "title": "Tire & Wheel Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect tires and wheels for cuts, excessive wear, or missing lug nuts."}, {"id": "visual-6", "title": "Seat & Seat Belt Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Ensure seat and seat belt are present, undamaged, and functioning properly."}, {"id": "visual-7", "title": "Decals & Capacity Plates", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Verify that all safety decals and capacity plates are present and legible."}, {"id": "visual-8", "title": "Overhead Guard Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check the overhead guard for bends, cracks, or missing hardware."}, {"id": "visual-9", "title": "Check Cylinders for Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect all visible hydraulic cylinders for leaks or damage."}, {"id": "engine-compartment-1", "title": "Blow Out Engine Compartment", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Use compressed air to clean debris and dust from the engine compartment."}, {"id": "engine-compartment-2", "title": "Check Condition of Air Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect and replace the air filter if dirty or clogged."}, {"id": "engine-compartment-3", "title": "Change Engine Oil & Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Drain engine oil, replace with new oil, and install a new oil filter as specified."}, {"id": "engine-compartment-4", "title": "Check hood Latch, Hinges & Hood Strut", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Confirm hood latch, hinges, and strut function smoothly and securely."}, {"id": "engine-compartment-5", "title": "Inspect Air Intake Hoses & Clamps", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine air intake hoses and clamps for cracks, leaks, or loose fittings."}, {"id": "engine-compartment-6", "title": "Check Ring Gear Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect ring gear for visible damage or abnormal wear."}, {"id": "engine-compartment-7", "title": "Check Hood Insulation & Hood Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Ensure hood insulation is intact and hood is free of damage."}, {"id": "engine-compartment-8", "title": "Engine Noise / Smoke / Idle RPMs", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Start the engine and check for abnormal noises, smoke, or incorrect idle speed."}, {"id": "engine-compartment-9", "title": "Exhaust System / Muffler / Catalyst", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine the exhaust system, muffler, and catalyst for leaks, noise, or damage."}, {"id": "engine-compartment-10", "notes": "Slight valve cover leak", "title": "Check for Engine Oil Leaks", "section": "Engine Compartment", "required": true, "condition": 3, "description": "Look for evidence of engine oil leaks under and around the engine."}, {"id": "engine-compartment-11", "title": "Check Vacuum Lines / PCV Valve", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect vacuum lines and PCV valve for cracks, leaks, or blockages."}, {"id": "electrical-1", "title": "Check Headlights, Strobe, Taillights", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Verify all headlights, taillights, and strobe lights operate correctly."}, {"id": "electrical-2", "title": "Clean Battery Terminals / Load Test", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Clean corrosion from battery terminals and perform a battery load test."}, {"id": "electrical-3", "title": "Inspect Wire Harness / Connections", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Check wire harnesses and electrical connections for wear or loose fittings."}, {"id": "electrical-4", "title": "Check Neutral Safety Switch", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Test the neutral safety switch for correct operation."}, {"id": "electrical-5", "title": "Check All Gauges & Hour Meter", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Ensure all dashboard gauges and the hour meter function accurately."}, {"id": "electrical-6", "title": "Condition of Fuse Panel / Relay Box", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Open and inspect the fuse panel and relay box for corrosion, damage, or missing fuses."}, {"id": "electrical-7", "title": "Inspect Alternator / Record Voltage", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Inspect the alternator for damage and record operating voltage output."}, {"id": "hydraulic-1", "title": "Inspect Fluid Level & Quality", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic fluid level and assess fluid for contamination or discoloration."}, {"id": "hydraulic-2", "title": "Inspect Pump / Control Valve", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Visually inspect pump and control valve for leaks or damage."}, {"id": "hydraulic-3", "title": "Check Hydraulic Valve Levers", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic levers to ensure smooth and proper function."}, {"id": "hydraulic-4", "title": "Check Pump Drive Shaft & U-Joints", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Inspect the pump drive shaft and U-joints for wear or looseness."}, {"id": "hydraulic-5", "notes": "Missing hydraulic tank cap", "title": "Remove & Clean / Replace Tank Breather", "section": "Hydraulic Inspection", "required": true, "condition": 3, "description": "Remove the tank breather, clean or replace as needed."}, {"id": "hydraulic-6", "notes": "Slight leak on extension hoses", "title": "Inspect All Hoses & Fittings", "section": "Hydraulic Inspection", "required": true, "condition": 3, "description": "Examine all hydraulic hoses and fittings for cracks, leaks, or abrasion."}, {"id": "hydraulic-7", "title": "Inspect Cylinders for Leaks", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic cylinders for oil leaks or physical damage."}, {"id": "brakes-1", "title": "Check Fluid Level & Quality", "section": "Brake", "required": true, "condition": 1, "description": "Inspect the brake fluid reservoir for proper level and clear, uncontaminated fluid."}, {"id": "brakes-2", "title": "Test PB Operation, Check Cables", "section": "Brake", "required": true, "condition": 1, "description": "Test parking brake operation and inspect cables for wear or binding."}, {"id": "brakes-3", "title": "Test Service Brake Operation", "section": "Brake", "required": true, "condition": 1, "description": "Depress the service brake and confirm the forklift stops smoothly and promptly."}, {"id": "brakes-4", "title": "Check Pedal Pads & Inching Pedal Cables", "section": "Brake", "required": true, "condition": 1, "description": "Inspect pedal pads for wear and inching pedal cables for proper function."}, {"id": "brakes-5", "title": "Check Wheels & Cylinder for Leaks", "section": "Brake", "required": true, "condition": 1, "description": "Look for brake fluid leaks around wheel cylinders and brake assemblies."}, {"id": "brakes-6", "title": "Check Brake / Inching Pedal Linkage", "section": "Brake", "required": true, "condition": 1, "description": "Inspect brake and inching pedal linkage for looseness or damage."}, {"id": "brakes-7", "title": "Check Brak / Inching Pedal Free Play", "section": "Brake", "required": true, "condition": 1, "description": "Verify correct amount of free play in brake and inching pedals."}, {"id": "steering-1", "title": "Inspect Steering Cylinder for Leaks", "section": "Steering", "required": true, "condition": 1, "description": "Check steering cylinder for hydraulic leaks or visible damage."}, {"id": "steering-2", "title": "Inspect Gear Box & Steer Column", "section": "Steering", "required": true, "condition": 1, "description": "Inspect the steering gear box and column for proper operation and leaks."}, {"id": "steering-3", "title": "Check King Pins & Spindles", "section": "Steering", "required": true, "condition": 1, "description": "Check king pins and spindles for excessive play or wear."}, {"id": "steering-4", "title": "Test Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Spin and rock steer wheels to check for noisy or loose bearings."}, {"id": "steering-5", "title": "Check Steer Axle Mounts & Stops", "section": "Steering", "required": true, "condition": 1, "description": "Ensure steer axle mounts and stops are secure and undamaged."}, {"id": "steering-6", "title": "Check Steering tie Rods & Pings", "section": "Steering", "required": true, "condition": 1, "description": "Inspect tie rods and pins for looseness or excessive wear."}, {"id": "steering-7", "title": "Check Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Verify steer wheel bearings turn smoothly without noise or resistance."}, {"id": "steering-8", "title": "Inspect Steer Wheel Lug Nuts / Rim / Cap", "section": "Steering", "required": true, "condition": 1, "description": "Check steer wheel lug nuts for tightness and inspect rim/cap for damage."}, {"id": "steering-9", "title": "Check Steering Hoses at Cylinder & Box", "section": "Steering", "required": true, "condition": 1, "description": "Inspect steering hoses at both the cylinder and box for leaks or wear."}, {"id": "differential-transmission-1", "title": "Check Fluid Levels & Condition", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect differential and transmission fluid levels and assess for contamination."}, {"id": "differential-transmission-2", "title": "Check for Abnormal Noise", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Listen for unusual noises from differential or transmission during operation."}, {"id": "differential-transmission-3", "title": "Check Drive Wheel Bearings & Lug Nuts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect drive wheel bearings for play and verify lug nuts are tight."}, {"id": "differential-transmission-4", "title": "Check Mounts & Bolts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Check that all mounts and bolts are secure and undamaged."}, {"id": "differential-transmission-5", "title": "Check for Leaks", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect the differential and transmission for signs of oil leaks."}, {"id": "differential-transmission-6", "title": "Check Drive Shaft & U-Joints", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Examine drive shaft and U-joints for excessive play or wear."}, {"id": "differential-transmission-7", "title": "Check Shift Lever Linkage / Cables", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Test shift lever linkage and cables for proper adjustment and smooth operation."}, {"id": "differential-transmission-8", "title": "Replace Fluid & Filters per OEM Spec", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Replace differential and transmission fluids and filters according to manufacturer specification."}, {"id": "ignition-1", "title": "Test Ignition Switch", "section": "Ignition System", "required": true, "condition": 1, "description": "Turn the ignition switch to verify smooth operation and proper start."}, {"id": "ignition-2", "title": "Check Coil / Coil Packs", "section": "Ignition System", "required": true, "condition": 1, "description": "Inspect ignition coil or coil packs for damage or signs of arcing."}, {"id": "ignition-3", "title": "Check Distributor Cap & Rotor", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and check distributor cap and rotor for wear or corrosion."}, {"id": "ignition-4", "title": "Check Spark Plug Condition & Wires", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and inspect spark plugs and wires for fouling or damage."}, {"id": "mast-carriage-1", "title": "Check Lift Chains & Anchors", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect lift chains and anchors for wear, proper lubrication, and correct tension."}, {"id": "mast-carriage-2", "title": "Check Cylinders for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine all mast cylinders for hydraulic leaks or damage."}, {"id": "mast-carriage-3", "title": "Check Cylinder Brackets", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect cylinder brackets for secure attachment and absence of cracks."}, {"id": "mast-carriage-4", "title": "Check Hose Pulleys & Chain / Hose Guards", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check that hose pulleys, chain guards, and hose guards are intact and functional."}, {"id": "mast-carriage-5", "title": "Check Tilt Cylinder Mounts & Pins", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Verify tilt cylinder mounts and pins are secure and show no excessive wear."}, {"id": "mast-carriage-6", "title": "Check Trunion Bushings / Mounts", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect trunion bushings and mounts for wear or looseness."}, {"id": "mast-carriage-7", "title": "Check Forks, Pins & Carriage Condition", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine forks, pins, and carriage for cracks, bending, or other defects."}, {"id": "mast-carriage-8", "notes": "Slight leak at extension slide", "title": "Check Hoses for Leaks", "section": "Mast & Carriage", "required": true, "condition": 3, "description": "Inspect hydraulic hoses on mast and carriage for leaks, abrasion, or damage."}, {"id": "mast-carriage-9", "title": "Check Mast Shims & Side Play", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check mast shims for tightness and look for excessive side play in mast."}, {"id": "mast-carriage-10", "title": "Check Carriage & Mast Rollers", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect rollers for flat spots, wear, or improper rotation."}, {"id": "mast-carriage-11", "title": "Check Mast Rails for Wear", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Look for wear, cracks, or bending along mast rails."}, {"id": "mast-carriage-12", "title": "Check Side Shift Bushings", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect side shift bushings for excessive wear or movement."}, {"id": "cooling-1", "title": "Blow Out Radiator", "section": "Cooling System", "required": true, "condition": 1, "description": "Use compressed air to remove dust and debris from the radiator fins."}, {"id": "cooling-2", "title": "Coolant Level, Condition & Leaks", "section": "Cooling System", "required": true, "condition": 1, "description": "Check coolant level, ensure coolant is clean, and inspect for leaks."}, {"id": "cooling-3", "title": "Check Radiator Condition & Shroud", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect radiator and fan shroud for damage or obstructions."}, {"id": "cooling-4", "title": "Check Water Pump for Leaks & Play", "section": "Cooling System", "required": true, "condition": 1, "description": "Check water pump for coolant leaks or excessive shaft play."}, {"id": "cooling-5", "title": "Check Belt Condition & Tension", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect all drive belts for cracks, fraying, and correct tension."}, {"id": "cooling-6", "title": "Check Fan Blade Condition", "section": "Cooling System", "required": true, "condition": 1, "description": "Examine fan blades for cracks, chips, or loose mounting."}, {"id": "cooling-7", "title": "Cooland Good To (°F)", "section": "Cooling System", "required": true, "condition": 1, "description": "Verify coolant protection is adequate for expected low temperatures using a tester."}, {"id": "fuel-1", "notes": "N/a", "title": "Check LP Tank, Hoses & Fittings", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect LP tank, hoses, and fittings for leaks, damage, or loose connections."}, {"id": "fuel-2", "notes": "N/a", "title": "Drain LPG Regulator", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain condensation from the LPG regulator per manufacturer instructions."}, {"id": "fuel-3", "notes": "N/a", "title": "Check LP System for Leaks", "section": "Fuel System", "required": true, "condition": 1, "description": "Use leak detector solution or sniffer to check LP system for leaks."}, {"id": "fuel-4", "notes": "N/a", "title": "Check LPG Lockoff Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Test LPG lockoff valve for proper engagement and operation."}, {"id": "fuel-5", "notes": "N/a", "title": "Check Carburetor & Linkages", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect carburetor and throttle/choke linkages for smooth movement and secure attachment."}, {"id": "fuel-6", "title": "Check throttle Pedal Linkages / Cable", "section": "Fuel System", "required": true, "condition": 1, "description": "Check throttle pedal linkages and cable for free movement and secure connections."}, {"id": "fuel-7", "title": "Check Governor for Proper Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect and test governor for correct operation and smooth throttle response."}, {"id": "fuel-8", "title": "Change Diesel Fuel Filters", "section": "Fuel System", "required": true, "condition": 1, "description": "Replace diesel fuel filters according to the service schedule."}, {"id": "fuel-9", "title": "Drain Water Separator / Sediment Filter", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain water separator and sediment filter of any collected water or contaminants."}, {"id": "final-inspection-1", "title": "Test Horn Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Press horn button to verify loud, consistent sound."}, {"id": "final-inspection-2", "title": "Does Back Up Alarm Sound in Reverse", "section": "Final Inspection", "required": true, "condition": 1, "description": "Shift into reverse and confirm the backup alarm activates."}, {"id": "final-inspection-3", "title": "Test Brake Lights / Turn Signals / BU Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Check that all brake lights, turn signals, and backup lights function properly."}, {"id": "final-inspection-4", "title": "Test Strobe Light for Proper Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Activate the strobe light and ensure it flashes correctly."}, {"id": "final-inspection-5", "title": "Test Seat Belt", "section": "Final Inspection", "required": true, "condition": 1, "description": "Buckle and unbuckle seat belt to confirm proper latching and release."}, {"id": "final-inspection-6", "title": "Test Operator Presence System", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm that the operator presence system disables movement when the seat is unoccupied."}, {"id": "final-inspection-7", "notes": "Front lights not working", "title": "Check All Work Lights", "section": "Final Inspection", "required": true, "condition": 3, "description": "Turn on all work lights and confirm they illuminate properly."}, {"id": "final-inspection-8", "title": "Test Both Service & Parking Brake", "section": "Final Inspection", "required": true, "condition": 1, "description": "Apply both brakes and ensure they hold the forklift stationary."}, {"id": "final-inspection-9", "title": "Test Forward & Reverse Travel", "section": "Final Inspection", "required": true, "condition": 1, "description": "Drive forklift forward and in reverse to confirm smooth operation."}, {"id": "final-inspection-10", "title": "Test All Hydraulic Functions", "section": "Final Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic controls and ensure smooth, correct response."}, {"id": "final-inspection-11", "title": "Test Seat Belt Alarm", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm seat belt alarm sounds if the seat belt is not engaged during operation."}, {"id": "final-inspection-12", "title": "Wipe Down Forklift, Dash Area", "section": "Final Inspection", "required": true, "condition": 1, "description": "Clean the forklift and dashboard area of dirt and debris."}, {"id": "final-inspection-13", "title": "Install PM Sticker", "section": "Final Inspection", "required": true, "condition": 1, "description": "Place the preventative maintenance sticker in the designated area to indicate service is complete."}]	Princton 3604\n\nMachine hours 60.1 \nMachine hour meter not working.	f	\N	\N	\N
96d3ca47-8326-46ba-9a5a-3c473ccbb108	77faa43b-33ab-428d-a52f-3775c04f82d5	211c9a38-b65b-4043-a96e-58460799b21a	5a54dd83-f546-4149-8ff5-d44cbc570217	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-10 18:18:17.107519+00	2025-08-04 00:49:21.674233+00	2025-08-04 00:49:14.661+00	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	in_progress	[{"id": "visual-1", "title": "Oil/Coolant Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect under and around the forklift for signs of oil or coolant leaks."}, {"id": "visual-2", "title": "Carriage, Mast & LBR Assembly", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Examine the carriage, mast, and load backrest for damage, cracks, or deformation."}, {"id": "visaul-3", "title": "Forks and Fork Pins", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check that forks and fork pins are straight, undamaged, and securely attached."}, {"id": "visual-4", "title": "Mast Chains, Rollers & Hoses", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect mast chains, rollers, and hoses for wear, proper tension, and leaks."}, {"id": "visaul-5", "title": "Tire & Wheel Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect tires and wheels for cuts, excessive wear, or missing lug nuts."}, {"id": "visual-6", "title": "Seat & Seat Belt Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Ensure seat and seat belt are present, undamaged, and functioning properly."}, {"id": "visual-7", "title": "Decals & Capacity Plates", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Verify that all safety decals and capacity plates are present and legible."}, {"id": "visual-8", "title": "Overhead Guard Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check the overhead guard for bends, cracks, or missing hardware."}, {"id": "visual-9", "title": "Check Cylinders for Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect all visible hydraulic cylinders for leaks or damage."}, {"id": "engine-compartment-1", "title": "Blow Out Engine Compartment", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Use compressed air to clean debris and dust from the engine compartment."}, {"id": "engine-compartment-2", "title": "Check Condition of Air Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect and replace the air filter if dirty or clogged."}, {"id": "engine-compartment-3", "title": "Change Engine Oil & Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Drain engine oil, replace with new oil, and install a new oil filter as specified."}, {"id": "engine-compartment-4", "title": "Check hood Latch, Hinges & Hood Strut", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Confirm hood latch, hinges, and strut function smoothly and securely."}, {"id": "engine-compartment-5", "title": "Inspect Air Intake Hoses & Clamps", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine air intake hoses and clamps for cracks, leaks, or loose fittings."}, {"id": "engine-compartment-6", "title": "Check Ring Gear Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect ring gear for visible damage or abnormal wear."}, {"id": "engine-compartment-7", "title": "Check Hood Insulation & Hood Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Ensure hood insulation is intact and hood is free of damage."}, {"id": "engine-compartment-8", "title": "Engine Noise / Smoke / Idle RPMs", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Start the engine and check for abnormal noises, smoke, or incorrect idle speed."}, {"id": "engine-compartment-9", "title": "Exhaust System / Muffler / Catalyst", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine the exhaust system, muffler, and catalyst for leaks, noise, or damage."}, {"id": "engine-compartment-10", "title": "Check for Engine Oil Leaks", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Look for evidence of engine oil leaks under and around the engine."}, {"id": "engine-compartment-11", "title": "Check Vacuum Lines / PCV Valve", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect vacuum lines and PCV valve for cracks, leaks, or blockages."}, {"id": "electrical-1", "title": "Check Headlights, Strobe, Taillights", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Verify all headlights, taillights, and strobe lights operate correctly."}, {"id": "electrical-2", "title": "Clean Battery Terminals / Load Test", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Clean corrosion from battery terminals and perform a battery load test."}, {"id": "electrical-3", "title": "Inspect Wire Harness / Connections", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Check wire harnesses and electrical connections for wear or loose fittings."}, {"id": "electrical-4", "title": "Check Neutral Safety Switch", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Test the neutral safety switch for correct operation."}, {"id": "electrical-5", "title": "Check All Gauges & Hour Meter", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Ensure all dashboard gauges and the hour meter function accurately."}, {"id": "electrical-6", "title": "Condition of Fuse Panel / Relay Box", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Open and inspect the fuse panel and relay box for corrosion, damage, or missing fuses."}, {"id": "electrical-7", "title": "Inspect Alternator / Record Voltage", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Inspect the alternator for damage and record operating voltage output."}, {"id": "hydraulic-1", "title": "Inspect Fluid Level & Quality", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic fluid level and assess fluid for contamination or discoloration."}, {"id": "hydraulic-2", "title": "Inspect Pump / Control Valve", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Visually inspect pump and control valve for leaks or damage."}, {"id": "hydraulic-3", "title": "Check Hydraulic Valve Levers", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic levers to ensure smooth and proper function."}, {"id": "hydraulic-4", "title": "Check Pump Drive Shaft & U-Joints", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Inspect the pump drive shaft and U-joints for wear or looseness."}, {"id": "hydraulic-5", "notes": "Slight leak from tank. Tightened tank cover bolts", "title": "Remove & Clean / Replace Tank Breather", "section": "Hydraulic Inspection", "required": true, "condition": 2, "description": "Remove the tank breather, clean or replace as needed."}, {"id": "hydraulic-6", "title": "Inspect All Hoses & Fittings", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Examine all hydraulic hoses and fittings for cracks, leaks, or abrasion."}, {"id": "hydraulic-7", "title": "Inspect Cylinders for Leaks", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic cylinders for oil leaks or physical damage."}, {"id": "brakes-1", "title": "Check Fluid Level & Quality", "section": "Brake", "required": true, "condition": 1, "description": "Inspect the brake fluid reservoir for proper level and clear, uncontaminated fluid."}, {"id": "brakes-2", "title": "Test PB Operation, Check Cables", "section": "Brake", "required": true, "condition": 1, "description": "Test parking brake operation and inspect cables for wear or binding."}, {"id": "brakes-3", "title": "Test Service Brake Operation", "section": "Brake", "required": true, "condition": 1, "description": "Depress the service brake and confirm the forklift stops smoothly and promptly."}, {"id": "brakes-4", "title": "Check Pedal Pads & Inching Pedal Cables", "section": "Brake", "required": true, "condition": 1, "description": "Inspect pedal pads for wear and inching pedal cables for proper function."}, {"id": "brakes-5", "title": "Check Wheels & Cylinder for Leaks", "section": "Brake", "required": true, "condition": 1, "description": "Look for brake fluid leaks around wheel cylinders and brake assemblies."}, {"id": "brakes-6", "title": "Check Brake / Inching Pedal Linkage", "section": "Brake", "required": true, "condition": 1, "description": "Inspect brake and inching pedal linkage for looseness or damage."}, {"id": "brakes-7", "title": "Check Brak / Inching Pedal Free Play", "section": "Brake", "required": true, "condition": 1, "description": "Verify correct amount of free play in brake and inching pedals."}, {"id": "steering-1", "title": "Inspect Steering Cylinder for Leaks", "section": "Steering", "required": true, "condition": 1, "description": "Check steering cylinder for hydraulic leaks or visible damage."}, {"id": "steering-2", "title": "Inspect Gear Box & Steer Column", "section": "Steering", "required": true, "condition": 1, "description": "Inspect the steering gear box and column for proper operation and leaks."}, {"id": "steering-3", "title": "Check King Pins & Spindles", "section": "Steering", "required": true, "condition": 1, "description": "Check king pins and spindles for excessive play or wear."}, {"id": "steering-4", "title": "Test Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Spin and rock steer wheels to check for noisy or loose bearings."}, {"id": "steering-5", "title": "Check Steer Axle Mounts & Stops", "section": "Steering", "required": true, "condition": 1, "description": "Ensure steer axle mounts and stops are secure and undamaged."}, {"id": "steering-6", "title": "Check Steering tie Rods & Pings", "section": "Steering", "required": true, "condition": 1, "description": "Inspect tie rods and pins for looseness or excessive wear."}, {"id": "steering-7", "title": "Check Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Verify steer wheel bearings turn smoothly without noise or resistance."}, {"id": "steering-8", "title": "Inspect Steer Wheel Lug Nuts / Rim / Cap", "section": "Steering", "required": true, "condition": 1, "description": "Check steer wheel lug nuts for tightness and inspect rim/cap for damage."}, {"id": "steering-9", "title": "Check Steering Hoses at Cylinder & Box", "section": "Steering", "required": true, "condition": 1, "description": "Inspect steering hoses at both the cylinder and box for leaks or wear."}, {"id": "differential-transmission-1", "title": "Check Fluid Levels & Condition", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect differential and transmission fluid levels and assess for contamination."}, {"id": "differential-transmission-2", "title": "Check for Abnormal Noise", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Listen for unusual noises from differential or transmission during operation."}, {"id": "differential-transmission-3", "title": "Check Drive Wheel Bearings & Lug Nuts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect drive wheel bearings for play and verify lug nuts are tight."}, {"id": "differential-transmission-4", "title": "Check Mounts & Bolts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Check that all mounts and bolts are secure and undamaged."}, {"id": "differential-transmission-5", "title": "Check for Leaks", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect the differential and transmission for signs of oil leaks."}, {"id": "differential-transmission-6", "title": "Check Drive Shaft & U-Joints", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Examine drive shaft and U-joints for excessive play or wear."}, {"id": "differential-transmission-7", "title": "Check Shift Lever Linkage / Cables", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Test shift lever linkage and cables for proper adjustment and smooth operation."}, {"id": "differential-transmission-8", "title": "Replace Fluid & Filters per OEM Spec", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Replace differential and transmission fluids and filters according to manufacturer specification."}, {"id": "ignition-1", "title": "Test Ignition Switch", "section": "Ignition System", "required": true, "condition": 1, "description": "Turn the ignition switch to verify smooth operation and proper start."}, {"id": "ignition-2", "notes": "N/A", "title": "Check Coil / Coil Packs", "section": "Ignition System", "required": true, "condition": 1, "description": "Inspect ignition coil or coil packs for damage or signs of arcing."}, {"id": "ignition-3", "notes": "N/A", "title": "Check Distributor Cap & Rotor", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and check distributor cap and rotor for wear or corrosion."}, {"id": "ignition-4", "notes": "N/A", "title": "Check Spark Plug Condition & Wires", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and inspect spark plugs and wires for fouling or damage."}, {"id": "mast-carriage-1", "notes": "Adjusted lift chains. Left side loose. \\nFree lift Chains at 1% stretch \\nTwin cylinders chains at .5% stretch", "title": "Check Lift Chains & Anchors", "section": "Mast & Carriage", "required": true, "condition": 2, "description": "Inspect lift chains and anchors for wear, proper lubrication, and correct tension."}, {"id": "mast-carriage-2", "title": "Check Cylinders for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine all mast cylinders for hydraulic leaks or damage."}, {"id": "mast-carriage-3", "title": "Check Cylinder Brackets", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect cylinder brackets for secure attachment and absence of cracks."}, {"id": "mast-carriage-4", "title": "Check Hose Pulleys & Chain / Hose Guards", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check that hose pulleys, chain guards, and hose guards are intact and functional."}, {"id": "mast-carriage-5", "title": "Check Tilt Cylinder Mounts & Pins", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Verify tilt cylinder mounts and pins are secure and show no excessive wear."}, {"id": "mast-carriage-6", "title": "Check Trunion Bushings / Mounts", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect trunion bushings and mounts for wear or looseness."}, {"id": "mast-carriage-7", "title": "Check Forks, Pins & Carriage Condition", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine forks, pins, and carriage for cracks, bending, or other defects."}, {"id": "mast-carriage-8", "title": "Check Hoses for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect hydraulic hoses on mast and carriage for leaks, abrasion, or damage."}, {"id": "mast-carriage-9", "title": "Check Mast Shims & Side Play", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check mast shims for tightness and look for excessive side play in mast."}, {"id": "mast-carriage-10", "title": "Check Carriage & Mast Rollers", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect rollers for flat spots, wear, or improper rotation."}, {"id": "mast-carriage-11", "title": "Check Mast Rails for Wear", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Look for wear, cracks, or bending along mast rails."}, {"id": "mast-carriage-12", "title": "Check Side Shift Bushings", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect side shift bushings for excessive wear or movement."}, {"id": "cooling-1", "title": "Blow Out Radiator", "section": "Cooling System", "required": true, "condition": 1, "description": "Use compressed air to remove dust and debris from the radiator fins."}, {"id": "cooling-2", "title": "Coolant Level, Condition & Leaks", "section": "Cooling System", "required": true, "condition": 1, "description": "Check coolant level, ensure coolant is clean, and inspect for leaks."}, {"id": "cooling-3", "title": "Check Radiator Condition & Shroud", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect radiator and fan shroud for damage or obstructions."}, {"id": "cooling-4", "title": "Check Water Pump for Leaks & Play", "section": "Cooling System", "required": true, "condition": 1, "description": "Check water pump for coolant leaks or excessive shaft play."}, {"id": "cooling-5", "title": "Check Belt Condition & Tension", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect all drive belts for cracks, fraying, and correct tension."}, {"id": "cooling-6", "title": "Check Fan Blade Condition", "section": "Cooling System", "required": true, "condition": 1, "description": "Examine fan blades for cracks, chips, or loose mounting."}, {"id": "cooling-7", "title": "Cooland Good To (°F)", "section": "Cooling System", "required": true, "condition": 1, "description": "Verify coolant protection is adequate for expected low temperatures using a tester."}, {"id": "fuel-1", "notes": "N/A", "title": "Check LP Tank, Hoses & Fittings", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect LP tank, hoses, and fittings for leaks, damage, or loose connections."}, {"id": "fuel-2", "notes": "N/A", "title": "Drain LPG Regulator", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain condensation from the LPG regulator per manufacturer instructions."}, {"id": "fuel-3", "notes": "N/A", "title": "Check LP System for Leaks", "section": "Fuel System", "required": true, "condition": 1, "description": "Use leak detector solution or sniffer to check LP system for leaks."}, {"id": "fuel-4", "notes": "N/A", "title": "Check LPG Lockoff Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Test LPG lockoff valve for proper engagement and operation."}, {"id": "fuel-5", "title": "Check Carburetor & Linkages", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect carburetor and throttle/choke linkages for smooth movement and secure attachment."}, {"id": "fuel-6", "title": "Check throttle Pedal Linkages / Cable", "section": "Fuel System", "required": true, "condition": 1, "description": "Check throttle pedal linkages and cable for free movement and secure connections."}, {"id": "fuel-7", "title": "Check Governor for Proper Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect and test governor for correct operation and smooth throttle response."}, {"id": "fuel-8", "title": "Change Diesel Fuel Filters", "section": "Fuel System", "required": true, "condition": 1, "description": "Replace diesel fuel filters according to the service schedule."}, {"id": "fuel-9", "title": "Drain Water Separator / Sediment Filter", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain water separator and sediment filter of any collected water or contaminants."}, {"id": "final-inspection-1", "title": "Test Horn Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Press horn button to verify loud, consistent sound."}, {"id": "final-inspection-2", "title": "Does Back Up Alarm Sound in Reverse", "section": "Final Inspection", "required": true, "condition": 1, "description": "Shift into reverse and confirm the backup alarm activates."}, {"id": "final-inspection-3", "title": "Test Brake Lights / Turn Signals / BU Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Check that all brake lights, turn signals, and backup lights function properly."}, {"id": "final-inspection-4", "title": "Test Strobe Light for Proper Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Activate the strobe light and ensure it flashes correctly."}, {"id": "final-inspection-5", "title": "Test Seat Belt", "section": "Final Inspection", "required": true, "condition": 1, "description": "Buckle and unbuckle seat belt to confirm proper latching and release."}, {"id": "final-inspection-6", "title": "Test Operator Presence System", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm that the operator presence system disables movement when the seat is unoccupied."}, {"id": "final-inspection-7", "title": "Check All Work Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Turn on all work lights and confirm they illuminate properly."}, {"id": "final-inspection-8", "title": "Test Both Service & Parking Brake", "section": "Final Inspection", "required": true, "condition": 1, "description": "Apply both brakes and ensure they hold the forklift stationary."}, {"id": "final-inspection-9", "title": "Test Forward & Reverse Travel", "section": "Final Inspection", "required": true, "condition": 1, "description": "Drive forklift forward and in reverse to confirm smooth operation."}, {"id": "final-inspection-10", "title": "Test All Hydraulic Functions", "section": "Final Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic controls and ensure smooth, correct response."}, {"id": "final-inspection-11", "title": "Test Seat Belt Alarm", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm seat belt alarm sounds if the seat belt is not engaged during operation."}, {"id": "final-inspection-12", "title": "Wipe Down Forklift, Dash Area", "section": "Final Inspection", "required": true, "condition": 1, "description": "Clean the forklift and dashboard area of dirt and debris."}, {"id": "final-inspection-13", "title": "Install PM Sticker", "section": "Final Inspection", "required": true, "condition": 1, "description": "Place the preventative maintenance sticker in the designated area to indicate service is complete."}]	Doosan 2514\nHours 3831 \nSmall leak at Hydraulic tank, tightened bolts will monitor. Adjusted lift chains.	f	\N	\N	\N
55e2e453-c8af-47d5-b50a-b5ba4210f1a1	07847920-a85c-4d81-b6e4-59ed94519ad1	e1064edd-c3ae-492f-9ff1-91d8abfffb47	5a54dd83-f546-4149-8ff5-d44cbc570217	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-02 15:57:30.504631+00	2025-08-04 05:22:53.800917+00	2025-08-04 05:22:54.013+00	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	completed	[{"id": "visual-1", "notes": "Slight valve cover leak", "title": "Oil/Coolant Leaks", "section": "Visual Inspection", "required": true, "condition": 3, "description": "Inspect under and around the forklift for signs of oil or coolant leaks."}, {"id": "visual-2", "notes": "Slight cosmetic to front mast crossbar. No cracks observed. ", "title": "Carriage, Mast & LBR Assembly", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Examine the carriage, mast, and load backrest for damage, cracks, or deformation."}, {"id": "visaul-3", "title": "Forks and Fork Pins", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check that forks and fork pins are straight, undamaged, and securely attached."}, {"id": "visual-4", "title": "Mast Chains, Rollers & Hoses", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect mast chains, rollers, and hoses for wear, proper tension, and leaks."}, {"id": "visaul-5", "notes": "Tires above 50% wear marks ", "title": "Tire & Wheel Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect tires and wheels for cuts, excessive wear, or missing lug nuts."}, {"id": "visual-6", "notes": "Seat worn with foam showing. Recommend replacing.", "title": "Seat & Seat Belt Condition", "section": "Visual Inspection", "required": true, "condition": 3, "description": "Ensure seat and seat belt are present, undamaged, and functioning properly."}, {"id": "visual-7", "title": "Decals & Capacity Plates", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Verify that all safety decals and capacity plates are present and legible."}, {"id": "visual-8", "title": "Overhead Guard Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check the overhead guard for bends, cracks, or missing hardware."}, {"id": "visual-9", "title": "Check Cylinders for Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect all visible hydraulic cylinders for leaks or damage."}, {"id": "engine-compartment-1", "title": "Blow Out Engine Compartment", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Use compressed air to clean debris and dust from the engine compartment."}, {"id": "engine-compartment-2", "title": "Check Condition of Air Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect and replace the air filter if dirty or clogged."}, {"id": "engine-compartment-3", "title": "Change Engine Oil & Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Drain engine oil, replace with new oil, and install a new oil filter as specified."}, {"id": "engine-compartment-4", "notes": "Rear cover missing ", "title": "Check hood Latch, Hinges & Hood Strut", "section": "Engine Compartment", "required": true, "condition": 3, "description": "Confirm hood latch, hinges, and strut function smoothly and securely."}, {"id": "engine-compartment-5", "title": "Inspect Air Intake Hoses & Clamps", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine air intake hoses and clamps for cracks, leaks, or loose fittings."}, {"id": "engine-compartment-6", "title": "Check Ring Gear Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect ring gear for visible damage or abnormal wear."}, {"id": "engine-compartment-7", "notes": "Rear cover missing and hardware broken.", "title": "Check Hood Insulation & Hood Condition", "section": "Engine Compartment", "required": true, "condition": 3, "description": "Ensure hood insulation is intact and hood is free of damage."}, {"id": "engine-compartment-8", "title": "Engine Noise / Smoke / Idle RPMs", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Start the engine and check for abnormal noises, smoke, or incorrect idle speed."}, {"id": "engine-compartment-9", "title": "Exhaust System / Muffler / Catalyst", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine the exhaust system, muffler, and catalyst for leaks, noise, or damage."}, {"id": "engine-compartment-10", "notes": "Slight valve cover leak", "title": "Check for Engine Oil Leaks", "section": "Engine Compartment", "required": true, "condition": 3, "description": "Look for evidence of engine oil leaks under and around the engine."}, {"id": "engine-compartment-11", "title": "Check Vacuum Lines / PCV Valve", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect vacuum lines and PCV valve for cracks, leaks, or blockages."}, {"id": "electrical-1", "notes": "Front lights not working", "title": "Check Headlights, Strobe, Taillights", "section": "Electrical Inspection", "required": true, "condition": 3, "description": "Verify all headlights, taillights, and strobe lights operate correctly."}, {"id": "electrical-2", "title": "Clean Battery Terminals / Load Test", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Clean corrosion from battery terminals and perform a battery load test."}, {"id": "electrical-3", "title": "Inspect Wire Harness / Connections", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Check wire harnesses and electrical connections for wear or loose fittings."}, {"id": "electrical-4", "title": "Check Neutral Safety Switch", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Test the neutral safety switch for correct operation."}, {"id": "electrical-5", "title": "Check All Gauges & Hour Meter", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Ensure all dashboard gauges and the hour meter function accurately."}, {"id": "electrical-6", "title": "Condition of Fuse Panel / Relay Box", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Open and inspect the fuse panel and relay box for corrosion, damage, or missing fuses."}, {"id": "electrical-7", "title": "Inspect Alternator / Record Voltage", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Inspect the alternator for damage and record operating voltage output."}, {"id": "hydraulic-1", "title": "Inspect Fluid Level & Quality", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic fluid level and assess fluid for contamination or discoloration."}, {"id": "hydraulic-2", "title": "Inspect Pump / Control Valve", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Visually inspect pump and control valve for leaks or damage."}, {"id": "hydraulic-3", "title": "Check Hydraulic Valve Levers", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic levers to ensure smooth and proper function."}, {"id": "hydraulic-4", "title": "Check Pump Drive Shaft & U-Joints", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Inspect the pump drive shaft and U-joints for wear or looseness."}, {"id": "hydraulic-5", "title": "Remove & Clean / Replace Tank Breather", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Remove the tank breather, clean or replace as needed."}, {"id": "hydraulic-6", "notes": "Slight leak from extension line hoses ", "title": "Inspect All Hoses & Fittings", "section": "Hydraulic Inspection", "required": true, "condition": 3, "description": "Examine all hydraulic hoses and fittings for cracks, leaks, or abrasion."}, {"id": "hydraulic-7", "title": "Inspect Cylinders for Leaks", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic cylinders for oil leaks or physical damage."}, {"id": "brakes-1", "title": "Check Fluid Level & Quality", "section": "Brake", "required": true, "condition": 1, "description": "Inspect the brake fluid reservoir for proper level and clear, uncontaminated fluid."}, {"id": "brakes-2", "title": "Test PB Operation, Check Cables", "section": "Brake", "required": true, "condition": 1, "description": "Test parking brake operation and inspect cables for wear or binding."}, {"id": "brakes-3", "title": "Test Service Brake Operation", "section": "Brake", "required": true, "condition": 1, "description": "Depress the service brake and confirm the forklift stops smoothly and promptly."}, {"id": "brakes-4", "title": "Check Pedal Pads & Inching Pedal Cables", "section": "Brake", "required": true, "condition": 1, "description": "Inspect pedal pads for wear and inching pedal cables for proper function."}, {"id": "brakes-5", "title": "Check Wheels & Cylinder for Leaks", "section": "Brake", "required": true, "condition": 1, "description": "Look for brake fluid leaks around wheel cylinders and brake assemblies."}, {"id": "brakes-6", "title": "Check Brake / Inching Pedal Linkage", "section": "Brake", "required": true, "condition": 1, "description": "Inspect brake and inching pedal linkage for looseness or damage."}, {"id": "brakes-7", "title": "Check Brak / Inching Pedal Free Play", "section": "Brake", "required": true, "condition": 1, "description": "Verify correct amount of free play in brake and inching pedals."}, {"id": "steering-1", "title": "Inspect Steering Cylinder for Leaks", "section": "Steering", "required": true, "condition": 1, "description": "Check steering cylinder for hydraulic leaks or visible damage."}, {"id": "steering-2", "title": "Inspect Gear Box & Steer Column", "section": "Steering", "required": true, "condition": 1, "description": "Inspect the steering gear box and column for proper operation and leaks."}, {"id": "steering-3", "title": "Check King Pins & Spindles", "section": "Steering", "required": true, "condition": 1, "description": "Check king pins and spindles for excessive play or wear."}, {"id": "steering-4", "title": "Test Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Spin and rock steer wheels to check for noisy or loose bearings."}, {"id": "steering-5", "title": "Check Steer Axle Mounts & Stops", "section": "Steering", "required": true, "condition": 1, "description": "Ensure steer axle mounts and stops are secure and undamaged."}, {"id": "steering-6", "title": "Check Steering tie Rods & Pings", "section": "Steering", "required": true, "condition": 1, "description": "Inspect tie rods and pins for looseness or excessive wear."}, {"id": "steering-7", "title": "Check Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Verify steer wheel bearings turn smoothly without noise or resistance."}, {"id": "steering-8", "title": "Inspect Steer Wheel Lug Nuts / Rim / Cap", "section": "Steering", "required": true, "condition": 1, "description": "Check steer wheel lug nuts for tightness and inspect rim/cap for damage."}, {"id": "steering-9", "title": "Check Steering Hoses at Cylinder & Box", "section": "Steering", "required": true, "condition": 1, "description": "Inspect steering hoses at both the cylinder and box for leaks or wear."}, {"id": "differential-transmission-1", "title": "Check Fluid Levels & Condition", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect differential and transmission fluid levels and assess for contamination."}, {"id": "differential-transmission-2", "title": "Check for Abnormal Noise", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Listen for unusual noises from differential or transmission during operation."}, {"id": "differential-transmission-3", "title": "Check Drive Wheel Bearings & Lug Nuts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect drive wheel bearings for play and verify lug nuts are tight."}, {"id": "differential-transmission-4", "title": "Check Mounts & Bolts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Check that all mounts and bolts are secure and undamaged."}, {"id": "differential-transmission-5", "title": "Check for Leaks", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect the differential and transmission for signs of oil leaks."}, {"id": "differential-transmission-6", "title": "Check Drive Shaft & U-Joints", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Examine drive shaft and U-joints for excessive play or wear."}, {"id": "differential-transmission-7", "title": "Check Shift Lever Linkage / Cables", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Test shift lever linkage and cables for proper adjustment and smooth operation."}, {"id": "differential-transmission-8", "title": "Replace Fluid & Filters per OEM Spec", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Replace differential and transmission fluids and filters according to manufacturer specification."}, {"id": "ignition-1", "title": "Test Ignition Switch", "section": "Ignition System", "required": true, "condition": 1, "description": "Turn the ignition switch to verify smooth operation and proper start."}, {"id": "ignition-2", "title": "Check Coil / Coil Packs", "section": "Ignition System", "required": true, "condition": 1, "description": "Inspect ignition coil or coil packs for damage or signs of arcing."}, {"id": "ignition-3", "title": "Check Distributor Cap & Rotor", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and check distributor cap and rotor for wear or corrosion."}, {"id": "ignition-4", "title": "Check Spark Plug Condition & Wires", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and inspect spark plugs and wires for fouling or damage."}, {"id": "mast-carriage-1", "title": "Check Lift Chains & Anchors", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect lift chains and anchors for wear, proper lubrication, and correct tension."}, {"id": "mast-carriage-2", "title": "Check Cylinders for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine all mast cylinders for hydraulic leaks or damage."}, {"id": "mast-carriage-3", "title": "Check Cylinder Brackets", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect cylinder brackets for secure attachment and absence of cracks."}, {"id": "mast-carriage-4", "title": "Check Hose Pulleys & Chain / Hose Guards", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check that hose pulleys, chain guards, and hose guards are intact and functional."}, {"id": "mast-carriage-5", "title": "Check Tilt Cylinder Mounts & Pins", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Verify tilt cylinder mounts and pins are secure and show no excessive wear."}, {"id": "mast-carriage-6", "title": "Check Trunion Bushings / Mounts", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect trunion bushings and mounts for wear or looseness."}, {"id": "mast-carriage-7", "title": "Check Forks, Pins & Carriage Condition", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine forks, pins, and carriage for cracks, bending, or other defects."}, {"id": "mast-carriage-8", "notes": "Slight leak from extension hoses ", "title": "Check Hoses for Leaks", "section": "Mast & Carriage", "required": true, "condition": 3, "description": "Inspect hydraulic hoses on mast and carriage for leaks, abrasion, or damage."}, {"id": "mast-carriage-9", "title": "Check Mast Shims & Side Play", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check mast shims for tightness and look for excessive side play in mast."}, {"id": "mast-carriage-10", "title": "Check Carriage & Mast Rollers", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect rollers for flat spots, wear, or improper rotation."}, {"id": "mast-carriage-11", "title": "Check Mast Rails for Wear", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Look for wear, cracks, or bending along mast rails."}, {"id": "mast-carriage-12", "title": "Check Side Shift Bushings", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect side shift bushings for excessive wear or movement."}, {"id": "cooling-1", "title": "Blow Out Radiator", "section": "Cooling System", "required": true, "condition": 1, "description": "Use compressed air to remove dust and debris from the radiator fins."}, {"id": "cooling-2", "title": "Coolant Level, Condition & Leaks", "section": "Cooling System", "required": true, "condition": 1, "description": "Check coolant level, ensure coolant is clean, and inspect for leaks."}, {"id": "cooling-3", "title": "Check Radiator Condition & Shroud", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect radiator and fan shroud for damage or obstructions."}, {"id": "cooling-4", "title": "Check Water Pump for Leaks & Play", "section": "Cooling System", "required": true, "condition": 1, "description": "Check water pump for coolant leaks or excessive shaft play."}, {"id": "cooling-5", "title": "Check Belt Condition & Tension", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect all drive belts for cracks, fraying, and correct tension."}, {"id": "cooling-6", "title": "Check Fan Blade Condition", "section": "Cooling System", "required": true, "condition": 1, "description": "Examine fan blades for cracks, chips, or loose mounting."}, {"id": "cooling-7", "title": "Cooland Good To (°F)", "section": "Cooling System", "required": true, "condition": 1, "description": "Verify coolant protection is adequate for expected low temperatures using a tester."}, {"id": "fuel-1", "notes": "N/A", "title": "Check LP Tank, Hoses & Fittings", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect LP tank, hoses, and fittings for leaks, damage, or loose connections."}, {"id": "fuel-2", "notes": "N/a", "title": "Drain LPG Regulator", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain condensation from the LPG regulator per manufacturer instructions."}, {"id": "fuel-3", "notes": "N/a", "title": "Check LP System for Leaks", "section": "Fuel System", "required": true, "condition": 1, "description": "Use leak detector solution or sniffer to check LP system for leaks."}, {"id": "fuel-4", "notes": "N/a", "title": "Check LPG Lockoff Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Test LPG lockoff valve for proper engagement and operation."}, {"id": "fuel-5", "notes": "N/a", "title": "Check Carburetor & Linkages", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect carburetor and throttle/choke linkages for smooth movement and secure attachment."}, {"id": "fuel-6", "title": "Check throttle Pedal Linkages / Cable", "section": "Fuel System", "required": true, "condition": 1, "description": "Check throttle pedal linkages and cable for free movement and secure connections."}, {"id": "fuel-7", "title": "Check Governor for Proper Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect and test governor for correct operation and smooth throttle response."}, {"id": "fuel-8", "title": "Change Diesel Fuel Filters", "section": "Fuel System", "required": true, "condition": 1, "description": "Replace diesel fuel filters according to the service schedule."}, {"id": "fuel-9", "title": "Drain Water Separator / Sediment Filter", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain water separator and sediment filter of any collected water or contaminants."}, {"id": "final-inspection-1", "title": "Test Horn Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Press horn button to verify loud, consistent sound."}, {"id": "final-inspection-2", "title": "Does Back Up Alarm Sound in Reverse", "section": "Final Inspection", "required": true, "condition": 1, "description": "Shift into reverse and confirm the backup alarm activates."}, {"id": "final-inspection-3", "title": "Test Brake Lights / Turn Signals / BU Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Check that all brake lights, turn signals, and backup lights function properly."}, {"id": "final-inspection-4", "notes": "Strobe broken off. ", "title": "Test Strobe Light for Proper Operation", "section": "Final Inspection", "required": true, "condition": 4, "description": "Activate the strobe light and ensure it flashes correctly."}, {"id": "final-inspection-5", "title": "Test Seat Belt", "section": "Final Inspection", "required": true, "condition": 1, "description": "Buckle and unbuckle seat belt to confirm proper latching and release."}, {"id": "final-inspection-6", "title": "Test Operator Presence System", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm that the operator presence system disables movement when the seat is unoccupied."}, {"id": "final-inspection-7", "notes": "Wires to front lights ripped off. Lights still on machine but no power running to them. ", "title": "Check All Work Lights", "section": "Final Inspection", "required": true, "condition": 3, "description": "Turn on all work lights and confirm they illuminate properly."}, {"id": "final-inspection-8", "title": "Test Both Service & Parking Brake", "section": "Final Inspection", "required": true, "condition": 1, "description": "Apply both brakes and ensure they hold the forklift stationary."}, {"id": "final-inspection-9", "title": "Test Forward & Reverse Travel", "section": "Final Inspection", "required": true, "condition": 1, "description": "Drive forklift forward and in reverse to confirm smooth operation."}, {"id": "final-inspection-10", "title": "Test All Hydraulic Functions", "section": "Final Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic controls and ensure smooth, correct response."}, {"id": "final-inspection-11", "notes": "Machine will not move with out seat belt enaged.", "title": "Test Seat Belt Alarm", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm seat belt alarm sounds if the seat belt is not engaged during operation."}, {"id": "final-inspection-12", "title": "Wipe Down Forklift, Dash Area", "section": "Final Inspection", "required": true, "condition": 1, "description": "Clean the forklift and dashboard area of dirt and debris."}, {"id": "final-inspection-13", "notes": "Marked on filters.", "title": "Install PM Sticker", "section": "Final Inspection", "required": true, "condition": 1, "description": "Place the preventative maintenance sticker in the designated area to indicate service is complete."}]	Princton 5207\n\nRear engine cover missing. Recommend installing with new hardware. Machine showing 216.5 hours 	f	\N	\N	\N
e89dfeb8-53d0-4833-a61b-024e71e677d7	70332d67-3e07-49e5-96d7-ca1044338cd4	824b97ef-a58a-4415-8d24-1e4935e3fdc7	5a54dd83-f546-4149-8ff5-d44cbc570217	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-06-26 16:47:44.721901+00	2025-08-04 00:53:24.576615+00	2025-08-04 00:53:24.849+00	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	completed	[{"id": "engine-1", "notes": "3 gallons", "title": "Engine Oil Level and Condition", "section": "Engine/Motor System", "required": true, "condition": 1, "description": "Check oil level and inspect for contamination or metal particles"}, {"id": "engine-2", "title": "Engine Oil Filter", "section": "Engine/Motor System", "required": true, "condition": 1, "description": "Inspect and replace if necessary"}, {"id": "engine-3", "notes": "Replaced. Inner and outer ", "title": "Air Filter", "section": "Engine/Motor System", "required": true, "condition": 1, "description": "Check for dirt, debris, or damage"}, {"id": "engine-4", "notes": "Replaced 2 filters ", "title": "Fuel Filter", "section": "Engine/Motor System", "required": true, "condition": 1, "description": "Inspect and replace if clogged"}, {"id": "engine-5", "title": "Cooling System", "section": "Engine/Motor System", "required": true, "condition": 1, "description": "Check coolant level, hoses, and radiator condition"}, {"id": "engine-6", "title": "Belt Tension and Condition", "section": "Engine/Motor System", "required": true, "condition": 1, "description": "Inspect all belts for proper tension, cracks, or fraying"}, {"id": "hydraulic-1", "title": "Hydraulic Fluid Level", "section": "Hydraulic System", "required": true, "condition": 1, "description": "Check fluid level in reservoir"}, {"id": "hydraulic-2", "title": "Hydraulic Fluid Condition", "section": "Hydraulic System", "required": true, "condition": 1, "description": "Inspect for contamination, color, and consistency"}, {"id": "hydraulic-3", "notes": "In tank not due", "title": "Hydraulic Filter", "section": "Hydraulic System", "required": true, "condition": 1, "description": "Check and replace hydraulic filter"}, {"id": "hydraulic-4", "title": "Hydraulic Hoses and Fittings", "section": "Hydraulic System", "required": true, "condition": 1, "description": "Inspect for leaks, cracks, or damage"}, {"id": "hydraulic-5", "title": "Lift Cylinder Operation", "section": "Hydraulic System", "required": true, "condition": 1, "description": "Test lift, lower, and tilt functions"}, {"id": "hydraulic-6", "title": "Hydraulic Pump Performance", "section": "Hydraulic System", "required": true, "condition": 1, "description": "Check pump operation and pressure"}, {"id": "mast-1", "title": "Mast Wear Pads", "section": "Mast and Forks", "required": true, "condition": 1, "description": "Inspect for excessive wear or damage"}, {"id": "mast-2", "notes": "No chain stretch ", "title": "Lift Chains", "section": "Mast and Forks", "required": true, "condition": 1, "description": "Check for stretch, broken links, or wear"}, {"id": "mast-3", "title": "Fork Inspection", "section": "Mast and Forks", "required": true, "condition": 1, "description": "Check for cracks, bends, or wear on heel and blade"}, {"id": "mast-4", "title": "Carriage and Attachments", "section": "Mast and Forks", "required": true, "condition": 1, "description": "Inspect carriage rails and attachment mounting"}, {"id": "mast-5", "title": "Mast Alignment", "section": "Mast and Forks", "required": true, "condition": 1, "description": "Check mast for straightness and proper alignment"}, {"id": "transmission-1", "title": "Transmission Fluid", "section": "Transmission and Drive Train", "required": true, "condition": 1, "description": "Check level and condition of transmission fluid"}, {"id": "transmission-2", "title": "Drive Axle Operation", "section": "Transmission and Drive Train", "required": true, "condition": 1, "description": "Test forward and reverse operation"}, {"id": "transmission-3", "title": "Differential", "section": "Transmission and Drive Train", "required": true, "condition": 1, "description": "Check differential fluid level and operation"}, {"id": "transmission-4", "title": "Drive Chain/Belt", "section": "Transmission and Drive Train", "required": false, "condition": 1, "description": "Inspect drive chain or belt for wear and tension"}, {"id": "steering-1", "title": "Steering Wheel Play", "section": "Steering System", "required": true, "condition": 1, "description": "Check for excessive play in steering wheel"}, {"id": "steering-2", "title": "Steering Cylinder", "section": "Steering System", "required": true, "condition": 1, "description": "Inspect steering cylinder for leaks and operation"}, {"id": "steering-3", "title": "Steering Linkage", "section": "Steering System", "required": true, "condition": 1, "description": "Check all steering linkage components"}, {"id": "steering-4", "notes": "Hydraulic system. No leaks in steer cylinder ", "title": "Power Steering Fluid", "section": "Steering System", "required": true, "condition": 1, "description": "Check fluid level and condition"}, {"id": "brake-1", "title": "Service Brake Operation", "section": "Brake System", "required": true, "condition": 1, "description": "Test service brake effectiveness"}, {"id": "brake-2", "notes": "Electronic ", "title": "Parking Brake", "section": "Brake System", "required": true, "condition": 1, "description": "Test parking brake engagement and holding ability"}, {"id": "brake-3", "notes": "Fluid clear no water present ", "title": "Brake Fluid Level", "section": "Brake System", "required": true, "condition": 1, "description": "Check brake fluid reservoir level"}, {"id": "brake-4", "title": "Brake Lines and Hoses", "section": "Brake System", "required": true, "condition": 1, "description": "Inspect for leaks, cracks, or damage"}, {"id": "tires-1", "title": "Tire Condition", "section": "Tires and Wheels", "required": true, "condition": 1, "description": "Inspect for wear, cuts, or embedded objects"}, {"id": "tires-2", "title": "Tire Pressure", "section": "Tires and Wheels", "required": true, "condition": 1, "description": "Check and adjust tire pressure to specifications"}, {"id": "tires-3", "title": "Wheel Mounting", "section": "Tires and Wheels", "required": true, "condition": 1, "description": "Check wheel lug nuts and mounting hardware"}, {"id": "tires-4", "title": "Rim Condition", "section": "Tires and Wheels", "required": true, "condition": 1, "description": "Inspect rims for cracks, bends, or damage"}, {"id": "electrical-1", "title": "Battery Condition", "section": "Electrical System", "required": true, "condition": 1, "description": "Check battery terminals, cables, and charge level"}, {"id": "electrical-2", "title": "Lights and Indicators", "section": "Electrical System", "required": true, "condition": 1, "description": "Test all lights, beacons, and warning indicators"}, {"id": "electrical-3", "title": "Horn Operation", "section": "Electrical System", "required": true, "condition": 1, "description": "Test horn functionality"}, {"id": "electrical-4", "title": "Backup Alarm", "section": "Electrical System", "required": true, "condition": 1, "description": "Test backup alarm operation"}, {"id": "electrical-5", "title": "Wiring Harness", "section": "Electrical System", "required": true, "condition": 1, "description": "Inspect wiring for damage, chafing, or loose connections"}, {"id": "safety-1", "title": "Overhead Guard", "section": "Safety Systems", "required": true, "condition": 1, "description": "Inspect overhead guard for damage or loose mounting"}, {"id": "safety-2", "title": "Load Backrest", "section": "Safety Systems", "required": true, "condition": 1, "description": "Check load backrest condition and mounting"}, {"id": "safety-3", "title": "Seat Belt", "section": "Safety Systems", "required": true, "condition": 1, "description": "Inspect seat belt for proper operation and condition"}, {"id": "safety-4", "title": "Operator Presence System", "section": "Safety Systems", "required": true, "condition": 1, "description": "Test operator presence sensing system"}, {"id": "safety-5", "title": "Load Handling Attachments", "section": "Safety Systems", "required": false, "condition": 1, "description": "Inspect all load handling attachments"}, {"id": "operator-1", "title": "Seat Condition", "section": "Operator Compartment", "required": true, "condition": 1, "description": "Check seat adjustment, cushioning, and mounting"}, {"id": "operator-2", "title": "Control Linkages", "section": "Operator Compartment", "required": true, "condition": 1, "description": "Test all control levers and pedals for proper operation"}, {"id": "operator-3", "title": "Instruments and Gauges", "section": "Operator Compartment", "required": true, "condition": 1, "description": "Check all gauges and warning lights"}, {"id": "operator-4", "title": "Mirrors", "section": "Operator Compartment", "required": true, "condition": 1, "description": "Inspect mirrors for clarity and proper adjustment"}, {"id": "frame-1", "title": "Frame Inspection", "section": "Frame and Body", "required": true, "condition": 1, "description": "Check frame for cracks, bends, or structural damage"}, {"id": "frame-2", "title": "Counterweight", "section": "Frame and Body", "required": true, "condition": 1, "description": "Inspect counterweight mounting and condition"}, {"id": "frame-3", "title": "Body Panels", "section": "Frame and Body", "required": false, "condition": 1, "description": "Check body panels for damage or loose mounting"}, {"id": "frame-4", "title": "Access Panels", "section": "Frame and Body", "required": false, "condition": 1, "description": "Ensure all access panels are secure and functional"}, {"id": "lubrication-1", "title": "Mast Lubrication", "section": "Lubrication Points", "required": true, "condition": 1, "description": "Lubricate all mast grease fittings"}, {"id": "lubrication-2", "title": "Steering Lubrication", "section": "Lubrication Points", "required": true, "condition": 1, "description": "Lubricate steering linkage grease fittings"}, {"id": "lubrication-3", "title": "Drive Axle Lubrication", "section": "Lubrication Points", "required": true, "condition": 1, "description": "Lubricate drive axle components"}, {"id": "lubrication-4", "notes": "Chains lubed ", "title": "General Lubrication", "section": "Lubrication Points", "required": true, "condition": 1, "description": "Apply lubrication to all other specified points"}]	Perfrom pm on Bobcat 1358. Machine is jerking severely when foot is removed fron acceraltor. Pm overdue by 300 hours. 	f	\N	\N	\N
2302ce09-a5d6-44de-9774-1734f185e765	5eeaf171-826c-4417-b615-62839b44eec9	68d57a2e-a54a-41e8-b4d7-51d880392b5b	5a54dd83-f546-4149-8ff5-d44cbc570217	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:56:46.142547+00	2025-08-04 04:38:24.301288+00	2025-08-04 04:38:17.485+00	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	in_progress	[{"id": "visual-1", "title": "Oil/Coolant Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect under and around the forklift for signs of oil or coolant leaks."}, {"id": "visual-2", "notes": "Side shift bushings need replaced ", "title": "Carriage, Mast & LBR Assembly", "section": "Visual Inspection", "required": true, "condition": 3, "description": "Examine the carriage, mast, and load backrest for damage, cracks, or deformation."}, {"id": "visaul-3", "title": "Forks and Fork Pins", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check that forks and fork pins are straight, undamaged, and securely attached."}, {"id": "visual-4", "notes": "Mast hoses beginning to leak at crimps", "title": "Mast Chains, Rollers & Hoses", "section": "Visual Inspection", "required": true, "condition": 3, "description": "Inspect mast chains, rollers, and hoses for wear, proper tension, and leaks."}, {"id": "visaul-5", "notes": "Tires approaching wear line", "title": "Tire & Wheel Condition", "section": "Visual Inspection", "required": true, "condition": 3, "description": "Inspect tires and wheels for cuts, excessive wear, or missing lug nuts."}, {"id": "visual-6", "notes": "Back rest support broken on seat", "title": "Seat & Seat Belt Condition", "section": "Visual Inspection", "required": true, "condition": 3, "description": "Ensure seat and seat belt are present, undamaged, and functioning properly."}, {"id": "visual-7", "title": "Decals & Capacity Plates", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Verify that all safety decals and capacity plates are present and legible."}, {"id": "visual-8", "title": "Overhead Guard Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check the overhead guard for bends, cracks, or missing hardware."}, {"id": "visual-9", "title": "Check Cylinders for Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect all visible hydraulic cylinders for leaks or damage."}, {"id": "engine-compartment-1", "title": "Blow Out Engine Compartment", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Use compressed air to clean debris and dust from the engine compartment."}, {"id": "engine-compartment-2", "title": "Check Condition of Air Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect and replace the air filter if dirty or clogged."}, {"id": "engine-compartment-3", "title": "Change Engine Oil & Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Drain engine oil, replace with new oil, and install a new oil filter as specified."}, {"id": "engine-compartment-4", "title": "Check hood Latch, Hinges & Hood Strut", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Confirm hood latch, hinges, and strut function smoothly and securely."}, {"id": "engine-compartment-5", "notes": "Intake hose showing wear", "title": "Inspect Air Intake Hoses & Clamps", "section": "Engine Compartment", "required": true, "condition": 3, "description": "Examine air intake hoses and clamps for cracks, leaks, or loose fittings."}, {"id": "engine-compartment-6", "title": "Check Ring Gear Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect ring gear for visible damage or abnormal wear."}, {"id": "engine-compartment-7", "title": "Check Hood Insulation & Hood Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Ensure hood insulation is intact and hood is free of damage."}, {"id": "engine-compartment-8", "title": "Engine Noise / Smoke / Idle RPMs", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Start the engine and check for abnormal noises, smoke, or incorrect idle speed."}, {"id": "engine-compartment-9", "title": "Exhaust System / Muffler / Catalyst", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine the exhaust system, muffler, and catalyst for leaks, noise, or damage."}, {"id": "engine-compartment-10", "title": "Check for Engine Oil Leaks", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Look for evidence of engine oil leaks under and around the engine."}, {"id": "engine-compartment-11", "title": "Check Vacuum Lines / PCV Valve", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect vacuum lines and PCV valve for cracks, leaks, or blockages."}, {"id": "electrical-1", "title": "Check Headlights, Strobe, Taillights", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Verify all headlights, taillights, and strobe lights operate correctly."}, {"id": "electrical-2", "title": "Clean Battery Terminals / Load Test", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Clean corrosion from battery terminals and perform a battery load test."}, {"id": "electrical-3", "title": "Inspect Wire Harness / Connections", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Check wire harnesses and electrical connections for wear or loose fittings."}, {"id": "electrical-4", "title": "Check Neutral Safety Switch", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Test the neutral safety switch for correct operation."}, {"id": "electrical-5", "title": "Check All Gauges & Hour Meter", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Ensure all dashboard gauges and the hour meter function accurately."}, {"id": "electrical-6", "title": "Condition of Fuse Panel / Relay Box", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Open and inspect the fuse panel and relay box for corrosion, damage, or missing fuses."}, {"id": "electrical-7", "title": "Inspect Alternator / Record Voltage", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Inspect the alternator for damage and record operating voltage output."}, {"id": "hydraulic-1", "title": "Inspect Fluid Level & Quality", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic fluid level and assess fluid for contamination or discoloration."}, {"id": "hydraulic-2", "notes": "Return line stiff", "title": "Inspect Pump / Control Valve", "section": "Hydraulic Inspection", "required": true, "condition": 3, "description": "Visually inspect pump and control valve for leaks or damage."}, {"id": "hydraulic-3", "title": "Check Hydraulic Valve Levers", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic levers to ensure smooth and proper function."}, {"id": "hydraulic-4", "title": "Check Pump Drive Shaft & U-Joints", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Inspect the pump drive shaft and U-joints for wear or looseness."}, {"id": "hydraulic-5", "title": "Remove & Clean / Replace Tank Breather", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Remove the tank breather, clean or replace as needed."}, {"id": "hydraulic-6", "notes": "Return line stiff, mast hoses beginning to weep from crimps", "title": "Inspect All Hoses & Fittings", "section": "Hydraulic Inspection", "required": true, "condition": 3, "description": "Examine all hydraulic hoses and fittings for cracks, leaks, or abrasion."}, {"id": "hydraulic-7", "title": "Inspect Cylinders for Leaks", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic cylinders for oil leaks or physical damage."}, {"id": "brakes-1", "title": "Check Fluid Level & Quality", "section": "Brake", "required": true, "condition": 1, "description": "Inspect the brake fluid reservoir for proper level and clear, uncontaminated fluid."}, {"id": "brakes-2", "title": "Test PB Operation, Check Cables", "section": "Brake", "required": true, "condition": 1, "description": "Test parking brake operation and inspect cables for wear or binding."}, {"id": "brakes-3", "title": "Test Service Brake Operation", "section": "Brake", "required": true, "condition": 1, "description": "Depress the service brake and confirm the forklift stops smoothly and promptly."}, {"id": "brakes-4", "title": "Check Pedal Pads & Inching Pedal Cables", "section": "Brake", "required": true, "condition": 1, "description": "Inspect pedal pads for wear and inching pedal cables for proper function."}, {"id": "brakes-5", "title": "Check Wheels & Cylinder for Leaks", "section": "Brake", "required": true, "condition": 2, "description": "Look for brake fluid leaks around wheel cylinders and brake assemblies."}, {"id": "brakes-6", "title": "Check Brake / Inching Pedal Linkage", "section": "Brake", "required": true, "condition": 1, "description": "Inspect brake and inching pedal linkage for looseness or damage."}, {"id": "brakes-7", "title": "Check Brak / Inching Pedal Free Play", "section": "Brake", "required": true, "condition": 1, "description": "Verify correct amount of free play in brake and inching pedals."}, {"id": "steering-1", "title": "Inspect Steering Cylinder for Leaks", "section": "Steering", "required": true, "condition": 1, "description": "Check steering cylinder for hydraulic leaks or visible damage."}, {"id": "steering-2", "title": "Inspect Gear Box & Steer Column", "section": "Steering", "required": true, "condition": 1, "description": "Inspect the steering gear box and column for proper operation and leaks."}, {"id": "steering-3", "title": "Check King Pins & Spindles", "section": "Steering", "required": true, "condition": 1, "description": "Check king pins and spindles for excessive play or wear."}, {"id": "steering-4", "title": "Test Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Spin and rock steer wheels to check for noisy or loose bearings."}, {"id": "steering-5", "title": "Check Steer Axle Mounts & Stops", "section": "Steering", "required": true, "condition": 1, "description": "Ensure steer axle mounts and stops are secure and undamaged."}, {"id": "steering-6", "title": "Check Steering tie Rods & Pings", "section": "Steering", "required": true, "condition": 1, "description": "Inspect tie rods and pins for looseness or excessive wear."}, {"id": "steering-7", "title": "Check Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Verify steer wheel bearings turn smoothly without noise or resistance."}, {"id": "steering-8", "title": "Inspect Steer Wheel Lug Nuts / Rim / Cap", "section": "Steering", "required": true, "condition": 1, "description": "Check steer wheel lug nuts for tightness and inspect rim/cap for damage."}, {"id": "steering-9", "title": "Check Steering Hoses at Cylinder & Box", "section": "Steering", "required": true, "condition": 1, "description": "Inspect steering hoses at both the cylinder and box for leaks or wear."}, {"id": "differential-transmission-1", "notes": "Recommend flush next PM cycle ", "title": "Check Fluid Levels & Condition", "section": "Differential & Transmission", "required": true, "condition": 3, "description": "Inspect differential and transmission fluid levels and assess for contamination."}, {"id": "differential-transmission-2", "title": "Check for Abnormal Noise", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Listen for unusual noises from differential or transmission during operation."}, {"id": "differential-transmission-3", "title": "Check Drive Wheel Bearings & Lug Nuts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect drive wheel bearings for play and verify lug nuts are tight."}, {"id": "differential-transmission-4", "title": "Check Mounts & Bolts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Check that all mounts and bolts are secure and undamaged."}, {"id": "differential-transmission-5", "title": "Check for Leaks", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect the differential and transmission for signs of oil leaks."}, {"id": "differential-transmission-6", "title": "Check Drive Shaft & U-Joints", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Examine drive shaft and U-joints for excessive play or wear."}, {"id": "differential-transmission-7", "title": "Check Shift Lever Linkage / Cables", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Test shift lever linkage and cables for proper adjustment and smooth operation."}, {"id": "differential-transmission-8", "title": "Replace Fluid & Filters per OEM Spec", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Replace differential and transmission fluids and filters according to manufacturer specification."}, {"id": "ignition-1", "title": "Test Ignition Switch", "section": "Ignition System", "required": true, "condition": 1, "description": "Turn the ignition switch to verify smooth operation and proper start."}, {"id": "ignition-2", "title": "Check Coil / Coil Packs", "section": "Ignition System", "required": true, "condition": 1, "description": "Inspect ignition coil or coil packs for damage or signs of arcing."}, {"id": "ignition-3", "title": "Check Distributor Cap & Rotor", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and check distributor cap and rotor for wear or corrosion."}, {"id": "ignition-4", "title": "Check Spark Plug Condition & Wires", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and inspect spark plugs and wires for fouling or damage."}, {"id": "mast-carriage-1", "title": "Check Lift Chains & Anchors", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect lift chains and anchors for wear, proper lubrication, and correct tension."}, {"id": "mast-carriage-2", "title": "Check Cylinders for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine all mast cylinders for hydraulic leaks or damage."}, {"id": "mast-carriage-3", "title": "Check Cylinder Brackets", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect cylinder brackets for secure attachment and absence of cracks."}, {"id": "mast-carriage-4", "notes": "Hoses beginning to leak", "title": "Check Hose Pulleys & Chain / Hose Guards", "section": "Mast & Carriage", "required": true, "condition": 3, "description": "Check that hose pulleys, chain guards, and hose guards are intact and functional."}, {"id": "mast-carriage-5", "title": "Check Tilt Cylinder Mounts & Pins", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Verify tilt cylinder mounts and pins are secure and show no excessive wear."}, {"id": "mast-carriage-6", "title": "Check Trunion Bushings / Mounts", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect trunion bushings and mounts for wear or looseness."}, {"id": "mast-carriage-7", "title": "Check Forks, Pins & Carriage Condition", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine forks, pins, and carriage for cracks, bending, or other defects."}, {"id": "mast-carriage-8", "title": "Check Hoses for Leaks", "section": "Mast & Carriage", "required": true, "condition": 3, "description": "Inspect hydraulic hoses on mast and carriage for leaks, abrasion, or damage."}, {"id": "mast-carriage-9", "title": "Check Mast Shims & Side Play", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check mast shims for tightness and look for excessive side play in mast."}, {"id": "mast-carriage-10", "title": "Check Carriage & Mast Rollers", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect rollers for flat spots, wear, or improper rotation."}, {"id": "mast-carriage-11", "title": "Check Mast Rails for Wear", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Look for wear, cracks, or bending along mast rails."}, {"id": "mast-carriage-12", "notes": "Extremely worn", "title": "Check Side Shift Bushings", "section": "Mast & Carriage", "required": true, "condition": 3, "description": "Inspect side shift bushings for excessive wear or movement."}, {"id": "cooling-1", "title": "Blow Out Radiator", "section": "Cooling System", "required": true, "condition": 1, "description": "Use compressed air to remove dust and debris from the radiator fins."}, {"id": "cooling-2", "title": "Coolant Level, Condition & Leaks", "section": "Cooling System", "required": true, "condition": 1, "description": "Check coolant level, ensure coolant is clean, and inspect for leaks."}, {"id": "cooling-3", "title": "Check Radiator Condition & Shroud", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect radiator and fan shroud for damage or obstructions."}, {"id": "cooling-4", "title": "Check Water Pump for Leaks & Play", "section": "Cooling System", "required": true, "condition": 1, "description": "Check water pump for coolant leaks or excessive shaft play."}, {"id": "cooling-5", "title": "Check Belt Condition & Tension", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect all drive belts for cracks, fraying, and correct tension."}, {"id": "cooling-6", "title": "Check Fan Blade Condition", "section": "Cooling System", "required": true, "condition": 1, "description": "Examine fan blades for cracks, chips, or loose mounting."}, {"id": "cooling-7", "title": "Cooland Good To (°F)", "section": "Cooling System", "required": true, "condition": 1, "description": "Verify coolant protection is adequate for expected low temperatures using a tester."}, {"id": "fuel-1", "notes": "N/a", "title": "Check LP Tank, Hoses & Fittings", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect LP tank, hoses, and fittings for leaks, damage, or loose connections."}, {"id": "fuel-2", "notes": "N/a", "title": "Drain LPG Regulator", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain condensation from the LPG regulator per manufacturer instructions."}, {"id": "fuel-3", "notes": "N/a", "title": "Check LP System for Leaks", "section": "Fuel System", "required": true, "condition": 1, "description": "Use leak detector solution or sniffer to check LP system for leaks."}, {"id": "fuel-4", "notes": "N/a", "title": "Check LPG Lockoff Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Test LPG lockoff valve for proper engagement and operation."}, {"id": "fuel-5", "notes": "N/a", "title": "Check Carburetor & Linkages", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect carburetor and throttle/choke linkages for smooth movement and secure attachment."}, {"id": "fuel-6", "title": "Check throttle Pedal Linkages / Cable", "section": "Fuel System", "required": true, "condition": 1, "description": "Check throttle pedal linkages and cable for free movement and secure connections."}, {"id": "fuel-7", "title": "Check Governor for Proper Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect and test governor for correct operation and smooth throttle response."}, {"id": "fuel-8", "title": "Change Diesel Fuel Filters", "section": "Fuel System", "required": true, "condition": 1, "description": "Replace diesel fuel filters according to the service schedule."}, {"id": "fuel-9", "title": "Drain Water Separator / Sediment Filter", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain water separator and sediment filter of any collected water or contaminants."}, {"id": "final-inspection-1", "title": "Test Horn Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Press horn button to verify loud, consistent sound."}, {"id": "final-inspection-2", "title": "Does Back Up Alarm Sound in Reverse", "section": "Final Inspection", "required": true, "condition": 1, "description": "Shift into reverse and confirm the backup alarm activates."}, {"id": "final-inspection-3", "title": "Test Brake Lights / Turn Signals / BU Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Check that all brake lights, turn signals, and backup lights function properly."}, {"id": "final-inspection-4", "title": "Test Strobe Light for Proper Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Activate the strobe light and ensure it flashes correctly."}, {"id": "final-inspection-5", "title": "Test Seat Belt", "section": "Final Inspection", "required": true, "condition": 1, "description": "Buckle and unbuckle seat belt to confirm proper latching and release."}, {"id": "final-inspection-6", "notes": "Seat needs replaced", "title": "Test Operator Presence System", "section": "Final Inspection", "required": true, "condition": 3, "description": "Confirm that the operator presence system disables movement when the seat is unoccupied."}, {"id": "final-inspection-7", "title": "Check All Work Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Turn on all work lights and confirm they illuminate properly."}, {"id": "final-inspection-8", "title": "Test Both Service & Parking Brake", "section": "Final Inspection", "required": true, "condition": 1, "description": "Apply both brakes and ensure they hold the forklift stationary."}, {"id": "final-inspection-9", "title": "Test Forward & Reverse Travel", "section": "Final Inspection", "required": true, "condition": 1, "description": "Drive forklift forward and in reverse to confirm smooth operation."}, {"id": "final-inspection-10", "title": "Test All Hydraulic Functions", "section": "Final Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic controls and ensure smooth, correct response."}, {"id": "final-inspection-11", "title": "Test Seat Belt Alarm", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm seat belt alarm sounds if the seat belt is not engaged during operation."}, {"id": "final-inspection-12", "title": "Wipe Down Forklift, Dash Area", "section": "Final Inspection", "required": true, "condition": 1, "description": "Clean the forklift and dashboard area of dirt and debris."}, {"id": "final-inspection-13", "title": "Install PM Sticker", "section": "Final Inspection", "required": true, "condition": 1, "description": "Place the preventative maintenance sticker in the designated area to indicate service is complete."}]	Clark 087\nRecommend hose replacements for mast, side shift bushings, seat replacement and differential fluid flush before next PM cycle.\nHours- 4001.	f	\N	\N	\N
401f9b75-e69f-4bf5-9f1e-be5ddff07366	2c8b84bd-96d3-43a1-86bf-4833de25fd7a	80998051-cb1d-47b2-96c5-2e59b10ca643	5a54dd83-f546-4149-8ff5-d44cbc570217	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 01:06:54.53894+00	2025-08-04 01:15:31.349353+00	2025-08-04 01:15:24.195+00	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	in_progress	[{"id": "visual-1", "notes": "Oil pan gasket leak. Recommend been done at next PM cycle ", "title": "Oil/Coolant Leaks", "section": "Visual Inspection", "required": true, "condition": 3, "description": "Inspect under and around the forklift for signs of oil or coolant leaks."}, {"id": "visual-2", "title": "Carriage, Mast & LBR Assembly", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Examine the carriage, mast, and load backrest for damage, cracks, or deformation."}, {"id": "visaul-3", "title": "Forks and Fork Pins", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check that forks and fork pins are straight, undamaged, and securely attached."}, {"id": "visual-4", "notes": "Braiding showing on multiple mast hoses ", "title": "Mast Chains, Rollers & Hoses", "section": "Visual Inspection", "required": true, "condition": 3, "description": "Inspect mast chains, rollers, and hoses for wear, proper tension, and leaks."}, {"id": "visaul-5", "notes": "Front tires at wear line", "title": "Tire & Wheel Condition", "section": "Visual Inspection", "required": true, "condition": 3, "description": "Inspect tires and wheels for cuts, excessive wear, or missing lug nuts."}, {"id": "visual-6", "title": "Seat & Seat Belt Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Ensure seat and seat belt are present, undamaged, and functioning properly."}, {"id": "visual-7", "title": "Decals & Capacity Plates", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Verify that all safety decals and capacity plates are present and legible."}, {"id": "visual-8", "title": "Overhead Guard Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check the overhead guard for bends, cracks, or missing hardware."}, {"id": "visual-9", "title": "Check Cylinders for Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect all visible hydraulic cylinders for leaks or damage."}, {"id": "engine-compartment-1", "title": "Blow Out Engine Compartment", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Use compressed air to clean debris and dust from the engine compartment."}, {"id": "engine-compartment-2", "title": "Check Condition of Air Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect and replace the air filter if dirty or clogged."}, {"id": "engine-compartment-3", "title": "Change Engine Oil & Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Drain engine oil, replace with new oil, and install a new oil filter as specified."}, {"id": "engine-compartment-4", "title": "Check hood Latch, Hinges & Hood Strut", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Confirm hood latch, hinges, and strut function smoothly and securely."}, {"id": "engine-compartment-5", "title": "Inspect Air Intake Hoses & Clamps", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine air intake hoses and clamps for cracks, leaks, or loose fittings."}, {"id": "engine-compartment-6", "title": "Check Ring Gear Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect ring gear for visible damage or abnormal wear."}, {"id": "engine-compartment-7", "title": "Check Hood Insulation & Hood Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Ensure hood insulation is intact and hood is free of damage."}, {"id": "engine-compartment-8", "title": "Engine Noise / Smoke / Idle RPMs", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Start the engine and check for abnormal noises, smoke, or incorrect idle speed."}, {"id": "engine-compartment-9", "title": "Exhaust System / Muffler / Catalyst", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine the exhaust system, muffler, and catalyst for leaks, noise, or damage."}, {"id": "engine-compartment-10", "notes": "Possible oil pan leak from gasket ", "title": "Check for Engine Oil Leaks", "section": "Engine Compartment", "required": true, "condition": 3, "description": "Look for evidence of engine oil leaks under and around the engine."}, {"id": "engine-compartment-11", "title": "Check Vacuum Lines / PCV Valve", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect vacuum lines and PCV valve for cracks, leaks, or blockages."}, {"id": "electrical-1", "title": "Check Headlights, Strobe, Taillights", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Verify all headlights, taillights, and strobe lights operate correctly."}, {"id": "electrical-2", "title": "Clean Battery Terminals / Load Test", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Clean corrosion from battery terminals and perform a battery load test."}, {"id": "electrical-3", "title": "Inspect Wire Harness / Connections", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Check wire harnesses and electrical connections for wear or loose fittings."}, {"id": "electrical-4", "title": "Check Neutral Safety Switch", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Test the neutral safety switch for correct operation."}, {"id": "electrical-5", "title": "Check All Gauges & Hour Meter", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Ensure all dashboard gauges and the hour meter function accurately."}, {"id": "electrical-6", "title": "Condition of Fuse Panel / Relay Box", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Open and inspect the fuse panel and relay box for corrosion, damage, or missing fuses."}, {"id": "electrical-7", "title": "Inspect Alternator / Record Voltage", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Inspect the alternator for damage and record operating voltage output."}, {"id": "hydraulic-1", "title": "Inspect Fluid Level & Quality", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic fluid level and assess fluid for contamination or discoloration."}, {"id": "hydraulic-2", "notes": "Return hose stiff and has slight leak ", "title": "Inspect Pump / Control Valve", "section": "Hydraulic Inspection", "required": true, "condition": 3, "description": "Visually inspect pump and control valve for leaks or damage."}, {"id": "hydraulic-3", "title": "Check Hydraulic Valve Levers", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic levers to ensure smooth and proper function."}, {"id": "hydraulic-4", "title": "Check Pump Drive Shaft & U-Joints", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Inspect the pump drive shaft and U-joints for wear or looseness."}, {"id": "hydraulic-5", "title": "Remove & Clean / Replace Tank Breather", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Remove the tank breather, clean or replace as needed."}, {"id": "hydraulic-6", "notes": "Hydraulic pump feed line needs replaced ", "title": "Inspect All Hoses & Fittings", "section": "Hydraulic Inspection", "required": true, "condition": 3, "description": "Examine all hydraulic hoses and fittings for cracks, leaks, or abrasion."}, {"id": "hydraulic-7", "title": "Inspect Cylinders for Leaks", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic cylinders for oil leaks or physical damage."}, {"id": "brakes-1", "title": "Check Fluid Level & Quality", "section": "Brake", "required": true, "condition": 1, "description": "Inspect the brake fluid reservoir for proper level and clear, uncontaminated fluid."}, {"id": "brakes-2", "notes": "Park brake cable at full adjustment and not holding. Needs replaced ", "title": "Test PB Operation, Check Cables", "section": "Brake", "required": true, "condition": 4, "description": "Test parking brake operation and inspect cables for wear or binding."}, {"id": "brakes-3", "title": "Test Service Brake Operation", "section": "Brake", "required": true, "condition": 1, "description": "Depress the service brake and confirm the forklift stops smoothly and promptly."}, {"id": "brakes-4", "title": "Check Pedal Pads & Inching Pedal Cables", "section": "Brake", "required": true, "condition": 1, "description": "Inspect pedal pads for wear and inching pedal cables for proper function."}, {"id": "brakes-5", "title": "Check Wheels & Cylinder for Leaks", "section": "Brake", "required": true, "condition": 1, "description": "Look for brake fluid leaks around wheel cylinders and brake assemblies."}, {"id": "brakes-6", "title": "Check Brake / Inching Pedal Linkage", "section": "Brake", "required": true, "condition": 1, "description": "Inspect brake and inching pedal linkage for looseness or damage."}, {"id": "brakes-7", "title": "Check Brak / Inching Pedal Free Play", "section": "Brake", "required": true, "condition": 1, "description": "Verify correct amount of free play in brake and inching pedals."}, {"id": "steering-1", "title": "Inspect Steering Cylinder for Leaks", "section": "Steering", "required": true, "condition": 1, "description": "Check steering cylinder for hydraulic leaks or visible damage."}, {"id": "steering-2", "title": "Inspect Gear Box & Steer Column", "section": "Steering", "required": true, "condition": 1, "description": "Inspect the steering gear box and column for proper operation and leaks."}, {"id": "steering-3", "title": "Check King Pins & Spindles", "section": "Steering", "required": true, "condition": 1, "description": "Check king pins and spindles for excessive play or wear."}, {"id": "steering-4", "title": "Test Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Spin and rock steer wheels to check for noisy or loose bearings."}, {"id": "steering-5", "title": "Check Steer Axle Mounts & Stops", "section": "Steering", "required": true, "condition": 1, "description": "Ensure steer axle mounts and stops are secure and undamaged."}, {"id": "steering-6", "title": "Check Steering tie Rods & Pings", "section": "Steering", "required": true, "condition": 1, "description": "Inspect tie rods and pins for looseness or excessive wear."}, {"id": "steering-7", "title": "Check Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Verify steer wheel bearings turn smoothly without noise or resistance."}, {"id": "steering-8", "title": "Inspect Steer Wheel Lug Nuts / Rim / Cap", "section": "Steering", "required": true, "condition": 1, "description": "Check steer wheel lug nuts for tightness and inspect rim/cap for damage."}, {"id": "steering-9", "title": "Check Steering Hoses at Cylinder & Box", "section": "Steering", "required": true, "condition": 1, "description": "Inspect steering hoses at both the cylinder and box for leaks or wear."}, {"id": "differential-transmission-1", "title": "Check Fluid Levels & Condition", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect differential and transmission fluid levels and assess for contamination."}, {"id": "differential-transmission-2", "title": "Check for Abnormal Noise", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Listen for unusual noises from differential or transmission during operation."}, {"id": "differential-transmission-3", "title": "Check Drive Wheel Bearings & Lug Nuts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect drive wheel bearings for play and verify lug nuts are tight."}, {"id": "differential-transmission-4", "title": "Check Mounts & Bolts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Check that all mounts and bolts are secure and undamaged."}, {"id": "differential-transmission-5", "title": "Check for Leaks", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect the differential and transmission for signs of oil leaks."}, {"id": "differential-transmission-6", "title": "Check Drive Shaft & U-Joints", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Examine drive shaft and U-joints for excessive play or wear."}, {"id": "differential-transmission-7", "title": "Check Shift Lever Linkage / Cables", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Test shift lever linkage and cables for proper adjustment and smooth operation."}, {"id": "differential-transmission-8", "title": "Replace Fluid & Filters per OEM Spec", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Replace differential and transmission fluids and filters according to manufacturer specification."}, {"id": "ignition-1", "title": "Test Ignition Switch", "section": "Ignition System", "required": true, "condition": 1, "description": "Turn the ignition switch to verify smooth operation and proper start."}, {"id": "ignition-2", "title": "Check Coil / Coil Packs", "section": "Ignition System", "required": true, "condition": 1, "description": "Inspect ignition coil or coil packs for damage or signs of arcing."}, {"id": "ignition-3", "title": "Check Distributor Cap & Rotor", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and check distributor cap and rotor for wear or corrosion."}, {"id": "ignition-4", "title": "Check Spark Plug Condition & Wires", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and inspect spark plugs and wires for fouling or damage."}, {"id": "mast-carriage-1", "title": "Check Lift Chains & Anchors", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect lift chains and anchors for wear, proper lubrication, and correct tension."}, {"id": "mast-carriage-2", "title": "Check Cylinders for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine all mast cylinders for hydraulic leaks or damage."}, {"id": "mast-carriage-3", "title": "Check Cylinder Brackets", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect cylinder brackets for secure attachment and absence of cracks."}, {"id": "mast-carriage-4", "title": "Check Hose Pulleys & Chain / Hose Guards", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check that hose pulleys, chain guards, and hose guards are intact and functional."}, {"id": "mast-carriage-5", "title": "Check Tilt Cylinder Mounts & Pins", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Verify tilt cylinder mounts and pins are secure and show no excessive wear."}, {"id": "mast-carriage-6", "title": "Check Trunion Bushings / Mounts", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect trunion bushings and mounts for wear or looseness."}, {"id": "mast-carriage-7", "title": "Check Forks, Pins & Carriage Condition", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine forks, pins, and carriage for cracks, bending, or other defects."}, {"id": "mast-carriage-8", "notes": "Braiding showing on multiple hoses", "title": "Check Hoses for Leaks", "section": "Mast & Carriage", "required": true, "condition": 3, "description": "Inspect hydraulic hoses on mast and carriage for leaks, abrasion, or damage."}, {"id": "mast-carriage-9", "title": "Check Mast Shims & Side Play", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check mast shims for tightness and look for excessive side play in mast."}, {"id": "mast-carriage-10", "title": "Check Carriage & Mast Rollers", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect rollers for flat spots, wear, or improper rotation."}, {"id": "mast-carriage-11", "title": "Check Mast Rails for Wear", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Look for wear, cracks, or bending along mast rails."}, {"id": "mast-carriage-12", "notes": "Extremely worn and needs replaced ", "title": "Check Side Shift Bushings", "section": "Mast & Carriage", "required": true, "condition": 3, "description": "Inspect side shift bushings for excessive wear or movement."}, {"id": "cooling-1", "title": "Blow Out Radiator", "section": "Cooling System", "required": true, "condition": 1, "description": "Use compressed air to remove dust and debris from the radiator fins."}, {"id": "cooling-2", "title": "Coolant Level, Condition & Leaks", "section": "Cooling System", "required": true, "condition": 1, "description": "Check coolant level, ensure coolant is clean, and inspect for leaks."}, {"id": "cooling-3", "title": "Check Radiator Condition & Shroud", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect radiator and fan shroud for damage or obstructions."}, {"id": "cooling-4", "title": "Check Water Pump for Leaks & Play", "section": "Cooling System", "required": true, "condition": 1, "description": "Check water pump for coolant leaks or excessive shaft play."}, {"id": "cooling-5", "title": "Check Belt Condition & Tension", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect all drive belts for cracks, fraying, and correct tension."}, {"id": "cooling-6", "title": "Check Fan Blade Condition", "section": "Cooling System", "required": true, "condition": 1, "description": "Examine fan blades for cracks, chips, or loose mounting."}, {"id": "cooling-7", "title": "Cooland Good To (°F)", "section": "Cooling System", "required": true, "condition": 1, "description": "Verify coolant protection is adequate for expected low temperatures using a tester."}, {"id": "fuel-1", "notes": "N/a", "title": "Check LP Tank, Hoses & Fittings", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect LP tank, hoses, and fittings for leaks, damage, or loose connections."}, {"id": "fuel-2", "notes": "N/a", "title": "Drain LPG Regulator", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain condensation from the LPG regulator per manufacturer instructions."}, {"id": "fuel-3", "notes": "N/a", "title": "Check LP System for Leaks", "section": "Fuel System", "required": true, "condition": 1, "description": "Use leak detector solution or sniffer to check LP system for leaks."}, {"id": "fuel-4", "notes": "N/a", "title": "Check LPG Lockoff Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Test LPG lockoff valve for proper engagement and operation."}, {"id": "fuel-5", "notes": "N/a", "title": "Check Carburetor & Linkages", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect carburetor and throttle/choke linkages for smooth movement and secure attachment."}, {"id": "fuel-6", "title": "Check throttle Pedal Linkages / Cable", "section": "Fuel System", "required": true, "condition": 1, "description": "Check throttle pedal linkages and cable for free movement and secure connections."}, {"id": "fuel-7", "title": "Check Governor for Proper Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect and test governor for correct operation and smooth throttle response."}, {"id": "fuel-8", "title": "Change Diesel Fuel Filters", "section": "Fuel System", "required": true, "condition": 1, "description": "Replace diesel fuel filters according to the service schedule."}, {"id": "fuel-9", "title": "Drain Water Separator / Sediment Filter", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain water separator and sediment filter of any collected water or contaminants."}, {"id": "final-inspection-1", "title": "Test Horn Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Press horn button to verify loud, consistent sound."}, {"id": "final-inspection-2", "title": "Does Back Up Alarm Sound in Reverse", "section": "Final Inspection", "required": true, "condition": 1, "description": "Shift into reverse and confirm the backup alarm activates."}, {"id": "final-inspection-3", "title": "Test Brake Lights / Turn Signals / BU Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Check that all brake lights, turn signals, and backup lights function properly."}, {"id": "final-inspection-4", "title": "Test Strobe Light for Proper Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Activate the strobe light and ensure it flashes correctly."}, {"id": "final-inspection-5", "title": "Test Seat Belt", "section": "Final Inspection", "required": true, "condition": 1, "description": "Buckle and unbuckle seat belt to confirm proper latching and release."}, {"id": "final-inspection-6", "title": "Test Operator Presence System", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm that the operator presence system disables movement when the seat is unoccupied."}, {"id": "final-inspection-7", "title": "Check All Work Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Turn on all work lights and confirm they illuminate properly."}, {"id": "final-inspection-8", "notes": "Park brake linkage at maximum adjustment and not holding ", "title": "Test Both Service & Parking Brake", "section": "Final Inspection", "required": true, "condition": 3, "description": "Apply both brakes and ensure they hold the forklift stationary."}, {"id": "final-inspection-9", "title": "Test Forward & Reverse Travel", "section": "Final Inspection", "required": true, "condition": 1, "description": "Drive forklift forward and in reverse to confirm smooth operation."}, {"id": "final-inspection-10", "title": "Test All Hydraulic Functions", "section": "Final Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic controls and ensure smooth, correct response."}, {"id": "final-inspection-11", "title": "Test Seat Belt Alarm", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm seat belt alarm sounds if the seat belt is not engaged during operation."}, {"id": "final-inspection-12", "title": "Wipe Down Forklift, Dash Area", "section": "Final Inspection", "required": true, "condition": 1, "description": "Clean the forklift and dashboard area of dirt and debris."}, {"id": "final-inspection-13", "title": "Install PM Sticker", "section": "Final Inspection", "required": true, "condition": 1, "description": "Place the preventative maintenance sticker in the designated area to indicate service is complete."}]	Clark 0965 \nHours 4466.1 \nRecommend hoses, parking brake, oil pan gasket and front tires be replaced before next PM cycle.	f	\N	\N	\N
57330e39-c55a-4b0a-bafb-c22faa286741	041fe368-4670-46ee-9f10-d0be4ad935ec	bf8dea0a-eeff-417d-8af9-097865692fca	5a54dd83-f546-4149-8ff5-d44cbc570217	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 03:51:44.074921+00	2025-08-04 04:24:14.099006+00	2025-08-04 04:24:07.971+00	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	in_progress	[{"id": "visual-1", "title": "Oil/Coolant Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect under and around the forklift for signs of oil or coolant leaks."}, {"id": "visual-2", "title": "Carriage, Mast & LBR Assembly", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Examine the carriage, mast, and load backrest for damage, cracks, or deformation."}, {"id": "visaul-3", "title": "Forks and Fork Pins", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check that forks and fork pins are straight, undamaged, and securely attached."}, {"id": "visual-4", "title": "Mast Chains, Rollers & Hoses", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect mast chains, rollers, and hoses for wear, proper tension, and leaks."}, {"id": "visaul-5", "title": "Tire & Wheel Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect tires and wheels for cuts, excessive wear, or missing lug nuts."}, {"id": "visual-6", "title": "Seat & Seat Belt Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Ensure seat and seat belt are present, undamaged, and functioning properly."}, {"id": "visual-7", "title": "Decals & Capacity Plates", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Verify that all safety decals and capacity plates are present and legible."}, {"id": "visual-8", "title": "Overhead Guard Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check the overhead guard for bends, cracks, or missing hardware."}, {"id": "visual-9", "title": "Check Cylinders for Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect all visible hydraulic cylinders for leaks or damage."}, {"id": "engine-compartment-1", "title": "Blow Out Engine Compartment", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Use compressed air to clean debris and dust from the engine compartment."}, {"id": "engine-compartment-2", "title": "Check Condition of Air Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect and replace the air filter if dirty or clogged."}, {"id": "engine-compartment-3", "title": "Change Engine Oil & Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Drain engine oil, replace with new oil, and install a new oil filter as specified."}, {"id": "engine-compartment-4", "title": "Check hood Latch, Hinges & Hood Strut", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Confirm hood latch, hinges, and strut function smoothly and securely."}, {"id": "engine-compartment-5", "title": "Inspect Air Intake Hoses & Clamps", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine air intake hoses and clamps for cracks, leaks, or loose fittings."}, {"id": "engine-compartment-6", "title": "Check Ring Gear Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect ring gear for visible damage or abnormal wear."}, {"id": "engine-compartment-7", "title": "Check Hood Insulation & Hood Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Ensure hood insulation is intact and hood is free of damage."}, {"id": "engine-compartment-8", "title": "Engine Noise / Smoke / Idle RPMs", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Start the engine and check for abnormal noises, smoke, or incorrect idle speed."}, {"id": "engine-compartment-9", "title": "Exhaust System / Muffler / Catalyst", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine the exhaust system, muffler, and catalyst for leaks, noise, or damage."}, {"id": "engine-compartment-10", "title": "Check for Engine Oil Leaks", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Look for evidence of engine oil leaks under and around the engine."}, {"id": "engine-compartment-11", "title": "Check Vacuum Lines / PCV Valve", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect vacuum lines and PCV valve for cracks, leaks, or blockages."}, {"id": "electrical-1", "title": "Check Headlights, Strobe, Taillights", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Verify all headlights, taillights, and strobe lights operate correctly."}, {"id": "electrical-2", "title": "Clean Battery Terminals / Load Test", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Clean corrosion from battery terminals and perform a battery load test."}, {"id": "electrical-3", "title": "Inspect Wire Harness / Connections", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Check wire harnesses and electrical connections for wear or loose fittings."}, {"id": "electrical-4", "title": "Check Neutral Safety Switch", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Test the neutral safety switch for correct operation."}, {"id": "electrical-5", "title": "Check All Gauges & Hour Meter", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Ensure all dashboard gauges and the hour meter function accurately."}, {"id": "electrical-6", "title": "Condition of Fuse Panel / Relay Box", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Open and inspect the fuse panel and relay box for corrosion, damage, or missing fuses."}, {"id": "electrical-7", "title": "Inspect Alternator / Record Voltage", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Inspect the alternator for damage and record operating voltage output."}, {"id": "hydraulic-1", "title": "Inspect Fluid Level & Quality", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic fluid level and assess fluid for contamination or discoloration."}, {"id": "hydraulic-2", "title": "Inspect Pump / Control Valve", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Visually inspect pump and control valve for leaks or damage."}, {"id": "hydraulic-3", "title": "Check Hydraulic Valve Levers", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic levers to ensure smooth and proper function."}, {"id": "hydraulic-4", "title": "Check Pump Drive Shaft & U-Joints", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Inspect the pump drive shaft and U-joints for wear or looseness."}, {"id": "hydraulic-5", "title": "Remove & Clean / Replace Tank Breather", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Remove the tank breather, clean or replace as needed."}, {"id": "hydraulic-6", "title": "Inspect All Hoses & Fittings", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Examine all hydraulic hoses and fittings for cracks, leaks, or abrasion."}, {"id": "hydraulic-7", "title": "Inspect Cylinders for Leaks", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic cylinders for oil leaks or physical damage."}, {"id": "brakes-1", "title": "Check Fluid Level & Quality", "section": "Brake", "required": true, "condition": 1, "description": "Inspect the brake fluid reservoir for proper level and clear, uncontaminated fluid."}, {"id": "brakes-2", "title": "Test PB Operation, Check Cables", "section": "Brake", "required": true, "condition": 1, "description": "Test parking brake operation and inspect cables for wear or binding."}, {"id": "brakes-3", "title": "Test Service Brake Operation", "section": "Brake", "required": true, "condition": 1, "description": "Depress the service brake and confirm the forklift stops smoothly and promptly."}, {"id": "brakes-4", "title": "Check Pedal Pads & Inching Pedal Cables", "section": "Brake", "required": true, "condition": 1, "description": "Inspect pedal pads for wear and inching pedal cables for proper function."}, {"id": "brakes-5", "title": "Check Wheels & Cylinder for Leaks", "section": "Brake", "required": true, "condition": 1, "description": "Look for brake fluid leaks around wheel cylinders and brake assemblies."}, {"id": "brakes-6", "title": "Check Brake / Inching Pedal Linkage", "section": "Brake", "required": true, "condition": 1, "description": "Inspect brake and inching pedal linkage for looseness or damage."}, {"id": "brakes-7", "title": "Check Brak / Inching Pedal Free Play", "section": "Brake", "required": true, "condition": 1, "description": "Verify correct amount of free play in brake and inching pedals."}, {"id": "steering-1", "title": "Inspect Steering Cylinder for Leaks", "section": "Steering", "required": true, "condition": 1, "description": "Check steering cylinder for hydraulic leaks or visible damage."}, {"id": "steering-2", "title": "Inspect Gear Box & Steer Column", "section": "Steering", "required": true, "condition": 1, "description": "Inspect the steering gear box and column for proper operation and leaks."}, {"id": "steering-3", "title": "Check King Pins & Spindles", "section": "Steering", "required": true, "condition": 1, "description": "Check king pins and spindles for excessive play or wear."}, {"id": "steering-4", "title": "Test Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Spin and rock steer wheels to check for noisy or loose bearings."}, {"id": "steering-5", "title": "Check Steer Axle Mounts & Stops", "section": "Steering", "required": true, "condition": 1, "description": "Ensure steer axle mounts and stops are secure and undamaged."}, {"id": "steering-6", "title": "Check Steering tie Rods & Pings", "section": "Steering", "required": true, "condition": 1, "description": "Inspect tie rods and pins for looseness or excessive wear."}, {"id": "steering-7", "title": "Check Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Verify steer wheel bearings turn smoothly without noise or resistance."}, {"id": "steering-8", "title": "Inspect Steer Wheel Lug Nuts / Rim / Cap", "section": "Steering", "required": true, "condition": 1, "description": "Check steer wheel lug nuts for tightness and inspect rim/cap for damage."}, {"id": "steering-9", "title": "Check Steering Hoses at Cylinder & Box", "section": "Steering", "required": true, "condition": 1, "description": "Inspect steering hoses at both the cylinder and box for leaks or wear."}, {"id": "differential-transmission-1", "title": "Check Fluid Levels & Condition", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect differential and transmission fluid levels and assess for contamination."}, {"id": "differential-transmission-2", "title": "Check for Abnormal Noise", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Listen for unusual noises from differential or transmission during operation."}, {"id": "differential-transmission-3", "title": "Check Drive Wheel Bearings & Lug Nuts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect drive wheel bearings for play and verify lug nuts are tight."}, {"id": "differential-transmission-4", "title": "Check Mounts & Bolts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Check that all mounts and bolts are secure and undamaged."}, {"id": "differential-transmission-5", "title": "Check for Leaks", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect the differential and transmission for signs of oil leaks."}, {"id": "differential-transmission-6", "title": "Check Drive Shaft & U-Joints", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Examine drive shaft and U-joints for excessive play or wear."}, {"id": "differential-transmission-7", "title": "Check Shift Lever Linkage / Cables", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Test shift lever linkage and cables for proper adjustment and smooth operation."}, {"id": "differential-transmission-8", "title": "Replace Fluid & Filters per OEM Spec", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Replace differential and transmission fluids and filters according to manufacturer specification."}, {"id": "ignition-1", "title": "Test Ignition Switch", "section": "Ignition System", "required": true, "condition": 1, "description": "Turn the ignition switch to verify smooth operation and proper start."}, {"id": "ignition-2", "title": "Check Coil / Coil Packs", "section": "Ignition System", "required": true, "condition": 1, "description": "Inspect ignition coil or coil packs for damage or signs of arcing."}, {"id": "ignition-3", "title": "Check Distributor Cap & Rotor", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and check distributor cap and rotor for wear or corrosion."}, {"id": "ignition-4", "title": "Check Spark Plug Condition & Wires", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and inspect spark plugs and wires for fouling or damage."}, {"id": "mast-carriage-1", "title": "Check Lift Chains & Anchors", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect lift chains and anchors for wear, proper lubrication, and correct tension."}, {"id": "mast-carriage-2", "title": "Check Cylinders for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine all mast cylinders for hydraulic leaks or damage."}, {"id": "mast-carriage-3", "title": "Check Cylinder Brackets", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect cylinder brackets for secure attachment and absence of cracks."}, {"id": "mast-carriage-4", "title": "Check Hose Pulleys & Chain / Hose Guards", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check that hose pulleys, chain guards, and hose guards are intact and functional."}, {"id": "mast-carriage-5", "title": "Check Tilt Cylinder Mounts & Pins", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Verify tilt cylinder mounts and pins are secure and show no excessive wear."}, {"id": "mast-carriage-6", "title": "Check Trunion Bushings / Mounts", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect trunion bushings and mounts for wear or looseness."}, {"id": "mast-carriage-7", "title": "Check Forks, Pins & Carriage Condition", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine forks, pins, and carriage for cracks, bending, or other defects."}, {"id": "mast-carriage-8", "title": "Check Hoses for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect hydraulic hoses on mast and carriage for leaks, abrasion, or damage."}, {"id": "mast-carriage-9", "title": "Check Mast Shims & Side Play", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check mast shims for tightness and look for excessive side play in mast."}, {"id": "mast-carriage-10", "title": "Check Carriage & Mast Rollers", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect rollers for flat spots, wear, or improper rotation."}, {"id": "mast-carriage-11", "title": "Check Mast Rails for Wear", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Look for wear, cracks, or bending along mast rails."}, {"id": "mast-carriage-12", "title": "Check Side Shift Bushings", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect side shift bushings for excessive wear or movement."}, {"id": "cooling-1", "title": "Blow Out Radiator", "section": "Cooling System", "required": true, "condition": 1, "description": "Use compressed air to remove dust and debris from the radiator fins."}, {"id": "cooling-2", "title": "Coolant Level, Condition & Leaks", "section": "Cooling System", "required": true, "condition": 1, "description": "Check coolant level, ensure coolant is clean, and inspect for leaks."}, {"id": "cooling-3", "title": "Check Radiator Condition & Shroud", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect radiator and fan shroud for damage or obstructions."}, {"id": "cooling-4", "title": "Check Water Pump for Leaks & Play", "section": "Cooling System", "required": true, "condition": 1, "description": "Check water pump for coolant leaks or excessive shaft play."}, {"id": "cooling-5", "title": "Check Belt Condition & Tension", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect all drive belts for cracks, fraying, and correct tension."}, {"id": "cooling-6", "title": "Check Fan Blade Condition", "section": "Cooling System", "required": true, "condition": 1, "description": "Examine fan blades for cracks, chips, or loose mounting."}, {"id": "cooling-7", "title": "Cooland Good To (°F)", "section": "Cooling System", "required": true, "condition": 1, "description": "Verify coolant protection is adequate for expected low temperatures using a tester."}, {"id": "fuel-1", "notes": "N/a", "title": "Check LP Tank, Hoses & Fittings", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect LP tank, hoses, and fittings for leaks, damage, or loose connections."}, {"id": "fuel-2", "notes": "N/a", "title": "Drain LPG Regulator", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain condensation from the LPG regulator per manufacturer instructions."}, {"id": "fuel-3", "notes": "N/a", "title": "Check LP System for Leaks", "section": "Fuel System", "required": true, "condition": 1, "description": "Use leak detector solution or sniffer to check LP system for leaks."}, {"id": "fuel-4", "notes": "N/a", "title": "Check LPG Lockoff Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Test LPG lockoff valve for proper engagement and operation."}, {"id": "fuel-5", "notes": "N/a", "title": "Check Carburetor & Linkages", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect carburetor and throttle/choke linkages for smooth movement and secure attachment."}, {"id": "fuel-6", "title": "Check throttle Pedal Linkages / Cable", "section": "Fuel System", "required": true, "condition": 1, "description": "Check throttle pedal linkages and cable for free movement and secure connections."}, {"id": "fuel-7", "title": "Check Governor for Proper Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect and test governor for correct operation and smooth throttle response."}, {"id": "fuel-8", "title": "Change Diesel Fuel Filters", "section": "Fuel System", "required": true, "condition": 1, "description": "Replace diesel fuel filters according to the service schedule."}, {"id": "fuel-9", "title": "Drain Water Separator / Sediment Filter", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain water separator and sediment filter of any collected water or contaminants."}, {"id": "final-inspection-1", "title": "Test Horn Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Press horn button to verify loud, consistent sound."}, {"id": "final-inspection-2", "title": "Does Back Up Alarm Sound in Reverse", "section": "Final Inspection", "required": true, "condition": 1, "description": "Shift into reverse and confirm the backup alarm activates."}, {"id": "final-inspection-3", "title": "Test Brake Lights / Turn Signals / BU Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Check that all brake lights, turn signals, and backup lights function properly."}, {"id": "final-inspection-4", "title": "Test Strobe Light for Proper Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Activate the strobe light and ensure it flashes correctly."}, {"id": "final-inspection-5", "title": "Test Seat Belt", "section": "Final Inspection", "required": true, "condition": 1, "description": "Buckle and unbuckle seat belt to confirm proper latching and release."}, {"id": "final-inspection-6", "title": "Test Operator Presence System", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm that the operator presence system disables movement when the seat is unoccupied."}, {"id": "final-inspection-7", "title": "Check All Work Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Turn on all work lights and confirm they illuminate properly."}, {"id": "final-inspection-8", "title": "Test Both Service & Parking Brake", "section": "Final Inspection", "required": true, "condition": 1, "description": "Apply both brakes and ensure they hold the forklift stationary."}, {"id": "final-inspection-9", "title": "Test Forward & Reverse Travel", "section": "Final Inspection", "required": true, "condition": 1, "description": "Drive forklift forward and in reverse to confirm smooth operation."}, {"id": "final-inspection-10", "title": "Test All Hydraulic Functions", "section": "Final Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic controls and ensure smooth, correct response."}, {"id": "final-inspection-11", "title": "Test Seat Belt Alarm", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm seat belt alarm sounds if the seat belt is not engaged during operation."}, {"id": "final-inspection-12", "title": "Wipe Down Forklift, Dash Area", "section": "Final Inspection", "required": true, "condition": 1, "description": "Clean the forklift and dashboard area of dirt and debris."}, {"id": "final-inspection-13", "title": "Install PM Sticker", "section": "Final Inspection", "required": true, "condition": 1, "description": "Place the preventative maintenance sticker in the designated area to indicate service is complete."}]	Historical pm for princeton 3604 woodson lumber \nHours 42.	t	\N	Historical PM - 	\N
e22484e0-cf88-49f1-9087-f12327d506e2	572c6b8f-c66f-4ee3-b76d-461df2d88dec	e1064edd-c3ae-492f-9ff1-91d8abfffb47	5a54dd83-f546-4149-8ff5-d44cbc570217	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 03:35:21.957108+00	2025-08-04 03:46:52.088653+00	2025-08-04 03:46:52.349+00	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	completed	[{"id": "visual-1", "notes": "Slight leak at valve ", "title": "Oil/Coolant Leaks", "section": "Visual Inspection", "required": true, "condition": 3, "description": "Inspect under and around the forklift for signs of oil or coolant leaks."}, {"id": "visual-2", "title": "Carriage, Mast & LBR Assembly", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Examine the carriage, mast, and load backrest for damage, cracks, or deformation."}, {"id": "visaul-3", "title": "Forks and Fork Pins", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check that forks and fork pins are straight, undamaged, and securely attached."}, {"id": "visual-4", "title": "Mast Chains, Rollers & Hoses", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect mast chains, rollers, and hoses for wear, proper tension, and leaks."}, {"id": "visaul-5", "title": "Tire & Wheel Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect tires and wheels for cuts, excessive wear, or missing lug nuts."}, {"id": "visual-6", "notes": "Seat showing foam", "title": "Seat & Seat Belt Condition", "section": "Visual Inspection", "required": true, "condition": 3, "description": "Ensure seat and seat belt are present, undamaged, and functioning properly."}, {"id": "visual-7", "title": "Decals & Capacity Plates", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Verify that all safety decals and capacity plates are present and legible."}, {"id": "visual-8", "title": "Overhead Guard Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check the overhead guard for bends, cracks, or missing hardware."}, {"id": "visual-9", "title": "Check Cylinders for Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect all visible hydraulic cylinders for leaks or damage."}, {"id": "engine-compartment-1", "title": "Blow Out Engine Compartment", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Use compressed air to clean debris and dust from the engine compartment."}, {"id": "engine-compartment-2", "title": "Check Condition of Air Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect and replace the air filter if dirty or clogged."}, {"id": "engine-compartment-3", "title": "Change Engine Oil & Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Drain engine oil, replace with new oil, and install a new oil filter as specified."}, {"id": "engine-compartment-4", "title": "Check hood Latch, Hinges & Hood Strut", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Confirm hood latch, hinges, and strut function smoothly and securely."}, {"id": "engine-compartment-5", "title": "Inspect Air Intake Hoses & Clamps", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine air intake hoses and clamps for cracks, leaks, or loose fittings."}, {"id": "engine-compartment-6", "title": "Check Ring Gear Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect ring gear for visible damage or abnormal wear."}, {"id": "engine-compartment-7", "title": "Check Hood Insulation & Hood Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Ensure hood insulation is intact and hood is free of damage."}, {"id": "engine-compartment-8", "title": "Engine Noise / Smoke / Idle RPMs", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Start the engine and check for abnormal noises, smoke, or incorrect idle speed."}, {"id": "engine-compartment-9", "title": "Exhaust System / Muffler / Catalyst", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine the exhaust system, muffler, and catalyst for leaks, noise, or damage."}, {"id": "engine-compartment-10", "notes": "Slight valve cover leak", "title": "Check for Engine Oil Leaks", "section": "Engine Compartment", "required": true, "condition": 3, "description": "Look for evidence of engine oil leaks under and around the engine."}, {"id": "engine-compartment-11", "title": "Check Vacuum Lines / PCV Valve", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect vacuum lines and PCV valve for cracks, leaks, or blockages."}, {"id": "electrical-1", "title": "Check Headlights, Strobe, Taillights", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Verify all headlights, taillights, and strobe lights operate correctly."}, {"id": "electrical-2", "title": "Clean Battery Terminals / Load Test", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Clean corrosion from battery terminals and perform a battery load test."}, {"id": "electrical-3", "title": "Inspect Wire Harness / Connections", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Check wire harnesses and electrical connections for wear or loose fittings."}, {"id": "electrical-4", "title": "Check Neutral Safety Switch", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Test the neutral safety switch for correct operation."}, {"id": "electrical-5", "title": "Check All Gauges & Hour Meter", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Ensure all dashboard gauges and the hour meter function accurately."}, {"id": "electrical-6", "title": "Condition of Fuse Panel / Relay Box", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Open and inspect the fuse panel and relay box for corrosion, damage, or missing fuses."}, {"id": "electrical-7", "title": "Inspect Alternator / Record Voltage", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Inspect the alternator for damage and record operating voltage output."}, {"id": "hydraulic-1", "title": "Inspect Fluid Level & Quality", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic fluid level and assess fluid for contamination or discoloration."}, {"id": "hydraulic-2", "title": "Inspect Pump / Control Valve", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Visually inspect pump and control valve for leaks or damage."}, {"id": "hydraulic-3", "title": "Check Hydraulic Valve Levers", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic levers to ensure smooth and proper function."}, {"id": "hydraulic-4", "title": "Check Pump Drive Shaft & U-Joints", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Inspect the pump drive shaft and U-joints for wear or looseness."}, {"id": "hydraulic-5", "title": "Remove & Clean / Replace Tank Breather", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Remove the tank breather, clean or replace as needed."}, {"id": "hydraulic-6", "title": "Inspect All Hoses & Fittings", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Examine all hydraulic hoses and fittings for cracks, leaks, or abrasion."}, {"id": "hydraulic-7", "title": "Inspect Cylinders for Leaks", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic cylinders for oil leaks or physical damage."}, {"id": "brakes-1", "title": "Check Fluid Level & Quality", "section": "Brake", "required": true, "condition": 1, "description": "Inspect the brake fluid reservoir for proper level and clear, uncontaminated fluid."}, {"id": "brakes-2", "title": "Test PB Operation, Check Cables", "section": "Brake", "required": true, "condition": 1, "description": "Test parking brake operation and inspect cables for wear or binding."}, {"id": "brakes-3", "title": "Test Service Brake Operation", "section": "Brake", "required": true, "condition": 1, "description": "Depress the service brake and confirm the forklift stops smoothly and promptly."}, {"id": "brakes-4", "title": "Check Pedal Pads & Inching Pedal Cables", "section": "Brake", "required": true, "condition": 1, "description": "Inspect pedal pads for wear and inching pedal cables for proper function."}, {"id": "brakes-5", "title": "Check Wheels & Cylinder for Leaks", "section": "Brake", "required": true, "condition": 1, "description": "Look for brake fluid leaks around wheel cylinders and brake assemblies."}, {"id": "brakes-6", "title": "Check Brake / Inching Pedal Linkage", "section": "Brake", "required": true, "condition": 1, "description": "Inspect brake and inching pedal linkage for looseness or damage."}, {"id": "brakes-7", "title": "Check Brak / Inching Pedal Free Play", "section": "Brake", "required": true, "condition": 1, "description": "Verify correct amount of free play in brake and inching pedals."}, {"id": "steering-1", "title": "Inspect Steering Cylinder for Leaks", "section": "Steering", "required": true, "condition": 1, "description": "Check steering cylinder for hydraulic leaks or visible damage."}, {"id": "steering-2", "title": "Inspect Gear Box & Steer Column", "section": "Steering", "required": true, "condition": 1, "description": "Inspect the steering gear box and column for proper operation and leaks."}, {"id": "steering-3", "title": "Check King Pins & Spindles", "section": "Steering", "required": true, "condition": 1, "description": "Check king pins and spindles for excessive play or wear."}, {"id": "steering-4", "title": "Test Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Spin and rock steer wheels to check for noisy or loose bearings."}, {"id": "steering-5", "title": "Check Steer Axle Mounts & Stops", "section": "Steering", "required": true, "condition": 1, "description": "Ensure steer axle mounts and stops are secure and undamaged."}, {"id": "steering-6", "title": "Check Steering tie Rods & Pings", "section": "Steering", "required": true, "condition": 1, "description": "Inspect tie rods and pins for looseness or excessive wear."}, {"id": "steering-7", "title": "Check Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Verify steer wheel bearings turn smoothly without noise or resistance."}, {"id": "steering-8", "title": "Inspect Steer Wheel Lug Nuts / Rim / Cap", "section": "Steering", "required": true, "condition": 1, "description": "Check steer wheel lug nuts for tightness and inspect rim/cap for damage."}, {"id": "steering-9", "title": "Check Steering Hoses at Cylinder & Box", "section": "Steering", "required": true, "condition": 1, "description": "Inspect steering hoses at both the cylinder and box for leaks or wear."}, {"id": "differential-transmission-1", "title": "Check Fluid Levels & Condition", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect differential and transmission fluid levels and assess for contamination."}, {"id": "differential-transmission-2", "title": "Check for Abnormal Noise", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Listen for unusual noises from differential or transmission during operation."}, {"id": "differential-transmission-3", "title": "Check Drive Wheel Bearings & Lug Nuts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect drive wheel bearings for play and verify lug nuts are tight."}, {"id": "differential-transmission-4", "title": "Check Mounts & Bolts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Check that all mounts and bolts are secure and undamaged."}, {"id": "differential-transmission-5", "title": "Check for Leaks", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect the differential and transmission for signs of oil leaks."}, {"id": "differential-transmission-6", "title": "Check Drive Shaft & U-Joints", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Examine drive shaft and U-joints for excessive play or wear."}, {"id": "differential-transmission-7", "title": "Check Shift Lever Linkage / Cables", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Test shift lever linkage and cables for proper adjustment and smooth operation."}, {"id": "differential-transmission-8", "title": "Replace Fluid & Filters per OEM Spec", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Replace differential and transmission fluids and filters according to manufacturer specification."}, {"id": "ignition-1", "title": "Test Ignition Switch", "section": "Ignition System", "required": true, "condition": 1, "description": "Turn the ignition switch to verify smooth operation and proper start."}, {"id": "ignition-2", "title": "Check Coil / Coil Packs", "section": "Ignition System", "required": true, "condition": 1, "description": "Inspect ignition coil or coil packs for damage or signs of arcing."}, {"id": "ignition-3", "title": "Check Distributor Cap & Rotor", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and check distributor cap and rotor for wear or corrosion."}, {"id": "ignition-4", "title": "Check Spark Plug Condition & Wires", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and inspect spark plugs and wires for fouling or damage."}, {"id": "mast-carriage-1", "title": "Check Lift Chains & Anchors", "section": "Mast & Carriage", "required": true, "condition": 2, "description": "Inspect lift chains and anchors for wear, proper lubrication, and correct tension."}, {"id": "mast-carriage-2", "title": "Check Cylinders for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine all mast cylinders for hydraulic leaks or damage."}, {"id": "mast-carriage-3", "title": "Check Cylinder Brackets", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect cylinder brackets for secure attachment and absence of cracks."}, {"id": "mast-carriage-4", "title": "Check Hose Pulleys & Chain / Hose Guards", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check that hose pulleys, chain guards, and hose guards are intact and functional."}, {"id": "mast-carriage-5", "title": "Check Tilt Cylinder Mounts & Pins", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Verify tilt cylinder mounts and pins are secure and show no excessive wear."}, {"id": "mast-carriage-6", "title": "Check Trunion Bushings / Mounts", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect trunion bushings and mounts for wear or looseness."}, {"id": "mast-carriage-7", "title": "Check Forks, Pins & Carriage Condition", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine forks, pins, and carriage for cracks, bending, or other defects."}, {"id": "mast-carriage-8", "title": "Check Hoses for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect hydraulic hoses on mast and carriage for leaks, abrasion, or damage."}, {"id": "mast-carriage-9", "title": "Check Mast Shims & Side Play", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check mast shims for tightness and look for excessive side play in mast."}, {"id": "mast-carriage-10", "title": "Check Carriage & Mast Rollers", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect rollers for flat spots, wear, or improper rotation."}, {"id": "mast-carriage-11", "title": "Check Mast Rails for Wear", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Look for wear, cracks, or bending along mast rails."}, {"id": "mast-carriage-12", "title": "Check Side Shift Bushings", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect side shift bushings for excessive wear or movement."}, {"id": "cooling-1", "title": "Blow Out Radiator", "section": "Cooling System", "required": true, "condition": 1, "description": "Use compressed air to remove dust and debris from the radiator fins."}, {"id": "cooling-2", "title": "Coolant Level, Condition & Leaks", "section": "Cooling System", "required": true, "condition": 1, "description": "Check coolant level, ensure coolant is clean, and inspect for leaks."}, {"id": "cooling-3", "title": "Check Radiator Condition & Shroud", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect radiator and fan shroud for damage or obstructions."}, {"id": "cooling-4", "title": "Check Water Pump for Leaks & Play", "section": "Cooling System", "required": true, "condition": 1, "description": "Check water pump for coolant leaks or excessive shaft play."}, {"id": "cooling-5", "title": "Check Belt Condition & Tension", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect all drive belts for cracks, fraying, and correct tension."}, {"id": "cooling-6", "title": "Check Fan Blade Condition", "section": "Cooling System", "required": true, "condition": 1, "description": "Examine fan blades for cracks, chips, or loose mounting."}, {"id": "cooling-7", "title": "Cooland Good To (°F)", "section": "Cooling System", "required": true, "condition": 1, "description": "Verify coolant protection is adequate for expected low temperatures using a tester."}, {"id": "fuel-1", "notes": "N/a", "title": "Check LP Tank, Hoses & Fittings", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect LP tank, hoses, and fittings for leaks, damage, or loose connections."}, {"id": "fuel-2", "notes": "N//a", "title": "Drain LPG Regulator", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain condensation from the LPG regulator per manufacturer instructions."}, {"id": "fuel-3", "title": "Check LP System for Leaks", "section": "Fuel System", "required": true, "condition": 1, "description": "Use leak detector solution or sniffer to check LP system for leaks."}, {"id": "fuel-4", "notes": "N/a", "title": "Check LPG Lockoff Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Test LPG lockoff valve for proper engagement and operation."}, {"id": "fuel-5", "notes": "N/a", "title": "Check Carburetor & Linkages", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect carburetor and throttle/choke linkages for smooth movement and secure attachment."}, {"id": "fuel-6", "title": "Check throttle Pedal Linkages / Cable", "section": "Fuel System", "required": true, "condition": 1, "description": "Check throttle pedal linkages and cable for free movement and secure connections."}, {"id": "fuel-7", "title": "Check Governor for Proper Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect and test governor for correct operation and smooth throttle response."}, {"id": "fuel-8", "title": "Change Diesel Fuel Filters", "section": "Fuel System", "required": true, "condition": 1, "description": "Replace diesel fuel filters according to the service schedule."}, {"id": "fuel-9", "title": "Drain Water Separator / Sediment Filter", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain water separator and sediment filter of any collected water or contaminants."}, {"id": "final-inspection-1", "title": "Test Horn Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Press horn button to verify loud, consistent sound."}, {"id": "final-inspection-2", "title": "Does Back Up Alarm Sound in Reverse", "section": "Final Inspection", "required": true, "condition": 1, "description": "Shift into reverse and confirm the backup alarm activates."}, {"id": "final-inspection-3", "title": "Test Brake Lights / Turn Signals / BU Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Check that all brake lights, turn signals, and backup lights function properly."}, {"id": "final-inspection-4", "title": "Test Strobe Light for Proper Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Activate the strobe light and ensure it flashes correctly."}, {"id": "final-inspection-5", "title": "Test Seat Belt", "section": "Final Inspection", "required": true, "condition": 1, "description": "Buckle and unbuckle seat belt to confirm proper latching and release."}, {"id": "final-inspection-6", "title": "Test Operator Presence System", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm that the operator presence system disables movement when the seat is unoccupied."}, {"id": "final-inspection-7", "title": "Check All Work Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Turn on all work lights and confirm they illuminate properly."}, {"id": "final-inspection-8", "title": "Test Both Service & Parking Brake", "section": "Final Inspection", "required": true, "condition": 1, "description": "Apply both brakes and ensure they hold the forklift stationary."}, {"id": "final-inspection-9", "title": "Test Forward & Reverse Travel", "section": "Final Inspection", "required": true, "condition": 1, "description": "Drive forklift forward and in reverse to confirm smooth operation."}, {"id": "final-inspection-10", "title": "Test All Hydraulic Functions", "section": "Final Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic controls and ensure smooth, correct response."}, {"id": "final-inspection-11", "title": "Test Seat Belt Alarm", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm seat belt alarm sounds if the seat belt is not engaged during operation."}, {"id": "final-inspection-12", "title": "Wipe Down Forklift, Dash Area", "section": "Final Inspection", "required": true, "condition": 1, "description": "Clean the forklift and dashboard area of dirt and debris."}, {"id": "final-inspection-13", "title": "Install PM Sticker", "section": "Final Inspection", "required": true, "condition": 1, "description": "Place the preventative maintenance sticker in the designated area to indicate service is complete."}]	Princton 5207 historical pm record \nHours- 172	t	\N	Historical PM - 	\N
e2456f76-1cb8-4c6f-aa2d-274c9e879897	921872b2-94ff-4960-8ec3-037f8903dcf7	989dba12-f0f4-4f58-9ba0-48ca5fa95f55	5a54dd83-f546-4149-8ff5-d44cbc570217	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 04:25:45.59015+00	2025-08-04 04:32:23.740977+00	2025-08-04 04:32:18.493+00	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	in_progress	[{"id": "visual-1", "title": "Oil/Coolant Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect under and around the forklift for signs of oil or coolant leaks."}, {"id": "visual-2", "title": "Carriage, Mast & LBR Assembly", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Examine the carriage, mast, and load backrest for damage, cracks, or deformation."}, {"id": "visaul-3", "title": "Forks and Fork Pins", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check that forks and fork pins are straight, undamaged, and securely attached."}, {"id": "visual-4", "title": "Mast Chains, Rollers & Hoses", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect mast chains, rollers, and hoses for wear, proper tension, and leaks."}, {"id": "visaul-5", "title": "Tire & Wheel Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect tires and wheels for cuts, excessive wear, or missing lug nuts."}, {"id": "visual-6", "title": "Seat & Seat Belt Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Ensure seat and seat belt are present, undamaged, and functioning properly."}, {"id": "visual-7", "title": "Decals & Capacity Plates", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Verify that all safety decals and capacity plates are present and legible."}, {"id": "visual-8", "title": "Overhead Guard Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check the overhead guard for bends, cracks, or missing hardware."}, {"id": "visual-9", "title": "Check Cylinders for Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect all visible hydraulic cylinders for leaks or damage."}, {"id": "engine-compartment-1", "title": "Blow Out Engine Compartment", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Use compressed air to clean debris and dust from the engine compartment."}, {"id": "engine-compartment-2", "title": "Check Condition of Air Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect and replace the air filter if dirty or clogged."}, {"id": "engine-compartment-3", "title": "Change Engine Oil & Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Drain engine oil, replace with new oil, and install a new oil filter as specified."}, {"id": "engine-compartment-4", "title": "Check hood Latch, Hinges & Hood Strut", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Confirm hood latch, hinges, and strut function smoothly and securely."}, {"id": "engine-compartment-5", "title": "Inspect Air Intake Hoses & Clamps", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine air intake hoses and clamps for cracks, leaks, or loose fittings."}, {"id": "engine-compartment-6", "title": "Check Ring Gear Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect ring gear for visible damage or abnormal wear."}, {"id": "engine-compartment-7", "title": "Check Hood Insulation & Hood Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Ensure hood insulation is intact and hood is free of damage."}, {"id": "engine-compartment-8", "title": "Engine Noise / Smoke / Idle RPMs", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Start the engine and check for abnormal noises, smoke, or incorrect idle speed."}, {"id": "engine-compartment-9", "title": "Exhaust System / Muffler / Catalyst", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine the exhaust system, muffler, and catalyst for leaks, noise, or damage."}, {"id": "engine-compartment-10", "notes": "Previous oil filter loose, caused leak", "title": "Check for Engine Oil Leaks", "section": "Engine Compartment", "required": true, "condition": 2, "description": "Look for evidence of engine oil leaks under and around the engine."}, {"id": "engine-compartment-11", "title": "Check Vacuum Lines / PCV Valve", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect vacuum lines and PCV valve for cracks, leaks, or blockages."}, {"id": "electrical-1", "title": "Check Headlights, Strobe, Taillights", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Verify all headlights, taillights, and strobe lights operate correctly."}, {"id": "electrical-2", "title": "Clean Battery Terminals / Load Test", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Clean corrosion from battery terminals and perform a battery load test."}, {"id": "electrical-3", "title": "Inspect Wire Harness / Connections", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Check wire harnesses and electrical connections for wear or loose fittings."}, {"id": "electrical-4", "title": "Check Neutral Safety Switch", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Test the neutral safety switch for correct operation."}, {"id": "electrical-5", "title": "Check All Gauges & Hour Meter", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Ensure all dashboard gauges and the hour meter function accurately."}, {"id": "electrical-6", "title": "Condition of Fuse Panel / Relay Box", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Open and inspect the fuse panel and relay box for corrosion, damage, or missing fuses."}, {"id": "electrical-7", "title": "Inspect Alternator / Record Voltage", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Inspect the alternator for damage and record operating voltage output."}, {"id": "hydraulic-1", "title": "Inspect Fluid Level & Quality", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic fluid level and assess fluid for contamination or discoloration."}, {"id": "hydraulic-2", "title": "Inspect Pump / Control Valve", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Visually inspect pump and control valve for leaks or damage."}, {"id": "hydraulic-3", "title": "Check Hydraulic Valve Levers", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic levers to ensure smooth and proper function."}, {"id": "hydraulic-4", "title": "Check Pump Drive Shaft & U-Joints", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Inspect the pump drive shaft and U-joints for wear or looseness."}, {"id": "hydraulic-5", "title": "Remove & Clean / Replace Tank Breather", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Remove the tank breather, clean or replace as needed."}, {"id": "hydraulic-6", "notes": "Lift cylinder hoses showing wear ", "title": "Inspect All Hoses & Fittings", "section": "Hydraulic Inspection", "required": true, "condition": 3, "description": "Examine all hydraulic hoses and fittings for cracks, leaks, or abrasion."}, {"id": "hydraulic-7", "title": "Inspect Cylinders for Leaks", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic cylinders for oil leaks or physical damage."}, {"id": "brakes-1", "title": "Check Fluid Level & Quality", "section": "Brake", "required": true, "condition": 1, "description": "Inspect the brake fluid reservoir for proper level and clear, uncontaminated fluid."}, {"id": "brakes-2", "notes": "Park brake switch intermittent issues, seat causing issues with park also.", "title": "Test PB Operation, Check Cables", "section": "Brake", "required": true, "condition": 3, "description": "Test parking brake operation and inspect cables for wear or binding."}, {"id": "brakes-3", "title": "Test Service Brake Operation", "section": "Brake", "required": true, "condition": 1, "description": "Depress the service brake and confirm the forklift stops smoothly and promptly."}, {"id": "brakes-4", "title": "Check Pedal Pads & Inching Pedal Cables", "section": "Brake", "required": true, "condition": 1, "description": "Inspect pedal pads for wear and inching pedal cables for proper function."}, {"id": "brakes-5", "title": "Check Wheels & Cylinder for Leaks", "section": "Brake", "required": true, "condition": 1, "description": "Look for brake fluid leaks around wheel cylinders and brake assemblies."}, {"id": "brakes-6", "title": "Check Brake / Inching Pedal Linkage", "section": "Brake", "required": true, "condition": 1, "description": "Inspect brake and inching pedal linkage for looseness or damage."}, {"id": "brakes-7", "title": "Check Brak / Inching Pedal Free Play", "section": "Brake", "required": true, "condition": 1, "description": "Verify correct amount of free play in brake and inching pedals."}, {"id": "steering-1", "notes": "Possible leak, Will monitor ", "title": "Inspect Steering Cylinder for Leaks", "section": "Steering", "required": true, "condition": 3, "description": "Check steering cylinder for hydraulic leaks or visible damage."}, {"id": "steering-2", "title": "Inspect Gear Box & Steer Column", "section": "Steering", "required": true, "condition": 1, "description": "Inspect the steering gear box and column for proper operation and leaks."}, {"id": "steering-3", "title": "Check King Pins & Spindles", "section": "Steering", "required": true, "condition": 1, "description": "Check king pins and spindles for excessive play or wear."}, {"id": "steering-4", "title": "Test Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Spin and rock steer wheels to check for noisy or loose bearings."}, {"id": "steering-5", "title": "Check Steer Axle Mounts & Stops", "section": "Steering", "required": true, "condition": 1, "description": "Ensure steer axle mounts and stops are secure and undamaged."}, {"id": "steering-6", "title": "Check Steering tie Rods & Pings", "section": "Steering", "required": true, "condition": 1, "description": "Inspect tie rods and pins for looseness or excessive wear."}, {"id": "steering-7", "title": "Check Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Verify steer wheel bearings turn smoothly without noise or resistance."}, {"id": "steering-8", "title": "Inspect Steer Wheel Lug Nuts / Rim / Cap", "section": "Steering", "required": true, "condition": 1, "description": "Check steer wheel lug nuts for tightness and inspect rim/cap for damage."}, {"id": "steering-9", "title": "Check Steering Hoses at Cylinder & Box", "section": "Steering", "required": true, "condition": 1, "description": "Inspect steering hoses at both the cylinder and box for leaks or wear."}, {"id": "differential-transmission-1", "title": "Check Fluid Levels & Condition", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect differential and transmission fluid levels and assess for contamination."}, {"id": "differential-transmission-2", "title": "Check for Abnormal Noise", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Listen for unusual noises from differential or transmission during operation."}, {"id": "differential-transmission-3", "title": "Check Drive Wheel Bearings & Lug Nuts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect drive wheel bearings for play and verify lug nuts are tight."}, {"id": "differential-transmission-4", "title": "Check Mounts & Bolts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Check that all mounts and bolts are secure and undamaged."}, {"id": "differential-transmission-5", "title": "Check for Leaks", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect the differential and transmission for signs of oil leaks."}, {"id": "differential-transmission-6", "title": "Check Drive Shaft & U-Joints", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Examine drive shaft and U-joints for excessive play or wear."}, {"id": "differential-transmission-7", "title": "Check Shift Lever Linkage / Cables", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Test shift lever linkage and cables for proper adjustment and smooth operation."}, {"id": "differential-transmission-8", "title": "Replace Fluid & Filters per OEM Spec", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Replace differential and transmission fluids and filters according to manufacturer specification."}, {"id": "ignition-1", "title": "Test Ignition Switch", "section": "Ignition System", "required": true, "condition": 1, "description": "Turn the ignition switch to verify smooth operation and proper start."}, {"id": "ignition-2", "title": "Check Coil / Coil Packs", "section": "Ignition System", "required": true, "condition": 1, "description": "Inspect ignition coil or coil packs for damage or signs of arcing."}, {"id": "ignition-3", "title": "Check Distributor Cap & Rotor", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and check distributor cap and rotor for wear or corrosion."}, {"id": "ignition-4", "title": "Check Spark Plug Condition & Wires", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and inspect spark plugs and wires for fouling or damage."}, {"id": "mast-carriage-1", "title": "Check Lift Chains & Anchors", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect lift chains and anchors for wear, proper lubrication, and correct tension."}, {"id": "mast-carriage-2", "title": "Check Cylinders for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine all mast cylinders for hydraulic leaks or damage."}, {"id": "mast-carriage-3", "title": "Check Cylinder Brackets", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect cylinder brackets for secure attachment and absence of cracks."}, {"id": "mast-carriage-4", "title": "Check Hose Pulleys & Chain / Hose Guards", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check that hose pulleys, chain guards, and hose guards are intact and functional."}, {"id": "mast-carriage-5", "title": "Check Tilt Cylinder Mounts & Pins", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Verify tilt cylinder mounts and pins are secure and show no excessive wear."}, {"id": "mast-carriage-6", "title": "Check Trunion Bushings / Mounts", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect trunion bushings and mounts for wear or looseness."}, {"id": "mast-carriage-7", "title": "Check Forks, Pins & Carriage Condition", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine forks, pins, and carriage for cracks, bending, or other defects."}, {"id": "mast-carriage-8", "title": "Check Hoses for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect hydraulic hoses on mast and carriage for leaks, abrasion, or damage."}, {"id": "mast-carriage-9", "title": "Check Mast Shims & Side Play", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check mast shims for tightness and look for excessive side play in mast."}, {"id": "mast-carriage-10", "title": "Check Carriage & Mast Rollers", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect rollers for flat spots, wear, or improper rotation."}, {"id": "mast-carriage-11", "title": "Check Mast Rails for Wear", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Look for wear, cracks, or bending along mast rails."}, {"id": "mast-carriage-12", "title": "Check Side Shift Bushings", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect side shift bushings for excessive wear or movement."}, {"id": "cooling-1", "title": "Blow Out Radiator", "section": "Cooling System", "required": true, "condition": 1, "description": "Use compressed air to remove dust and debris from the radiator fins."}, {"id": "cooling-2", "title": "Coolant Level, Condition & Leaks", "section": "Cooling System", "required": true, "condition": 1, "description": "Check coolant level, ensure coolant is clean, and inspect for leaks."}, {"id": "cooling-3", "title": "Check Radiator Condition & Shroud", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect radiator and fan shroud for damage or obstructions."}, {"id": "cooling-4", "title": "Check Water Pump for Leaks & Play", "section": "Cooling System", "required": true, "condition": 1, "description": "Check water pump for coolant leaks or excessive shaft play."}, {"id": "cooling-5", "title": "Check Belt Condition & Tension", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect all drive belts for cracks, fraying, and correct tension."}, {"id": "cooling-6", "title": "Check Fan Blade Condition", "section": "Cooling System", "required": true, "condition": 1, "description": "Examine fan blades for cracks, chips, or loose mounting."}, {"id": "cooling-7", "title": "Cooland Good To (°F)", "section": "Cooling System", "required": true, "condition": 1, "description": "Verify coolant protection is adequate for expected low temperatures using a tester."}, {"id": "fuel-1", "notes": "N/a", "title": "Check LP Tank, Hoses & Fittings", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect LP tank, hoses, and fittings for leaks, damage, or loose connections."}, {"id": "fuel-2", "notes": "N/a", "title": "Drain LPG Regulator", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain condensation from the LPG regulator per manufacturer instructions."}, {"id": "fuel-3", "notes": "N/a", "title": "Check LP System for Leaks", "section": "Fuel System", "required": true, "condition": 1, "description": "Use leak detector solution or sniffer to check LP system for leaks."}, {"id": "fuel-4", "notes": "N/a", "title": "Check LPG Lockoff Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Test LPG lockoff valve for proper engagement and operation."}, {"id": "fuel-5", "notes": "N/a", "title": "Check Carburetor & Linkages", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect carburetor and throttle/choke linkages for smooth movement and secure attachment."}, {"id": "fuel-6", "title": "Check throttle Pedal Linkages / Cable", "section": "Fuel System", "required": true, "condition": 1, "description": "Check throttle pedal linkages and cable for free movement and secure connections."}, {"id": "fuel-7", "title": "Check Governor for Proper Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect and test governor for correct operation and smooth throttle response."}, {"id": "fuel-8", "title": "Change Diesel Fuel Filters", "section": "Fuel System", "required": true, "condition": 1, "description": "Replace diesel fuel filters according to the service schedule."}, {"id": "fuel-9", "title": "Drain Water Separator / Sediment Filter", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain water separator and sediment filter of any collected water or contaminants."}, {"id": "final-inspection-1", "title": "Test Horn Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Press horn button to verify loud, consistent sound."}, {"id": "final-inspection-2", "title": "Does Back Up Alarm Sound in Reverse", "section": "Final Inspection", "required": true, "condition": 1, "description": "Shift into reverse and confirm the backup alarm activates."}, {"id": "final-inspection-3", "title": "Test Brake Lights / Turn Signals / BU Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Check that all brake lights, turn signals, and backup lights function properly."}, {"id": "final-inspection-4", "title": "Test Strobe Light for Proper Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Activate the strobe light and ensure it flashes correctly."}, {"id": "final-inspection-5", "title": "Test Seat Belt", "section": "Final Inspection", "required": true, "condition": 1, "description": "Buckle and unbuckle seat belt to confirm proper latching and release."}, {"id": "final-inspection-6", "title": "Test Operator Presence System", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm that the operator presence system disables movement when the seat is unoccupied."}, {"id": "final-inspection-7", "title": "Check All Work Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Turn on all work lights and confirm they illuminate properly."}, {"id": "final-inspection-8", "title": "Test Both Service & Parking Brake", "section": "Final Inspection", "required": true, "condition": 1, "description": "Apply both brakes and ensure they hold the forklift stationary."}, {"id": "final-inspection-9", "title": "Test Forward & Reverse Travel", "section": "Final Inspection", "required": true, "condition": 1, "description": "Drive forklift forward and in reverse to confirm smooth operation."}, {"id": "final-inspection-10", "title": "Test All Hydraulic Functions", "section": "Final Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic controls and ensure smooth, correct response."}, {"id": "final-inspection-11", "title": "Test Seat Belt Alarm", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm seat belt alarm sounds if the seat belt is not engaged during operation."}, {"id": "final-inspection-12", "title": "Wipe Down Forklift, Dash Area", "section": "Final Inspection", "required": true, "condition": 1, "description": "Clean the forklift and dashboard area of dirt and debris."}, {"id": "final-inspection-13", "title": "Install PM Sticker", "section": "Final Inspection", "required": true, "condition": 1, "description": "Place the preventative maintenance sticker in the designated area to indicate service is complete."}]	Historical pm record for Doosan 2105 woodspn lumber \nHours 457	t	\N	Historical PM - 	\N
56bd119d-af24-4a10-9e1a-bb1ccfe6fb3e	708d08ba-112a-42ec-8884-0c8479528aa1	211c9a38-b65b-4043-a96e-58460799b21a	5a54dd83-f546-4149-8ff5-d44cbc570217	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 04:35:01.910816+00	2025-08-04 04:46:26.91088+00	2025-08-04 04:46:27.14+00	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	completed	[{"id": "visual-1", "title": "Oil/Coolant Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect under and around the forklift for signs of oil or coolant leaks."}, {"id": "visual-2", "title": "Carriage, Mast & LBR Assembly", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Examine the carriage, mast, and load backrest for damage, cracks, or deformation."}, {"id": "visaul-3", "title": "Forks and Fork Pins", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check that forks and fork pins are straight, undamaged, and securely attached."}, {"id": "visual-4", "title": "Mast Chains, Rollers & Hoses", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect mast chains, rollers, and hoses for wear, proper tension, and leaks."}, {"id": "visaul-5", "title": "Tire & Wheel Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect tires and wheels for cuts, excessive wear, or missing lug nuts."}, {"id": "visual-6", "title": "Seat & Seat Belt Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Ensure seat and seat belt are present, undamaged, and functioning properly."}, {"id": "visual-7", "title": "Decals & Capacity Plates", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Verify that all safety decals and capacity plates are present and legible."}, {"id": "visual-8", "title": "Overhead Guard Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check the overhead guard for bends, cracks, or missing hardware."}, {"id": "visual-9", "title": "Check Cylinders for Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect all visible hydraulic cylinders for leaks or damage."}, {"id": "engine-compartment-1", "title": "Blow Out Engine Compartment", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Use compressed air to clean debris and dust from the engine compartment."}, {"id": "engine-compartment-2", "title": "Check Condition of Air Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect and replace the air filter if dirty or clogged."}, {"id": "engine-compartment-3", "title": "Change Engine Oil & Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Drain engine oil, replace with new oil, and install a new oil filter as specified."}, {"id": "engine-compartment-4", "title": "Check hood Latch, Hinges & Hood Strut", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Confirm hood latch, hinges, and strut function smoothly and securely."}, {"id": "engine-compartment-5", "title": "Inspect Air Intake Hoses & Clamps", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine air intake hoses and clamps for cracks, leaks, or loose fittings."}, {"id": "engine-compartment-6", "title": "Check Ring Gear Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect ring gear for visible damage or abnormal wear."}, {"id": "engine-compartment-7", "title": "Check Hood Insulation & Hood Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Ensure hood insulation is intact and hood is free of damage."}, {"id": "engine-compartment-8", "title": "Engine Noise / Smoke / Idle RPMs", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Start the engine and check for abnormal noises, smoke, or incorrect idle speed."}, {"id": "engine-compartment-9", "title": "Exhaust System / Muffler / Catalyst", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine the exhaust system, muffler, and catalyst for leaks, noise, or damage."}, {"id": "engine-compartment-10", "title": "Check for Engine Oil Leaks", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Look for evidence of engine oil leaks under and around the engine."}, {"id": "engine-compartment-11", "title": "Check Vacuum Lines / PCV Valve", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect vacuum lines and PCV valve for cracks, leaks, or blockages."}, {"id": "electrical-1", "title": "Check Headlights, Strobe, Taillights", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Verify all headlights, taillights, and strobe lights operate correctly."}, {"id": "electrical-2", "title": "Clean Battery Terminals / Load Test", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Clean corrosion from battery terminals and perform a battery load test."}, {"id": "electrical-3", "title": "Inspect Wire Harness / Connections", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Check wire harnesses and electrical connections for wear or loose fittings."}, {"id": "electrical-4", "title": "Check Neutral Safety Switch", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Test the neutral safety switch for correct operation."}, {"id": "electrical-5", "title": "Check All Gauges & Hour Meter", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Ensure all dashboard gauges and the hour meter function accurately."}, {"id": "electrical-6", "title": "Condition of Fuse Panel / Relay Box", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Open and inspect the fuse panel and relay box for corrosion, damage, or missing fuses."}, {"id": "electrical-7", "title": "Inspect Alternator / Record Voltage", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Inspect the alternator for damage and record operating voltage output."}, {"id": "hydraulic-1", "title": "Inspect Fluid Level & Quality", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic fluid level and assess fluid for contamination or discoloration."}, {"id": "hydraulic-2", "title": "Inspect Pump / Control Valve", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Visually inspect pump and control valve for leaks or damage."}, {"id": "hydraulic-3", "title": "Check Hydraulic Valve Levers", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic levers to ensure smooth and proper function."}, {"id": "hydraulic-4", "title": "Check Pump Drive Shaft & U-Joints", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Inspect the pump drive shaft and U-joints for wear or looseness."}, {"id": "hydraulic-5", "title": "Remove & Clean / Replace Tank Breather", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Remove the tank breather, clean or replace as needed."}, {"id": "hydraulic-6", "title": "Inspect All Hoses & Fittings", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Examine all hydraulic hoses and fittings for cracks, leaks, or abrasion."}, {"id": "hydraulic-7", "title": "Inspect Cylinders for Leaks", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic cylinders for oil leaks or physical damage."}, {"id": "brakes-1", "title": "Check Fluid Level & Quality", "section": "Brake", "required": true, "condition": 1, "description": "Inspect the brake fluid reservoir for proper level and clear, uncontaminated fluid."}, {"id": "brakes-2", "title": "Test PB Operation, Check Cables", "section": "Brake", "required": true, "condition": 1, "description": "Test parking brake operation and inspect cables for wear or binding."}, {"id": "brakes-3", "title": "Test Service Brake Operation", "section": "Brake", "required": true, "condition": 1, "description": "Depress the service brake and confirm the forklift stops smoothly and promptly."}, {"id": "brakes-4", "title": "Check Pedal Pads & Inching Pedal Cables", "section": "Brake", "required": true, "condition": 1, "description": "Inspect pedal pads for wear and inching pedal cables for proper function."}, {"id": "brakes-5", "title": "Check Wheels & Cylinder for Leaks", "section": "Brake", "required": true, "condition": 1, "description": "Look for brake fluid leaks around wheel cylinders and brake assemblies."}, {"id": "brakes-6", "title": "Check Brake / Inching Pedal Linkage", "section": "Brake", "required": true, "condition": 1, "description": "Inspect brake and inching pedal linkage for looseness or damage."}, {"id": "brakes-7", "title": "Check Brak / Inching Pedal Free Play", "section": "Brake", "required": true, "condition": 1, "description": "Verify correct amount of free play in brake and inching pedals."}, {"id": "steering-1", "title": "Inspect Steering Cylinder for Leaks", "section": "Steering", "required": true, "condition": 1, "description": "Check steering cylinder for hydraulic leaks or visible damage."}, {"id": "steering-2", "title": "Inspect Gear Box & Steer Column", "section": "Steering", "required": true, "condition": 1, "description": "Inspect the steering gear box and column for proper operation and leaks."}, {"id": "steering-3", "title": "Check King Pins & Spindles", "section": "Steering", "required": true, "condition": 1, "description": "Check king pins and spindles for excessive play or wear."}, {"id": "steering-4", "title": "Test Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Spin and rock steer wheels to check for noisy or loose bearings."}, {"id": "steering-5", "title": "Check Steer Axle Mounts & Stops", "section": "Steering", "required": true, "condition": 1, "description": "Ensure steer axle mounts and stops are secure and undamaged."}, {"id": "steering-6", "title": "Check Steering tie Rods & Pings", "section": "Steering", "required": true, "condition": 1, "description": "Inspect tie rods and pins for looseness or excessive wear."}, {"id": "steering-7", "title": "Check Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Verify steer wheel bearings turn smoothly without noise or resistance."}, {"id": "steering-8", "title": "Inspect Steer Wheel Lug Nuts / Rim / Cap", "section": "Steering", "required": true, "condition": 1, "description": "Check steer wheel lug nuts for tightness and inspect rim/cap for damage."}, {"id": "steering-9", "title": "Check Steering Hoses at Cylinder & Box", "section": "Steering", "required": true, "condition": 1, "description": "Inspect steering hoses at both the cylinder and box for leaks or wear."}, {"id": "differential-transmission-1", "title": "Check Fluid Levels & Condition", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect differential and transmission fluid levels and assess for contamination."}, {"id": "differential-transmission-2", "title": "Check for Abnormal Noise", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Listen for unusual noises from differential or transmission during operation."}, {"id": "differential-transmission-3", "title": "Check Drive Wheel Bearings & Lug Nuts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect drive wheel bearings for play and verify lug nuts are tight."}, {"id": "differential-transmission-4", "title": "Check Mounts & Bolts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Check that all mounts and bolts are secure and undamaged."}, {"id": "differential-transmission-5", "title": "Check for Leaks", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect the differential and transmission for signs of oil leaks."}, {"id": "differential-transmission-6", "title": "Check Drive Shaft & U-Joints", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Examine drive shaft and U-joints for excessive play or wear."}, {"id": "differential-transmission-7", "title": "Check Shift Lever Linkage / Cables", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Test shift lever linkage and cables for proper adjustment and smooth operation."}, {"id": "differential-transmission-8", "title": "Replace Fluid & Filters per OEM Spec", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Replace differential and transmission fluids and filters according to manufacturer specification."}, {"id": "ignition-1", "title": "Test Ignition Switch", "section": "Ignition System", "required": true, "condition": 1, "description": "Turn the ignition switch to verify smooth operation and proper start."}, {"id": "ignition-2", "title": "Check Coil / Coil Packs", "section": "Ignition System", "required": true, "condition": 1, "description": "Inspect ignition coil or coil packs for damage or signs of arcing."}, {"id": "ignition-3", "title": "Check Distributor Cap & Rotor", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and check distributor cap and rotor for wear or corrosion."}, {"id": "ignition-4", "title": "Check Spark Plug Condition & Wires", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and inspect spark plugs and wires for fouling or damage."}, {"id": "mast-carriage-1", "title": "Check Lift Chains & Anchors", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect lift chains and anchors for wear, proper lubrication, and correct tension."}, {"id": "mast-carriage-2", "title": "Check Cylinders for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine all mast cylinders for hydraulic leaks or damage."}, {"id": "mast-carriage-3", "title": "Check Cylinder Brackets", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect cylinder brackets for secure attachment and absence of cracks."}, {"id": "mast-carriage-4", "title": "Check Hose Pulleys & Chain / Hose Guards", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check that hose pulleys, chain guards, and hose guards are intact and functional."}, {"id": "mast-carriage-5", "title": "Check Tilt Cylinder Mounts & Pins", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Verify tilt cylinder mounts and pins are secure and show no excessive wear."}, {"id": "mast-carriage-6", "title": "Check Trunion Bushings / Mounts", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect trunion bushings and mounts for wear or looseness."}, {"id": "mast-carriage-7", "title": "Check Forks, Pins & Carriage Condition", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine forks, pins, and carriage for cracks, bending, or other defects."}, {"id": "mast-carriage-8", "title": "Check Hoses for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect hydraulic hoses on mast and carriage for leaks, abrasion, or damage."}, {"id": "mast-carriage-9", "title": "Check Mast Shims & Side Play", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check mast shims for tightness and look for excessive side play in mast."}, {"id": "mast-carriage-10", "title": "Check Carriage & Mast Rollers", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect rollers for flat spots, wear, or improper rotation."}, {"id": "mast-carriage-11", "title": "Check Mast Rails for Wear", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Look for wear, cracks, or bending along mast rails."}, {"id": "mast-carriage-12", "title": "Check Side Shift Bushings", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect side shift bushings for excessive wear or movement."}, {"id": "cooling-1", "title": "Blow Out Radiator", "section": "Cooling System", "required": true, "condition": 1, "description": "Use compressed air to remove dust and debris from the radiator fins."}, {"id": "cooling-2", "title": "Coolant Level, Condition & Leaks", "section": "Cooling System", "required": true, "condition": 1, "description": "Check coolant level, ensure coolant is clean, and inspect for leaks."}, {"id": "cooling-3", "title": "Check Radiator Condition & Shroud", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect radiator and fan shroud for damage or obstructions."}, {"id": "cooling-4", "title": "Check Water Pump for Leaks & Play", "section": "Cooling System", "required": true, "condition": 1, "description": "Check water pump for coolant leaks or excessive shaft play."}, {"id": "cooling-5", "title": "Check Belt Condition & Tension", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect all drive belts for cracks, fraying, and correct tension."}, {"id": "cooling-6", "title": "Check Fan Blade Condition", "section": "Cooling System", "required": true, "condition": 1, "description": "Examine fan blades for cracks, chips, or loose mounting."}, {"id": "cooling-7", "title": "Cooland Good To (°F)", "section": "Cooling System", "required": true, "condition": 1, "description": "Verify coolant protection is adequate for expected low temperatures using a tester."}, {"id": "fuel-1", "notes": "N/a", "title": "Check LP Tank, Hoses & Fittings", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect LP tank, hoses, and fittings for leaks, damage, or loose connections."}, {"id": "fuel-2", "notes": "N//a", "title": "Drain LPG Regulator", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain condensation from the LPG regulator per manufacturer instructions."}, {"id": "fuel-3", "notes": "N/a", "title": "Check LP System for Leaks", "section": "Fuel System", "required": true, "condition": 1, "description": "Use leak detector solution or sniffer to check LP system for leaks."}, {"id": "fuel-4", "notes": "N/a", "title": "Check LPG Lockoff Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Test LPG lockoff valve for proper engagement and operation."}, {"id": "fuel-5", "notes": "N/a", "title": "Check Carburetor & Linkages", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect carburetor and throttle/choke linkages for smooth movement and secure attachment."}, {"id": "fuel-6", "title": "Check throttle Pedal Linkages / Cable", "section": "Fuel System", "required": true, "condition": 1, "description": "Check throttle pedal linkages and cable for free movement and secure connections."}, {"id": "fuel-7", "title": "Check Governor for Proper Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect and test governor for correct operation and smooth throttle response."}, {"id": "fuel-8", "title": "Change Diesel Fuel Filters", "section": "Fuel System", "required": true, "condition": 1, "description": "Replace diesel fuel filters according to the service schedule."}, {"id": "fuel-9", "title": "Drain Water Separator / Sediment Filter", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain water separator and sediment filter of any collected water or contaminants."}, {"id": "final-inspection-1", "title": "Test Horn Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Press horn button to verify loud, consistent sound."}, {"id": "final-inspection-2", "title": "Does Back Up Alarm Sound in Reverse", "section": "Final Inspection", "required": true, "condition": 1, "description": "Shift into reverse and confirm the backup alarm activates."}, {"id": "final-inspection-3", "title": "Test Brake Lights / Turn Signals / BU Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Check that all brake lights, turn signals, and backup lights function properly."}, {"id": "final-inspection-4", "title": "Test Strobe Light for Proper Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Activate the strobe light and ensure it flashes correctly."}, {"id": "final-inspection-5", "title": "Test Seat Belt", "section": "Final Inspection", "required": true, "condition": 1, "description": "Buckle and unbuckle seat belt to confirm proper latching and release."}, {"id": "final-inspection-6", "title": "Test Operator Presence System", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm that the operator presence system disables movement when the seat is unoccupied."}, {"id": "final-inspection-7", "title": "Check All Work Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Turn on all work lights and confirm they illuminate properly."}, {"id": "final-inspection-8", "title": "Test Both Service & Parking Brake", "section": "Final Inspection", "required": true, "condition": 1, "description": "Apply both brakes and ensure they hold the forklift stationary."}, {"id": "final-inspection-9", "title": "Test Forward & Reverse Travel", "section": "Final Inspection", "required": true, "condition": 1, "description": "Drive forklift forward and in reverse to confirm smooth operation."}, {"id": "final-inspection-10", "title": "Test All Hydraulic Functions", "section": "Final Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic controls and ensure smooth, correct response."}, {"id": "final-inspection-11", "title": "Test Seat Belt Alarm", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm seat belt alarm sounds if the seat belt is not engaged during operation."}, {"id": "final-inspection-12", "title": "Wipe Down Forklift, Dash Area", "section": "Final Inspection", "required": true, "condition": 1, "description": "Clean the forklift and dashboard area of dirt and debris."}, {"id": "final-inspection-13", "title": "Install PM Sticker", "section": "Final Inspection", "required": true, "condition": 1, "description": "Place the preventative maintenance sticker in the designated area to indicate service is complete."}]	Historical pm record for Doosan 2514 woodson lumber brenham texas \nHours 3665	t	\N	Historical PM - 	\N
c8398bfd-b70d-48da-a780-843d7d3f92da	00371911-3e1f-4748-83ba-045eb7e781b6	989dba12-f0f4-4f58-9ba0-48ca5fa95f55	5a54dd83-f546-4149-8ff5-d44cbc570217	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-10 16:53:51.065737+00	2025-08-04 04:43:28.196156+00	2025-08-04 04:43:28.378+00	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	completed	[{"id": "visual-1", "title": "Oil/Coolant Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect under and around the forklift for signs of oil or coolant leaks."}, {"id": "visual-2", "notes": "Carriage pads slight wear ", "title": "Carriage, Mast & LBR Assembly", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Examine the carriage, mast, and load backrest for damage, cracks, or deformation."}, {"id": "visaul-3", "title": "Forks and Fork Pins", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check that forks and fork pins are straight, undamaged, and securely attached."}, {"id": "visual-4", "title": "Mast Chains, Rollers & Hoses", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect mast chains, rollers, and hoses for wear, proper tension, and leaks."}, {"id": "visaul-5", "notes": "Rear tires at 50% wear", "title": "Tire & Wheel Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect tires and wheels for cuts, excessive wear, or missing lug nuts."}, {"id": "visual-6", "notes": "Seat is worn and damaged ", "title": "Seat & Seat Belt Condition", "section": "Visual Inspection", "required": true, "condition": 3, "description": "Ensure seat and seat belt are present, undamaged, and functioning properly."}, {"id": "visual-7", "title": "Decals & Capacity Plates", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Verify that all safety decals and capacity plates are present and legible."}, {"id": "visual-8", "title": "Overhead Guard Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check the overhead guard for bends, cracks, or missing hardware."}, {"id": "visual-9", "title": "Check Cylinders for Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect all visible hydraulic cylinders for leaks or damage."}, {"id": "engine-compartment-1", "title": "Blow Out Engine Compartment", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Use compressed air to clean debris and dust from the engine compartment."}, {"id": "engine-compartment-2", "title": "Check Condition of Air Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect and replace the air filter if dirty or clogged."}, {"id": "engine-compartment-3", "title": "Change Engine Oil & Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Drain engine oil, replace with new oil, and install a new oil filter as specified."}, {"id": "engine-compartment-4", "title": "Check hood Latch, Hinges & Hood Strut", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Confirm hood latch, hinges, and strut function smoothly and securely."}, {"id": "engine-compartment-5", "title": "Inspect Air Intake Hoses & Clamps", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine air intake hoses and clamps for cracks, leaks, or loose fittings."}, {"id": "engine-compartment-6", "title": "Check Ring Gear Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect ring gear for visible damage or abnormal wear."}, {"id": "engine-compartment-7", "title": "Check Hood Insulation & Hood Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Ensure hood insulation is intact and hood is free of damage."}, {"id": "engine-compartment-8", "title": "Engine Noise / Smoke / Idle RPMs", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Start the engine and check for abnormal noises, smoke, or incorrect idle speed."}, {"id": "engine-compartment-9", "title": "Exhaust System / Muffler / Catalyst", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine the exhaust system, muffler, and catalyst for leaks, noise, or damage."}, {"id": "engine-compartment-10", "title": "Check for Engine Oil Leaks", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Look for evidence of engine oil leaks under and around the engine."}, {"id": "engine-compartment-11", "title": "Check Vacuum Lines / PCV Valve", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect vacuum lines and PCV valve for cracks, leaks, or blockages."}, {"id": "electrical-1", "title": "Check Headlights, Strobe, Taillights", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Verify all headlights, taillights, and strobe lights operate correctly."}, {"id": "electrical-2", "title": "Clean Battery Terminals / Load Test", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Clean corrosion from battery terminals and perform a battery load test."}, {"id": "electrical-3", "title": "Inspect Wire Harness / Connections", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Check wire harnesses and electrical connections for wear or loose fittings."}, {"id": "electrical-4", "title": "Check Neutral Safety Switch", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Test the neutral safety switch for correct operation."}, {"id": "electrical-5", "title": "Check All Gauges & Hour Meter", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Ensure all dashboard gauges and the hour meter function accurately."}, {"id": "electrical-6", "title": "Condition of Fuse Panel / Relay Box", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Open and inspect the fuse panel and relay box for corrosion, damage, or missing fuses."}, {"id": "electrical-7", "title": "Inspect Alternator / Record Voltage", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Inspect the alternator for damage and record operating voltage output."}, {"id": "hydraulic-1", "title": "Inspect Fluid Level & Quality", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic fluid level and assess fluid for contamination or discoloration."}, {"id": "hydraulic-2", "title": "Inspect Pump / Control Valve", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Visually inspect pump and control valve for leaks or damage."}, {"id": "hydraulic-3", "title": "Check Hydraulic Valve Levers", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic levers to ensure smooth and proper function."}, {"id": "hydraulic-4", "title": "Check Pump Drive Shaft & U-Joints", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Inspect the pump drive shaft and U-joints for wear or looseness."}, {"id": "hydraulic-5", "title": "Remove & Clean / Replace Tank Breather", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Remove the tank breather, clean or replace as needed."}, {"id": "hydraulic-6", "notes": "Side shift hoses starting to fray and slight leak from crimps. Lift cylinder hose rubbed and worn. ", "title": "Inspect All Hoses & Fittings", "section": "Hydraulic Inspection", "required": true, "condition": 3, "description": "Examine all hydraulic hoses and fittings for cracks, leaks, or abrasion."}, {"id": "hydraulic-7", "notes": "No active leaks found", "title": "Inspect Cylinders for Leaks", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic cylinders for oil leaks or physical damage."}, {"id": "brakes-1", "title": "Check Fluid Level & Quality", "section": "Brake", "required": true, "condition": 1, "description": "Inspect the brake fluid reservoir for proper level and clear, uncontaminated fluid."}, {"id": "brakes-2", "title": "Test PB Operation, Check Cables", "section": "Brake", "required": true, "condition": 1, "description": "Test parking brake operation and inspect cables for wear or binding."}, {"id": "brakes-3", "title": "Test Service Brake Operation", "section": "Brake", "required": true, "condition": 1, "description": "Depress the service brake and confirm the forklift stops smoothly and promptly."}, {"id": "brakes-4", "title": "Check Pedal Pads & Inching Pedal Cables", "section": "Brake", "required": true, "condition": 1, "description": "Inspect pedal pads for wear and inching pedal cables for proper function."}, {"id": "brakes-5", "title": "Check Wheels & Cylinder for Leaks", "section": "Brake", "required": true, "condition": 1, "description": "Look for brake fluid leaks around wheel cylinders and brake assemblies."}, {"id": "brakes-6", "title": "Check Brake / Inching Pedal Linkage", "section": "Brake", "required": true, "condition": 1, "description": "Inspect brake and inching pedal linkage for looseness or damage."}, {"id": "brakes-7", "title": "Check Brak / Inching Pedal Free Play", "section": "Brake", "required": true, "condition": 1, "description": "Verify correct amount of free play in brake and inching pedals."}, {"id": "steering-1", "title": "Inspect Steering Cylinder for Leaks", "section": "Steering", "required": true, "condition": 1, "description": "Check steering cylinder for hydraulic leaks or visible damage."}, {"id": "steering-2", "title": "Inspect Gear Box & Steer Column", "section": "Steering", "required": true, "condition": 1, "description": "Inspect the steering gear box and column for proper operation and leaks."}, {"id": "steering-3", "title": "Check King Pins & Spindles", "section": "Steering", "required": true, "condition": 1, "description": "Check king pins and spindles for excessive play or wear."}, {"id": "steering-4", "title": "Test Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Spin and rock steer wheels to check for noisy or loose bearings."}, {"id": "steering-5", "title": "Check Steer Axle Mounts & Stops", "section": "Steering", "required": true, "condition": 1, "description": "Ensure steer axle mounts and stops are secure and undamaged."}, {"id": "steering-6", "title": "Check Steering tie Rods & Pings", "section": "Steering", "required": true, "condition": 1, "description": "Inspect tie rods and pins for looseness or excessive wear."}, {"id": "steering-7", "notes": "Steering foam gone. Bare metal showing. Recommend new steering wheel.", "title": "Check Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 3, "description": "Verify steer wheel bearings turn smoothly without noise or resistance."}, {"id": "steering-8", "title": "Inspect Steer Wheel Lug Nuts / Rim / Cap", "section": "Steering", "required": true, "condition": 1, "description": "Check steer wheel lug nuts for tightness and inspect rim/cap for damage."}, {"id": "steering-9", "title": "Check Steering Hoses at Cylinder & Box", "section": "Steering", "required": true, "condition": 1, "description": "Inspect steering hoses at both the cylinder and box for leaks or wear."}, {"id": "differential-transmission-1", "title": "Check Fluid Levels & Condition", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect differential and transmission fluid levels and assess for contamination."}, {"id": "differential-transmission-2", "title": "Check for Abnormal Noise", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Listen for unusual noises from differential or transmission during operation."}, {"id": "differential-transmission-3", "title": "Check Drive Wheel Bearings & Lug Nuts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect drive wheel bearings for play and verify lug nuts are tight."}, {"id": "differential-transmission-4", "title": "Check Mounts & Bolts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Check that all mounts and bolts are secure and undamaged."}, {"id": "differential-transmission-5", "title": "Check for Leaks", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect the differential and transmission for signs of oil leaks."}, {"id": "differential-transmission-6", "title": "Check Drive Shaft & U-Joints", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Examine drive shaft and U-joints for excessive play or wear."}, {"id": "differential-transmission-7", "notes": "Recommend new shifter. Water causing short. ", "title": "Check Shift Lever Linkage / Cables", "section": "Differential & Transmission", "required": true, "condition": 3, "description": "Test shift lever linkage and cables for proper adjustment and smooth operation."}, {"id": "differential-transmission-8", "title": "Replace Fluid & Filters per OEM Spec", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Replace differential and transmission fluids and filters according to manufacturer specification."}, {"id": "ignition-1", "title": "Test Ignition Switch", "section": "Ignition System", "required": true, "condition": 1, "description": "Turn the ignition switch to verify smooth operation and proper start."}, {"id": "ignition-2", "title": "Check Coil / Coil Packs", "section": "Ignition System", "required": true, "condition": 1, "description": "Inspect ignition coil or coil packs for damage or signs of arcing."}, {"id": "ignition-3", "notes": "N/A", "title": "Check Distributor Cap & Rotor", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and check distributor cap and rotor for wear or corrosion."}, {"id": "ignition-4", "notes": "N/A", "title": "Check Spark Plug Condition & Wires", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and inspect spark plugs and wires for fouling or damage."}, {"id": "mast-carriage-1", "notes": "Chain wear less then 1%", "title": "Check Lift Chains & Anchors", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect lift chains and anchors for wear, proper lubrication, and correct tension."}, {"id": "mast-carriage-2", "title": "Check Cylinders for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine all mast cylinders for hydraulic leaks or damage."}, {"id": "mast-carriage-3", "title": "Check Cylinder Brackets", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect cylinder brackets for secure attachment and absence of cracks."}, {"id": "mast-carriage-4", "notes": "Chains less then 1% wear ", "title": "Check Hose Pulleys & Chain / Hose Guards", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check that hose pulleys, chain guards, and hose guards are intact and functional."}, {"id": "mast-carriage-5", "title": "Check Tilt Cylinder Mounts & Pins", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Verify tilt cylinder mounts and pins are secure and show no excessive wear."}, {"id": "mast-carriage-6", "notes": "No play", "title": "Check Trunion Bushings / Mounts", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect trunion bushings and mounts for wear or looseness."}, {"id": "mast-carriage-7", "notes": "Forks at 90 degrees and wearing evenly.", "title": "Check Forks, Pins & Carriage Condition", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine forks, pins, and carriage for cracks, bending, or other defects."}, {"id": "mast-carriage-8", "notes": "Side shift and lift cylinder hoses showing wear and leaking st crimp points.", "title": "Check Hoses for Leaks", "section": "Mast & Carriage", "required": true, "condition": 3, "description": "Inspect hydraulic hoses on mast and carriage for leaks, abrasion, or damage."}, {"id": "mast-carriage-9", "title": "Check Mast Shims & Side Play", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check mast shims for tightness and look for excessive side play in mast."}, {"id": "mast-carriage-10", "title": "Check Carriage & Mast Rollers", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect rollers for flat spots, wear, or improper rotation."}, {"id": "mast-carriage-11", "title": "Check Mast Rails for Wear", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Look for wear, cracks, or bending along mast rails."}, {"id": "mast-carriage-12", "title": "Check Side Shift Bushings", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect side shift bushings for excessive wear or movement."}, {"id": "cooling-1", "title": "Blow Out Radiator", "section": "Cooling System", "required": true, "condition": 1, "description": "Use compressed air to remove dust and debris from the radiator fins."}, {"id": "cooling-2", "notes": "Overflow tank missing cap.", "title": "Coolant Level, Condition & Leaks", "section": "Cooling System", "required": true, "condition": 3, "description": "Check coolant level, ensure coolant is clean, and inspect for leaks."}, {"id": "cooling-3", "title": "Check Radiator Condition & Shroud", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect radiator and fan shroud for damage or obstructions."}, {"id": "cooling-4", "title": "Check Water Pump for Leaks & Play", "section": "Cooling System", "required": true, "condition": 1, "description": "Check water pump for coolant leaks or excessive shaft play."}, {"id": "cooling-5", "title": "Check Belt Condition & Tension", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect all drive belts for cracks, fraying, and correct tension."}, {"id": "cooling-6", "title": "Check Fan Blade Condition", "section": "Cooling System", "required": true, "condition": 1, "description": "Examine fan blades for cracks, chips, or loose mounting."}, {"id": "cooling-7", "title": "Cooland Good To (°F)", "section": "Cooling System", "required": true, "condition": 1, "description": "Verify coolant protection is adequate for expected low temperatures using a tester."}, {"id": "fuel-1", "notes": "N/A", "title": "Check LP Tank, Hoses & Fittings", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect LP tank, hoses, and fittings for leaks, damage, or loose connections."}, {"id": "fuel-2", "notes": "N/A", "title": "Drain LPG Regulator", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain condensation from the LPG regulator per manufacturer instructions."}, {"id": "fuel-3", "notes": "N/A", "title": "Check LP System for Leaks", "section": "Fuel System", "required": true, "condition": 1, "description": "Use leak detector solution or sniffer to check LP system for leaks."}, {"id": "fuel-4", "notes": "N/A", "title": "Check LPG Lockoff Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Test LPG lockoff valve for proper engagement and operation."}, {"id": "fuel-5", "notes": "N/A", "title": "Check Carburetor & Linkages", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect carburetor and throttle/choke linkages for smooth movement and secure attachment."}, {"id": "fuel-6", "title": "Check throttle Pedal Linkages / Cable", "section": "Fuel System", "required": true, "condition": 1, "description": "Check throttle pedal linkages and cable for free movement and secure connections."}, {"id": "fuel-7", "title": "Check Governor for Proper Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect and test governor for correct operation and smooth throttle response."}, {"id": "fuel-8", "title": "Change Diesel Fuel Filters", "section": "Fuel System", "required": true, "condition": 1, "description": "Replace diesel fuel filters according to the service schedule."}, {"id": "fuel-9", "title": "Drain Water Separator / Sediment Filter", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain water separator and sediment filter of any collected water or contaminants."}, {"id": "final-inspection-1", "title": "Test Horn Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Press horn button to verify loud, consistent sound."}, {"id": "final-inspection-2", "title": "Does Back Up Alarm Sound in Reverse", "section": "Final Inspection", "required": true, "condition": 1, "description": "Shift into reverse and confirm the backup alarm activates."}, {"id": "final-inspection-3", "title": "Test Brake Lights / Turn Signals / BU Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Check that all brake lights, turn signals, and backup lights function properly."}, {"id": "final-inspection-4", "title": "Test Strobe Light for Proper Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Activate the strobe light and ensure it flashes correctly."}, {"id": "final-inspection-5", "title": "Test Seat Belt", "section": "Final Inspection", "required": true, "condition": 1, "description": "Buckle and unbuckle seat belt to confirm proper latching and release."}, {"id": "final-inspection-6", "title": "Test Operator Presence System", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm that the operator presence system disables movement when the seat is unoccupied."}, {"id": "final-inspection-7", "title": "Check All Work Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Turn on all work lights and confirm they illuminate properly."}, {"id": "final-inspection-8", "title": "Test Both Service & Parking Brake", "section": "Final Inspection", "required": true, "condition": 1, "description": "Apply both brakes and ensure they hold the forklift stationary."}, {"id": "final-inspection-9", "notes": "Shifter boot broken. Water causing short.", "title": "Test Forward & Reverse Travel", "section": "Final Inspection", "required": true, "condition": 3, "description": "Drive forklift forward and in reverse to confirm smooth operation."}, {"id": "final-inspection-10", "title": "Test All Hydraulic Functions", "section": "Final Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic controls and ensure smooth, correct response."}, {"id": "final-inspection-11", "notes": "Bad seat causing seat sensor to trip while driving.", "title": "Test Seat Belt Alarm", "section": "Final Inspection", "required": true, "condition": 3, "description": "Confirm seat belt alarm sounds if the seat belt is not engaged during operation."}, {"id": "final-inspection-12", "title": "Wipe Down Forklift, Dash Area", "section": "Final Inspection", "required": true, "condition": 1, "description": "Clean the forklift and dashboard area of dirt and debris."}, {"id": "final-inspection-13", "title": "Install PM Sticker", "section": "Final Inspection", "required": true, "condition": 1, "description": "Place the preventative maintenance sticker in the designated area to indicate service is complete."}]	Doosan 2105\n\nRecommend new seat, steering wheel, shifter and hoses to done before next PM cycle. Hours 4777	f	\N	\N	\N
05234038-4973-4ee4-a316-b2fbafc1e0e8	da395499-e163-4a6b-9590-edeb430c8ccc	18a81643-0fce-4b42-8d47-917768e7a097	5a54dd83-f546-4149-8ff5-d44cbc570217	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 03:07:54.653093+00	2025-08-04 05:20:50.233357+00	2025-08-04 05:20:41.696+00	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	in_progress	[{"id": "visual-1", "title": "Oil/Coolant Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect under and around the forklift for signs of oil or coolant leaks."}, {"id": "visual-2", "title": "Carriage, Mast & LBR Assembly", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Examine the carriage, mast, and load backrest for damage, cracks, or deformation."}, {"id": "visaul-3", "title": "Forks and Fork Pins", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check that forks and fork pins are straight, undamaged, and securely attached."}, {"id": "visual-4", "title": "Mast Chains, Rollers & Hoses", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect mast chains, rollers, and hoses for wear, proper tension, and leaks."}, {"id": "visaul-5", "title": "Tire & Wheel Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect tires and wheels for cuts, excessive wear, or missing lug nuts."}, {"id": "visual-6", "title": "Seat & Seat Belt Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Ensure seat and seat belt are present, undamaged, and functioning properly."}, {"id": "visual-7", "title": "Decals & Capacity Plates", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Verify that all safety decals and capacity plates are present and legible."}, {"id": "visual-8", "title": "Overhead Guard Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check the overhead guard for bends, cracks, or missing hardware."}, {"id": "visual-9", "title": "Check Cylinders for Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect all visible hydraulic cylinders for leaks or damage."}, {"id": "engine-compartment-1", "title": "Blow Out Engine Compartment", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Use compressed air to clean debris and dust from the engine compartment."}, {"id": "engine-compartment-2", "title": "Check Condition of Air Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect and replace the air filter if dirty or clogged."}, {"id": "engine-compartment-3", "title": "Change Engine Oil & Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Drain engine oil, replace with new oil, and install a new oil filter as specified."}, {"id": "engine-compartment-4", "title": "Check hood Latch, Hinges & Hood Strut", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Confirm hood latch, hinges, and strut function smoothly and securely."}, {"id": "engine-compartment-5", "title": "Inspect Air Intake Hoses & Clamps", "section": "Engine Compartment", "required": true, "condition": 2, "description": "Examine air intake hoses and clamps for cracks, leaks, or loose fittings."}, {"id": "engine-compartment-6", "title": "Check Ring Gear Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect ring gear for visible damage or abnormal wear."}, {"id": "engine-compartment-7", "title": "Check Hood Insulation & Hood Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Ensure hood insulation is intact and hood is free of damage."}, {"id": "engine-compartment-8", "title": "Engine Noise / Smoke / Idle RPMs", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Start the engine and check for abnormal noises, smoke, or incorrect idle speed."}, {"id": "engine-compartment-9", "title": "Exhaust System / Muffler / Catalyst", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine the exhaust system, muffler, and catalyst for leaks, noise, or damage."}, {"id": "engine-compartment-10", "title": "Check for Engine Oil Leaks", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Look for evidence of engine oil leaks under and around the engine."}, {"id": "engine-compartment-11", "title": "Check Vacuum Lines / PCV Valve", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect vacuum lines and PCV valve for cracks, leaks, or blockages."}, {"id": "electrical-1", "title": "Check Headlights, Strobe, Taillights", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Verify all headlights, taillights, and strobe lights operate correctly."}, {"id": "electrical-2", "title": "Clean Battery Terminals / Load Test", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Clean corrosion from battery terminals and perform a battery load test."}, {"id": "electrical-3", "title": "Inspect Wire Harness / Connections", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Check wire harnesses and electrical connections for wear or loose fittings."}, {"id": "electrical-4", "title": "Check Neutral Safety Switch", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Test the neutral safety switch for correct operation."}, {"id": "electrical-5", "title": "Check All Gauges & Hour Meter", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Ensure all dashboard gauges and the hour meter function accurately."}, {"id": "electrical-6", "title": "Condition of Fuse Panel / Relay Box", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Open and inspect the fuse panel and relay box for corrosion, damage, or missing fuses."}, {"id": "electrical-7", "title": "Inspect Alternator / Record Voltage", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Inspect the alternator for damage and record operating voltage output."}, {"id": "hydraulic-1", "title": "Inspect Fluid Level & Quality", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic fluid level and assess fluid for contamination or discoloration."}, {"id": "hydraulic-2", "title": "Inspect Pump / Control Valve", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Visually inspect pump and control valve for leaks or damage."}, {"id": "hydraulic-3", "title": "Check Hydraulic Valve Levers", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic levers to ensure smooth and proper function."}, {"id": "hydraulic-4", "title": "Check Pump Drive Shaft & U-Joints", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Inspect the pump drive shaft and U-joints for wear or looseness."}, {"id": "hydraulic-5", "title": "Remove & Clean / Replace Tank Breather", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Remove the tank breather, clean or replace as needed."}, {"id": "hydraulic-6", "title": "Inspect All Hoses & Fittings", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Examine all hydraulic hoses and fittings for cracks, leaks, or abrasion."}, {"id": "hydraulic-7", "title": "Inspect Cylinders for Leaks", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic cylinders for oil leaks or physical damage."}, {"id": "brakes-1", "title": "Check Fluid Level & Quality", "section": "Brake", "required": true, "condition": 1, "description": "Inspect the brake fluid reservoir for proper level and clear, uncontaminated fluid."}, {"id": "brakes-2", "title": "Test PB Operation, Check Cables", "section": "Brake", "required": true, "condition": 1, "description": "Test parking brake operation and inspect cables for wear or binding."}, {"id": "brakes-3", "title": "Test Service Brake Operation", "section": "Brake", "required": true, "condition": 1, "description": "Depress the service brake and confirm the forklift stops smoothly and promptly."}, {"id": "brakes-4", "title": "Check Pedal Pads & Inching Pedal Cables", "section": "Brake", "required": true, "condition": 1, "description": "Inspect pedal pads for wear and inching pedal cables for proper function."}, {"id": "brakes-5", "title": "Check Wheels & Cylinder for Leaks", "section": "Brake", "required": true, "condition": 1, "description": "Look for brake fluid leaks around wheel cylinders and brake assemblies."}, {"id": "brakes-6", "title": "Check Brake / Inching Pedal Linkage", "section": "Brake", "required": true, "condition": 1, "description": "Inspect brake and inching pedal linkage for looseness or damage."}, {"id": "brakes-7", "title": "Check Brak / Inching Pedal Free Play", "section": "Brake", "required": true, "condition": 1, "description": "Verify correct amount of free play in brake and inching pedals."}, {"id": "steering-1", "title": "Inspect Steering Cylinder for Leaks", "section": "Steering", "required": true, "condition": 1, "description": "Check steering cylinder for hydraulic leaks or visible damage."}, {"id": "steering-2", "title": "Inspect Gear Box & Steer Column", "section": "Steering", "required": true, "condition": 1, "description": "Inspect the steering gear box and column for proper operation and leaks."}, {"id": "steering-3", "title": "Check King Pins & Spindles", "section": "Steering", "required": true, "condition": 1, "description": "Check king pins and spindles for excessive play or wear."}, {"id": "steering-4", "title": "Test Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Spin and rock steer wheels to check for noisy or loose bearings."}, {"id": "steering-5", "title": "Check Steer Axle Mounts & Stops", "section": "Steering", "required": true, "condition": 1, "description": "Ensure steer axle mounts and stops are secure and undamaged."}, {"id": "steering-6", "title": "Check Steering tie Rods & Pings", "section": "Steering", "required": true, "condition": 1, "description": "Inspect tie rods and pins for looseness or excessive wear."}, {"id": "steering-7", "title": "Check Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Verify steer wheel bearings turn smoothly without noise or resistance."}, {"id": "steering-8", "title": "Inspect Steer Wheel Lug Nuts / Rim / Cap", "section": "Steering", "required": true, "condition": 1, "description": "Check steer wheel lug nuts for tightness and inspect rim/cap for damage."}, {"id": "steering-9", "title": "Check Steering Hoses at Cylinder & Box", "section": "Steering", "required": true, "condition": 1, "description": "Inspect steering hoses at both the cylinder and box for leaks or wear."}, {"id": "differential-transmission-1", "title": "Check Fluid Levels & Condition", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect differential and transmission fluid levels and assess for contamination."}, {"id": "differential-transmission-2", "title": "Check for Abnormal Noise", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Listen for unusual noises from differential or transmission during operation."}, {"id": "differential-transmission-3", "title": "Check Drive Wheel Bearings & Lug Nuts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect drive wheel bearings for play and verify lug nuts are tight."}, {"id": "differential-transmission-4", "title": "Check Mounts & Bolts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Check that all mounts and bolts are secure and undamaged."}, {"id": "differential-transmission-5", "title": "Check for Leaks", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect the differential and transmission for signs of oil leaks."}, {"id": "differential-transmission-6", "title": "Check Drive Shaft & U-Joints", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Examine drive shaft and U-joints for excessive play or wear."}, {"id": "differential-transmission-7", "title": "Check Shift Lever Linkage / Cables", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Test shift lever linkage and cables for proper adjustment and smooth operation."}, {"id": "differential-transmission-8", "title": "Replace Fluid & Filters per OEM Spec", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Replace differential and transmission fluids and filters according to manufacturer specification."}, {"id": "ignition-1", "title": "Test Ignition Switch", "section": "Ignition System", "required": true, "condition": 1, "description": "Turn the ignition switch to verify smooth operation and proper start."}, {"id": "ignition-2", "title": "Check Coil / Coil Packs", "section": "Ignition System", "required": true, "condition": 1, "description": "Inspect ignition coil or coil packs for damage or signs of arcing."}, {"id": "ignition-3", "title": "Check Distributor Cap & Rotor", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and check distributor cap and rotor for wear or corrosion."}, {"id": "ignition-4", "title": "Check Spark Plug Condition & Wires", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and inspect spark plugs and wires for fouling or damage."}, {"id": "mast-carriage-1", "title": "Check Lift Chains & Anchors", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect lift chains and anchors for wear, proper lubrication, and correct tension."}, {"id": "mast-carriage-2", "title": "Check Cylinders for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine all mast cylinders for hydraulic leaks or damage."}, {"id": "mast-carriage-3", "title": "Check Cylinder Brackets", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect cylinder brackets for secure attachment and absence of cracks."}, {"id": "mast-carriage-4", "title": "Check Hose Pulleys & Chain / Hose Guards", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check that hose pulleys, chain guards, and hose guards are intact and functional."}, {"id": "mast-carriage-5", "title": "Check Tilt Cylinder Mounts & Pins", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Verify tilt cylinder mounts and pins are secure and show no excessive wear."}, {"id": "mast-carriage-6", "title": "Check Trunion Bushings / Mounts", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect trunion bushings and mounts for wear or looseness."}, {"id": "mast-carriage-7", "title": "Check Forks, Pins & Carriage Condition", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine forks, pins, and carriage for cracks, bending, or other defects."}, {"id": "mast-carriage-8", "title": "Check Hoses for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect hydraulic hoses on mast and carriage for leaks, abrasion, or damage."}, {"id": "mast-carriage-9", "title": "Check Mast Shims & Side Play", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check mast shims for tightness and look for excessive side play in mast."}, {"id": "mast-carriage-10", "title": "Check Carriage & Mast Rollers", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect rollers for flat spots, wear, or improper rotation."}, {"id": "mast-carriage-11", "title": "Check Mast Rails for Wear", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Look for wear, cracks, or bending along mast rails."}, {"id": "mast-carriage-12", "title": "Check Side Shift Bushings", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect side shift bushings for excessive wear or movement."}, {"id": "cooling-1", "title": "Blow Out Radiator", "section": "Cooling System", "required": true, "condition": 1, "description": "Use compressed air to remove dust and debris from the radiator fins."}, {"id": "cooling-2", "title": "Coolant Level, Condition & Leaks", "section": "Cooling System", "required": true, "condition": 1, "description": "Check coolant level, ensure coolant is clean, and inspect for leaks."}, {"id": "cooling-3", "title": "Check Radiator Condition & Shroud", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect radiator and fan shroud for damage or obstructions."}, {"id": "cooling-4", "title": "Check Water Pump for Leaks & Play", "section": "Cooling System", "required": true, "condition": 1, "description": "Check water pump for coolant leaks or excessive shaft play."}, {"id": "cooling-5", "title": "Check Belt Condition & Tension", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect all drive belts for cracks, fraying, and correct tension."}, {"id": "cooling-6", "title": "Check Fan Blade Condition", "section": "Cooling System", "required": true, "condition": 1, "description": "Examine fan blades for cracks, chips, or loose mounting."}, {"id": "cooling-7", "title": "Cooland Good To (°F)", "section": "Cooling System", "required": true, "condition": 1, "description": "Verify coolant protection is adequate for expected low temperatures using a tester."}, {"id": "fuel-1", "notes": "N/a", "title": "Check LP Tank, Hoses & Fittings", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect LP tank, hoses, and fittings for leaks, damage, or loose connections."}, {"id": "fuel-2", "notes": "N/a", "title": "Drain LPG Regulator", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain condensation from the LPG regulator per manufacturer instructions."}, {"id": "fuel-3", "notes": "N/a", "title": "Check LP System for Leaks", "section": "Fuel System", "required": true, "condition": 1, "description": "Use leak detector solution or sniffer to check LP system for leaks."}, {"id": "fuel-4", "notes": "N/a", "title": "Check LPG Lockoff Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Test LPG lockoff valve for proper engagement and operation."}, {"id": "fuel-5", "notes": "N/a", "title": "Check Carburetor & Linkages", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect carburetor and throttle/choke linkages for smooth movement and secure attachment."}, {"id": "fuel-6", "title": "Check throttle Pedal Linkages / Cable", "section": "Fuel System", "required": true, "condition": 1, "description": "Check throttle pedal linkages and cable for free movement and secure connections."}, {"id": "fuel-7", "title": "Check Governor for Proper Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect and test governor for correct operation and smooth throttle response."}, {"id": "fuel-8", "title": "Change Diesel Fuel Filters", "section": "Fuel System", "required": true, "condition": 1, "description": "Replace diesel fuel filters according to the service schedule."}, {"id": "fuel-9", "title": "Drain Water Separator / Sediment Filter", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain water separator and sediment filter of any collected water or contaminants."}, {"id": "final-inspection-1", "title": "Test Horn Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Press horn button to verify loud, consistent sound."}, {"id": "final-inspection-2", "title": "Does Back Up Alarm Sound in Reverse", "section": "Final Inspection", "required": true, "condition": 1, "description": "Shift into reverse and confirm the backup alarm activates."}, {"id": "final-inspection-3", "title": "Test Brake Lights / Turn Signals / BU Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Check that all brake lights, turn signals, and backup lights function properly."}, {"id": "final-inspection-4", "title": "Test Strobe Light for Proper Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Activate the strobe light and ensure it flashes correctly."}, {"id": "final-inspection-5", "title": "Test Seat Belt", "section": "Final Inspection", "required": true, "condition": 1, "description": "Buckle and unbuckle seat belt to confirm proper latching and release."}, {"id": "final-inspection-6", "title": "Test Operator Presence System", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm that the operator presence system disables movement when the seat is unoccupied."}, {"id": "final-inspection-7", "title": "Check All Work Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Turn on all work lights and confirm they illuminate properly."}, {"id": "final-inspection-8", "title": "Test Both Service & Parking Brake", "section": "Final Inspection", "required": true, "condition": 1, "description": "Apply both brakes and ensure they hold the forklift stationary."}, {"id": "final-inspection-9", "title": "Test Forward & Reverse Travel", "section": "Final Inspection", "required": true, "condition": 1, "description": "Drive forklift forward and in reverse to confirm smooth operation."}, {"id": "final-inspection-10", "title": "Test All Hydraulic Functions", "section": "Final Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic controls and ensure smooth, correct response."}, {"id": "final-inspection-11", "title": "Test Seat Belt Alarm", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm seat belt alarm sounds if the seat belt is not engaged during operation."}, {"id": "final-inspection-12", "title": "Wipe Down Forklift, Dash Area", "section": "Final Inspection", "required": true, "condition": 1, "description": "Clean the forklift and dashboard area of dirt and debris."}, {"id": "final-inspection-13", "title": "Install PM Sticker", "section": "Final Inspection", "required": true, "condition": 1, "description": "Place the preventative maintenance sticker in the designated area to indicate service is complete."}]	Pm for Doosan 251\nHours 3397.2\n\nDigital record of previous pm 	t	\N	Historical PM - 	\N
766b33e4-3ebd-40cf-8fe5-abb2b867e2db	0c163b55-8804-459c-abae-24c09ee8dfd8	8c97474d-a2e8-41dc-acbf-fdffce5a268e	96061a65-7e91-4ed3-9df1-282ff19a8471	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-18 02:29:05.191458+00	2025-08-18 02:30:25.949399+00	2025-08-18 02:30:25.711+00	685efa5e-7519-486e-8643-28cfaf5408a4	completed	[{"id": "visual-1", "title": "Oil/Coolant Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect under and around the forklift for signs of oil or coolant leaks."}, {"id": "visual-2", "title": "Carriage, Mast & LBR Assembly", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Examine the carriage, mast, and load backrest for damage, cracks, or deformation."}, {"id": "visaul-3", "title": "Forks and Fork Pins", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check that forks and fork pins are straight, undamaged, and securely attached."}, {"id": "visual-4", "title": "Mast Chains, Rollers & Hoses", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect mast chains, rollers, and hoses for wear, proper tension, and leaks."}, {"id": "visaul-5", "title": "Tire & Wheel Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect tires and wheels for cuts, excessive wear, or missing lug nuts."}, {"id": "visual-6", "title": "Seat & Seat Belt Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Ensure seat and seat belt are present, undamaged, and functioning properly."}, {"id": "visual-7", "title": "Decals & Capacity Plates", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Verify that all safety decals and capacity plates are present and legible."}, {"id": "visual-8", "title": "Overhead Guard Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check the overhead guard for bends, cracks, or missing hardware."}, {"id": "visual-9", "title": "Check Cylinders for Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect all visible hydraulic cylinders for leaks or damage."}, {"id": "engine-compartment-1", "title": "Blow Out Engine Compartment", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Use compressed air to clean debris and dust from the engine compartment."}, {"id": "engine-compartment-2", "title": "Check Condition of Air Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect and replace the air filter if dirty or clogged."}, {"id": "engine-compartment-3", "title": "Change Engine Oil & Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Drain engine oil, replace with new oil, and install a new oil filter as specified."}, {"id": "engine-compartment-4", "title": "Check hood Latch, Hinges & Hood Strut", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Confirm hood latch, hinges, and strut function smoothly and securely."}, {"id": "engine-compartment-5", "title": "Inspect Air Intake Hoses & Clamps", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine air intake hoses and clamps for cracks, leaks, or loose fittings."}, {"id": "engine-compartment-6", "title": "Check Ring Gear Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect ring gear for visible damage or abnormal wear."}, {"id": "engine-compartment-7", "title": "Check Hood Insulation & Hood Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Ensure hood insulation is intact and hood is free of damage."}, {"id": "engine-compartment-8", "title": "Engine Noise / Smoke / Idle RPMs", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Start the engine and check for abnormal noises, smoke, or incorrect idle speed."}, {"id": "engine-compartment-9", "title": "Exhaust System / Muffler / Catalyst", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine the exhaust system, muffler, and catalyst for leaks, noise, or damage."}, {"id": "engine-compartment-10", "title": "Check for Engine Oil Leaks", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Look for evidence of engine oil leaks under and around the engine."}, {"id": "engine-compartment-11", "title": "Check Vacuum Lines / PCV Valve", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect vacuum lines and PCV valve for cracks, leaks, or blockages."}, {"id": "electrical-1", "title": "Check Headlights, Strobe, Taillights", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Verify all headlights, taillights, and strobe lights operate correctly."}, {"id": "electrical-2", "title": "Clean Battery Terminals / Load Test", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Clean corrosion from battery terminals and perform a battery load test."}, {"id": "electrical-3", "title": "Inspect Wire Harness / Connections", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Check wire harnesses and electrical connections for wear or loose fittings."}, {"id": "electrical-4", "title": "Check Neutral Safety Switch", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Test the neutral safety switch for correct operation."}, {"id": "electrical-5", "title": "Check All Gauges & Hour Meter", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Ensure all dashboard gauges and the hour meter function accurately."}, {"id": "electrical-6", "title": "Condition of Fuse Panel / Relay Box", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Open and inspect the fuse panel and relay box for corrosion, damage, or missing fuses."}, {"id": "electrical-7", "title": "Inspect Alternator / Record Voltage", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Inspect the alternator for damage and record operating voltage output."}, {"id": "hydraulic-1", "title": "Inspect Fluid Level & Quality", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic fluid level and assess fluid for contamination or discoloration."}, {"id": "hydraulic-2", "title": "Inspect Pump / Control Valve", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Visually inspect pump and control valve for leaks or damage."}, {"id": "hydraulic-3", "title": "Check Hydraulic Valve Levers", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic levers to ensure smooth and proper function."}, {"id": "hydraulic-4", "title": "Check Pump Drive Shaft & U-Joints", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Inspect the pump drive shaft and U-joints for wear or looseness."}, {"id": "hydraulic-5", "title": "Remove & Clean / Replace Tank Breather", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Remove the tank breather, clean or replace as needed."}, {"id": "hydraulic-6", "title": "Inspect All Hoses & Fittings", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Examine all hydraulic hoses and fittings for cracks, leaks, or abrasion."}, {"id": "hydraulic-7", "title": "Inspect Cylinders for Leaks", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic cylinders for oil leaks or physical damage."}, {"id": "brakes-1", "title": "Check Fluid Level & Quality", "section": "Brake", "required": true, "condition": 1, "description": "Inspect the brake fluid reservoir for proper level and clear, uncontaminated fluid."}, {"id": "brakes-2", "title": "Test PB Operation, Check Cables", "section": "Brake", "required": true, "condition": 1, "description": "Test parking brake operation and inspect cables for wear or binding."}, {"id": "brakes-3", "title": "Test Service Brake Operation", "section": "Brake", "required": true, "condition": 1, "description": "Depress the service brake and confirm the forklift stops smoothly and promptly."}, {"id": "brakes-4", "title": "Check Pedal Pads & Inching Pedal Cables", "section": "Brake", "required": true, "condition": 1, "description": "Inspect pedal pads for wear and inching pedal cables for proper function."}, {"id": "brakes-5", "title": "Check Wheels & Cylinder for Leaks", "section": "Brake", "required": true, "condition": 1, "description": "Look for brake fluid leaks around wheel cylinders and brake assemblies."}, {"id": "brakes-6", "title": "Check Brake / Inching Pedal Linkage", "section": "Brake", "required": true, "condition": 1, "description": "Inspect brake and inching pedal linkage for looseness or damage."}, {"id": "brakes-7", "title": "Check Brak / Inching Pedal Free Play", "section": "Brake", "required": true, "condition": 1, "description": "Verify correct amount of free play in brake and inching pedals."}, {"id": "steering-1", "title": "Inspect Steering Cylinder for Leaks", "section": "Steering", "required": true, "condition": 1, "description": "Check steering cylinder for hydraulic leaks or visible damage."}, {"id": "steering-2", "title": "Inspect Gear Box & Steer Column", "section": "Steering", "required": true, "condition": 1, "description": "Inspect the steering gear box and column for proper operation and leaks."}, {"id": "steering-3", "title": "Check King Pins & Spindles", "section": "Steering", "required": true, "condition": 1, "description": "Check king pins and spindles for excessive play or wear."}, {"id": "steering-4", "title": "Test Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Spin and rock steer wheels to check for noisy or loose bearings."}, {"id": "steering-5", "title": "Check Steer Axle Mounts & Stops", "section": "Steering", "required": true, "condition": 1, "description": "Ensure steer axle mounts and stops are secure and undamaged."}, {"id": "steering-6", "title": "Check Steering tie Rods & Pings", "section": "Steering", "required": true, "condition": 1, "description": "Inspect tie rods and pins for looseness or excessive wear."}, {"id": "steering-7", "title": "Check Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Verify steer wheel bearings turn smoothly without noise or resistance."}, {"id": "steering-8", "title": "Inspect Steer Wheel Lug Nuts / Rim / Cap", "section": "Steering", "required": true, "condition": 1, "description": "Check steer wheel lug nuts for tightness and inspect rim/cap for damage."}, {"id": "steering-9", "title": "Check Steering Hoses at Cylinder & Box", "section": "Steering", "required": true, "condition": 1, "description": "Inspect steering hoses at both the cylinder and box for leaks or wear."}, {"id": "differential-transmission-1", "title": "Check Fluid Levels & Condition", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect differential and transmission fluid levels and assess for contamination."}, {"id": "differential-transmission-2", "title": "Check for Abnormal Noise", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Listen for unusual noises from differential or transmission during operation."}, {"id": "differential-transmission-3", "title": "Check Drive Wheel Bearings & Lug Nuts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect drive wheel bearings for play and verify lug nuts are tight."}, {"id": "differential-transmission-4", "title": "Check Mounts & Bolts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Check that all mounts and bolts are secure and undamaged."}, {"id": "differential-transmission-5", "title": "Check for Leaks", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect the differential and transmission for signs of oil leaks."}, {"id": "differential-transmission-6", "title": "Check Drive Shaft & U-Joints", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Examine drive shaft and U-joints for excessive play or wear."}, {"id": "differential-transmission-7", "title": "Check Shift Lever Linkage / Cables", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Test shift lever linkage and cables for proper adjustment and smooth operation."}, {"id": "differential-transmission-8", "title": "Replace Fluid & Filters per OEM Spec", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Replace differential and transmission fluids and filters according to manufacturer specification."}, {"id": "ignition-1", "title": "Test Ignition Switch", "section": "Ignition System", "required": true, "condition": 1, "description": "Turn the ignition switch to verify smooth operation and proper start."}, {"id": "ignition-2", "title": "Check Coil / Coil Packs", "section": "Ignition System", "required": true, "condition": 1, "description": "Inspect ignition coil or coil packs for damage or signs of arcing."}, {"id": "ignition-3", "title": "Check Distributor Cap & Rotor", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and check distributor cap and rotor for wear or corrosion."}, {"id": "ignition-4", "title": "Check Spark Plug Condition & Wires", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and inspect spark plugs and wires for fouling or damage."}, {"id": "mast-carriage-1", "title": "Check Lift Chains & Anchors", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect lift chains and anchors for wear, proper lubrication, and correct tension."}, {"id": "mast-carriage-2", "title": "Check Cylinders for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine all mast cylinders for hydraulic leaks or damage."}, {"id": "mast-carriage-3", "title": "Check Cylinder Brackets", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect cylinder brackets for secure attachment and absence of cracks."}, {"id": "mast-carriage-4", "title": "Check Hose Pulleys & Chain / Hose Guards", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check that hose pulleys, chain guards, and hose guards are intact and functional."}, {"id": "mast-carriage-5", "title": "Check Tilt Cylinder Mounts & Pins", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Verify tilt cylinder mounts and pins are secure and show no excessive wear."}, {"id": "mast-carriage-6", "title": "Check Trunion Bushings / Mounts", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect trunion bushings and mounts for wear or looseness."}, {"id": "mast-carriage-7", "title": "Check Forks, Pins & Carriage Condition", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine forks, pins, and carriage for cracks, bending, or other defects."}, {"id": "mast-carriage-8", "title": "Check Hoses for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect hydraulic hoses on mast and carriage for leaks, abrasion, or damage."}, {"id": "mast-carriage-9", "title": "Check Mast Shims & Side Play", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check mast shims for tightness and look for excessive side play in mast."}, {"id": "mast-carriage-10", "title": "Check Carriage & Mast Rollers", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect rollers for flat spots, wear, or improper rotation."}, {"id": "mast-carriage-11", "title": "Check Mast Rails for Wear", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Look for wear, cracks, or bending along mast rails."}, {"id": "mast-carriage-12", "title": "Check Side Shift Bushings", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect side shift bushings for excessive wear or movement."}, {"id": "cooling-1", "title": "Blow Out Radiator", "section": "Cooling System", "required": true, "condition": 1, "description": "Use compressed air to remove dust and debris from the radiator fins."}, {"id": "cooling-2", "title": "Coolant Level, Condition & Leaks", "section": "Cooling System", "required": true, "condition": 1, "description": "Check coolant level, ensure coolant is clean, and inspect for leaks."}, {"id": "cooling-3", "title": "Check Radiator Condition & Shroud", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect radiator and fan shroud for damage or obstructions."}, {"id": "cooling-4", "title": "Check Water Pump for Leaks & Play", "section": "Cooling System", "required": true, "condition": 1, "description": "Check water pump for coolant leaks or excessive shaft play."}, {"id": "cooling-5", "title": "Check Belt Condition & Tension", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect all drive belts for cracks, fraying, and correct tension."}, {"id": "cooling-6", "title": "Check Fan Blade Condition", "section": "Cooling System", "required": true, "condition": 1, "description": "Examine fan blades for cracks, chips, or loose mounting."}, {"id": "cooling-7", "title": "Cooland Good To (°F)", "section": "Cooling System", "required": true, "condition": 1, "description": "Verify coolant protection is adequate for expected low temperatures using a tester."}, {"id": "fuel-1", "title": "Check LP Tank, Hoses & Fittings", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect LP tank, hoses, and fittings for leaks, damage, or loose connections."}, {"id": "fuel-2", "title": "Drain LPG Regulator", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain condensation from the LPG regulator per manufacturer instructions."}, {"id": "fuel-3", "title": "Check LP System for Leaks", "section": "Fuel System", "required": true, "condition": 1, "description": "Use leak detector solution or sniffer to check LP system for leaks."}, {"id": "fuel-4", "title": "Check LPG Lockoff Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Test LPG lockoff valve for proper engagement and operation."}, {"id": "fuel-5", "title": "Check Carburetor & Linkages", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect carburetor and throttle/choke linkages for smooth movement and secure attachment."}, {"id": "fuel-6", "title": "Check throttle Pedal Linkages / Cable", "section": "Fuel System", "required": true, "condition": 1, "description": "Check throttle pedal linkages and cable for free movement and secure connections."}, {"id": "fuel-7", "title": "Check Governor for Proper Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect and test governor for correct operation and smooth throttle response."}, {"id": "fuel-8", "title": "Change Diesel Fuel Filters", "section": "Fuel System", "required": true, "condition": 1, "description": "Replace diesel fuel filters according to the service schedule."}, {"id": "fuel-9", "title": "Drain Water Separator / Sediment Filter", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain water separator and sediment filter of any collected water or contaminants."}, {"id": "final-inspection-1", "title": "Test Horn Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Press horn button to verify loud, consistent sound."}, {"id": "final-inspection-2", "title": "Does Back Up Alarm Sound in Reverse", "section": "Final Inspection", "required": true, "condition": 1, "description": "Shift into reverse and confirm the backup alarm activates."}, {"id": "final-inspection-3", "title": "Test Brake Lights / Turn Signals / BU Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Check that all brake lights, turn signals, and backup lights function properly."}, {"id": "final-inspection-4", "title": "Test Strobe Light for Proper Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Activate the strobe light and ensure it flashes correctly."}, {"id": "final-inspection-5", "title": "Test Seat Belt", "section": "Final Inspection", "required": true, "condition": 1, "description": "Buckle and unbuckle seat belt to confirm proper latching and release."}, {"id": "final-inspection-6", "title": "Test Operator Presence System", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm that the operator presence system disables movement when the seat is unoccupied."}, {"id": "final-inspection-7", "title": "Check All Work Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Turn on all work lights and confirm they illuminate properly."}, {"id": "final-inspection-8", "title": "Test Both Service & Parking Brake", "section": "Final Inspection", "required": true, "condition": 1, "description": "Apply both brakes and ensure they hold the forklift stationary."}, {"id": "final-inspection-9", "title": "Test Forward & Reverse Travel", "section": "Final Inspection", "required": true, "condition": 1, "description": "Drive forklift forward and in reverse to confirm smooth operation."}, {"id": "final-inspection-10", "title": "Test All Hydraulic Functions", "section": "Final Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic controls and ensure smooth, correct response."}, {"id": "final-inspection-11", "title": "Test Seat Belt Alarm", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm seat belt alarm sounds if the seat belt is not engaged during operation."}, {"id": "final-inspection-12", "title": "Wipe Down Forklift, Dash Area", "section": "Final Inspection", "required": true, "condition": 1, "description": "Clean the forklift and dashboard area of dirt and debris."}, {"id": "final-inspection-13", "title": "Install PM Sticker", "section": "Final Inspection", "required": true, "condition": 1, "description": "Place the preventative maintenance sticker in the designated area to indicate service is complete."}]	PM checklist initialized with default forklift maintenance items.	f	\N	\N	\N
6c2fde12-d234-4716-940d-7013bdcf9e33	f52f8e12-d761-4c1d-a5ff-d188b3f9c35b	67f7cfcb-c48a-4540-85be-a4296c317bce	5a54dd83-f546-4149-8ff5-d44cbc570217	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 05:15:08.267206+00	2025-08-04 05:19:31.266445+00	2025-08-04 05:19:31.515+00	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	completed	[{"id": "visual-1", "title": "Oil/Coolant Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect under and around the forklift for signs of oil or coolant leaks."}, {"id": "visual-2", "title": "Carriage, Mast & LBR Assembly", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Examine the carriage, mast, and load backrest for damage, cracks, or deformation."}, {"id": "visaul-3", "title": "Forks and Fork Pins", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check that forks and fork pins are straight, undamaged, and securely attached."}, {"id": "visual-4", "title": "Mast Chains, Rollers & Hoses", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect mast chains, rollers, and hoses for wear, proper tension, and leaks."}, {"id": "visaul-5", "title": "Tire & Wheel Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect tires and wheels for cuts, excessive wear, or missing lug nuts."}, {"id": "visual-6", "title": "Seat & Seat Belt Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Ensure seat and seat belt are present, undamaged, and functioning properly."}, {"id": "visual-7", "title": "Decals & Capacity Plates", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Verify that all safety decals and capacity plates are present and legible."}, {"id": "visual-8", "title": "Overhead Guard Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check the overhead guard for bends, cracks, or missing hardware."}, {"id": "visual-9", "title": "Check Cylinders for Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect all visible hydraulic cylinders for leaks or damage."}, {"id": "engine-compartment-1", "title": "Blow Out Engine Compartment", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Use compressed air to clean debris and dust from the engine compartment."}, {"id": "engine-compartment-2", "title": "Check Condition of Air Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect and replace the air filter if dirty or clogged."}, {"id": "engine-compartment-3", "title": "Change Engine Oil & Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Drain engine oil, replace with new oil, and install a new oil filter as specified."}, {"id": "engine-compartment-4", "title": "Check hood Latch, Hinges & Hood Strut", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Confirm hood latch, hinges, and strut function smoothly and securely."}, {"id": "engine-compartment-5", "title": "Inspect Air Intake Hoses & Clamps", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine air intake hoses and clamps for cracks, leaks, or loose fittings."}, {"id": "engine-compartment-6", "title": "Check Ring Gear Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect ring gear for visible damage or abnormal wear."}, {"id": "engine-compartment-7", "title": "Check Hood Insulation & Hood Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Ensure hood insulation is intact and hood is free of damage."}, {"id": "engine-compartment-8", "title": "Engine Noise / Smoke / Idle RPMs", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Start the engine and check for abnormal noises, smoke, or incorrect idle speed."}, {"id": "engine-compartment-9", "title": "Exhaust System / Muffler / Catalyst", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine the exhaust system, muffler, and catalyst for leaks, noise, or damage."}, {"id": "engine-compartment-10", "title": "Check for Engine Oil Leaks", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Look for evidence of engine oil leaks under and around the engine."}, {"id": "engine-compartment-11", "title": "Check Vacuum Lines / PCV Valve", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect vacuum lines and PCV valve for cracks, leaks, or blockages."}, {"id": "electrical-1", "title": "Check Headlights, Strobe, Taillights", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Verify all headlights, taillights, and strobe lights operate correctly."}, {"id": "electrical-2", "title": "Clean Battery Terminals / Load Test", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Clean corrosion from battery terminals and perform a battery load test."}, {"id": "electrical-3", "title": "Inspect Wire Harness / Connections", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Check wire harnesses and electrical connections for wear or loose fittings."}, {"id": "electrical-4", "title": "Check Neutral Safety Switch", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Test the neutral safety switch for correct operation."}, {"id": "electrical-5", "title": "Check All Gauges & Hour Meter", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Ensure all dashboard gauges and the hour meter function accurately."}, {"id": "electrical-6", "title": "Condition of Fuse Panel / Relay Box", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Open and inspect the fuse panel and relay box for corrosion, damage, or missing fuses."}, {"id": "electrical-7", "title": "Inspect Alternator / Record Voltage", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Inspect the alternator for damage and record operating voltage output."}, {"id": "hydraulic-1", "title": "Inspect Fluid Level & Quality", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic fluid level and assess fluid for contamination or discoloration."}, {"id": "hydraulic-2", "title": "Inspect Pump / Control Valve", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Visually inspect pump and control valve for leaks or damage."}, {"id": "hydraulic-3", "title": "Check Hydraulic Valve Levers", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic levers to ensure smooth and proper function."}, {"id": "hydraulic-4", "title": "Check Pump Drive Shaft & U-Joints", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Inspect the pump drive shaft and U-joints for wear or looseness."}, {"id": "hydraulic-5", "title": "Remove & Clean / Replace Tank Breather", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Remove the tank breather, clean or replace as needed."}, {"id": "hydraulic-6", "title": "Inspect All Hoses & Fittings", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Examine all hydraulic hoses and fittings for cracks, leaks, or abrasion."}, {"id": "hydraulic-7", "title": "Inspect Cylinders for Leaks", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic cylinders for oil leaks or physical damage."}, {"id": "brakes-1", "title": "Check Fluid Level & Quality", "section": "Brake", "required": true, "condition": 1, "description": "Inspect the brake fluid reservoir for proper level and clear, uncontaminated fluid."}, {"id": "brakes-2", "title": "Test PB Operation, Check Cables", "section": "Brake", "required": true, "condition": 1, "description": "Test parking brake operation and inspect cables for wear or binding."}, {"id": "brakes-3", "title": "Test Service Brake Operation", "section": "Brake", "required": true, "condition": 1, "description": "Depress the service brake and confirm the forklift stops smoothly and promptly."}, {"id": "brakes-4", "title": "Check Pedal Pads & Inching Pedal Cables", "section": "Brake", "required": true, "condition": 1, "description": "Inspect pedal pads for wear and inching pedal cables for proper function."}, {"id": "brakes-5", "title": "Check Wheels & Cylinder for Leaks", "section": "Brake", "required": true, "condition": 1, "description": "Look for brake fluid leaks around wheel cylinders and brake assemblies."}, {"id": "brakes-6", "title": "Check Brake / Inching Pedal Linkage", "section": "Brake", "required": true, "condition": 1, "description": "Inspect brake and inching pedal linkage for looseness or damage."}, {"id": "brakes-7", "title": "Check Brak / Inching Pedal Free Play", "section": "Brake", "required": true, "condition": 1, "description": "Verify correct amount of free play in brake and inching pedals."}, {"id": "steering-1", "title": "Inspect Steering Cylinder for Leaks", "section": "Steering", "required": true, "condition": 1, "description": "Check steering cylinder for hydraulic leaks or visible damage."}, {"id": "steering-2", "title": "Inspect Gear Box & Steer Column", "section": "Steering", "required": true, "condition": 1, "description": "Inspect the steering gear box and column for proper operation and leaks."}, {"id": "steering-3", "title": "Check King Pins & Spindles", "section": "Steering", "required": true, "condition": 1, "description": "Check king pins and spindles for excessive play or wear."}, {"id": "steering-4", "title": "Test Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Spin and rock steer wheels to check for noisy or loose bearings."}, {"id": "steering-5", "title": "Check Steer Axle Mounts & Stops", "section": "Steering", "required": true, "condition": 1, "description": "Ensure steer axle mounts and stops are secure and undamaged."}, {"id": "steering-6", "title": "Check Steering tie Rods & Pings", "section": "Steering", "required": true, "condition": 1, "description": "Inspect tie rods and pins for looseness or excessive wear."}, {"id": "steering-7", "title": "Check Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Verify steer wheel bearings turn smoothly without noise or resistance."}, {"id": "steering-8", "title": "Inspect Steer Wheel Lug Nuts / Rim / Cap", "section": "Steering", "required": true, "condition": 1, "description": "Check steer wheel lug nuts for tightness and inspect rim/cap for damage."}, {"id": "steering-9", "title": "Check Steering Hoses at Cylinder & Box", "section": "Steering", "required": true, "condition": 1, "description": "Inspect steering hoses at both the cylinder and box for leaks or wear."}, {"id": "differential-transmission-1", "title": "Check Fluid Levels & Condition", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect differential and transmission fluid levels and assess for contamination."}, {"id": "differential-transmission-2", "title": "Check for Abnormal Noise", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Listen for unusual noises from differential or transmission during operation."}, {"id": "differential-transmission-3", "title": "Check Drive Wheel Bearings & Lug Nuts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect drive wheel bearings for play and verify lug nuts are tight."}, {"id": "differential-transmission-4", "title": "Check Mounts & Bolts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Check that all mounts and bolts are secure and undamaged."}, {"id": "differential-transmission-5", "title": "Check for Leaks", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect the differential and transmission for signs of oil leaks."}, {"id": "differential-transmission-6", "title": "Check Drive Shaft & U-Joints", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Examine drive shaft and U-joints for excessive play or wear."}, {"id": "differential-transmission-7", "title": "Check Shift Lever Linkage / Cables", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Test shift lever linkage and cables for proper adjustment and smooth operation."}, {"id": "differential-transmission-8", "title": "Replace Fluid & Filters per OEM Spec", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Replace differential and transmission fluids and filters according to manufacturer specification."}, {"id": "ignition-1", "title": "Test Ignition Switch", "section": "Ignition System", "required": true, "condition": 1, "description": "Turn the ignition switch to verify smooth operation and proper start."}, {"id": "ignition-2", "title": "Check Coil / Coil Packs", "section": "Ignition System", "required": true, "condition": 1, "description": "Inspect ignition coil or coil packs for damage or signs of arcing."}, {"id": "ignition-3", "notes": "N/a", "title": "Check Distributor Cap & Rotor", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and check distributor cap and rotor for wear or corrosion."}, {"id": "ignition-4", "notes": "N/a", "title": "Check Spark Plug Condition & Wires", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and inspect spark plugs and wires for fouling or damage."}, {"id": "mast-carriage-1", "title": "Check Lift Chains & Anchors", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect lift chains and anchors for wear, proper lubrication, and correct tension."}, {"id": "mast-carriage-2", "title": "Check Cylinders for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine all mast cylinders for hydraulic leaks or damage."}, {"id": "mast-carriage-3", "title": "Check Cylinder Brackets", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect cylinder brackets for secure attachment and absence of cracks."}, {"id": "mast-carriage-4", "title": "Check Hose Pulleys & Chain / Hose Guards", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check that hose pulleys, chain guards, and hose guards are intact and functional."}, {"id": "mast-carriage-5", "title": "Check Tilt Cylinder Mounts & Pins", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Verify tilt cylinder mounts and pins are secure and show no excessive wear."}, {"id": "mast-carriage-6", "title": "Check Trunion Bushings / Mounts", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect trunion bushings and mounts for wear or looseness."}, {"id": "mast-carriage-7", "title": "Check Forks, Pins & Carriage Condition", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine forks, pins, and carriage for cracks, bending, or other defects."}, {"id": "mast-carriage-8", "title": "Check Hoses for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect hydraulic hoses on mast and carriage for leaks, abrasion, or damage."}, {"id": "mast-carriage-9", "title": "Check Mast Shims & Side Play", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check mast shims for tightness and look for excessive side play in mast."}, {"id": "mast-carriage-10", "title": "Check Carriage & Mast Rollers", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect rollers for flat spots, wear, or improper rotation."}, {"id": "mast-carriage-11", "title": "Check Mast Rails for Wear", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Look for wear, cracks, or bending along mast rails."}, {"id": "mast-carriage-12", "title": "Check Side Shift Bushings", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect side shift bushings for excessive wear or movement."}, {"id": "cooling-1", "title": "Blow Out Radiator", "section": "Cooling System", "required": true, "condition": 1, "description": "Use compressed air to remove dust and debris from the radiator fins."}, {"id": "cooling-2", "title": "Coolant Level, Condition & Leaks", "section": "Cooling System", "required": true, "condition": 1, "description": "Check coolant level, ensure coolant is clean, and inspect for leaks."}, {"id": "cooling-3", "title": "Check Radiator Condition & Shroud", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect radiator and fan shroud for damage or obstructions."}, {"id": "cooling-4", "title": "Check Water Pump for Leaks & Play", "section": "Cooling System", "required": true, "condition": 1, "description": "Check water pump for coolant leaks or excessive shaft play."}, {"id": "cooling-5", "title": "Check Belt Condition & Tension", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect all drive belts for cracks, fraying, and correct tension."}, {"id": "cooling-6", "title": "Check Fan Blade Condition", "section": "Cooling System", "required": true, "condition": 1, "description": "Examine fan blades for cracks, chips, or loose mounting."}, {"id": "cooling-7", "title": "Cooland Good To (°F)", "section": "Cooling System", "required": true, "condition": 1, "description": "Verify coolant protection is adequate for expected low temperatures using a tester."}, {"id": "fuel-1", "notes": "N/a", "title": "Check LP Tank, Hoses & Fittings", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect LP tank, hoses, and fittings for leaks, damage, or loose connections."}, {"id": "fuel-2", "notes": "N/a", "title": "Drain LPG Regulator", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain condensation from the LPG regulator per manufacturer instructions."}, {"id": "fuel-3", "notes": "N/a", "title": "Check LP System for Leaks", "section": "Fuel System", "required": true, "condition": 1, "description": "Use leak detector solution or sniffer to check LP system for leaks."}, {"id": "fuel-4", "notes": "N//a", "title": "Check LPG Lockoff Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Test LPG lockoff valve for proper engagement and operation."}, {"id": "fuel-5", "title": "Check Carburetor & Linkages", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect carburetor and throttle/choke linkages for smooth movement and secure attachment."}, {"id": "fuel-6", "title": "Check throttle Pedal Linkages / Cable", "section": "Fuel System", "required": true, "condition": 1, "description": "Check throttle pedal linkages and cable for free movement and secure connections."}, {"id": "fuel-7", "title": "Check Governor for Proper Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect and test governor for correct operation and smooth throttle response."}, {"id": "fuel-8", "title": "Change Diesel Fuel Filters", "section": "Fuel System", "required": true, "condition": 1, "description": "Replace diesel fuel filters according to the service schedule."}, {"id": "fuel-9", "title": "Drain Water Separator / Sediment Filter", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain water separator and sediment filter of any collected water or contaminants."}, {"id": "final-inspection-1", "title": "Test Horn Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Press horn button to verify loud, consistent sound."}, {"id": "final-inspection-2", "title": "Does Back Up Alarm Sound in Reverse", "section": "Final Inspection", "required": true, "condition": 1, "description": "Shift into reverse and confirm the backup alarm activates."}, {"id": "final-inspection-3", "title": "Test Brake Lights / Turn Signals / BU Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Check that all brake lights, turn signals, and backup lights function properly."}, {"id": "final-inspection-4", "title": "Test Strobe Light for Proper Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Activate the strobe light and ensure it flashes correctly."}, {"id": "final-inspection-5", "title": "Test Seat Belt", "section": "Final Inspection", "required": true, "condition": 1, "description": "Buckle and unbuckle seat belt to confirm proper latching and release."}, {"id": "final-inspection-6", "title": "Test Operator Presence System", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm that the operator presence system disables movement when the seat is unoccupied."}, {"id": "final-inspection-7", "title": "Check All Work Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Turn on all work lights and confirm they illuminate properly."}, {"id": "final-inspection-8", "title": "Test Both Service & Parking Brake", "section": "Final Inspection", "required": true, "condition": 1, "description": "Apply both brakes and ensure they hold the forklift stationary."}, {"id": "final-inspection-9", "title": "Test Forward & Reverse Travel", "section": "Final Inspection", "required": true, "condition": 1, "description": "Drive forklift forward and in reverse to confirm smooth operation."}, {"id": "final-inspection-10", "title": "Test All Hydraulic Functions", "section": "Final Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic controls and ensure smooth, correct response."}, {"id": "final-inspection-11", "title": "Test Seat Belt Alarm", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm seat belt alarm sounds if the seat belt is not engaged during operation."}, {"id": "final-inspection-12", "title": "Wipe Down Forklift, Dash Area", "section": "Final Inspection", "required": true, "condition": 1, "description": "Clean the forklift and dashboard area of dirt and debris."}, {"id": "final-inspection-13", "title": "Install PM Sticker", "section": "Final Inspection", "required": true, "condition": 1, "description": "Place the preventative maintenance sticker in the designated area to indicate service is complete."}]	Historical pm record for Clark 0813 woodson lumber brenham texas \nHours- 8440	t	\N	Historical PM - 	\N
d610c855-4955-4f9c-a8dc-5d3a405f8fb1	242ff153-c79d-4b58-b87c-330082b03b72	80998051-cb1d-47b2-96c5-2e59b10ca643	5a54dd83-f546-4149-8ff5-d44cbc570217	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 04:51:23.815187+00	2025-08-04 04:59:44.407778+00	2025-08-04 04:59:44.647+00	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	completed	[{"id": "visual-1", "title": "Oil/Coolant Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect under and around the forklift for signs of oil or coolant leaks."}, {"id": "visual-2", "title": "Carriage, Mast & LBR Assembly", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Examine the carriage, mast, and load backrest for damage, cracks, or deformation."}, {"id": "visaul-3", "title": "Forks and Fork Pins", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check that forks and fork pins are straight, undamaged, and securely attached."}, {"id": "visual-4", "title": "Mast Chains, Rollers & Hoses", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect mast chains, rollers, and hoses for wear, proper tension, and leaks."}, {"id": "visaul-5", "title": "Tire & Wheel Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect tires and wheels for cuts, excessive wear, or missing lug nuts."}, {"id": "visual-6", "notes": "Seat worn ", "title": "Seat & Seat Belt Condition", "section": "Visual Inspection", "required": true, "condition": 3, "description": "Ensure seat and seat belt are present, undamaged, and functioning properly."}, {"id": "visual-7", "title": "Decals & Capacity Plates", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Verify that all safety decals and capacity plates are present and legible."}, {"id": "visual-8", "title": "Overhead Guard Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check the overhead guard for bends, cracks, or missing hardware."}, {"id": "visual-9", "title": "Check Cylinders for Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect all visible hydraulic cylinders for leaks or damage."}, {"id": "engine-compartment-1", "title": "Blow Out Engine Compartment", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Use compressed air to clean debris and dust from the engine compartment."}, {"id": "engine-compartment-2", "title": "Check Condition of Air Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect and replace the air filter if dirty or clogged."}, {"id": "engine-compartment-3", "title": "Change Engine Oil & Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Drain engine oil, replace with new oil, and install a new oil filter as specified."}, {"id": "engine-compartment-4", "title": "Check hood Latch, Hinges & Hood Strut", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Confirm hood latch, hinges, and strut function smoothly and securely."}, {"id": "engine-compartment-5", "title": "Inspect Air Intake Hoses & Clamps", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine air intake hoses and clamps for cracks, leaks, or loose fittings."}, {"id": "engine-compartment-6", "title": "Check Ring Gear Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect ring gear for visible damage or abnormal wear."}, {"id": "engine-compartment-7", "title": "Check Hood Insulation & Hood Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Ensure hood insulation is intact and hood is free of damage."}, {"id": "engine-compartment-8", "title": "Engine Noise / Smoke / Idle RPMs", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Start the engine and check for abnormal noises, smoke, or incorrect idle speed."}, {"id": "engine-compartment-9", "title": "Exhaust System / Muffler / Catalyst", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine the exhaust system, muffler, and catalyst for leaks, noise, or damage."}, {"id": "engine-compartment-10", "title": "Check for Engine Oil Leaks", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Look for evidence of engine oil leaks under and around the engine."}, {"id": "engine-compartment-11", "title": "Check Vacuum Lines / PCV Valve", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect vacuum lines and PCV valve for cracks, leaks, or blockages."}, {"id": "electrical-1", "title": "Check Headlights, Strobe, Taillights", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Verify all headlights, taillights, and strobe lights operate correctly."}, {"id": "electrical-2", "title": "Clean Battery Terminals / Load Test", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Clean corrosion from battery terminals and perform a battery load test."}, {"id": "electrical-3", "title": "Inspect Wire Harness / Connections", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Check wire harnesses and electrical connections for wear or loose fittings."}, {"id": "electrical-4", "title": "Check Neutral Safety Switch", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Test the neutral safety switch for correct operation."}, {"id": "electrical-5", "title": "Check All Gauges & Hour Meter", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Ensure all dashboard gauges and the hour meter function accurately."}, {"id": "electrical-6", "title": "Condition of Fuse Panel / Relay Box", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Open and inspect the fuse panel and relay box for corrosion, damage, or missing fuses."}, {"id": "electrical-7", "title": "Inspect Alternator / Record Voltage", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Inspect the alternator for damage and record operating voltage output."}, {"id": "hydraulic-1", "title": "Inspect Fluid Level & Quality", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic fluid level and assess fluid for contamination or discoloration."}, {"id": "hydraulic-2", "title": "Inspect Pump / Control Valve", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Visually inspect pump and control valve for leaks or damage."}, {"id": "hydraulic-3", "title": "Check Hydraulic Valve Levers", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic levers to ensure smooth and proper function."}, {"id": "hydraulic-4", "title": "Check Pump Drive Shaft & U-Joints", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Inspect the pump drive shaft and U-joints for wear or looseness."}, {"id": "hydraulic-5", "title": "Remove & Clean / Replace Tank Breather", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Remove the tank breather, clean or replace as needed."}, {"id": "hydraulic-6", "title": "Inspect All Hoses & Fittings", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Examine all hydraulic hoses and fittings for cracks, leaks, or abrasion."}, {"id": "hydraulic-7", "title": "Inspect Cylinders for Leaks", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic cylinders for oil leaks or physical damage."}, {"id": "brakes-1", "title": "Check Fluid Level & Quality", "section": "Brake", "required": true, "condition": 1, "description": "Inspect the brake fluid reservoir for proper level and clear, uncontaminated fluid."}, {"id": "brakes-2", "notes": "Park brake at limit for adjustment ", "title": "Test PB Operation, Check Cables", "section": "Brake", "required": true, "condition": 3, "description": "Test parking brake operation and inspect cables for wear or binding."}, {"id": "brakes-3", "title": "Test Service Brake Operation", "section": "Brake", "required": true, "condition": 1, "description": "Depress the service brake and confirm the forklift stops smoothly and promptly."}, {"id": "brakes-4", "title": "Check Pedal Pads & Inching Pedal Cables", "section": "Brake", "required": true, "condition": 1, "description": "Inspect pedal pads for wear and inching pedal cables for proper function."}, {"id": "brakes-5", "title": "Check Wheels & Cylinder for Leaks", "section": "Brake", "required": true, "condition": 1, "description": "Look for brake fluid leaks around wheel cylinders and brake assemblies."}, {"id": "brakes-6", "title": "Check Brake / Inching Pedal Linkage", "section": "Brake", "required": true, "condition": 1, "description": "Inspect brake and inching pedal linkage for looseness or damage."}, {"id": "brakes-7", "title": "Check Brak / Inching Pedal Free Play", "section": "Brake", "required": true, "condition": 1, "description": "Verify correct amount of free play in brake and inching pedals."}, {"id": "steering-1", "title": "Inspect Steering Cylinder for Leaks", "section": "Steering", "required": true, "condition": 1, "description": "Check steering cylinder for hydraulic leaks or visible damage."}, {"id": "steering-2", "title": "Inspect Gear Box & Steer Column", "section": "Steering", "required": true, "condition": 1, "description": "Inspect the steering gear box and column for proper operation and leaks."}, {"id": "steering-3", "title": "Check King Pins & Spindles", "section": "Steering", "required": true, "condition": 1, "description": "Check king pins and spindles for excessive play or wear."}, {"id": "steering-4", "title": "Test Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Spin and rock steer wheels to check for noisy or loose bearings."}, {"id": "steering-5", "title": "Check Steer Axle Mounts & Stops", "section": "Steering", "required": true, "condition": 1, "description": "Ensure steer axle mounts and stops are secure and undamaged."}, {"id": "steering-6", "title": "Check Steering tie Rods & Pings", "section": "Steering", "required": true, "condition": 1, "description": "Inspect tie rods and pins for looseness or excessive wear."}, {"id": "steering-7", "title": "Check Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Verify steer wheel bearings turn smoothly without noise or resistance."}, {"id": "steering-8", "title": "Inspect Steer Wheel Lug Nuts / Rim / Cap", "section": "Steering", "required": true, "condition": 1, "description": "Check steer wheel lug nuts for tightness and inspect rim/cap for damage."}, {"id": "steering-9", "title": "Check Steering Hoses at Cylinder & Box", "section": "Steering", "required": true, "condition": 1, "description": "Inspect steering hoses at both the cylinder and box for leaks or wear."}, {"id": "differential-transmission-1", "title": "Check Fluid Levels & Condition", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect differential and transmission fluid levels and assess for contamination."}, {"id": "differential-transmission-2", "title": "Check for Abnormal Noise", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Listen for unusual noises from differential or transmission during operation."}, {"id": "differential-transmission-3", "title": "Check Drive Wheel Bearings & Lug Nuts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect drive wheel bearings for play and verify lug nuts are tight."}, {"id": "differential-transmission-4", "title": "Check Mounts & Bolts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Check that all mounts and bolts are secure and undamaged."}, {"id": "differential-transmission-5", "title": "Check for Leaks", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect the differential and transmission for signs of oil leaks."}, {"id": "differential-transmission-6", "title": "Check Drive Shaft & U-Joints", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Examine drive shaft and U-joints for excessive play or wear."}, {"id": "differential-transmission-7", "title": "Check Shift Lever Linkage / Cables", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Test shift lever linkage and cables for proper adjustment and smooth operation."}, {"id": "differential-transmission-8", "title": "Replace Fluid & Filters per OEM Spec", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Replace differential and transmission fluids and filters according to manufacturer specification."}, {"id": "ignition-1", "title": "Test Ignition Switch", "section": "Ignition System", "required": true, "condition": 1, "description": "Turn the ignition switch to verify smooth operation and proper start."}, {"id": "ignition-2", "title": "Check Coil / Coil Packs", "section": "Ignition System", "required": true, "condition": 1, "description": "Inspect ignition coil or coil packs for damage or signs of arcing."}, {"id": "ignition-3", "title": "Check Distributor Cap & Rotor", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and check distributor cap and rotor for wear or corrosion."}, {"id": "ignition-4", "title": "Check Spark Plug Condition & Wires", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and inspect spark plugs and wires for fouling or damage."}, {"id": "mast-carriage-1", "title": "Check Lift Chains & Anchors", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect lift chains and anchors for wear, proper lubrication, and correct tension."}, {"id": "mast-carriage-2", "title": "Check Cylinders for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine all mast cylinders for hydraulic leaks or damage."}, {"id": "mast-carriage-3", "title": "Check Cylinder Brackets", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect cylinder brackets for secure attachment and absence of cracks."}, {"id": "mast-carriage-4", "title": "Check Hose Pulleys & Chain / Hose Guards", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check that hose pulleys, chain guards, and hose guards are intact and functional."}, {"id": "mast-carriage-5", "title": "Check Tilt Cylinder Mounts & Pins", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Verify tilt cylinder mounts and pins are secure and show no excessive wear."}, {"id": "mast-carriage-6", "title": "Check Trunion Bushings / Mounts", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect trunion bushings and mounts for wear or looseness."}, {"id": "mast-carriage-7", "title": "Check Forks, Pins & Carriage Condition", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine forks, pins, and carriage for cracks, bending, or other defects."}, {"id": "mast-carriage-8", "notes": "Hoses showing wear will monitor ", "title": "Check Hoses for Leaks", "section": "Mast & Carriage", "required": true, "condition": 3, "description": "Inspect hydraulic hoses on mast and carriage for leaks, abrasion, or damage."}, {"id": "mast-carriage-9", "title": "Check Mast Shims & Side Play", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check mast shims for tightness and look for excessive side play in mast."}, {"id": "mast-carriage-10", "title": "Check Carriage & Mast Rollers", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect rollers for flat spots, wear, or improper rotation."}, {"id": "mast-carriage-11", "title": "Check Mast Rails for Wear", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Look for wear, cracks, or bending along mast rails."}, {"id": "mast-carriage-12", "notes": "Side shift bushings worn", "title": "Check Side Shift Bushings", "section": "Mast & Carriage", "required": true, "condition": 3, "description": "Inspect side shift bushings for excessive wear or movement."}, {"id": "cooling-1", "title": "Blow Out Radiator", "section": "Cooling System", "required": true, "condition": 1, "description": "Use compressed air to remove dust and debris from the radiator fins."}, {"id": "cooling-2", "title": "Coolant Level, Condition & Leaks", "section": "Cooling System", "required": true, "condition": 1, "description": "Check coolant level, ensure coolant is clean, and inspect for leaks."}, {"id": "cooling-3", "title": "Check Radiator Condition & Shroud", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect radiator and fan shroud for damage or obstructions."}, {"id": "cooling-4", "title": "Check Water Pump for Leaks & Play", "section": "Cooling System", "required": true, "condition": 1, "description": "Check water pump for coolant leaks or excessive shaft play."}, {"id": "cooling-5", "title": "Check Belt Condition & Tension", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect all drive belts for cracks, fraying, and correct tension."}, {"id": "cooling-6", "title": "Check Fan Blade Condition", "section": "Cooling System", "required": true, "condition": 1, "description": "Examine fan blades for cracks, chips, or loose mounting."}, {"id": "cooling-7", "title": "Cooland Good To (°F)", "section": "Cooling System", "required": true, "condition": 1, "description": "Verify coolant protection is adequate for expected low temperatures using a tester."}, {"id": "fuel-1", "notes": "N/a", "title": "Check LP Tank, Hoses & Fittings", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect LP tank, hoses, and fittings for leaks, damage, or loose connections."}, {"id": "fuel-2", "notes": "N/a", "title": "Drain LPG Regulator", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain condensation from the LPG regulator per manufacturer instructions."}, {"id": "fuel-3", "notes": "N/a", "title": "Check LP System for Leaks", "section": "Fuel System", "required": true, "condition": 1, "description": "Use leak detector solution or sniffer to check LP system for leaks."}, {"id": "fuel-4", "notes": "N/a", "title": "Check LPG Lockoff Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Test LPG lockoff valve for proper engagement and operation."}, {"id": "fuel-5", "notes": "N/a", "title": "Check Carburetor & Linkages", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect carburetor and throttle/choke linkages for smooth movement and secure attachment."}, {"id": "fuel-6", "title": "Check throttle Pedal Linkages / Cable", "section": "Fuel System", "required": true, "condition": 1, "description": "Check throttle pedal linkages and cable for free movement and secure connections."}, {"id": "fuel-7", "title": "Check Governor for Proper Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect and test governor for correct operation and smooth throttle response."}, {"id": "fuel-8", "title": "Change Diesel Fuel Filters", "section": "Fuel System", "required": true, "condition": 1, "description": "Replace diesel fuel filters according to the service schedule."}, {"id": "fuel-9", "title": "Drain Water Separator / Sediment Filter", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain water separator and sediment filter of any collected water or contaminants."}, {"id": "final-inspection-1", "title": "Test Horn Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Press horn button to verify loud, consistent sound."}, {"id": "final-inspection-2", "title": "Does Back Up Alarm Sound in Reverse", "section": "Final Inspection", "required": true, "condition": 1, "description": "Shift into reverse and confirm the backup alarm activates."}, {"id": "final-inspection-3", "title": "Test Brake Lights / Turn Signals / BU Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Check that all brake lights, turn signals, and backup lights function properly."}, {"id": "final-inspection-4", "title": "Test Strobe Light for Proper Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Activate the strobe light and ensure it flashes correctly."}, {"id": "final-inspection-5", "title": "Test Seat Belt", "section": "Final Inspection", "required": true, "condition": 1, "description": "Buckle and unbuckle seat belt to confirm proper latching and release."}, {"id": "final-inspection-6", "title": "Test Operator Presence System", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm that the operator presence system disables movement when the seat is unoccupied."}, {"id": "final-inspection-7", "title": "Check All Work Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Turn on all work lights and confirm they illuminate properly."}, {"id": "final-inspection-8", "title": "Test Both Service & Parking Brake", "section": "Final Inspection", "required": true, "condition": 1, "description": "Apply both brakes and ensure they hold the forklift stationary."}, {"id": "final-inspection-9", "title": "Test Forward & Reverse Travel", "section": "Final Inspection", "required": true, "condition": 1, "description": "Drive forklift forward and in reverse to confirm smooth operation."}, {"id": "final-inspection-10", "title": "Test All Hydraulic Functions", "section": "Final Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic controls and ensure smooth, correct response."}, {"id": "final-inspection-11", "title": "Test Seat Belt Alarm", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm seat belt alarm sounds if the seat belt is not engaged during operation."}, {"id": "final-inspection-12", "title": "Wipe Down Forklift, Dash Area", "section": "Final Inspection", "required": true, "condition": 1, "description": "Clean the forklift and dashboard area of dirt and debris."}, {"id": "final-inspection-13", "title": "Install PM Sticker", "section": "Final Inspection", "required": true, "condition": 1, "description": "Place the preventative maintenance sticker in the designated area to indicate service is complete."}]	Historical pm for Clark 0965 woodson lumber brenham texas \nHours- 4029	t	\N	Historical PM - 	\N
0230b656-5cf2-4567-b1cf-61275a2beb0f	97b8275a-d4e7-4794-8a3c-35959e8865ce	68d57a2e-a54a-41e8-b4d7-51d880392b5b	5a54dd83-f546-4149-8ff5-d44cbc570217	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 05:03:52.595586+00	2025-08-04 05:10:02.019021+00	2025-08-04 05:10:02.247+00	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	completed	[{"id": "visual-1", "title": "Oil/Coolant Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect under and around the forklift for signs of oil or coolant leaks."}, {"id": "visual-2", "title": "Carriage, Mast & LBR Assembly", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Examine the carriage, mast, and load backrest for damage, cracks, or deformation."}, {"id": "visaul-3", "title": "Forks and Fork Pins", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check that forks and fork pins are straight, undamaged, and securely attached."}, {"id": "visual-4", "title": "Mast Chains, Rollers & Hoses", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect mast chains, rollers, and hoses for wear, proper tension, and leaks."}, {"id": "visaul-5", "title": "Tire & Wheel Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect tires and wheels for cuts, excessive wear, or missing lug nuts."}, {"id": "visual-6", "title": "Seat & Seat Belt Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Ensure seat and seat belt are present, undamaged, and functioning properly."}, {"id": "visual-7", "title": "Decals & Capacity Plates", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Verify that all safety decals and capacity plates are present and legible."}, {"id": "visual-8", "title": "Overhead Guard Condition", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Check the overhead guard for bends, cracks, or missing hardware."}, {"id": "visual-9", "title": "Check Cylinders for Leaks", "section": "Visual Inspection", "required": true, "condition": 1, "description": "Inspect all visible hydraulic cylinders for leaks or damage."}, {"id": "engine-compartment-1", "title": "Blow Out Engine Compartment", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Use compressed air to clean debris and dust from the engine compartment."}, {"id": "engine-compartment-2", "title": "Check Condition of Air Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect and replace the air filter if dirty or clogged."}, {"id": "engine-compartment-3", "title": "Change Engine Oil & Filter", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Drain engine oil, replace with new oil, and install a new oil filter as specified."}, {"id": "engine-compartment-4", "title": "Check hood Latch, Hinges & Hood Strut", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Confirm hood latch, hinges, and strut function smoothly and securely."}, {"id": "engine-compartment-5", "title": "Inspect Air Intake Hoses & Clamps", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine air intake hoses and clamps for cracks, leaks, or loose fittings."}, {"id": "engine-compartment-6", "title": "Check Ring Gear Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect ring gear for visible damage or abnormal wear."}, {"id": "engine-compartment-7", "title": "Check Hood Insulation & Hood Condition", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Ensure hood insulation is intact and hood is free of damage."}, {"id": "engine-compartment-8", "title": "Engine Noise / Smoke / Idle RPMs", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Start the engine and check for abnormal noises, smoke, or incorrect idle speed."}, {"id": "engine-compartment-9", "title": "Exhaust System / Muffler / Catalyst", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Examine the exhaust system, muffler, and catalyst for leaks, noise, or damage."}, {"id": "engine-compartment-10", "title": "Check for Engine Oil Leaks", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Look for evidence of engine oil leaks under and around the engine."}, {"id": "engine-compartment-11", "title": "Check Vacuum Lines / PCV Valve", "section": "Engine Compartment", "required": true, "condition": 1, "description": "Inspect vacuum lines and PCV valve for cracks, leaks, or blockages."}, {"id": "electrical-1", "title": "Check Headlights, Strobe, Taillights", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Verify all headlights, taillights, and strobe lights operate correctly."}, {"id": "electrical-2", "title": "Clean Battery Terminals / Load Test", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Clean corrosion from battery terminals and perform a battery load test."}, {"id": "electrical-3", "title": "Inspect Wire Harness / Connections", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Check wire harnesses and electrical connections for wear or loose fittings."}, {"id": "electrical-4", "title": "Check Neutral Safety Switch", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Test the neutral safety switch for correct operation."}, {"id": "electrical-5", "title": "Check All Gauges & Hour Meter", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Ensure all dashboard gauges and the hour meter function accurately."}, {"id": "electrical-6", "title": "Condition of Fuse Panel / Relay Box", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Open and inspect the fuse panel and relay box for corrosion, damage, or missing fuses."}, {"id": "electrical-7", "title": "Inspect Alternator / Record Voltage", "section": "Electrical Inspection", "required": true, "condition": 1, "description": "Inspect the alternator for damage and record operating voltage output."}, {"id": "hydraulic-1", "title": "Inspect Fluid Level & Quality", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic fluid level and assess fluid for contamination or discoloration."}, {"id": "hydraulic-2", "title": "Inspect Pump / Control Valve", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Visually inspect pump and control valve for leaks or damage."}, {"id": "hydraulic-3", "title": "Check Hydraulic Valve Levers", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic levers to ensure smooth and proper function."}, {"id": "hydraulic-4", "title": "Check Pump Drive Shaft & U-Joints", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Inspect the pump drive shaft and U-joints for wear or looseness."}, {"id": "hydraulic-5", "title": "Remove & Clean / Replace Tank Breather", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Remove the tank breather, clean or replace as needed."}, {"id": "hydraulic-6", "title": "Inspect All Hoses & Fittings", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Examine all hydraulic hoses and fittings for cracks, leaks, or abrasion."}, {"id": "hydraulic-7", "title": "Inspect Cylinders for Leaks", "section": "Hydraulic Inspection", "required": true, "condition": 1, "description": "Check hydraulic cylinders for oil leaks or physical damage."}, {"id": "brakes-1", "title": "Check Fluid Level & Quality", "section": "Brake", "required": true, "condition": 1, "description": "Inspect the brake fluid reservoir for proper level and clear, uncontaminated fluid."}, {"id": "brakes-2", "title": "Test PB Operation, Check Cables", "section": "Brake", "required": true, "condition": 1, "description": "Test parking brake operation and inspect cables for wear or binding."}, {"id": "brakes-3", "title": "Test Service Brake Operation", "section": "Brake", "required": true, "condition": 1, "description": "Depress the service brake and confirm the forklift stops smoothly and promptly."}, {"id": "brakes-4", "title": "Check Pedal Pads & Inching Pedal Cables", "section": "Brake", "required": true, "condition": 1, "description": "Inspect pedal pads for wear and inching pedal cables for proper function."}, {"id": "brakes-5", "title": "Check Wheels & Cylinder for Leaks", "section": "Brake", "required": true, "condition": 1, "description": "Look for brake fluid leaks around wheel cylinders and brake assemblies."}, {"id": "brakes-6", "title": "Check Brake / Inching Pedal Linkage", "section": "Brake", "required": true, "condition": 1, "description": "Inspect brake and inching pedal linkage for looseness or damage."}, {"id": "brakes-7", "title": "Check Brak / Inching Pedal Free Play", "section": "Brake", "required": true, "condition": 1, "description": "Verify correct amount of free play in brake and inching pedals."}, {"id": "steering-1", "title": "Inspect Steering Cylinder for Leaks", "section": "Steering", "required": true, "condition": 1, "description": "Check steering cylinder for hydraulic leaks or visible damage."}, {"id": "steering-2", "title": "Inspect Gear Box & Steer Column", "section": "Steering", "required": true, "condition": 1, "description": "Inspect the steering gear box and column for proper operation and leaks."}, {"id": "steering-3", "title": "Check King Pins & Spindles", "section": "Steering", "required": true, "condition": 1, "description": "Check king pins and spindles for excessive play or wear."}, {"id": "steering-4", "title": "Test Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Spin and rock steer wheels to check for noisy or loose bearings."}, {"id": "steering-5", "title": "Check Steer Axle Mounts & Stops", "section": "Steering", "required": true, "condition": 1, "description": "Ensure steer axle mounts and stops are secure and undamaged."}, {"id": "steering-6", "title": "Check Steering tie Rods & Pings", "section": "Steering", "required": true, "condition": 1, "description": "Inspect tie rods and pins for looseness or excessive wear."}, {"id": "steering-7", "title": "Check Steer Wheel Bearings", "section": "Steering", "required": true, "condition": 1, "description": "Verify steer wheel bearings turn smoothly without noise or resistance."}, {"id": "steering-8", "title": "Inspect Steer Wheel Lug Nuts / Rim / Cap", "section": "Steering", "required": true, "condition": 1, "description": "Check steer wheel lug nuts for tightness and inspect rim/cap for damage."}, {"id": "steering-9", "title": "Check Steering Hoses at Cylinder & Box", "section": "Steering", "required": true, "condition": 1, "description": "Inspect steering hoses at both the cylinder and box for leaks or wear."}, {"id": "differential-transmission-1", "title": "Check Fluid Levels & Condition", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect differential and transmission fluid levels and assess for contamination."}, {"id": "differential-transmission-2", "title": "Check for Abnormal Noise", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Listen for unusual noises from differential or transmission during operation."}, {"id": "differential-transmission-3", "title": "Check Drive Wheel Bearings & Lug Nuts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect drive wheel bearings for play and verify lug nuts are tight."}, {"id": "differential-transmission-4", "title": "Check Mounts & Bolts", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Check that all mounts and bolts are secure and undamaged."}, {"id": "differential-transmission-5", "title": "Check for Leaks", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Inspect the differential and transmission for signs of oil leaks."}, {"id": "differential-transmission-6", "title": "Check Drive Shaft & U-Joints", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Examine drive shaft and U-joints for excessive play or wear."}, {"id": "differential-transmission-7", "title": "Check Shift Lever Linkage / Cables", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Test shift lever linkage and cables for proper adjustment and smooth operation."}, {"id": "differential-transmission-8", "title": "Replace Fluid & Filters per OEM Spec", "section": "Differential & Transmission", "required": true, "condition": 1, "description": "Replace differential and transmission fluids and filters according to manufacturer specification."}, {"id": "ignition-1", "title": "Test Ignition Switch", "section": "Ignition System", "required": true, "condition": 1, "description": "Turn the ignition switch to verify smooth operation and proper start."}, {"id": "ignition-2", "title": "Check Coil / Coil Packs", "section": "Ignition System", "required": true, "condition": 1, "description": "Inspect ignition coil or coil packs for damage or signs of arcing."}, {"id": "ignition-3", "title": "Check Distributor Cap & Rotor", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and check distributor cap and rotor for wear or corrosion."}, {"id": "ignition-4", "title": "Check Spark Plug Condition & Wires", "section": "Ignition System", "required": true, "condition": 1, "description": "Remove and inspect spark plugs and wires for fouling or damage."}, {"id": "mast-carriage-1", "title": "Check Lift Chains & Anchors", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect lift chains and anchors for wear, proper lubrication, and correct tension."}, {"id": "mast-carriage-2", "title": "Check Cylinders for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine all mast cylinders for hydraulic leaks or damage."}, {"id": "mast-carriage-3", "title": "Check Cylinder Brackets", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect cylinder brackets for secure attachment and absence of cracks."}, {"id": "mast-carriage-4", "title": "Check Hose Pulleys & Chain / Hose Guards", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check that hose pulleys, chain guards, and hose guards are intact and functional."}, {"id": "mast-carriage-5", "title": "Check Tilt Cylinder Mounts & Pins", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Verify tilt cylinder mounts and pins are secure and show no excessive wear."}, {"id": "mast-carriage-6", "title": "Check Trunion Bushings / Mounts", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect trunion bushings and mounts for wear or looseness."}, {"id": "mast-carriage-7", "title": "Check Forks, Pins & Carriage Condition", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Examine forks, pins, and carriage for cracks, bending, or other defects."}, {"id": "mast-carriage-8", "title": "Check Hoses for Leaks", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect hydraulic hoses on mast and carriage for leaks, abrasion, or damage."}, {"id": "mast-carriage-9", "title": "Check Mast Shims & Side Play", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Check mast shims for tightness and look for excessive side play in mast."}, {"id": "mast-carriage-10", "title": "Check Carriage & Mast Rollers", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect rollers for flat spots, wear, or improper rotation."}, {"id": "mast-carriage-11", "title": "Check Mast Rails for Wear", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Look for wear, cracks, or bending along mast rails."}, {"id": "mast-carriage-12", "title": "Check Side Shift Bushings", "section": "Mast & Carriage", "required": true, "condition": 1, "description": "Inspect side shift bushings for excessive wear or movement."}, {"id": "cooling-1", "title": "Blow Out Radiator", "section": "Cooling System", "required": true, "condition": 1, "description": "Use compressed air to remove dust and debris from the radiator fins."}, {"id": "cooling-2", "title": "Coolant Level, Condition & Leaks", "section": "Cooling System", "required": true, "condition": 1, "description": "Check coolant level, ensure coolant is clean, and inspect for leaks."}, {"id": "cooling-3", "title": "Check Radiator Condition & Shroud", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect radiator and fan shroud for damage or obstructions."}, {"id": "cooling-4", "title": "Check Water Pump for Leaks & Play", "section": "Cooling System", "required": true, "condition": 1, "description": "Check water pump for coolant leaks or excessive shaft play."}, {"id": "cooling-5", "title": "Check Belt Condition & Tension", "section": "Cooling System", "required": true, "condition": 1, "description": "Inspect all drive belts for cracks, fraying, and correct tension."}, {"id": "cooling-6", "title": "Check Fan Blade Condition", "section": "Cooling System", "required": true, "condition": 1, "description": "Examine fan blades for cracks, chips, or loose mounting."}, {"id": "cooling-7", "title": "Cooland Good To (°F)", "section": "Cooling System", "required": true, "condition": 1, "description": "Verify coolant protection is adequate for expected low temperatures using a tester."}, {"id": "fuel-1", "notes": "N/a", "title": "Check LP Tank, Hoses & Fittings", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect LP tank, hoses, and fittings for leaks, damage, or loose connections."}, {"id": "fuel-2", "notes": "N/a", "title": "Drain LPG Regulator", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain condensation from the LPG regulator per manufacturer instructions."}, {"id": "fuel-3", "notes": "N/a", "title": "Check LP System for Leaks", "section": "Fuel System", "required": true, "condition": 1, "description": "Use leak detector solution or sniffer to check LP system for leaks."}, {"id": "fuel-4", "notes": "N/a", "title": "Check LPG Lockoff Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Test LPG lockoff valve for proper engagement and operation."}, {"id": "fuel-5", "notes": "N/a", "title": "Check Carburetor & Linkages", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect carburetor and throttle/choke linkages for smooth movement and secure attachment."}, {"id": "fuel-6", "title": "Check throttle Pedal Linkages / Cable", "section": "Fuel System", "required": true, "condition": 1, "description": "Check throttle pedal linkages and cable for free movement and secure connections."}, {"id": "fuel-7", "title": "Check Governor for Proper Operation", "section": "Fuel System", "required": true, "condition": 1, "description": "Inspect and test governor for correct operation and smooth throttle response."}, {"id": "fuel-8", "title": "Change Diesel Fuel Filters", "section": "Fuel System", "required": true, "condition": 1, "description": "Replace diesel fuel filters according to the service schedule."}, {"id": "fuel-9", "title": "Drain Water Separator / Sediment Filter", "section": "Fuel System", "required": true, "condition": 1, "description": "Drain water separator and sediment filter of any collected water or contaminants."}, {"id": "final-inspection-1", "title": "Test Horn Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Press horn button to verify loud, consistent sound."}, {"id": "final-inspection-2", "title": "Does Back Up Alarm Sound in Reverse", "section": "Final Inspection", "required": true, "condition": 1, "description": "Shift into reverse and confirm the backup alarm activates."}, {"id": "final-inspection-3", "title": "Test Brake Lights / Turn Signals / BU Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Check that all brake lights, turn signals, and backup lights function properly."}, {"id": "final-inspection-4", "title": "Test Strobe Light for Proper Operation", "section": "Final Inspection", "required": true, "condition": 1, "description": "Activate the strobe light and ensure it flashes correctly."}, {"id": "final-inspection-5", "title": "Test Seat Belt", "section": "Final Inspection", "required": true, "condition": 1, "description": "Buckle and unbuckle seat belt to confirm proper latching and release."}, {"id": "final-inspection-6", "title": "Test Operator Presence System", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm that the operator presence system disables movement when the seat is unoccupied."}, {"id": "final-inspection-7", "title": "Check All Work Lights", "section": "Final Inspection", "required": true, "condition": 1, "description": "Turn on all work lights and confirm they illuminate properly."}, {"id": "final-inspection-8", "title": "Test Both Service & Parking Brake", "section": "Final Inspection", "required": true, "condition": 1, "description": "Apply both brakes and ensure they hold the forklift stationary."}, {"id": "final-inspection-9", "title": "Test Forward & Reverse Travel", "section": "Final Inspection", "required": true, "condition": 1, "description": "Drive forklift forward and in reverse to confirm smooth operation."}, {"id": "final-inspection-10", "title": "Test All Hydraulic Functions", "section": "Final Inspection", "required": true, "condition": 1, "description": "Operate all hydraulic controls and ensure smooth, correct response."}, {"id": "final-inspection-11", "title": "Test Seat Belt Alarm", "section": "Final Inspection", "required": true, "condition": 1, "description": "Confirm seat belt alarm sounds if the seat belt is not engaged during operation."}, {"id": "final-inspection-12", "title": "Wipe Down Forklift, Dash Area", "section": "Final Inspection", "required": true, "condition": 1, "description": "Clean the forklift and dashboard area of dirt and debris."}, {"id": "final-inspection-13", "title": "Install PM Sticker", "section": "Final Inspection", "required": true, "condition": 1, "description": "Place the preventative maintenance sticker in the designated area to indicate service is complete."}]	Historical pm for woodson Clark 0879 woodson lumber brenham texas \nHours- 3714	t	\N	Historical PM - 	\N
\.


--
-- Data for Name: profiles; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.profiles (id, email, name, created_at, updated_at, email_private) FROM stdin;
0d73189e-e714-48e2-8c33-fe8778259064	admin@equipqr.app	Global Administrator	2025-06-17 14:46:52.786052+00	2025-06-17 14:46:52.786052+00	f
15d8cd2d-595c-44e2-8cdf-ed7e1028b436	matt@3aequip.com	Matthew Hankins	2025-06-24 13:40:06.712935+00	2025-06-24 13:40:06.712935+00	f
da1368a1-9ed1-46ef-a7dc-56bf15ebeee4	nicholas.king@columbiacloudworks.com	Nicholas King	2025-07-19 04:05:27.467145+00	2025-07-19 04:05:27.467145+00	f
9c2bd213-3ce9-457c-a29e-dfafa277839d	matthewleehankins@gmail.com	Matt hankins	2025-07-19 04:55:12.336186+00	2025-07-19 04:55:12.336186+00	f
5dfc39b8-8037-400a-a7f4-033192d62e44	justinpitera@gmail.com	J ap	2025-07-25 15:04:18.292282+00	2025-07-25 15:04:18.292282+00	f
1b7e1856-ca69-4eee-8896-f7c1cf81f942	mathiasrex2003@gmail.com	Mathias Rex Lindberg	2025-07-25 19:40:43.245361+00	2025-07-25 19:40:43.245361+00	f
685efa5e-7519-486e-8643-28cfaf5408a4	viral.architect@gmail.com	Viral Architect	2025-06-18 18:08:12.459588+00	2025-08-12 21:42:47.035342+00	t
881e17c3-6c44-488d-8504-906fdc9146ef	kurt@mirror.work	Kurt Lee	2025-08-17 14:57:27.795946+00	2025-08-17 14:57:27.795946+00	f
ba131ec4-ad65-4d62-8ed5-4610d575b2dc	test.user@columbiacloudworks.com	Test User	2025-08-19 12:44:45.455353+00	2025-08-19 12:44:45.455353+00	f
39ea9c03-12ac-4072-990e-63019d163ce2	theerealray@gmail.com	r	2025-08-22 03:15:53.320872+00	2025-08-22 03:15:53.320872+00	f
\.


--
-- Data for Name: scans; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.scans (id, equipment_id, scanned_by, scanned_at, location, notes) FROM stdin;
5590e40a-ae42-4888-abdb-680aad643350	8c97474d-a2e8-41dc-acbf-fdffce5a268e	685efa5e-7519-486e-8643-28cfaf5408a4	2025-06-19 05:44:05.873208+00	40.919398, -90.659367	QR code scan with location
e57ee356-a94e-4798-b0c5-1ed48985c987	8c97474d-a2e8-41dc-acbf-fdffce5a268e	685efa5e-7519-486e-8643-28cfaf5408a4	2025-06-19 07:51:49.126594+00	40.919467, -90.659417	QR code scan with location
e52c70a6-b2f9-4a6f-81c0-b2a300171397	ad86f6eb-7750-43c7-a517-c161993e2425	685efa5e-7519-486e-8643-28cfaf5408a4	2025-06-19 07:54:14.956024+00	\N	QR code scan (location denied)
9363dbbe-cf25-42be-a5fb-a66dc9f13b57	ad86f6eb-7750-43c7-a517-c161993e2425	685efa5e-7519-486e-8643-28cfaf5408a4	2025-06-19 07:54:31.275594+00	40.919424, -90.659403	QR code scan with location
2b7011d7-ca76-420d-abe0-d04480f8f415	8a35ba88-03e0-4d1f-9dcc-ecca3d398c41	685efa5e-7519-486e-8643-28cfaf5408a4	2025-06-23 19:35:33.44301+00	40.919408, -90.659393	QR code scan with location
0d9b835e-dc06-4f47-8beb-f149b10e00d9	8c97474d-a2e8-41dc-acbf-fdffce5a268e	685efa5e-7519-486e-8643-28cfaf5408a4	2025-07-05 01:41:02.372284+00	\N	QR code scan (location denied)
817d892e-c5aa-42da-b023-db33b4778c28	f017a274-82ce-4b95-8bcf-f21d5f421558	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-19 04:16:08.373845+00	\N	QR code scan (location denied)
77836d28-c6b8-4273-8737-c312beb52499	9faf4856-4365-4590-9988-1f0fffdeb3ac	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-19 04:54:02.916748+00	32.952311, -96.827513	QR code scan with location
249da8c3-42f1-4783-80d4-82f62956ceab	9faf4856-4365-4590-9988-1f0fffdeb3ac	9c2bd213-3ce9-457c-a29e-dfafa277839d	2025-07-19 13:04:58.269865+00	32.952332, -96.827557	QR code scan with location
30730577-509f-432b-99df-bbe8c650ef35	893b7055-3d49-4443-a442-ef695ce17a9e	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-19 13:29:07.739864+00	32.903862, -96.887967	QR code scan with location
7af61306-b7c9-44cb-abd4-4f83d0ccf24d	9faf4856-4365-4590-9988-1f0fffdeb3ac	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-19 13:29:30.361346+00	32.908376, -96.883524	QR code scan with location
8adc97db-8bb4-4f0c-b029-2ce550b21694	1740e3e0-f58d-4249-adc1-ef0b9955955f	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-19 13:29:50.719562+00	32.903811, -96.887803	QR code scan with location
e45108a1-5c27-4905-905a-82c5271adce8	4b004576-593a-467e-843f-a97cbd8d6e71	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-19 13:30:10.50938+00	32.903675, -96.886450	QR code scan with location
667db98b-0857-4c4c-94b5-7ebed1b799a0	5ef590dd-7ebc-4640-90a8-2e4e1efe3455	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-19 13:31:04.167346+00	32.904140, -96.886777	QR code scan with location
a362d405-8235-4383-a0c2-6c6b41f8b33f	1190ca62-f001-47d9-8226-df81469efbaf	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-19 13:31:26.003496+00	32.904694, -96.886908	QR code scan with location
233be109-94f1-4131-8a1b-70a89a387f7e	2fc419f5-2f03-42a9-852f-dd4c6543f149	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-19 13:31:47.267347+00	32.903886, -96.888020	QR code scan with location
92d02ac0-9833-408c-9ca8-c7d9d2433e8a	f017a274-82ce-4b95-8bcf-f21d5f421558	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-19 13:32:19.534915+00	32.903638, -96.888118	QR code scan with location
daf02b2c-c231-4154-b555-d9df8974f1ea	cc363af5-50a1-4a0d-bbb1-6ce5902d9ff9	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-19 13:32:38.671753+00	32.903949, -96.887546	QR code scan with location
535d2bae-a513-41db-b847-dd5e35a09c44	f017a274-82ce-4b95-8bcf-f21d5f421558	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-19 13:33:00.051985+00	32.904111, -96.886087	QR code scan with location
830223e9-9330-46aa-b20b-bc3742bb0620	f017a274-82ce-4b95-8bcf-f21d5f421558	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-19 13:33:21.118968+00	32.904624, -96.886620	QR code scan with location
c356adff-7da0-4478-a22a-5ffaa88dc5c7	1190ca62-f001-47d9-8226-df81469efbaf	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-19 13:33:54.750336+00	32.903978, -96.886628	QR code scan with location
daffd9ab-2a85-4b01-af0e-d9c469c5d57f	ff88eff6-1954-408b-ac7a-d109f77f18c1	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-19 13:34:21.724238+00	32.903642, -96.888041	QR code scan with location
6dfdf945-edc3-49fb-9aaa-5b9b832c4628	f017a274-82ce-4b95-8bcf-f21d5f421558	9c2bd213-3ce9-457c-a29e-dfafa277839d	2025-07-19 13:35:52.660827+00	32.904127, -96.887024	QR code scan with location
2a6ee957-4731-4158-af8a-f7701febf9dd	1190ca62-f001-47d9-8226-df81469efbaf	9c2bd213-3ce9-457c-a29e-dfafa277839d	2025-07-19 13:46:25.840057+00	32.904309, -96.887710	QR code scan with location
16f23cd4-46e3-49c5-9423-4f7a2deaf86e	8c97474d-a2e8-41dc-acbf-fdffce5a268e	685efa5e-7519-486e-8643-28cfaf5408a4	2025-07-31 17:26:21.88948+00	\N	QR code scan (location denied)
5ad808b5-ae69-493c-a559-7f770d73533c	8c97474d-a2e8-41dc-acbf-fdffce5a268e	685efa5e-7519-486e-8643-28cfaf5408a4	2025-07-31 17:26:51.851952+00	\N	QR code scan (location denied)
bb0cfd65-c271-4fbf-94c4-2ad0f74ac4f2	8c97474d-a2e8-41dc-acbf-fdffce5a268e	685efa5e-7519-486e-8643-28cfaf5408a4	2025-07-31 17:27:17.236289+00	40.919442, -90.659400	QR code scan with location
6d61e030-edc5-4773-916b-680aef2d16af	f017a274-82ce-4b95-8bcf-f21d5f421558	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-01 16:39:12.154408+00	32.904547, -96.887693	QR code scan with location
baacd451-cd59-449f-b94a-68b776919635	f017a274-82ce-4b95-8bcf-f21d5f421558	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-01 23:14:37.30566+00	32.952036, -96.827714	QR code scan with location
78c5d4ca-6d85-4c5d-84e9-d2fba995345a	e421aac0-97f5-4ac7-a37d-4facdeb8b71d	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-06 04:27:30.904407+00	\N	QR code scan (location denied)
abf9050b-7ce0-4e20-af54-64f7afe4f22f	50a2195f-9ac5-44aa-a975-b79ba6c3dd7c	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-06 21:48:52.499117+00	40.919790, -90.659381	QR code scan with location
d409b664-66de-429a-b0e2-6f4aac017732	8c97474d-a2e8-41dc-acbf-fdffce5a268e	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-26 00:22:21.77917+00	\N	QR code scan (location denied)
de2a8175-b920-4110-8e2f-c7f7fdc217b0	9d7d1413-4e3c-404c-af7b-0f7e27dfaed7	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-31 22:43:10.113358+00	40.919341, -90.659392	QR code scan with location
7e1726ff-d8bc-4893-9f6a-43395d64a6e4	9d7d1413-4e3c-404c-af7b-0f7e27dfaed7	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-31 22:43:16.638101+00	\N	QR code scan (location denied)
\.


--
-- Data for Name: slot_purchases; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.slot_purchases (id, organization_id, purchased_by, slot_type, quantity, unit_price_cents, total_amount_cents, stripe_payment_intent_id, stripe_session_id, billing_period_start, billing_period_end, status, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: stripe_event_logs; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.stripe_event_logs (id, event_id, type, subscription_id, payload, created_at) FROM stdin;
971296d1-1a4c-46b7-a99e-4bac5fa3f442	evt_1S2JKDF7dmK1pWnRI2J35QOa	customer.subscription.updated	sub_1S2JK6F7dmK1pWnR8P7MtHlZ	{"id": "evt_1S2JKDF7dmK1pWnRI2J35QOa", "data": {"object": {"id": "sub_1S2JK6F7dmK1pWnR8P7MtHlZ", "plan": {"id": "price_1RU6PFF7dmK1pWnR83mG7k7N", "meter": null, "active": true, "amount": 1000, "object": "plan", "created": 1748524921, "product": "prod_SOuD4LEc9dqx07", "currency": "usd", "interval": "month", "livemode": true, "metadata": {}, "nickname": null, "tiers_mode": null, "usage_type": "licensed", "amount_decimal": "1000", "billing_scheme": "per_unit", "interval_count": 1, "transform_usage": null, "trial_period_days": null}, "items": {"url": "/v1/subscription_items?subscription=sub_1S2JK6F7dmK1pWnR8P7MtHlZ", "data": [{"id": "si_SyFpypPE4vDbch", "plan": {"id": "price_1RU6PFF7dmK1pWnR83mG7k7N", "meter": null, "active": true, "amount": 1000, "object": "plan", "created": 1748524921, "product": "prod_SOuD4LEc9dqx07", "currency": "usd", "interval": "month", "livemode": true, "metadata": {}, "nickname": null, "tiers_mode": null, "usage_type": "licensed", "amount_decimal": "1000", "billing_scheme": "per_unit", "interval_count": 1, "transform_usage": null, "trial_period_days": null}, "price": {"id": "price_1RU6PFF7dmK1pWnR83mG7k7N", "type": "recurring", "active": true, "object": "price", "created": 1748524921, "product": "prod_SOuD4LEc9dqx07", "currency": "usd", "livemode": true, "metadata": {}, "nickname": null, "recurring": {"meter": null, "interval": "month", "usage_type": "licensed", "interval_count": 1, "trial_period_days": null}, "lookup_key": null, "tiers_mode": null, "unit_amount": 1000, "tax_behavior": "unspecified", "billing_scheme": "per_unit", "custom_unit_amount": null, "transform_quantity": null, "unit_amount_decimal": "1000"}, "object": "subscription_item", "created": 1756677726, "metadata": {}, "quantity": 1, "discounts": [], "tax_rates": [], "subscription": "sub_1S2JK6F7dmK1pWnR8P7MtHlZ", "billing_thresholds": null, "current_period_end": 1759269726, "current_period_start": 1756677726}], "object": "list", "has_more": false, "total_count": 1}, "object": "subscription", "status": "active", "created": 1756677726, "currency": "usd", "customer": "cus_SOuyRG0furDsOm", "ended_at": null, "livemode": true, "metadata": {"user_id": "685efa5e-7519-486e-8643-28cfaf5408a4", "feature_type": "fleet_map", "organization_id": "96061a65-7e91-4ed3-9df1-282ff19a8471"}, "quantity": 1, "schedule": null, "cancel_at": null, "discounts": [], "trial_end": null, "start_date": 1756677726, "test_clock": null, "application": null, "canceled_at": null, "description": null, "trial_start": null, "billing_mode": {"type": "classic"}, "on_behalf_of": null, "automatic_tax": {"enabled": false, "liability": null, "disabled_reason": null}, "transfer_data": null, "days_until_due": null, "default_source": null, "latest_invoice": "in_1S2JK6F7dmK1pWnRFSLWG0iw", "pending_update": null, "trial_settings": {"end_behavior": {"missing_payment_method": "create_invoice"}}, "invoice_settings": {"issuer": {"type": "self"}, "account_tax_ids": null}, "pause_collection": null, "payment_settings": {"payment_method_types": null, "payment_method_options": {"card": {"network": null, "request_three_d_secure": "automatic"}, "konbini": null, "acss_debit": null, "bancontact": null, "sepa_debit": null, "us_bank_account": null, "customer_balance": null}, "save_default_payment_method": "off"}, "collection_method": "charge_automatically", "default_tax_rates": [], "billing_thresholds": null, "billing_cycle_anchor": 1756677726, "cancel_at_period_end": false, "cancellation_details": {"reason": null, "comment": null, "feedback": null}, "pending_setup_intent": null, "default_payment_method": "pm_1S2JK5F7dmK1pWnRe0LfV4eJ", "application_fee_percent": null, "billing_cycle_anchor_config": null, "pending_invoice_item_interval": null, "next_pending_invoice_item_invoice": null}, "previous_attributes": {"status": "incomplete", "default_payment_method": null}}, "type": "customer.subscription.updated", "object": "event", "created": 1756677732, "request": {"id": null, "idempotency_key": "071e8a0e-bbbe-499a-bc0d-7fafb76f46ff"}, "livemode": true, "api_version": "2025-03-31.basil", "pending_webhooks": 1}	2025-08-31 22:02:14.10591+00
986f4c5e-5876-405e-b224-db93be0c1f6f	evt_1S2JKEF7dmK1pWnRrvzUE9WJ	invoice.payment_succeeded	in_1S2JK6F7dmK1pWnRFSLWG0iw	{"id": "evt_1S2JKEF7dmK1pWnRrvzUE9WJ", "data": {"object": {"id": "in_1S2JK6F7dmK1pWnRFSLWG0iw", "lines": {"url": "/v1/invoices/in_1S2JK6F7dmK1pWnRFSLWG0iw/lines", "data": [{"id": "il_1S2JK6F7dmK1pWnR9nkwdJ7Z", "taxes": [], "amount": 1000, "object": "line_item", "parent": {"type": "subscription_item_details", "invoice_item_details": null, "subscription_item_details": {"proration": false, "invoice_item": null, "subscription": "sub_1S2JK6F7dmK1pWnR8P7MtHlZ", "proration_details": {"credited_items": null}, "subscription_item": "si_SyFpypPE4vDbch"}}, "period": {"end": 1759269726, "start": 1756677726}, "invoice": "in_1S2JK6F7dmK1pWnRFSLWG0iw", "pricing": {"type": "price_details", "price_details": {"price": "price_1RU6PFF7dmK1pWnR83mG7k7N", "product": "prod_SOuD4LEc9dqx07"}, "unit_amount_decimal": "1000"}, "currency": "usd", "livemode": true, "metadata": {"user_id": "685efa5e-7519-486e-8643-28cfaf5408a4", "feature_type": "fleet_map", "organization_id": "96061a65-7e91-4ed3-9df1-282ff19a8471"}, "quantity": 1, "discounts": [], "description": "1 feature × Premium Feature - Fleet Map (at $10.00 / month)", "discountable": true, "discount_amounts": [], "pretax_credit_amounts": []}], "object": "list", "has_more": false, "total_count": 1}, "total": 1000, "footer": null, "issuer": {"type": "self"}, "number": "HU5NVSQ3-0003", "object": "invoice", "parent": {"type": "subscription_details", "quote_details": null, "subscription_details": {"metadata": {"user_id": "685efa5e-7519-486e-8643-28cfaf5408a4", "feature_type": "fleet_map", "organization_id": "96061a65-7e91-4ed3-9df1-282ff19a8471"}, "subscription": "sub_1S2JK6F7dmK1pWnR8P7MtHlZ"}}, "status": "paid", "created": 1756677726, "currency": "usd", "customer": "cus_SOuyRG0furDsOm", "due_date": null, "livemode": true, "metadata": {}, "subtotal": 1000, "attempted": true, "discounts": [], "rendering": null, "amount_due": 1000, "period_end": 1756677726, "test_clock": null, "amount_paid": 1000, "application": null, "description": null, "invoice_pdf": "https://pay.stripe.com/invoice/acct_1RFe0kF7dmK1pWnR/live_YWNjdF8xUkZlMGtGN2RtSzFwV25SLF9TeUZwRVBYQVFSTENXWWVDa1hUdDJ3c0FLV25iT29rLDE0NzIxODUzNA0200voWerfU6/pdf?s=ap", "total_taxes": [], "account_name": "EquipQR", "auto_advance": false, "effective_at": 1756677726, "from_invoice": null, "on_behalf_of": null, "period_start": 1756677726, "attempt_count": 1, "automatic_tax": {"status": null, "enabled": false, "provider": null, "liability": null, "disabled_reason": null}, "custom_fields": null, "customer_name": "Viral Organization", "shipping_cost": null, "billing_reason": "subscription_create", "customer_email": "viral.architect@gmail.com", "customer_phone": null, "default_source": null, "ending_balance": 0, "receipt_number": "2915-5816", "account_country": "US", "account_tax_ids": null, "amount_overpaid": 0, "amount_shipping": 0, "latest_revision": null, "amount_remaining": 0, "customer_address": null, "customer_tax_ids": [], "payment_settings": {"default_mandate": null, "payment_method_types": null, "payment_method_options": {"card": {"request_three_d_secure": "automatic"}, "konbini": null, "acss_debit": null, "bancontact": null, "sepa_debit": null, "us_bank_account": null, "customer_balance": null}}, "shipping_details": null, "starting_balance": 0, "collection_method": "charge_automatically", "customer_shipping": null, "default_tax_rates": [], "hosted_invoice_url": "https://invoice.stripe.com/i/acct_1RFe0kF7dmK1pWnR/live_YWNjdF8xUkZlMGtGN2RtSzFwV25SLF9TeUZwRVBYQVFSTENXWWVDa1hUdDJ3c0FLV25iT29rLDE0NzIxODUzNA0200voWerfU6?s=ap", "status_transitions": {"paid_at": 1756677732, "voided_at": null, "finalized_at": 1756677726, "marked_uncollectible_at": null}, "customer_tax_exempt": "none", "total_excluding_tax": 1000, "next_payment_attempt": null, "statement_descriptor": null, "webhooks_delivered_at": 1756677726, "default_payment_method": null, "subtotal_excluding_tax": 1000, "total_discount_amounts": [], "last_finalization_error": null, "automatically_finalizes_at": null, "total_pretax_credit_amounts": [], "pre_payment_credit_notes_amount": 0, "post_payment_credit_notes_amount": 0}}, "type": "invoice.payment_succeeded", "object": "event", "created": 1756677732, "request": {"id": null, "idempotency_key": "071e8a0e-bbbe-499a-bc0d-7fafb76f46ff"}, "livemode": true, "api_version": "2025-03-31.basil", "pending_webhooks": 1}	2025-08-31 22:02:14.717782+00
\.


--
-- Data for Name: subscribers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.subscribers (id, user_id, email, stripe_customer_id, subscribed, subscription_tier, subscription_end, updated_at, created_at) FROM stdin;
6252d4b9-a4cd-49d4-83c2-7219770db5da	1b7e1856-ca69-4eee-8896-f7c1cf81f942	mathiasrex2003@gmail.com	\N	f	\N	\N	2025-07-25 20:44:51.308958+00	2025-07-25 19:42:02.884513+00
a291f78b-c41f-43db-82b3-12d6ac8531c2	da1368a1-9ed1-46ef-a7dc-56bf15ebeee4	nicholas.king@columbiacloudworks.com	cus_SPBaZWobA2avhx	f	\N	\N	2025-08-18 20:57:59.753033+00	2025-08-11 03:31:44.302383+00
b3ed97d1-96ea-4ba5-b1e7-e430e3347dee	ba131ec4-ad65-4d62-8ed5-4610d575b2dc	test.user@columbiacloudworks.com	\N	f	\N	\N	2025-08-19 12:44:57.448+00	2025-08-19 12:44:57.492911+00
ea3421a0-f51d-41ef-ae51-6c0c17d563e3	685efa5e-7519-486e-8643-28cfaf5408a4	viral.architect@gmail.com	cus_SOuyRG0furDsOm	t	Basic	2025-09-21 22:09:26+00	2025-08-31 18:06:08.870714+00	2025-06-25 15:46:13.89+00
cf3e6fdf-ca20-4368-8598-2d0144d09bf5	0d73189e-e714-48e2-8c33-fe8778259064	admin@equipqr.app	cus_ScqchZX5MyOSy8	t	Basic	2025-09-05 21:31:48+00	2025-08-31 22:19:40.539276+00	2025-06-23 06:10:14.559714+00
fc4db5af-d664-4720-a4b2-a0c84abeae9d	5dfc39b8-8037-400a-a7f4-033192d62e44	justinpitera@gmail.com	\N	f	\N	\N	2025-07-25 15:06:03.501+00	2025-07-25 15:06:03.517164+00
70754756-f92f-4a14-a84f-8458d235f97d	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	matt@3aequip.com	\N	f	\N	\N	2025-08-04 02:16:43.844+00	2025-08-04 02:16:43.891791+00
\.


--
-- Data for Name: team_members; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.team_members (id, team_id, user_id, role, joined_date) FROM stdin;
4b0c43ed-70c4-4e4a-a396-71532e6f446a	da907dda-b5c2-4e1a-b923-07f699d8ef4a	0d73189e-e714-48e2-8c33-fe8778259064	manager	2025-07-11 02:33:25.469406+00
44360cfc-d51d-41ce-9582-bd3c26a54569	71d94563-7c58-4d22-b121-88f3c624af17	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	manager	2025-07-19 00:39:40.533327+00
b861bc82-39dd-480a-a749-31ca054e139b	71d94563-7c58-4d22-b121-88f3c624af17	9c2bd213-3ce9-457c-a29e-dfafa277839d	requestor	2025-07-19 13:04:19.76691+00
534bd7a0-c5b8-4684-afbd-9bfc425c1ce5	4b2c45ee-f229-4508-9543-b7df6ddf280f	0d73189e-e714-48e2-8c33-fe8778259064	manager	2025-07-19 17:58:06.836427+00
f78f074d-f9d1-4bb4-8ddb-95f6513af562	4976f2c3-3df9-4984-9aa3-724bfd46cee7	0d73189e-e714-48e2-8c33-fe8778259064	manager	2025-07-19 19:09:45.574139+00
74b40b55-7c74-4391-8f5f-1744735322bc	46331cc1-3b20-4999-98a7-7a9b64249fa5	685efa5e-7519-486e-8643-28cfaf5408a4	manager	2025-07-24 01:57:09.670303+00
68c866db-d8df-4a87-83fe-9ff856ead216	ae85a360-bfc8-4ee6-af37-56e27f5e33b7	1b7e1856-ca69-4eee-8896-f7c1cf81f942	manager	2025-07-25 20:48:16.032421+00
b606d05b-9895-493f-8967-8c5b03d62dfd	83356601-c718-414e-a84c-8b99cc590df3	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	manager	2025-08-04 00:03:46.872441+00
162b6174-8932-45a7-87c9-b47cb51c57fe	46331cc1-3b20-4999-98a7-7a9b64249fa5	0d73189e-e714-48e2-8c33-fe8778259064	manager	2025-08-12 21:41:38.63168+00
20cd25bb-6020-4dfe-9ab3-2fee189673b4	11a22d1e-bd02-4f57-bc4a-2157a688d144	da1368a1-9ed1-46ef-a7dc-56bf15ebeee4	manager	2025-08-19 16:41:39.761577+00
\.


--
-- Data for Name: teams; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.teams (id, organization_id, name, description, created_at, updated_at) FROM stdin;
da907dda-b5c2-4e1a-b923-07f699d8ef4a	dabce056-c0d8-46dd-b173-a3c0084f3133	Jim's Pizzaria	Jim and his family have owned this pizza shop for 3 generations.	2025-07-11 02:33:25.283295+00	2025-07-11 02:33:25.283295+00
71d94563-7c58-4d22-b121-88f3c624af17	5a54dd83-f546-4149-8ff5-d44cbc570217	Texas Wholesale-Dallas	\N	2025-07-19 00:39:40.348179+00	2025-07-19 00:39:40.348179+00
4976f2c3-3df9-4984-9aa3-724bfd46cee7	dabce056-c0d8-46dd-b173-a3c0084f3133	Headquarters	Our main office	2025-07-19 19:09:45.452998+00	2025-07-19 19:09:45.452998+00
ae85a360-bfc8-4ee6-af37-56e27f5e33b7	2542f069-27c9-4833-8fdb-f4b40c8cf291	Henrik	\N	2025-07-25 20:48:15.872697+00	2025-07-25 20:48:15.872697+00
83356601-c718-414e-a84c-8b99cc590df3	5a54dd83-f546-4149-8ff5-d44cbc570217	Woodson Lumber	Woodson lumber \nBrenham location	2025-08-04 00:03:46.611046+00	2025-08-04 00:03:46.611046+00
4b2c45ee-f229-4508-9543-b7df6ddf280f	dabce056-c0d8-46dd-b173-a3c0084f3133	Bonheimer Tooling	1607 Philidelphia Road, Anneheim, IL	2025-07-19 17:58:06.589606+00	2025-08-18 02:41:32.017724+00
46331cc1-3b20-4999-98a7-7a9b64249fa5	96061a65-7e91-4ed3-9df1-282ff19a8471	Office	2701 Greensboro Dr. Columbia, MO	2025-07-24 01:57:09.47989+00	2025-08-18 02:47:25.959145+00
11a22d1e-bd02-4f57-bc4a-2157a688d144	26856ebb-1c28-4422-b8e5-08c62f7bd8ad	Argos Extractors	Our newest customer	2025-08-19 16:41:39.510109+00	2025-08-19 16:41:39.510109+00
\.


--
-- Data for Name: user_license_subscriptions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.user_license_subscriptions (id, organization_id, stripe_subscription_id, stripe_customer_id, stripe_price_id, quantity, status, current_period_start, current_period_end, created_at, updated_at) FROM stdin;
ce7b93d5-065e-4f4f-930f-ec620961c58e	dabce056-c0d8-46dd-b173-a3c0084f3133	sub_1RhavTF7dmK1pWnREp6udd6p	cus_ScqchZX5MyOSy8	price_1RU6PMF7dmK1pWnR58UJKOPh	2	cancelled	2025-07-05 18:35:03+00	2025-08-05 18:35:03+00	2025-07-05 19:36:24.774801+00	2025-07-05 21:29:12.596506+00
27390ec0-f012-4402-9934-1d9193379c23	dabce056-c0d8-46dd-b173-a3c0084f3133	sub_1RhbCGF7dmK1pWnRcvERYFc0	cus_ScqchZX5MyOSy8	price_1RU6PMF7dmK1pWnR58UJKOPh	2	cancelled	2025-07-05 18:52:24+00	2025-08-05 18:52:24+00	2025-07-05 19:53:43.766159+00	2025-07-05 21:29:17.333896+00
f59b34b9-ff88-4129-8f89-6b1cbc518a79	96061a65-7e91-4ed3-9df1-282ff19a8471	sub_1RhaiCF7dmK1pWnRf7ZJaaMW	cus_SOuyRG0furDsOm	price_1RU6PMF7dmK1pWnR58UJKOPh	1	cancelled	2025-07-05 18:21:20+00	2025-08-05 18:21:20+00	2025-07-05 19:22:15.919135+00	2025-07-05 21:30:14.749413+00
8d86d102-d983-44f0-ac95-7787cd6ab1af	dabce056-c0d8-46dd-b173-a3c0084f3133	sub_1RhdgWF7dmK1pWnRnOM4bz0A	cus_ScqchZX5MyOSy8	price_1RU6PMF7dmK1pWnR58UJKOPh	2	active	2025-07-05 21:31:48+00	2025-08-05 21:31:48+00	2025-07-05 21:32:03.711715+00	2025-07-05 21:32:03.711715+00
38bc6d90-c1de-4d86-991d-97aeb116091f	96061a65-7e91-4ed3-9df1-282ff19a8471	sub_1RygfjF7dmK1pWnRTygExnQx	cus_SOuyRG0furDsOm	price_1RU6PMF7dmK1pWnR58UJKOPh	1	active	2025-08-21 22:09:26+00	2025-09-21 22:09:26+00	2025-08-21 22:09:34.941178+00	2025-08-21 22:09:34.941178+00
\.


--
-- Data for Name: webhook_events; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.webhook_events (event_id, processed_at) FROM stdin;
evt_1Rygc3F7dmK1pWnRFvD4p7Cs	2025-08-22 16:54:10.909272+00
evt_1RygcNF7dmK1pWnRWSwMcQPB	2025-08-22 18:52:26.220067+00
evt_1RygcYF7dmK1pWnRGvavdf8c	2025-08-22 18:59:09.898905+00
evt_1S2JKDF7dmK1pWnRe8efovQx	2025-08-31 22:02:13.815751+00
evt_1S2JKDF7dmK1pWnRI2J35QOa	2025-08-31 22:02:13.994015+00
evt_1S2JKEF7dmK1pWnRrvzUE9WJ	2025-08-31 22:02:14.652195+00
\.


--
-- Data for Name: work_order_costs; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.work_order_costs (id, work_order_id, description, quantity, unit_price_cents, created_by, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: work_order_images; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.work_order_images (id, work_order_id, uploaded_by, file_name, file_url, file_size, mime_type, description, created_at, note_id, uploaded_by_name) FROM stdin;
b1677625-8646-4a5b-b2d1-b004debe1319	57dc7336-9606-4758-b1d5-2fe1c6ad4f8d	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	1000017866.jpg	https://ymxkzronkhwxzcdcbnwq.supabase.co/storage/v1/object/public/work-order-images/15d8cd2d-595c-44e2-8cdf-ed7e1028b436/57dc7336-9606-4758-b1d5-2fe1c6ad4f8d/1750879163003.jpg	5817573	image/jpeg	\N	2025-06-25 19:19:35.881296+00	\N	\N
\.


--
-- Data for Name: work_order_notes; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.work_order_notes (id, work_order_id, author_id, content, hours_worked, is_private, created_at, updated_at, author_name) FROM stdin;
678be5d0-3c8d-4392-b5d5-e4f5a8f0759c	70332d67-3e07-49e5-96d7-ca1044338cd4	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	583.0	583.00	f	2025-06-26 16:53:19.309556+00	2025-06-26 16:53:19.309556+00	\N
7d460a99-cebf-4de1-b048-c99f53746a35	07847920-a85c-4d81-b6e4-59ed94519ad1	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	215.6 hours	215.60	f	2025-07-02 16:02:33.37499+00	2025-07-02 16:02:33.37499+00	\N
77df8497-48f9-4f61-a1f5-f7ba4b07aa36	00371911-3e1f-4748-83ba-045eb7e781b6	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	Pm hours 4777	0.00	f	2025-07-10 17:19:24.918336+00	2025-07-10 17:19:24.918336+00	\N
\.


--
-- Data for Name: work_order_status_history; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.work_order_status_history (id, work_order_id, old_status, new_status, changed_by, changed_at, reason, metadata, created_at, is_historical_creation) FROM stdin;
0b10a6fc-4b80-445d-b703-cac379638411	3b9b5bd9-2f26-4d5a-8a7f-88ae3f5ff1b9	assigned	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-11 17:30:07.18952+00	Status updated	{}	2025-07-11 17:30:07.18952+00	f
2fe3b68f-1449-44e0-b71f-06846336b39e	2ac9f215-e400-49af-aef6-9249abf979ff	assigned	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-11 20:06:28.078848+00	Status updated	{}	2025-07-11 20:06:28.078848+00	f
826dabad-25eb-4701-8d55-2f18928d3a46	86e0c3b2-438c-4a3f-8c72-d0b0c6e8ff77	submitted	assigned	9c2bd213-3ce9-457c-a29e-dfafa277839d	2025-07-19 13:16:26.144644+00	Status updated	{}	2025-07-19 13:16:26.144644+00	f
0f224aae-570f-4171-8d2b-ec92d2f96a0c	5b20087c-fd9f-4730-8fe4-c8083a55a395	submitted	cancelled	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:15:40.596631+00	Status updated	{}	2025-08-04 00:15:40.596631+00	f
433f4b32-260e-45f1-a8aa-063abe300bf3	2ac9f215-e400-49af-aef6-9249abf979ff	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:21:33.666922+00	Status updated	{}	2025-08-04 00:21:33.666922+00	f
9fedac15-22a0-4a39-b484-528cbdabb618	07847920-a85c-4d81-b6e4-59ed94519ad1	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:28:00.527978+00	Status updated	{}	2025-08-04 00:28:00.527978+00	f
6d9aeda9-fede-4a9c-bc1a-d88f90faa86b	07847920-a85c-4d81-b6e4-59ed94519ad1	completed	accepted	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:30:08.224271+00	Reverted to accepted status by admin	{"reverted_at": "2025-08-04T00:30:08.224271+00:00", "reverted_from": "completed"}	2025-08-04 00:30:08.224271+00	f
df80bff9-340e-4d54-b2e8-0babeb6e0eab	07847920-a85c-4d81-b6e4-59ed94519ad1	accepted	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:30:56.783914+00	Status updated	{}	2025-08-04 00:30:56.783914+00	f
49c5e05e-609e-47c9-8118-634d7fd08e5b	07847920-a85c-4d81-b6e4-59ed94519ad1	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:30:58.447004+00	Status updated	{}	2025-08-04 00:30:58.447004+00	f
16dfa821-64fa-4b06-995c-1aa2478b0d33	70332d67-3e07-49e5-96d7-ca1044338cd4	on_hold	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:31:40.703114+00	Status updated	{}	2025-08-04 00:31:40.703114+00	f
a5f9ea74-a687-467b-bcdf-1ad43ec4914c	70332d67-3e07-49e5-96d7-ca1044338cd4	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:31:42.057515+00	Status updated	{}	2025-08-04 00:31:42.057515+00	f
6c4303fc-f8a3-4d3e-92bd-1c0edac88969	57dc7336-9606-4758-b1d5-2fe1c6ad4f8d	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:31:53.495265+00	Status updated	{}	2025-08-04 00:31:53.495265+00	f
662e26cf-4bfa-446c-ab93-352f2d500827	3b9b5bd9-2f26-4d5a-8a7f-88ae3f5ff1b9	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:39:51.479073+00	Status updated	{}	2025-08-04 00:39:51.479073+00	f
0e82eaa6-26de-4807-950c-962fc6e4803a	00371911-3e1f-4748-83ba-045eb7e781b6	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:41:16.390191+00	Status updated	{}	2025-08-04 00:41:16.390191+00	f
15745606-c771-402c-8a8d-3c85417531ba	00371911-3e1f-4748-83ba-045eb7e781b6	completed	accepted	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:44:30.384027+00	Reverted to accepted status by admin	{"reverted_at": "2025-08-04T00:44:30.384027+00:00", "reverted_from": "completed"}	2025-08-04 00:44:30.384027+00	f
baefdf65-abf3-4aa8-95f1-7b03496e3d2b	00371911-3e1f-4748-83ba-045eb7e781b6	accepted	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:44:32.757795+00	Status updated	{}	2025-08-04 00:44:32.757795+00	f
2d303e70-f787-4d7c-87ca-c57f8e551b75	00371911-3e1f-4748-83ba-045eb7e781b6	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:45:00.914237+00	Status updated	{}	2025-08-04 00:45:00.914237+00	f
43711acd-5aba-4ca0-957d-6fdfc80b752d	77faa43b-33ab-428d-a52f-3775c04f82d5	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:46:08.766466+00	Status updated	{}	2025-08-04 00:46:08.766466+00	f
659c12cd-9472-4c56-85ed-dbff905e0a55	2ac9f215-e400-49af-aef6-9249abf979ff	completed	accepted	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:47:41.175574+00	Reverted to accepted status by admin	{"reverted_at": "2025-08-04T00:47:41.175574+00:00", "reverted_from": "completed"}	2025-08-04 00:47:41.175574+00	f
6bc5d678-7a71-451f-971f-eb220a966f31	2ac9f215-e400-49af-aef6-9249abf979ff	accepted	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:48:04.124089+00	Status updated	{}	2025-08-04 00:48:04.124089+00	f
c919611d-cb14-4121-b856-00cc0524a687	2ac9f215-e400-49af-aef6-9249abf979ff	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:48:05.281584+00	Status updated	{}	2025-08-04 00:48:05.281584+00	f
d776c64d-2acf-4224-bbbb-4ad2c78ef2df	3b9b5bd9-2f26-4d5a-8a7f-88ae3f5ff1b9	completed	accepted	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:48:19.877722+00	Reverted to accepted status by admin	{"reverted_at": "2025-08-04T00:48:19.877722+00:00", "reverted_from": "completed"}	2025-08-04 00:48:19.877722+00	f
af90ddd7-41fd-44d8-beba-1d36b72cb8a2	77faa43b-33ab-428d-a52f-3775c04f82d5	completed	accepted	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:48:54.351435+00	Reverted to accepted status by admin	{"reverted_at": "2025-08-04T00:48:54.351435+00:00", "reverted_from": "completed"}	2025-08-04 00:48:54.351435+00	f
fb020ddc-d02d-49bd-82e8-e4c27a8b1092	77faa43b-33ab-428d-a52f-3775c04f82d5	accepted	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:49:19.767118+00	Status updated	{}	2025-08-04 00:49:19.767118+00	f
a5ac9fbd-b676-4cbe-a2ea-cefde5d6d3dc	77faa43b-33ab-428d-a52f-3775c04f82d5	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:49:20.865837+00	Status updated	{}	2025-08-04 00:49:20.865837+00	f
f7a8e04f-7e44-4c6a-996c-a26eac6b37ad	3b9b5bd9-2f26-4d5a-8a7f-88ae3f5ff1b9	accepted	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:49:29.689213+00	Status updated	{}	2025-08-04 00:49:29.689213+00	f
5dd25f1b-de3d-422e-b91c-2cd66390b168	00371911-3e1f-4748-83ba-045eb7e781b6	completed	accepted	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:49:43.094154+00	Reverted to accepted status by admin	{"reverted_at": "2025-08-04T00:49:43.094154+00:00", "reverted_from": "completed"}	2025-08-04 00:49:43.094154+00	f
0adc1631-b752-48a2-be96-c2abf584c657	00371911-3e1f-4748-83ba-045eb7e781b6	accepted	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:50:05.105494+00	Status updated	{}	2025-08-04 00:50:05.105494+00	f
a529f5e5-6ff4-4503-a730-1482fdeae063	00371911-3e1f-4748-83ba-045eb7e781b6	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:50:06.132533+00	Status updated	{}	2025-08-04 00:50:06.132533+00	f
ba3db57e-bca1-4936-abaa-8c6bafd67926	b8928921-ceb8-40dd-9c83-d6b16d20fbb2	completed	accepted	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:50:42.300747+00	Reverted to accepted status by admin	{"reverted_at": "2025-08-04T00:50:42.300747+00:00", "reverted_from": "completed"}	2025-08-04 00:50:42.300747+00	f
1def40e8-a19f-4a48-822e-fb88b187d22b	b8928921-ceb8-40dd-9c83-d6b16d20fbb2	accepted	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:50:46.553243+00	Status updated	{}	2025-08-04 00:50:46.553243+00	f
1abb3c2e-ba59-4b71-bf24-17bb5158f4f1	07847920-a85c-4d81-b6e4-59ed94519ad1	completed	accepted	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:51:06.394182+00	Reverted to accepted status by admin	{"reverted_at": "2025-08-04T00:51:06.394182+00:00", "reverted_from": "completed"}	2025-08-04 00:51:06.394182+00	f
0ec226c8-07be-4a42-8271-c7857c0b1958	07847920-a85c-4d81-b6e4-59ed94519ad1	accepted	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:52:04.001466+00	Status updated	{}	2025-08-04 00:52:04.001466+00	f
41915e98-40a5-4a3f-a47d-27bbd768079a	70332d67-3e07-49e5-96d7-ca1044338cd4	completed	accepted	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:53:13.518439+00	Reverted to accepted status by admin	{"reverted_at": "2025-08-04T00:53:13.518439+00:00", "reverted_from": "completed"}	2025-08-04 00:53:13.518439+00	f
f03ec124-4276-455b-a3c8-0b80761522a9	70332d67-3e07-49e5-96d7-ca1044338cd4	accepted	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:53:26.802793+00	Status updated	{}	2025-08-04 00:53:26.802793+00	f
e032c44c-4e22-43d4-b9f0-6a025c6161ba	5eeaf171-826c-4417-b615-62839b44eec9	submitted	accepted	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:56:54.121845+00	Status updated	{}	2025-08-04 00:56:54.121845+00	f
92476bc5-ab70-47ee-84bc-8dc319192945	5eeaf171-826c-4417-b615-62839b44eec9	accepted	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 01:05:19.615295+00	Status updated	{}	2025-08-04 01:05:19.615295+00	f
7e6236b0-d516-4aab-bdb8-39da0be9aee8	5eeaf171-826c-4417-b615-62839b44eec9	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 01:05:20.817983+00	Status updated	{}	2025-08-04 01:05:20.817983+00	f
68b21974-027f-4318-9203-1ff4701d6592	2c8b84bd-96d3-43a1-86bf-4833de25fd7a	submitted	accepted	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 01:07:03.217079+00	Status updated	{}	2025-08-04 01:07:03.217079+00	f
dbd0d71d-0b0b-4f02-b3e2-9e24e401d80b	2c8b84bd-96d3-43a1-86bf-4833de25fd7a	accepted	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 01:15:40.126917+00	Status updated	{}	2025-08-04 01:15:40.126917+00	f
6039ff0f-f6b3-475d-945b-d3c5ed34bdf8	2c8b84bd-96d3-43a1-86bf-4833de25fd7a	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 01:15:41.54809+00	Status updated	{}	2025-08-04 01:15:41.54809+00	f
cdd2faab-3391-497c-99b9-2328a6f97f52	da395499-e163-4a6b-9590-edeb430c8ccc	\N	accepted	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 03:07:54.653093+00	Historical work order created	{"pm_id": "05234038-4973-4ee4-a316-b2fbafc1e0e8", "has_pm": true, "historical_start_date": "2025-03-01T14:00:00+00:00"}	2025-08-04 03:07:54.653093+00	t
29bf5ee9-d66c-4112-9ef9-e5a5bf2ac65f	572c6b8f-c66f-4ee3-b76d-461df2d88dec	\N	accepted	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 03:35:21.957108+00	Historical work order created	{"pm_id": "e22484e0-cf88-49f1-9087-f12327d506e2", "has_pm": true, "historical_start_date": "2025-03-03T14:00:00+00:00"}	2025-08-04 03:35:21.957108+00	t
bb0e6fbd-0365-4206-ad3c-dd2741ca11ce	041fe368-4670-46ee-9f10-d0be4ad935ec	\N	accepted	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 03:51:44.074921+00	Historical work order created	{"pm_id": "57330e39-c55a-4b0a-bafb-c22faa286741", "has_pm": true, "historical_start_date": "2025-03-03T14:00:00+00:00"}	2025-08-04 03:51:44.074921+00	t
ad16eddf-bcc5-4903-8b0f-a1f62431f7cf	921872b2-94ff-4960-8ec3-037f8903dcf7	\N	accepted	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 04:25:45.59015+00	Historical work order created	{"pm_id": "e2456f76-1cb8-4c6f-aa2d-274c9e879897", "has_pm": true, "historical_start_date": "2025-03-03T14:00:00+00:00"}	2025-08-04 04:25:45.59015+00	t
d5f22638-0575-435c-9247-839603a64fef	708d08ba-112a-42ec-8884-0c8479528aa1	\N	accepted	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 04:35:01.910816+00	Historical work order created	{"pm_id": "56bd119d-af24-4a10-9e1a-bb1ccfe6fb3e", "has_pm": true, "historical_start_date": "2025-03-03T14:00:00+00:00"}	2025-08-04 04:35:01.910816+00	t
e37b4c74-f50b-4414-9e17-131e74b55cf8	5eeaf171-826c-4417-b615-62839b44eec9	completed	accepted	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 04:38:10.615208+00	Reverted to accepted status by admin	{"reverted_at": "2025-08-04T04:38:10.615208+00:00", "reverted_from": "completed"}	2025-08-04 04:38:10.615208+00	f
bb9bbb7e-66e2-4f67-bbe7-def64e2c81d7	00371911-3e1f-4748-83ba-045eb7e781b6	completed	accepted	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 04:43:22.681523+00	Reverted to accepted status by admin	{"reverted_at": "2025-08-04T04:43:22.681523+00:00", "reverted_from": "completed"}	2025-08-04 04:43:22.681523+00	f
97f4213c-0ba8-4f92-bfa2-31ac36f4d17a	00371911-3e1f-4748-83ba-045eb7e781b6	accepted	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 04:43:33.21544+00	Status updated	{}	2025-08-04 04:43:33.21544+00	f
17c31eaf-41b9-4fdc-be16-45dffdb166ec	00371911-3e1f-4748-83ba-045eb7e781b6	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 04:43:34.427924+00	Status updated	{}	2025-08-04 04:43:34.427924+00	f
16dc43d6-8d4d-442a-bcaf-d7ec41597355	242ff153-c79d-4b58-b87c-330082b03b72	\N	accepted	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 04:51:23.815187+00	Historical work order created	{"pm_id": "d610c855-4955-4f9c-a8dc-5d3a405f8fb1", "has_pm": true, "historical_start_date": "2025-03-03T14:00:00+00:00"}	2025-08-04 04:51:23.815187+00	t
31d27dbd-35dd-4f11-90dd-d1cb7410ff55	97b8275a-d4e7-4794-8a3c-35959e8865ce	\N	accepted	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 05:03:52.595586+00	Historical work order created	{"pm_id": "0230b656-5cf2-4567-b1cf-61275a2beb0f", "has_pm": true, "historical_start_date": "2025-03-03T14:00:00+00:00"}	2025-08-04 05:03:52.595586+00	t
d82055d0-91e1-46c3-9a6b-8da4e6a04d66	f52f8e12-d761-4c1d-a5ff-d188b3f9c35b	\N	accepted	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 05:15:08.267206+00	Historical work order created	{"pm_id": "6c2fde12-d234-4716-940d-7013bdcf9e33", "has_pm": true, "historical_start_date": "2025-03-03T14:00:00+00:00"}	2025-08-04 05:15:08.267206+00	t
49d971a2-10f9-414d-b556-175016cad02c	07847920-a85c-4d81-b6e4-59ed94519ad1	in_progress	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 05:22:57.072812+00	Status updated	{}	2025-08-04 05:22:57.072812+00	f
41616fbc-0852-4ce3-8a5c-c90b2c398e3f	56ec4012-a8bb-4580-baa1-fa69eb8394aa	submitted	assigned	0d73189e-e714-48e2-8c33-fe8778259064	2025-08-05 02:55:26.421871+00	Status updated	{}	2025-08-05 02:55:26.421871+00	f
d845e5ec-c540-490b-88d5-b226d9423652	56ec4012-a8bb-4580-baa1-fa69eb8394aa	assigned	in_progress	0d73189e-e714-48e2-8c33-fe8778259064	2025-08-05 15:36:37.66119+00	Status updated	{}	2025-08-05 15:36:37.66119+00	f
a82b305d-68ae-4062-9ab3-febefebc7b3e	56ec4012-a8bb-4580-baa1-fa69eb8394aa	in_progress	on_hold	0d73189e-e714-48e2-8c33-fe8778259064	2025-08-05 15:36:41.749592+00	Status updated	{}	2025-08-05 15:36:41.749592+00	f
aae5d84b-c71d-4995-a2c9-bbd0141d1254	56ec4012-a8bb-4580-baa1-fa69eb8394aa	on_hold	in_progress	0d73189e-e714-48e2-8c33-fe8778259064	2025-08-05 15:36:43.637103+00	Status updated	{}	2025-08-05 15:36:43.637103+00	f
c7140d04-2270-4d99-a8b4-1b8749c7cece	56ec4012-a8bb-4580-baa1-fa69eb8394aa	in_progress	completed	0d73189e-e714-48e2-8c33-fe8778259064	2025-08-05 15:36:47.741544+00	Status updated	{}	2025-08-05 15:36:47.741544+00	f
393202b7-ae2e-4bc2-8d2a-0d5f621e9ada	35924521-e2f8-4393-bea7-e1bcbda9d829	assigned	in_progress	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-06 01:45:40.60926+00	Status updated	{}	2025-08-06 01:45:40.60926+00	f
6f35d39e-2b0d-474c-888c-a708efeeb5a6	35924521-e2f8-4393-bea7-e1bcbda9d829	in_progress	submitted	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-06 04:10:30.229014+00	Status updated	{}	2025-08-06 04:10:30.229014+00	f
3c8d3252-178c-42b1-a398-b8859df8b877	35924521-e2f8-4393-bea7-e1bcbda9d829	submitted	assigned	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-07 01:12:21.866957+00	Status updated	{}	2025-08-07 01:12:21.866957+00	f
d61d2046-68f5-4aa3-ba37-08dec5bd0e18	0a57b392-1f85-4555-8498-3ddc28f5e8f0	submitted	assigned	0d73189e-e714-48e2-8c33-fe8778259064	2025-08-07 04:36:23.566618+00	Status updated	{}	2025-08-07 04:36:23.566618+00	f
d3fb1a8c-e905-4926-b48a-19ca18602236	b599ff6e-e91b-4267-a7a9-ae54b6d27f99	submitted	assigned	0d73189e-e714-48e2-8c33-fe8778259064	2025-08-07 04:36:42.131639+00	Status updated	{}	2025-08-07 04:36:42.131639+00	f
bc9f8ed2-5ae1-4c44-bbc3-ec5dc22cef5a	35924521-e2f8-4393-bea7-e1bcbda9d829	assigned	in_progress	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-10 09:25:20.679928+00	Status updated	{}	2025-08-10 09:25:20.679928+00	f
d9901d95-e205-4048-8e5b-14a6b6b563bf	0c163b55-8804-459c-abae-24c09ee8dfd8	submitted	assigned	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-18 02:30:03.100065+00	Status updated	{}	2025-08-18 02:30:03.100065+00	f
f24e173f-c318-41d2-8b7e-198b74a685b1	0c163b55-8804-459c-abae-24c09ee8dfd8	assigned	in_progress	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-18 02:30:20.559938+00	Status updated	{}	2025-08-18 02:30:20.559938+00	f
5139c70e-2a16-41a8-8803-4fa2a1367c1b	0c163b55-8804-459c-abae-24c09ee8dfd8	in_progress	completed	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-18 02:30:29.363768+00	Status updated	{}	2025-08-18 02:30:29.363768+00	f
\.


--
-- Data for Name: work_orders; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.work_orders (id, organization_id, equipment_id, title, description, priority, status, assignee_id, created_by, created_date, due_date, estimated_hours, completed_date, updated_at, acceptance_date, has_pm, pm_required, created_by_name, assignee_name, is_historical, historical_start_date, historical_notes, created_by_admin, team_id) FROM stdin;
35924521-e2f8-4393-bea7-e1bcbda9d829	96061a65-7e91-4ed3-9df1-282ff19a8471	bf45799e-5f1d-4797-881d-a9fd9e367f29	CCW-RITM3009475 (Has PM)	CCW-RITM3009475 (Has PM)	medium	in_progress	685efa5e-7519-486e-8643-28cfaf5408a4	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-06 01:35:45.78663+00	\N	\N	\N	2025-08-10 23:38:59.10693+00	2025-08-07 01:12:21.431+00	t	t	Viral Architect	Viral Architect	f	\N	\N	\N	\N
56ec4012-a8bb-4580-baa1-fa69eb8394aa	dabce056-c0d8-46dd-b173-a3c0084f3133	e3c4f41f-024b-4ad1-8fe7-8ecd56e97618	CCW-RITM3009472	Loader hydraulics leaking. Fix leak.  My front-end loader’s losing fluid, needs repair.	medium	completed	685efa5e-7519-486e-8643-28cfaf5408a4	0d73189e-e714-48e2-8c33-fe8778259064	2025-08-05 02:55:17.133306+00	\N	\N	2025-08-05 15:36:46.376+00	2025-08-10 23:38:59.10693+00	2025-08-05 02:55:25.401+00	f	f	\N	Viral Architect	f	\N	\N	\N	\N
0c163b55-8804-459c-abae-24c09ee8dfd8	96061a65-7e91-4ed3-9df1-282ff19a8471	8c97474d-a2e8-41dc-acbf-fdffce5a268e	2024-08 PM	Work was completed in Auguest 2024	medium	completed	685efa5e-7519-486e-8643-28cfaf5408a4	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-18 02:29:04.821661+00	\N	\N	2025-08-18 02:30:29.072+00	2025-08-18 02:30:29.363768+00	2025-08-18 02:30:02.794+00	t	t	\N	\N	f	\N	\N	\N	\N
57dc7336-9606-4758-b1d5-2fe1c6ad4f8d	5a54dd83-f546-4149-8ff5-d44cbc570217	c9a7d194-5608-4117-a1eb-a6408fa89e39	Nlah	Pm 	medium	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-06-25 19:15:45.486527+00	\N	\N	2025-08-04 00:31:57.172+00	2025-08-04 00:31:56.992948+00	2025-06-25 19:15:54.101+00	t	t	\N	\N	f	\N	\N	\N	\N
b8928921-ceb8-40dd-9c83-d6b16d20fbb2	5a54dd83-f546-4149-8ff5-d44cbc570217	e1064edd-c3ae-492f-9ff1-91d8abfffb47	Pm service 	Pm service for 7-1-25 Woodson pb50 5207	medium	in_progress	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-02 15:54:23.735825+00	2025-07-07 00:00:00+00	\N	\N	2025-08-04 00:50:46.553243+00	2025-07-02 15:54:48.196+00	t	t	\N	\N	f	\N	\N	\N	\N
2ac9f215-e400-49af-aef6-9249abf979ff	5a54dd83-f546-4149-8ff5-d44cbc570217	18a81643-0fce-4b42-8d47-917768e7a097	Pm service for Doosan 2515 woodson 	Pm service for Doosan 2515 woodson brenham 	medium	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-11 20:06:13.627927+00	\N	\N	2025-08-04 00:48:05.504+00	2025-08-04 00:48:05.281584+00	2025-07-11 20:06:12.875+00	t	t	\N	\N	f	\N	\N	\N	\N
b599ff6e-e91b-4267-a7a9-ae54b6d27f99	dabce056-c0d8-46dd-b173-a3c0084f3133	23a3a405-afe5-45ed-99c1-c61a091c5cd7	CCW-RITM3009451	Baler twine not tying properly. Check mechanism.\n\nHay bales aren’t forming right, pointing to the tying system.	medium	assigned	0d73189e-e714-48e2-8c33-fe8778259064	0d73189e-e714-48e2-8c33-fe8778259064	2025-08-05 02:47:39.882634+00	\N	\N	\N	2025-08-07 04:36:42.131639+00	2025-08-07 04:36:41.616+00	f	f	\N	\N	f	\N	\N	\N	\N
77faa43b-33ab-428d-a52f-3775c04f82d5	5a54dd83-f546-4149-8ff5-d44cbc570217	211c9a38-b65b-4043-a96e-58460799b21a	Woodson 2515 Doosan pm	Pm service for woodson 2514 brenham texas. 	medium	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-10 18:18:16.447244+00	\N	\N	2025-08-04 00:49:21.092+00	2025-08-04 00:49:20.865837+00	2025-07-10 18:18:15.994+00	t	t	\N	\N	f	\N	\N	\N	\N
3b9b5bd9-2f26-4d5a-8a7f-88ae3f5ff1b9	5a54dd83-f546-4149-8ff5-d44cbc570217	bf8dea0a-eeff-417d-8af9-097865692fca	Pm service 7-10-25	Pm service for woodson brenham pb50 3604.	medium	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-11 17:29:54.245582+00	2025-07-11 00:00:00+00	3	2025-08-04 00:49:30.862+00	2025-08-04 00:49:30.659922+00	2025-07-11 17:29:53.6+00	t	t	\N	\N	f	\N	\N	\N	\N
70332d67-3e07-49e5-96d7-ca1044338cd4	5a54dd83-f546-4149-8ff5-d44cbc570217	824b97ef-a58a-4415-8d24-1e4935e3fdc7	Pm for 6-26-25	Pm service	medium	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-06-26 16:47:44.309398+00	\N	\N	2025-08-04 00:53:28.053+00	2025-08-04 00:53:27.798528+00	2025-06-26 16:48:01.588+00	t	t	\N	\N	f	\N	\N	\N	\N
da395499-e163-4a6b-9590-edeb430c8ccc	5a54dd83-f546-4149-8ff5-d44cbc570217	18a81643-0fce-4b42-8d47-917768e7a097	Pm for Doosan 2515	Historical entry for Doosan 2515 pm	medium	accepted	\N	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-03-01 14:00:00+00	\N	\N	\N	2025-08-04 03:07:54.653093+00	\N	t	f	\N	\N	t	2025-03-01 14:00:00+00	Digital record of previous pm	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	\N
00371911-3e1f-4748-83ba-045eb7e781b6	5a54dd83-f546-4149-8ff5-d44cbc570217	989dba12-f0f4-4f58-9ba0-48ca5fa95f55	Woodson 2105 pm	Pm service for Doosan 2105 woodson	medium	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-10 16:53:50.415245+00	2025-07-10 00:00:00+00	2	2025-08-04 04:43:34.655+00	2025-08-04 04:43:34.427924+00	2025-07-10 16:53:49.897+00	t	t	\N	\N	f	\N	\N	\N	\N
07847920-a85c-4d81-b6e4-59ed94519ad1	5a54dd83-f546-4149-8ff5-d44cbc570217	e1064edd-c3ae-492f-9ff1-91d8abfffb47	Woodson pb 5207 pm 	7-1-25 pm for woodson 5307	medium	completed	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-02 15:57:30.236329+00	\N	\N	2025-08-04 05:22:57.232+00	2025-08-04 05:22:57.072812+00	2025-07-02 15:57:58.776+00	t	t	\N	\N	f	\N	\N	\N	\N
86e0c3b2-438c-4a3f-8c72-d0b0c6e8ff77	5a54dd83-f546-4149-8ff5-d44cbc570217	9faf4856-4365-4590-9988-1f0fffdeb3ac	Testing platform	Cable broken 	medium	assigned	9c2bd213-3ce9-457c-a29e-dfafa277839d	9c2bd213-3ce9-457c-a29e-dfafa277839d	2025-07-19 13:06:09.55154+00	\N	\N	\N	2025-07-19 13:16:26.144644+00	2025-07-19 13:16:25.564+00	f	f	\N	\N	f	\N	\N	\N	\N
5b20087c-fd9f-4730-8fe4-c8083a55a395	5a54dd83-f546-4149-8ff5-d44cbc570217	1190ca62-f001-47d9-8226-df81469efbaf	Test	Testing platform	medium	cancelled	\N	9c2bd213-3ce9-457c-a29e-dfafa277839d	2025-07-19 13:47:03.411855+00	\N	\N	\N	2025-08-04 00:15:40.596631+00	\N	f	f	\N	\N	f	\N	\N	\N	\N
2c8b84bd-96d3-43a1-86bf-4833de25fd7a	5a54dd83-f546-4149-8ff5-d44cbc570217	80998051-cb1d-47b2-96c5-2e59b10ca643	Woodson clark 0965	Preventive maintenance for Clark 0965 woodson lumber brenham texas.	medium	completed	\N	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 01:06:54.037055+00	\N	\N	2025-08-04 01:15:41.782+00	2025-08-04 01:15:41.54809+00	2025-08-04 01:07:03.354+00	t	t	\N	\N	f	\N	\N	\N	\N
572c6b8f-c66f-4ee3-b76d-461df2d88dec	5a54dd83-f546-4149-8ff5-d44cbc570217	e1064edd-c3ae-492f-9ff1-91d8abfffb47	Princton 5207 3/25 pm	Historical record for woodson lumber 5207 Princeton 	medium	accepted	\N	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-03-03 14:00:00+00	\N	\N	\N	2025-08-04 03:35:21.957108+00	\N	t	f	\N	\N	t	2025-03-03 14:00:00+00	Historical pm record for princton 5207 eoodson lumber brenham	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	\N
041fe368-4670-46ee-9f10-d0be4ad935ec	5a54dd83-f546-4149-8ff5-d44cbc570217	bf8dea0a-eeff-417d-8af9-097865692fca	Princeton 3604 pm 3/25	Historical pm record for woodson lumber Princeton 3604 woodson lumber brenham texas	medium	accepted	\N	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-03-03 14:00:00+00	\N	\N	\N	2025-08-04 03:51:44.074921+00	\N	t	f	\N	\N	t	2025-03-03 14:00:00+00	Historical pm record for Princeton 3604 woodson lumber brenham texas 	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	\N
921872b2-94ff-4960-8ec3-037f8903dcf7	5a54dd83-f546-4149-8ff5-d44cbc570217	989dba12-f0f4-4f58-9ba0-48ca5fa95f55	Doosan 2105 pm historical woodson lumber	Historical pm record for Doosan 2105 woodson lumber brenham texas 	medium	accepted	\N	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-03-03 14:00:00+00	\N	\N	\N	2025-08-04 04:25:45.59015+00	\N	t	f	\N	\N	t	2025-03-03 14:00:00+00	Historical pm record for Doosan 2105 woodson lumber brenham texas 	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	\N
708d08ba-112a-42ec-8884-0c8479528aa1	5a54dd83-f546-4149-8ff5-d44cbc570217	211c9a38-b65b-4043-a96e-58460799b21a	Doosan 2514 pm Woodson historical 	Historical pm record for Doosan 2514 woodson lumber brenham texas 	medium	accepted	\N	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-03-03 14:00:00+00	\N	\N	\N	2025-08-04 04:35:01.910816+00	\N	t	f	\N	\N	t	2025-03-03 14:00:00+00	Historical pm record Doosan 2514 woodson lumber brenham texas 	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	\N
5eeaf171-826c-4417-b615-62839b44eec9	5a54dd83-f546-4149-8ff5-d44cbc570217	68d57a2e-a54a-41e8-b4d7-51d880392b5b	Clark 0879 pm	Preventive maintenance for Clark 0879 woodson lumber brenham	medium	accepted	\N	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-04 00:56:43.055617+00	\N	\N	\N	2025-08-04 04:38:10.615208+00	2025-08-04 00:56:54.184+00	t	t	\N	\N	f	\N	\N	\N	\N
242ff153-c79d-4b58-b87c-330082b03b72	5a54dd83-f546-4149-8ff5-d44cbc570217	80998051-cb1d-47b2-96c5-2e59b10ca643	Clark 0965 pm historical woodson lumber	Woodson lumber historical pm Clark 0965 brenham texas 	medium	accepted	\N	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-03-03 14:00:00+00	\N	\N	\N	2025-08-04 04:51:23.815187+00	\N	t	f	\N	\N	t	2025-03-03 14:00:00+00	Historical pm record Clark 0965 woodson lumber brenham texas 	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	\N
97b8275a-d4e7-4794-8a3c-35959e8865ce	5a54dd83-f546-4149-8ff5-d44cbc570217	68d57a2e-a54a-41e8-b4d7-51d880392b5b	Clark 0879 pm historical woodson	Historical pm record for Clark 0879 woodson lumber brenham texas 	medium	accepted	\N	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-03-03 14:00:00+00	\N	\N	\N	2025-08-04 05:03:52.595586+00	\N	t	f	\N	\N	t	2025-03-03 14:00:00+00	Historical pm record for Clark 0879 woodson lumber brenham texas 	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	\N
f52f8e12-d761-4c1d-a5ff-d188b3f9c35b	5a54dd83-f546-4149-8ff5-d44cbc570217	67f7cfcb-c48a-4540-85be-a4296c317bce	Clark 0813 pm woodson historical 	Historical pm for Clark 0813 woodson lumber brenham texas 	medium	accepted	\N	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-03-03 14:00:00+00	\N	\N	\N	2025-08-04 05:15:08.267206+00	\N	t	f	\N	\N	t	2025-03-03 14:00:00+00	Historical pm for Clark 0813 woodson lumber brenham texas 	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	\N
0a57b392-1f85-4555-8498-3ddc28f5e8f0	dabce056-c0d8-46dd-b173-a3c0084f3133	50a2195f-9ac5-44aa-a975-b79ba6c3dd7c	CCW-RITM3009433	Plow blade dull. Sharpen or replace?\n\nA blunt plow blade needs attention, leaving the fix open-ended.	medium	assigned	0d73189e-e714-48e2-8c33-fe8778259064	0d73189e-e714-48e2-8c33-fe8778259064	2025-08-05 02:47:18.906424+00	\N	\N	\N	2025-08-07 04:36:23.566618+00	2025-08-07 04:36:23.075+00	f	f	\N	\N	f	\N	\N	\N	\N
\.


--
-- Data for Name: messages_2025_07_17; Type: TABLE DATA; Schema: realtime; Owner: supabase_admin
--

COPY realtime.messages_2025_07_17 (topic, extension, payload, event, private, updated_at, inserted_at, id) FROM stdin;
\.


--
-- Data for Name: messages_2025_07_18; Type: TABLE DATA; Schema: realtime; Owner: supabase_admin
--

COPY realtime.messages_2025_07_18 (topic, extension, payload, event, private, updated_at, inserted_at, id) FROM stdin;
\.


--
-- Data for Name: messages_2025_07_19; Type: TABLE DATA; Schema: realtime; Owner: supabase_admin
--

COPY realtime.messages_2025_07_19 (topic, extension, payload, event, private, updated_at, inserted_at, id) FROM stdin;
\.


--
-- Data for Name: messages_2025_07_20; Type: TABLE DATA; Schema: realtime; Owner: supabase_admin
--

COPY realtime.messages_2025_07_20 (topic, extension, payload, event, private, updated_at, inserted_at, id) FROM stdin;
\.


--
-- Data for Name: messages_2025_07_21; Type: TABLE DATA; Schema: realtime; Owner: supabase_admin
--

COPY realtime.messages_2025_07_21 (topic, extension, payload, event, private, updated_at, inserted_at, id) FROM stdin;
\.


--
-- Data for Name: schema_migrations; Type: TABLE DATA; Schema: realtime; Owner: supabase_admin
--

COPY realtime.schema_migrations (version, inserted_at) FROM stdin;
20211116024918	2025-06-16 23:08:19
20211116045059	2025-06-16 23:08:19
20211116050929	2025-06-16 23:08:19
20211116051442	2025-06-16 23:08:19
20211116212300	2025-06-16 23:08:19
20211116213355	2025-06-16 23:08:19
20211116213934	2025-06-16 23:08:19
20211116214523	2025-06-16 23:08:19
20211122062447	2025-06-16 23:08:19
20211124070109	2025-06-16 23:08:19
20211202204204	2025-06-16 23:08:19
20211202204605	2025-06-16 23:08:19
20211210212804	2025-06-16 23:08:19
20211228014915	2025-06-16 23:08:19
20220107221237	2025-06-16 23:08:19
20220228202821	2025-06-16 23:08:19
20220312004840	2025-06-16 23:08:19
20220603231003	2025-06-16 23:08:19
20220603232444	2025-06-16 23:08:19
20220615214548	2025-06-16 23:08:19
20220712093339	2025-06-16 23:08:19
20220908172859	2025-06-16 23:08:19
20220916233421	2025-06-16 23:08:19
20230119133233	2025-06-16 23:08:19
20230128025114	2025-06-16 23:08:19
20230128025212	2025-06-16 23:08:19
20230227211149	2025-06-16 23:08:19
20230228184745	2025-06-16 23:08:19
20230308225145	2025-06-16 23:08:19
20230328144023	2025-06-16 23:08:19
20231018144023	2025-06-16 23:08:20
20231204144023	2025-06-16 23:08:20
20231204144024	2025-06-16 23:08:20
20231204144025	2025-06-16 23:08:20
20240108234812	2025-06-16 23:08:20
20240109165339	2025-06-16 23:08:20
20240227174441	2025-06-16 23:08:20
20240311171622	2025-06-16 23:08:20
20240321100241	2025-06-16 23:08:20
20240401105812	2025-06-16 23:08:20
20240418121054	2025-06-16 23:08:20
20240523004032	2025-06-16 23:08:20
20240618124746	2025-06-16 23:08:20
20240801235015	2025-06-16 23:08:20
20240805133720	2025-06-16 23:08:20
20240827160934	2025-06-16 23:08:20
20240919163303	2025-06-16 23:08:20
20240919163305	2025-06-16 23:08:20
20241019105805	2025-06-16 23:08:20
20241030150047	2025-06-16 23:08:20
20241108114728	2025-06-16 23:08:20
20241121104152	2025-06-16 23:08:20
20241130184212	2025-06-16 23:08:20
20241220035512	2025-06-16 23:08:20
20241220123912	2025-06-16 23:08:20
20241224161212	2025-06-16 23:08:20
20250107150512	2025-06-16 23:08:20
20250110162412	2025-06-16 23:08:20
20250123174212	2025-06-16 23:08:20
20250128220012	2025-06-16 23:08:20
20250506224012	2025-06-16 23:08:20
20250523164012	2025-06-16 23:08:20
20250714121412	2025-07-18 19:22:05
\.


--
-- Data for Name: subscription; Type: TABLE DATA; Schema: realtime; Owner: supabase_admin
--

COPY realtime.subscription (id, subscription_id, entity, filters, claims, created_at) FROM stdin;
\.


--
-- Data for Name: buckets; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.buckets (id, name, owner, created_at, updated_at, public, avif_autodetection, file_size_limit, allowed_mime_types, owner_id, type) FROM stdin;
work-order-images	work-order-images	\N	2025-06-21 01:35:39.565185+00	2025-06-21 01:35:39.565185+00	t	f	10485760	\N	\N	STANDARD
equipment-note-images	equipment-note-images	\N	2025-06-24 08:29:39.418369+00	2025-06-24 08:29:39.418369+00	t	f	10485760	\N	\N	STANDARD
\.


--
-- Data for Name: buckets_analytics; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.buckets_analytics (id, type, format, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: migrations; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.migrations (id, name, hash, executed_at) FROM stdin;
0	create-migrations-table	e18db593bcde2aca2a408c4d1100f6abba2195df	2025-06-16 23:08:20.353632
1	initialmigration	6ab16121fbaa08bbd11b712d05f358f9b555d777	2025-06-16 23:08:20.360717
2	storage-schema	5c7968fd083fcea04050c1b7f6253c9771b99011	2025-06-16 23:08:20.366692
3	pathtoken-column	2cb1b0004b817b29d5b0a971af16bafeede4b70d	2025-06-16 23:08:20.38144
4	add-migrations-rls	427c5b63fe1c5937495d9c635c263ee7a5905058	2025-06-16 23:08:20.393174
5	add-size-functions	79e081a1455b63666c1294a440f8ad4b1e6a7f84	2025-06-16 23:08:20.401376
6	change-column-name-in-get-size	f93f62afdf6613ee5e7e815b30d02dc990201044	2025-06-16 23:08:20.408547
7	add-rls-to-buckets	e7e7f86adbc51049f341dfe8d30256c1abca17aa	2025-06-16 23:08:20.415949
8	add-public-to-buckets	fd670db39ed65f9d08b01db09d6202503ca2bab3	2025-06-16 23:08:20.422147
9	fix-search-function	3a0af29f42e35a4d101c259ed955b67e1bee6825	2025-06-16 23:08:20.428416
10	search-files-search-function	68dc14822daad0ffac3746a502234f486182ef6e	2025-06-16 23:08:20.435346
11	add-trigger-to-auto-update-updated_at-column	7425bdb14366d1739fa8a18c83100636d74dcaa2	2025-06-16 23:08:20.442636
12	add-automatic-avif-detection-flag	8e92e1266eb29518b6a4c5313ab8f29dd0d08df9	2025-06-16 23:08:20.452796
13	add-bucket-custom-limits	cce962054138135cd9a8c4bcd531598684b25e7d	2025-06-16 23:08:20.459278
14	use-bytes-for-max-size	941c41b346f9802b411f06f30e972ad4744dad27	2025-06-16 23:08:20.465758
15	add-can-insert-object-function	934146bc38ead475f4ef4b555c524ee5d66799e5	2025-06-16 23:08:20.483826
16	add-version	76debf38d3fd07dcfc747ca49096457d95b1221b	2025-06-16 23:08:20.490552
17	drop-owner-foreign-key	f1cbb288f1b7a4c1eb8c38504b80ae2a0153d101	2025-06-16 23:08:20.498251
18	add_owner_id_column_deprecate_owner	e7a511b379110b08e2f214be852c35414749fe66	2025-06-16 23:08:20.505562
19	alter-default-value-objects-id	02e5e22a78626187e00d173dc45f58fa66a4f043	2025-06-16 23:08:20.513804
20	list-objects-with-delimiter	cd694ae708e51ba82bf012bba00caf4f3b6393b7	2025-06-16 23:08:20.522179
21	s3-multipart-uploads	8c804d4a566c40cd1e4cc5b3725a664a9303657f	2025-06-16 23:08:20.538596
22	s3-multipart-uploads-big-ints	9737dc258d2397953c9953d9b86920b8be0cdb73	2025-06-16 23:08:20.553699
23	optimize-search-function	9d7e604cddc4b56a5422dc68c9313f4a1b6f132c	2025-06-16 23:08:20.568285
24	operation-function	8312e37c2bf9e76bbe841aa5fda889206d2bf8aa	2025-06-16 23:08:20.57827
25	custom-metadata	d974c6057c3db1c1f847afa0e291e6165693b990	2025-06-16 23:08:20.586144
26	objects-prefixes	ef3f7871121cdc47a65308e6702519e853422ae2	2025-08-31 03:13:47.014901
27	search-v2	33b8f2a7ae53105f028e13e9fcda9dc4f356b4a2	2025-08-31 03:13:47.192991
28	object-bucket-name-sorting	ba85ec41b62c6a30a3f136788227ee47f311c436	2025-08-31 03:13:48.00475
29	create-prefixes	a7b1a22c0dc3ab630e3055bfec7ce7d2045c5b7b	2025-08-31 03:13:48.108574
30	update-object-levels	6c6f6cc9430d570f26284a24cf7b210599032db7	2025-08-31 03:13:48.182016
31	objects-level-index	33f1fef7ec7fea08bb892222f4f0f5d79bab5eb8	2025-08-31 03:13:48.276016
32	backward-compatible-index-on-objects	2d51eeb437a96868b36fcdfb1ddefdf13bef1647	2025-08-31 03:13:48.286778
33	backward-compatible-index-on-prefixes	fe473390e1b8c407434c0e470655945b110507bf	2025-08-31 03:13:48.296904
34	optimize-search-function-v1	82b0e469a00e8ebce495e29bfa70a0797f7ebd2c	2025-08-31 03:13:48.302587
35	add-insert-trigger-prefixes	63bb9fd05deb3dc5e9fa66c83e82b152f0caf589	2025-08-31 03:13:48.316869
36	optimise-existing-functions	81cf92eb0c36612865a18016a38496c530443899	2025-08-31 03:13:48.334352
37	add-bucket-name-length-trigger	3944135b4e3e8b22d6d4cbb568fe3b0b51df15c1	2025-08-31 03:13:48.34613
38	iceberg-catalog-flag-on-buckets	19a8bd89d5dfa69af7f222a46c726b7c41e462c5	2025-08-31 03:13:48.353233
\.


--
-- Data for Name: objects; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.objects (id, bucket_id, name, owner, created_at, updated_at, last_accessed_at, metadata, version, owner_id, user_metadata, level) FROM stdin;
f318029c-cb5b-49cb-9413-2b1f059e5d51	equipment-note-images	0d73189e-e714-48e2-8c33-fe8778259064/04287611-036b-495e-81fa-049dfc42431d/871b532a-d4bb-4f19-b127-863c19993d9d/1754453827857.jpg	0d73189e-e714-48e2-8c33-fe8778259064	2025-08-06 04:17:08.190216+00	2025-08-31 03:13:48.118118+00	2025-08-06 04:17:08.190216+00	{"eTag": "\\"22e512e9c1f8d9fb6f168e5b3a9bc176\\"", "size": 6143, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-08-06T04:17:09.000Z", "contentLength": 6143, "httpStatusCode": 200}	97646e1d-b7cc-46d9-a835-280a4782a42f	0d73189e-e714-48e2-8c33-fe8778259064	{}	4
38b4960d-62ce-49a0-9354-2994e5ec16f2	equipment-note-images	0d73189e-e714-48e2-8c33-fe8778259064/23a3a405-afe5-45ed-99c1-c61a091c5cd7/5ad76d0f-dc31-4099-8f6d-964e668722a6/1751488699739.jpg	0d73189e-e714-48e2-8c33-fe8778259064	2025-07-02 20:38:21.145262+00	2025-08-31 03:13:48.118118+00	2025-07-02 20:38:21.145262+00	{"eTag": "\\"c7146c50aaf9215ae180fc8351aa0b51\\"", "size": 186543, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-07-02T20:38:22.000Z", "contentLength": 186543, "httpStatusCode": 200}	4ed1a60d-a64f-4969-8b30-b5787e22a261	0d73189e-e714-48e2-8c33-fe8778259064	{}	4
9bb035ca-68d2-444d-a90c-f1a189cb9790	equipment-note-images	0d73189e-e714-48e2-8c33-fe8778259064/34eab4c6-3f14-46bd-a8e8-e72caae26a29/13a53780-8e76-4ce4-8786-34ae2c449bca/1751641138660.jpg	0d73189e-e714-48e2-8c33-fe8778259064	2025-07-04 14:58:59.298388+00	2025-08-31 03:13:48.118118+00	2025-07-04 14:58:59.298388+00	{"eTag": "\\"8c7b69ff6d36441ef8febc96b5b6804f\\"", "size": 98892, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-07-04T14:59:00.000Z", "contentLength": 98892, "httpStatusCode": 200}	6ad438e5-30bc-4f8e-9f13-67ba1660f37b	0d73189e-e714-48e2-8c33-fe8778259064	{}	4
85d699b5-e5be-451a-8caf-3783fd11dad0	work-order-images	0d73189e-e714-48e2-8c33-fe8778259064/4bab6bb5-13f3-405e-871e-c5e7109b9435/f3064f34-e377-4628-ba17-32aaee3a5621/1752879422478.jpg	0d73189e-e714-48e2-8c33-fe8778259064	2025-07-18 22:57:02.901811+00	2025-08-31 03:13:48.118118+00	2025-07-18 22:57:02.901811+00	{"eTag": "\\"0bbff9190576eae95fba8618fb31ca8f\\"", "size": 170716, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-07-18T22:57:03.000Z", "contentLength": 170716, "httpStatusCode": 200}	d42a4845-f9ec-49c7-85cc-f14bd7e412c5	0d73189e-e714-48e2-8c33-fe8778259064	{}	4
5e394aee-020d-493a-baea-7ad4fd20f7ff	equipment-note-images	0d73189e-e714-48e2-8c33-fe8778259064/5b9ef621-fd88-451e-bf12-7c6a72d45c98/2d502418-33c4-4fd8-9055-5d6b091cced2/1751640866317.png	0d73189e-e714-48e2-8c33-fe8778259064	2025-07-04 14:54:27.017835+00	2025-08-31 03:13:48.118118+00	2025-07-04 14:54:27.017835+00	{"eTag": "\\"2145b359689cf6cac39037d6c3fd3bb8\\"", "size": 33386, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-07-04T14:54:27.000Z", "contentLength": 33386, "httpStatusCode": 200}	d78694f3-42fc-4b9f-b55f-919176374a1a	0d73189e-e714-48e2-8c33-fe8778259064	{}	4
11b4d64d-d044-40b8-a662-ed8faa416ff0	work-order-images	0d73189e-e714-48e2-8c33-fe8778259064/6b61d20f-b2e3-4687-a516-c762d58eb674/74ab770c-7e24-4006-8a4d-e892eeeecf26/1752880449894.JPG	0d73189e-e714-48e2-8c33-fe8778259064	2025-07-18 23:14:10.761892+00	2025-08-31 03:13:48.118118+00	2025-07-18 23:14:10.761892+00	{"eTag": "\\"0bf5eac7b9f4922af8fc8dfb99f61239\\"", "size": 442442, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-07-18T23:14:11.000Z", "contentLength": 442442, "httpStatusCode": 200}	60507f2e-79e9-4b8e-b35b-85f9d4294ea4	0d73189e-e714-48e2-8c33-fe8778259064	{}	4
44019d43-66a2-4f03-9a7c-957bb938866d	work-order-images	0d73189e-e714-48e2-8c33-fe8778259064/6b61d20f-b2e3-4687-a516-c762d58eb674/836a8825-5025-45e3-8124-4131a9a1539f/1752879861847.JPG	0d73189e-e714-48e2-8c33-fe8778259064	2025-07-18 23:04:22.584262+00	2025-08-31 03:13:48.118118+00	2025-07-18 23:04:22.584262+00	{"eTag": "\\"61cc94f65ae2088344a75225d4d699cc\\"", "size": 1270815, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-07-18T23:04:23.000Z", "contentLength": 1270815, "httpStatusCode": 200}	d02ac4c4-3a36-4931-8262-53e2bafc85d4	0d73189e-e714-48e2-8c33-fe8778259064	{}	4
27b660ec-f6e5-4eb0-8e99-03bd76a08c14	equipment-note-images	0d73189e-e714-48e2-8c33-fe8778259064/cc436c35-f709-4c9c-b0ed-43722bf01c62/06a21a90-a22f-461f-aca0-694d4a7025a2/1751641006758.jpg	0d73189e-e714-48e2-8c33-fe8778259064	2025-07-04 14:56:47.437833+00	2025-08-31 03:13:48.118118+00	2025-07-04 14:56:47.437833+00	{"eTag": "\\"d479508bb340e7af93a363f5e322fb3f\\"", "size": 150013, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-07-04T14:56:48.000Z", "contentLength": 150013, "httpStatusCode": 200}	a60349d0-4fcd-425d-b170-83b0594a2b98	0d73189e-e714-48e2-8c33-fe8778259064	{}	4
27606e92-51e8-478b-abe4-b846bab1c7a0	equipment-note-images	0d73189e-e714-48e2-8c33-fe8778259064/e3c4f41f-024b-4ad1-8fe7-8ecd56e97618/06ed814e-30c8-481e-a9e8-05136cf5e368/1751493596857.jpg	0d73189e-e714-48e2-8c33-fe8778259064	2025-07-02 21:59:58.218449+00	2025-08-31 03:13:48.118118+00	2025-07-02 21:59:58.218449+00	{"eTag": "\\"187dbabc8aa3e4ff62769bee4caa8118\\"", "size": 90672, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-07-02T21:59:59.000Z", "contentLength": 90672, "httpStatusCode": 200}	fd8c1960-6289-49b7-84a2-79249b11df01	0d73189e-e714-48e2-8c33-fe8778259064	{}	4
913c60bd-9c00-4fe7-aed8-8143c4101ec6	equipment-note-images	0d73189e-e714-48e2-8c33-fe8778259064/f9e776f0-2d11-4b59-bb3e-0fb3a95dbd65/63feed7a-6e34-41de-8ba6-7cdbc89e5f62/1751488573605.jpg	0d73189e-e714-48e2-8c33-fe8778259064	2025-07-02 20:36:15.164271+00	2025-08-31 03:13:48.118118+00	2025-07-02 20:36:15.164271+00	{"eTag": "\\"12068b1f1818dfaf7238051fb61dd8f4\\"", "size": 143208, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-07-02T20:36:16.000Z", "contentLength": 143208, "httpStatusCode": 200}	8ebd39aa-6128-48e0-99f0-595b6a80e6a2	0d73189e-e714-48e2-8c33-fe8778259064	{}	4
8f014085-5417-4471-a1f6-a31364f82721	equipment-note-images	15d8cd2d-595c-44e2-8cdf-ed7e1028b436/1190ca62-f001-47d9-8226-df81469efbaf/2e75906b-dfac-4269-aead-735d55561e6e/1752932641552.jpg	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-19 13:44:06.46354+00	2025-08-31 03:13:48.118118+00	2025-07-19 13:44:06.46354+00	{"eTag": "\\"5060fd8fd39a7fc6d40bb52766af3822\\"", "size": 4021934, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-07-19T13:44:07.000Z", "contentLength": 4021934, "httpStatusCode": 200}	b5cd98f3-17ea-4a73-80a0-864e1a4879dc	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	{}	4
987c037d-1933-48c6-9c96-9a6c8fa2d7bc	equipment-note-images	15d8cd2d-595c-44e2-8cdf-ed7e1028b436/2fc419f5-2f03-42a9-852f-dd4c6543f149/8e98d2dc-1a12-43b4-8a3e-cbeb4b5257ba/1752928845646.jpg	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-19 12:40:56.952423+00	2025-08-31 03:13:48.118118+00	2025-07-19 12:40:56.952423+00	{"eTag": "\\"8f820eb088ca80a113f55febdba5fab2\\"", "size": 4766109, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-07-19T12:40:57.000Z", "contentLength": 4766109, "httpStatusCode": 200}	e593b86b-73ba-4ee8-850f-f1a75a909370	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	{}	4
bec0f903-fd06-446e-b012-00c5d722b524	work-order-images	15d8cd2d-595c-44e2-8cdf-ed7e1028b436/57dc7336-9606-4758-b1d5-2fe1c6ad4f8d/1750879163003.jpg	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-06-25 19:19:35.722249+00	2025-08-31 03:13:48.118118+00	2025-06-25 19:19:35.722249+00	{"eTag": "\\"0a6eaa189065495a2a9dbd16598c2a60-2\\"", "size": 5817573, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-06-25T19:19:36.000Z", "contentLength": 5817573, "httpStatusCode": 200}	e87cf738-3a35-4781-8a2c-376f3da74dbe	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	{}	3
2971f037-da4e-4d38-9fe2-55f1a1e0e344	equipment-note-images	15d8cd2d-595c-44e2-8cdf-ed7e1028b436/5ef590dd-7ebc-4640-90a8-2e4e1efe3455/45102176-d11c-4aca-be9e-22afd0c14e2c/1752928151748.jpg	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-19 12:29:17.181386+00	2025-08-31 03:13:48.118118+00	2025-07-19 12:29:17.181386+00	{"eTag": "\\"7b5b8603fe6d6d63044b59021251067f\\"", "size": 3531689, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-07-19T12:29:18.000Z", "contentLength": 3531689, "httpStatusCode": 200}	6f06ceae-850d-4c48-9a7f-2e480e4c7545	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	{}	4
2d76ae62-3815-460a-816f-ca261c7d68c3	equipment-note-images	15d8cd2d-595c-44e2-8cdf-ed7e1028b436/f6fbe22f-ab61-4abc-8ee9-3d056aa408d4/18e47069-47d0-42c5-a102-66e8540d19fb/1752929040959.jpg	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-19 12:44:04.699084+00	2025-08-31 03:13:48.118118+00	2025-07-19 12:44:04.699084+00	{"eTag": "\\"855d9460159aec35f8403e4cd4e480d7\\"", "size": 1667908, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-07-19T12:44:05.000Z", "contentLength": 1667908, "httpStatusCode": 200}	f6ab05f8-878d-4fce-b1bc-cabc39e652c7	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	{}	4
76c07840-d80c-499e-8891-447998742587	equipment-note-images	15d8cd2d-595c-44e2-8cdf-ed7e1028b436/ff88eff6-1954-408b-ac7a-d109f77f18c1/ca171931-bf42-4f5d-ac4e-19cb1c97067a/1752928526683.jpg	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-07-19 12:35:32.424491+00	2025-08-31 03:13:48.118118+00	2025-07-19 12:35:32.424491+00	{"eTag": "\\"dbf1bc3d18b5611d610213ab8af7eb6f\\"", "size": 3774578, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-07-19T12:35:33.000Z", "contentLength": 3774578, "httpStatusCode": 200}	b557ba25-18a0-4ca7-85cc-a78d52e88c67	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	{}	4
c6a43a68-e9ee-436c-83ed-eb3b01f6c5aa	equipment-note-images	685efa5e-7519-486e-8643-28cfaf5408a4/50a2195f-9ac5-44aa-a975-b79ba6c3dd7c/5a523cc7-d4d3-428e-99a9-196cfcdef57b/1754453598749.jpg	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-06 04:13:19.664412+00	2025-08-31 03:13:48.118118+00	2025-08-06 04:13:19.664412+00	{"eTag": "\\"2f0f60c588c2762f922b4320eb307988\\"", "size": 153725, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-08-06T04:13:20.000Z", "contentLength": 153725, "httpStatusCode": 200}	5aecfac1-a990-49f4-9c99-691d0c95cdbb	685efa5e-7519-486e-8643-28cfaf5408a4	{}	4
4f0eada8-fed5-425b-a2ed-ee42a72386ae	work-order-images	685efa5e-7519-486e-8643-28cfaf5408a4/75ceb2cd-9590-4a95-af13-6a222e70470c/1751469914498.jpg	685efa5e-7519-486e-8643-28cfaf5408a4	2025-07-02 15:25:15.705003+00	2025-08-31 03:13:48.118118+00	2025-07-02 15:25:15.705003+00	{"eTag": "\\"31d83ab975b5cf02a66d63d775ae9941\\"", "size": 83101, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-07-02T15:25:16.000Z", "contentLength": 83101, "httpStatusCode": 200}	af5366b5-be84-44df-8709-c2b5d81b0826	685efa5e-7519-486e-8643-28cfaf5408a4	{}	3
25a5b693-091f-49fa-8886-223f54bc978f	equipment-note-images	685efa5e-7519-486e-8643-28cfaf5408a4/8a35ba88-03e0-4d1f-9dcc-ecca3d398c41/6ddc2582-74ae-4000-9820-03e35a278d67/1754454110410.jpg	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-06 04:21:51.335326+00	2025-08-31 03:13:48.118118+00	2025-08-06 04:21:51.335326+00	{"eTag": "\\"4e71afb4414b2e4b66fe2ee3a5af4168\\"", "size": 780066, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-08-06T04:21:52.000Z", "contentLength": 780066, "httpStatusCode": 200}	474953b3-5360-4f72-8a69-d9f4c9de6c3a	685efa5e-7519-486e-8643-28cfaf5408a4	{}	4
43cce802-a08c-4f2d-a687-b295e35152c9	equipment-note-images	685efa5e-7519-486e-8643-28cfaf5408a4/8c97474d-a2e8-41dc-acbf-fdffce5a268e/c6101077-1a51-40d2-abe7-fefbd769bc83/1754453969140.png	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-06 04:19:30.585401+00	2025-08-31 03:13:48.118118+00	2025-08-06 04:19:30.585401+00	{"eTag": "\\"e7a68389fe5647fe4b6b45aac74e4b28\\"", "size": 2709335, "mimetype": "image/png", "cacheControl": "max-age=3600", "lastModified": "2025-08-06T04:19:31.000Z", "contentLength": 2709335, "httpStatusCode": 200}	cdf8f517-71c5-4478-b078-331d5f0cb9ae	685efa5e-7519-486e-8643-28cfaf5408a4	{}	4
b3c3a5af-9a6c-4a45-8042-729d68b852c6	equipment-note-images	685efa5e-7519-486e-8643-28cfaf5408a4/94d9186a-841d-4a96-a79e-f07c55eaa79b/0ae97dfd-d663-41f6-ac39-ec5706157a42/1754453701038.jpg	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-06 04:15:01.837955+00	2025-08-31 03:13:48.118118+00	2025-08-06 04:15:01.837955+00	{"eTag": "\\"edc89d70e18b2d8fef65d02cca7430a8\\"", "size": 172043, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-08-06T04:15:02.000Z", "contentLength": 172043, "httpStatusCode": 200}	aad4fe10-c3e2-4432-9267-c531d069f926	685efa5e-7519-486e-8643-28cfaf5408a4	{}	4
3f3dcb1b-444d-4e98-9f44-0f6a7b5bba41	equipment-note-images	685efa5e-7519-486e-8643-28cfaf5408a4/c2b7b011-8187-4c30-982d-fe84124278f6/3a89f4ba-fb73-404b-b884-2fa84e30f8a6/1752966580275.jpg	685efa5e-7519-486e-8643-28cfaf5408a4	2025-07-19 23:09:41.03001+00	2025-08-31 03:13:48.118118+00	2025-07-19 23:09:41.03001+00	{"eTag": "\\"45d7e1307b453d70a29b93667c905746\\"", "size": 111855, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-07-19T23:09:41.000Z", "contentLength": 111855, "httpStatusCode": 200}	a5bed41f-4a3c-437f-ad6d-1d2cd32ada2a	685efa5e-7519-486e-8643-28cfaf5408a4	{}	4
ae773a7f-7f2a-430d-9914-ece66b4ba393	equipment-note-images	685efa5e-7519-486e-8643-28cfaf5408a4/c9671fbe-f39e-4dc1-9fed-ecdb3d3c37f7/364b565d-2b94-4f51-85a7-acd7bad73101/1754454034745.jpg	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-06 04:20:35.12363+00	2025-08-31 03:13:48.118118+00	2025-08-06 04:20:35.12363+00	{"eTag": "\\"6c9ee52f0a4fa6bd6bcbc97114ac1014\\"", "size": 10669, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-08-06T04:20:36.000Z", "contentLength": 10669, "httpStatusCode": 200}	506eba12-be9a-4cdb-aee0-954e02c6eed8	685efa5e-7519-486e-8643-28cfaf5408a4	{}	4
9b3a7339-e424-425d-a3f5-f02273487038	equipment-note-images	685efa5e-7519-486e-8643-28cfaf5408a4/f7ef5e64-f272-45c6-822a-0844569ff63e/2a36f8cb-4dd4-429f-b980-bad0b939d78b/1754454257473.jpg	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-06 04:24:17.954263+00	2025-08-31 03:13:48.118118+00	2025-08-06 04:24:17.954263+00	{"eTag": "\\"9cd0f8593c4b118b2d85eaaf7aacb067\\"", "size": 72855, "mimetype": "image/jpeg", "cacheControl": "max-age=3600", "lastModified": "2025-08-06T04:24:18.000Z", "contentLength": 72855, "httpStatusCode": 200}	83e38a11-66d9-46fc-ab2c-eb753602d312	685efa5e-7519-486e-8643-28cfaf5408a4	{}	4
\.


--
-- Data for Name: prefixes; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.prefixes (bucket_id, name, created_at, updated_at) FROM stdin;
equipment-note-images	0d73189e-e714-48e2-8c33-fe8778259064	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	0d73189e-e714-48e2-8c33-fe8778259064/04287611-036b-495e-81fa-049dfc42431d	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	0d73189e-e714-48e2-8c33-fe8778259064/04287611-036b-495e-81fa-049dfc42431d/871b532a-d4bb-4f19-b127-863c19993d9d	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	0d73189e-e714-48e2-8c33-fe8778259064/23a3a405-afe5-45ed-99c1-c61a091c5cd7	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	0d73189e-e714-48e2-8c33-fe8778259064/23a3a405-afe5-45ed-99c1-c61a091c5cd7/5ad76d0f-dc31-4099-8f6d-964e668722a6	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	0d73189e-e714-48e2-8c33-fe8778259064/34eab4c6-3f14-46bd-a8e8-e72caae26a29	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	0d73189e-e714-48e2-8c33-fe8778259064/34eab4c6-3f14-46bd-a8e8-e72caae26a29/13a53780-8e76-4ce4-8786-34ae2c449bca	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
work-order-images	0d73189e-e714-48e2-8c33-fe8778259064	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
work-order-images	0d73189e-e714-48e2-8c33-fe8778259064/4bab6bb5-13f3-405e-871e-c5e7109b9435	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
work-order-images	0d73189e-e714-48e2-8c33-fe8778259064/4bab6bb5-13f3-405e-871e-c5e7109b9435/f3064f34-e377-4628-ba17-32aaee3a5621	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	0d73189e-e714-48e2-8c33-fe8778259064/5b9ef621-fd88-451e-bf12-7c6a72d45c98	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	0d73189e-e714-48e2-8c33-fe8778259064/5b9ef621-fd88-451e-bf12-7c6a72d45c98/2d502418-33c4-4fd8-9055-5d6b091cced2	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
work-order-images	0d73189e-e714-48e2-8c33-fe8778259064/6b61d20f-b2e3-4687-a516-c762d58eb674	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
work-order-images	0d73189e-e714-48e2-8c33-fe8778259064/6b61d20f-b2e3-4687-a516-c762d58eb674/74ab770c-7e24-4006-8a4d-e892eeeecf26	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
work-order-images	0d73189e-e714-48e2-8c33-fe8778259064/6b61d20f-b2e3-4687-a516-c762d58eb674/836a8825-5025-45e3-8124-4131a9a1539f	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	0d73189e-e714-48e2-8c33-fe8778259064/cc436c35-f709-4c9c-b0ed-43722bf01c62	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	0d73189e-e714-48e2-8c33-fe8778259064/cc436c35-f709-4c9c-b0ed-43722bf01c62/06a21a90-a22f-461f-aca0-694d4a7025a2	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	0d73189e-e714-48e2-8c33-fe8778259064/e3c4f41f-024b-4ad1-8fe7-8ecd56e97618	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	0d73189e-e714-48e2-8c33-fe8778259064/e3c4f41f-024b-4ad1-8fe7-8ecd56e97618/06ed814e-30c8-481e-a9e8-05136cf5e368	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	0d73189e-e714-48e2-8c33-fe8778259064/f9e776f0-2d11-4b59-bb3e-0fb3a95dbd65	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	0d73189e-e714-48e2-8c33-fe8778259064/f9e776f0-2d11-4b59-bb3e-0fb3a95dbd65/63feed7a-6e34-41de-8ba6-7cdbc89e5f62	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	15d8cd2d-595c-44e2-8cdf-ed7e1028b436/1190ca62-f001-47d9-8226-df81469efbaf	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	15d8cd2d-595c-44e2-8cdf-ed7e1028b436/1190ca62-f001-47d9-8226-df81469efbaf/2e75906b-dfac-4269-aead-735d55561e6e	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	15d8cd2d-595c-44e2-8cdf-ed7e1028b436/2fc419f5-2f03-42a9-852f-dd4c6543f149	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	15d8cd2d-595c-44e2-8cdf-ed7e1028b436/2fc419f5-2f03-42a9-852f-dd4c6543f149/8e98d2dc-1a12-43b4-8a3e-cbeb4b5257ba	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
work-order-images	15d8cd2d-595c-44e2-8cdf-ed7e1028b436	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
work-order-images	15d8cd2d-595c-44e2-8cdf-ed7e1028b436/57dc7336-9606-4758-b1d5-2fe1c6ad4f8d	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	15d8cd2d-595c-44e2-8cdf-ed7e1028b436/5ef590dd-7ebc-4640-90a8-2e4e1efe3455	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	15d8cd2d-595c-44e2-8cdf-ed7e1028b436/5ef590dd-7ebc-4640-90a8-2e4e1efe3455/45102176-d11c-4aca-be9e-22afd0c14e2c	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	15d8cd2d-595c-44e2-8cdf-ed7e1028b436/f6fbe22f-ab61-4abc-8ee9-3d056aa408d4	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	15d8cd2d-595c-44e2-8cdf-ed7e1028b436/f6fbe22f-ab61-4abc-8ee9-3d056aa408d4/18e47069-47d0-42c5-a102-66e8540d19fb	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	15d8cd2d-595c-44e2-8cdf-ed7e1028b436/ff88eff6-1954-408b-ac7a-d109f77f18c1	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	15d8cd2d-595c-44e2-8cdf-ed7e1028b436/ff88eff6-1954-408b-ac7a-d109f77f18c1/ca171931-bf42-4f5d-ac4e-19cb1c97067a	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	685efa5e-7519-486e-8643-28cfaf5408a4/50a2195f-9ac5-44aa-a975-b79ba6c3dd7c	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	685efa5e-7519-486e-8643-28cfaf5408a4/50a2195f-9ac5-44aa-a975-b79ba6c3dd7c/5a523cc7-d4d3-428e-99a9-196cfcdef57b	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
work-order-images	685efa5e-7519-486e-8643-28cfaf5408a4	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
work-order-images	685efa5e-7519-486e-8643-28cfaf5408a4/75ceb2cd-9590-4a95-af13-6a222e70470c	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	685efa5e-7519-486e-8643-28cfaf5408a4/8a35ba88-03e0-4d1f-9dcc-ecca3d398c41	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	685efa5e-7519-486e-8643-28cfaf5408a4/8a35ba88-03e0-4d1f-9dcc-ecca3d398c41/6ddc2582-74ae-4000-9820-03e35a278d67	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	685efa5e-7519-486e-8643-28cfaf5408a4/8c97474d-a2e8-41dc-acbf-fdffce5a268e	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	685efa5e-7519-486e-8643-28cfaf5408a4/8c97474d-a2e8-41dc-acbf-fdffce5a268e/c6101077-1a51-40d2-abe7-fefbd769bc83	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	685efa5e-7519-486e-8643-28cfaf5408a4/94d9186a-841d-4a96-a79e-f07c55eaa79b	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	685efa5e-7519-486e-8643-28cfaf5408a4/94d9186a-841d-4a96-a79e-f07c55eaa79b/0ae97dfd-d663-41f6-ac39-ec5706157a42	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	685efa5e-7519-486e-8643-28cfaf5408a4/c2b7b011-8187-4c30-982d-fe84124278f6	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	685efa5e-7519-486e-8643-28cfaf5408a4/c2b7b011-8187-4c30-982d-fe84124278f6/3a89f4ba-fb73-404b-b884-2fa84e30f8a6	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	685efa5e-7519-486e-8643-28cfaf5408a4/c9671fbe-f39e-4dc1-9fed-ecdb3d3c37f7	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	685efa5e-7519-486e-8643-28cfaf5408a4/c9671fbe-f39e-4dc1-9fed-ecdb3d3c37f7/364b565d-2b94-4f51-85a7-acd7bad73101	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	685efa5e-7519-486e-8643-28cfaf5408a4/f7ef5e64-f272-45c6-822a-0844569ff63e	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
equipment-note-images	685efa5e-7519-486e-8643-28cfaf5408a4/f7ef5e64-f272-45c6-822a-0844569ff63e/2a36f8cb-4dd4-429f-b980-bad0b939d78b	2025-08-31 03:13:48.075089+00	2025-08-31 03:13:48.075089+00
\.


--
-- Data for Name: s3_multipart_uploads; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.s3_multipart_uploads (id, in_progress_size, upload_signature, bucket_id, key, version, owner_id, created_at, user_metadata) FROM stdin;
\.


--
-- Data for Name: s3_multipart_uploads_parts; Type: TABLE DATA; Schema: storage; Owner: supabase_storage_admin
--

COPY storage.s3_multipart_uploads_parts (id, upload_id, size, part_number, bucket_id, key, etag, owner_id, version, created_at) FROM stdin;
\.


--
-- Data for Name: schema_migrations; Type: TABLE DATA; Schema: supabase_migrations; Owner: postgres
--

COPY supabase_migrations.schema_migrations (version, statements, name, created_by, idempotency_key) FROM stdin;
20250617044533	{"\n-- Check what foreign keys already exist and only add missing ones\n\n-- Add foreign keys that don't exist yet (skipping equipment_organization_id_fkey since it exists)\nDO $$\nBEGIN\n    -- Check and add notes foreign keys\n    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints \n                   WHERE constraint_name = 'notes_author_id_fkey') THEN\n        ALTER TABLE notes ADD CONSTRAINT notes_author_id_fkey \n          FOREIGN KEY (author_id) REFERENCES profiles(id);\n    END IF;\n\n    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints \n                   WHERE constraint_name = 'notes_equipment_id_fkey') THEN\n        ALTER TABLE notes ADD CONSTRAINT notes_equipment_id_fkey \n          FOREIGN KEY (equipment_id) REFERENCES equipment(id);\n    END IF;\n\n    -- Check and add organization_members foreign keys\n    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints \n                   WHERE constraint_name = 'organization_members_organization_id_fkey') THEN\n        ALTER TABLE organization_members ADD CONSTRAINT organization_members_organization_id_fkey \n          FOREIGN KEY (organization_id) REFERENCES organizations(id);\n    END IF;\n\n    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints \n                   WHERE constraint_name = 'organization_members_user_id_fkey') THEN\n        ALTER TABLE organization_members ADD CONSTRAINT organization_members_user_id_fkey \n          FOREIGN KEY (user_id) REFERENCES profiles(id);\n    END IF;\n\n    -- Check and add scans foreign keys\n    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints \n                   WHERE constraint_name = 'scans_equipment_id_fkey') THEN\n        ALTER TABLE scans ADD CONSTRAINT scans_equipment_id_fkey \n          FOREIGN KEY (equipment_id) REFERENCES equipment(id);\n    END IF;\n\n    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints \n                   WHERE constraint_name = 'scans_scanned_by_fkey') THEN\n        ALTER TABLE scans ADD CONSTRAINT scans_scanned_by_fkey \n          FOREIGN KEY (scanned_by) REFERENCES profiles(id);\n    END IF;\n\n    -- Check and add team_members foreign keys\n    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints \n                   WHERE constraint_name = 'team_members_team_id_fkey') THEN\n        ALTER TABLE team_members ADD CONSTRAINT team_members_team_id_fkey \n          FOREIGN KEY (team_id) REFERENCES teams(id);\n    END IF;\n\n    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints \n                   WHERE constraint_name = 'team_members_user_id_fkey') THEN\n        ALTER TABLE team_members ADD CONSTRAINT team_members_user_id_fkey \n          FOREIGN KEY (user_id) REFERENCES profiles(id);\n    END IF;\n\n    -- Check and add teams foreign keys\n    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints \n                   WHERE constraint_name = 'teams_organization_id_fkey') THEN\n        ALTER TABLE teams ADD CONSTRAINT teams_organization_id_fkey \n          FOREIGN KEY (organization_id) REFERENCES organizations(id);\n    END IF;\n\n    -- Check and add work_orders foreign keys\n    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints \n                   WHERE constraint_name = 'work_orders_assignee_id_fkey') THEN\n        ALTER TABLE work_orders ADD CONSTRAINT work_orders_assignee_id_fkey \n          FOREIGN KEY (assignee_id) REFERENCES profiles(id);\n    END IF;\n\n    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints \n                   WHERE constraint_name = 'work_orders_created_by_fkey') THEN\n        ALTER TABLE work_orders ADD CONSTRAINT work_orders_created_by_fkey \n          FOREIGN KEY (created_by) REFERENCES profiles(id);\n    END IF;\n\n    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints \n                   WHERE constraint_name = 'work_orders_equipment_id_fkey') THEN\n        ALTER TABLE work_orders ADD CONSTRAINT work_orders_equipment_id_fkey \n          FOREIGN KEY (equipment_id) REFERENCES equipment(id);\n    END IF;\n\n    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints \n                   WHERE constraint_name = 'work_orders_organization_id_fkey') THEN\n        ALTER TABLE work_orders ADD CONSTRAINT work_orders_organization_id_fkey \n          FOREIGN KEY (organization_id) REFERENCES organizations(id);\n    END IF;\n\n    IF NOT EXISTS (SELECT 1 FROM information_schema.table_constraints \n                   WHERE constraint_name = 'work_orders_team_id_fkey') THEN\n        ALTER TABLE work_orders ADD CONSTRAINT work_orders_team_id_fkey \n          FOREIGN KEY (team_id) REFERENCES teams(id);\n    END IF;\nEND $$;\n\n-- Update the existing handle_new_user function to also create an organization\nCREATE OR REPLACE FUNCTION public.handle_new_user()\nRETURNS trigger\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path = public\nAS $$\nDECLARE\n  new_org_id uuid;\nBEGIN\n  -- Insert user profile (this part already exists)\n  INSERT INTO public.profiles (id, email, name)\n  VALUES (\n    NEW.id,\n    NEW.email,\n    COALESCE(NEW.raw_user_meta_data->>'name', NEW.email)\n  );\n\n  -- Create a new organization for the user\n  INSERT INTO public.organizations (name, plan, member_count, max_members, features)\n  VALUES (\n    COALESCE(NEW.raw_user_meta_data->>'name', 'My Organization'),\n    'free',\n    1,\n    5,\n    ARRAY['Equipment Management', 'Work Orders', 'Team Management']\n  )\n  RETURNING id INTO new_org_id;\n\n  -- Add user as owner of the organization\n  INSERT INTO public.organization_members (organization_id, user_id, role, status)\n  VALUES (\n    new_org_id,\n    NEW.id,\n    'owner',\n    'active'\n  );\n\n  RETURN NEW;\nEND;\n$$;\n\n-- Enable RLS on all tables\nALTER TABLE profiles ENABLE ROW LEVEL SECURITY;\nALTER TABLE organizations ENABLE ROW LEVEL SECURITY;\nALTER TABLE organization_members ENABLE ROW LEVEL SECURITY;\nALTER TABLE equipment ENABLE ROW LEVEL SECURITY;\nALTER TABLE work_orders ENABLE ROW LEVEL SECURITY;\nALTER TABLE teams ENABLE ROW LEVEL SECURITY;\nALTER TABLE team_members ENABLE ROW LEVEL SECURITY;\nALTER TABLE scans ENABLE ROW LEVEL SECURITY;\nALTER TABLE notes ENABLE ROW LEVEL SECURITY;\n\n-- Create RLS policies for profiles\nDROP POLICY IF EXISTS \\"Users can view their own profile\\" ON profiles;\nCREATE POLICY \\"Users can view their own profile\\" ON profiles\n  FOR SELECT USING (auth.uid() = id);\n\nDROP POLICY IF EXISTS \\"Users can update their own profile\\" ON profiles;\nCREATE POLICY \\"Users can update their own profile\\" ON profiles\n  FOR UPDATE USING (auth.uid() = id);\n\n-- Create RLS policies for organizations\nDROP POLICY IF EXISTS \\"Users can view organizations they belong to\\" ON organizations;\nCREATE POLICY \\"Users can view organizations they belong to\\" ON organizations\n  FOR SELECT USING (\n    EXISTS (\n      SELECT 1 FROM organization_members \n      WHERE organization_id = organizations.id \n      AND user_id = auth.uid()\n      AND status = 'active'\n    )\n  );\n\nDROP POLICY IF EXISTS \\"Organization owners can update their organization\\" ON organizations;\nCREATE POLICY \\"Organization owners can update their organization\\" ON organizations\n  FOR UPDATE USING (\n    EXISTS (\n      SELECT 1 FROM organization_members \n      WHERE organization_id = organizations.id \n      AND user_id = auth.uid()\n      AND role = 'owner'\n      AND status = 'active'\n    )\n  );\n\n-- Create RLS policies for organization_members\nDROP POLICY IF EXISTS \\"Users can view members of their organizations\\" ON organization_members;\nCREATE POLICY \\"Users can view members of their organizations\\" ON organization_members\n  FOR SELECT USING (\n    EXISTS (\n      SELECT 1 FROM organization_members om \n      WHERE om.organization_id = organization_members.organization_id \n      AND om.user_id = auth.uid()\n      AND om.status = 'active'\n    )\n  );\n\nDROP POLICY IF EXISTS \\"Organization owners and admins can manage members\\" ON organization_members;\nCREATE POLICY \\"Organization owners and admins can manage members\\" ON organization_members\n  FOR ALL USING (\n    EXISTS (\n      SELECT 1 FROM organization_members om \n      WHERE om.organization_id = organization_members.organization_id \n      AND om.user_id = auth.uid()\n      AND om.role IN ('owner', 'admin')\n      AND om.status = 'active'\n    )\n  );\n\n-- Create RLS policies for equipment\nDROP POLICY IF EXISTS \\"Users can view equipment in their organizations\\" ON equipment;\nCREATE POLICY \\"Users can view equipment in their organizations\\" ON equipment\n  FOR SELECT USING (\n    EXISTS (\n      SELECT 1 FROM organization_members \n      WHERE organization_id = equipment.organization_id \n      AND user_id = auth.uid()\n      AND status = 'active'\n    )\n  );\n\nDROP POLICY IF EXISTS \\"Users can manage equipment in their organizations\\" ON equipment;\nCREATE POLICY \\"Users can manage equipment in their organizations\\" ON equipment\n  FOR ALL USING (\n    EXISTS (\n      SELECT 1 FROM organization_members \n      WHERE organization_id = equipment.organization_id \n      AND user_id = auth.uid()\n      AND status = 'active'\n    )\n  );\n\n-- Create RLS policies for work_orders\nDROP POLICY IF EXISTS \\"Users can view work orders in their organizations\\" ON work_orders;\nCREATE POLICY \\"Users can view work orders in their organizations\\" ON work_orders\n  FOR SELECT USING (\n    EXISTS (\n      SELECT 1 FROM organization_members \n      WHERE organization_id = work_orders.organization_id \n      AND user_id = auth.uid()\n      AND status = 'active'\n    )\n  );\n\nDROP POLICY IF EXISTS \\"Users can manage work orders in their organizations\\" ON work_orders;\nCREATE POLICY \\"Users can manage work orders in their organizations\\" ON work_orders\n  FOR ALL USING (\n    EXISTS (\n      SELECT 1 FROM organization_members \n      WHERE organization_id = work_orders.organization_id \n      AND user_id = auth.uid()\n      AND status = 'active'\n    )\n  );\n\n-- Create RLS policies for teams\nDROP POLICY IF EXISTS \\"Users can view teams in their organizations\\" ON teams;\nCREATE POLICY \\"Users can view teams in their organizations\\" ON teams\n  FOR SELECT USING (\n    EXISTS (\n      SELECT 1 FROM organization_members \n      WHERE organization_id = teams.organization_id \n      AND user_id = auth.uid()\n      AND status = 'active'\n    )\n  );\n\nDROP POLICY IF EXISTS \\"Users can manage teams in their organizations\\" ON teams;\nCREATE POLICY \\"Users can manage teams in their organizations\\" ON teams\n  FOR ALL USING (\n    EXISTS (\n      SELECT 1 FROM organization_members \n      WHERE organization_id = teams.organization_id \n      AND user_id = auth.uid()\n      AND status = 'active'\n    )\n  );\n\n-- Create RLS policies for team_members\nDROP POLICY IF EXISTS \\"Users can view team members in their organizations\\" ON team_members;\nCREATE POLICY \\"Users can view team members in their organizations\\" ON team_members\n  FOR SELECT USING (\n    EXISTS (\n      SELECT 1 FROM teams t\n      JOIN organization_members om ON t.organization_id = om.organization_id\n      WHERE t.id = team_members.team_id \n      AND om.user_id = auth.uid()\n      AND om.status = 'active'\n    )\n  );\n\nDROP POLICY IF EXISTS \\"Users can manage team members in their organizations\\" ON team_members;\nCREATE POLICY \\"Users can manage team members in their organizations\\" ON team_members\n  FOR ALL USING (\n    EXISTS (\n      SELECT 1 FROM teams t\n      JOIN organization_members om ON t.organization_id = om.organization_id\n      WHERE t.id = team_members.team_id \n      AND om.user_id = auth.uid()\n      AND om.status = 'active'\n    )\n  );\n\n-- Create RLS policies for scans\nDROP POLICY IF EXISTS \\"Users can view scans in their organizations\\" ON scans;\nCREATE POLICY \\"Users can view scans in their organizations\\" ON scans\n  FOR SELECT USING (\n    EXISTS (\n      SELECT 1 FROM equipment e\n      JOIN organization_members om ON e.organization_id = om.organization_id\n      WHERE e.id = scans.equipment_id \n      AND om.user_id = auth.uid()\n      AND om.status = 'active'\n    )\n  );\n\nDROP POLICY IF EXISTS \\"Users can create scans in their organizations\\" ON scans;\nCREATE POLICY \\"Users can create scans in their organizations\\" ON scans\n  FOR INSERT WITH CHECK (\n    EXISTS (\n      SELECT 1 FROM equipment e\n      JOIN organization_members om ON e.organization_id = om.organization_id\n      WHERE e.id = scans.equipment_id \n      AND om.user_id = auth.uid()\n      AND om.status = 'active'\n    )\n  );\n\n-- Create RLS policies for notes\nDROP POLICY IF EXISTS \\"Users can view notes in their organizations\\" ON notes;\nCREATE POLICY \\"Users can view notes in their organizations\\" ON notes\n  FOR SELECT USING (\n    EXISTS (\n      SELECT 1 FROM equipment e\n      JOIN organization_members om ON e.organization_id = om.organization_id\n      WHERE e.id = notes.equipment_id \n      AND om.user_id = auth.uid()\n      AND om.status = 'active'\n    )\n  );\n\nDROP POLICY IF EXISTS \\"Users can manage notes in their organizations\\" ON notes;\nCREATE POLICY \\"Users can manage notes in their organizations\\" ON notes\n  FOR ALL USING (\n    EXISTS (\n      SELECT 1 FROM equipment e\n      JOIN organization_members om ON e.organization_id = om.organization_id\n      WHERE e.id = notes.equipment_id \n      AND om.user_id = auth.uid()\n      AND om.status = 'active'\n    )\n  );\n"}	2992e2db-7369-4358-aa76-091a8ff84d77	viral.architect@gmail.com	\N
20250617025649	{"\n-- Create security definer functions for team membership checks\nCREATE OR REPLACE FUNCTION public.get_user_organization_membership(user_uuid uuid)\nRETURNS TABLE(organization_id uuid, role text, status text)\nLANGUAGE sql\nSECURITY DEFINER\nSTABLE\nAS $$\n  SELECT om.organization_id, om.role, om.status\n  FROM organization_members om\n  WHERE om.user_id = user_uuid AND om.status = 'active';\n$$;\n\nCREATE OR REPLACE FUNCTION public.get_user_team_memberships(user_uuid uuid, org_id uuid)\nRETURNS TABLE(team_id uuid, team_name text, role text, joined_date timestamp with time zone)\nLANGUAGE sql\nSECURITY DEFINER\nSTABLE\nAS $$\n  SELECT tm.team_id, t.name as team_name, tm.role::text, tm.joined_date\n  FROM team_members tm\n  JOIN teams t ON tm.team_id = t.id\n  WHERE tm.user_id = user_uuid \n    AND t.organization_id = org_id;\n$$;\n\nCREATE OR REPLACE FUNCTION public.check_user_team_role(user_uuid uuid, team_uuid uuid, required_role text)\nRETURNS boolean\nLANGUAGE sql\nSECURITY DEFINER\nSTABLE\nAS $$\n  SELECT EXISTS (\n    SELECT 1\n    FROM team_members tm\n    WHERE tm.user_id = user_uuid \n      AND tm.team_id = team_uuid\n      AND tm.role::text = required_role\n  );\n$$;\n\nCREATE OR REPLACE FUNCTION public.check_user_team_access(user_uuid uuid, team_uuid uuid)\nRETURNS boolean\nLANGUAGE sql\nSECURITY DEFINER\nSTABLE\nAS $$\n  SELECT EXISTS (\n    SELECT 1\n    FROM team_members tm\n    WHERE tm.user_id = user_uuid \n      AND tm.team_id = team_uuid\n  );\n$$;\n"}	ec776169-7a80-4da6-89cc-27f75e58aa51	viral.architect@gmail.com	\N
20250617031431	{"\n-- Drop all existing RLS policies that may cause recursion\nDROP POLICY IF EXISTS \\"Users can access their organizations\\" ON organizations;\nDROP POLICY IF EXISTS \\"Users can access organization equipment\\" ON equipment;\nDROP POLICY IF EXISTS \\"Owners and admins can manage equipment\\" ON equipment;\nDROP POLICY IF EXISTS \\"Users can access relevant work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Users can access organization teams\\" ON teams;\nDROP POLICY IF EXISTS \\"Authorized users can manage teams\\" ON teams;\n\n-- Drop all existing policies to ensure clean slate\nDROP POLICY IF EXISTS \\"Users can view their organizations\\" ON organizations;\nDROP POLICY IF EXISTS \\"Organization admins can update organizations\\" ON organizations;\nDROP POLICY IF EXISTS \\"Users can view organization members\\" ON organization_members;\nDROP POLICY IF EXISTS \\"Organization admins can insert members\\" ON organization_members;\nDROP POLICY IF EXISTS \\"Organization admins can update members\\" ON organization_members;\nDROP POLICY IF EXISTS \\"Organization admins can delete members\\" ON organization_members;\nDROP POLICY IF EXISTS \\"Users can view their own membership\\" ON organization_members;\nDROP POLICY IF EXISTS \\"Users can view organization teams\\" ON teams;\nDROP POLICY IF EXISTS \\"Organization admins can insert teams\\" ON teams;\nDROP POLICY IF EXISTS \\"Organization admins can update teams\\" ON teams;\nDROP POLICY IF EXISTS \\"Organization admins can delete teams\\" ON teams;\nDROP POLICY IF EXISTS \\"Team managers can update their teams\\" ON teams;\nDROP POLICY IF EXISTS \\"Users can view team members\\" ON team_members;\nDROP POLICY IF EXISTS \\"Organization admins can insert team members\\" ON team_members;\nDROP POLICY IF EXISTS \\"Organization admins can update team members\\" ON team_members;\nDROP POLICY IF EXISTS \\"Organization admins can delete team members\\" ON team_members;\nDROP POLICY IF EXISTS \\"Team managers can insert their team members\\" ON team_members;\nDROP POLICY IF EXISTS \\"Team managers can update their team members\\" ON team_members;\nDROP POLICY IF EXISTS \\"Team managers can delete their team members\\" ON team_members;\nDROP POLICY IF EXISTS \\"Users can view organization equipment\\" ON equipment;\nDROP POLICY IF EXISTS \\"Organization admins can insert equipment\\" ON equipment;\nDROP POLICY IF EXISTS \\"Organization admins can update equipment\\" ON equipment;\nDROP POLICY IF EXISTS \\"Organization admins can delete equipment\\" ON equipment;\nDROP POLICY IF EXISTS \\"Users can view organization work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Users can create work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Organization admins can update work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Organization admins can delete work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Assigned users can update work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Users can view all profiles\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can update their own profile\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can view organization scans\\" ON scans;\nDROP POLICY IF EXISTS \\"Users can create scans\\" ON scans;\nDROP POLICY IF EXISTS \\"Users can view organization notes\\" ON notes;\nDROP POLICY IF EXISTS \\"Users can create notes\\" ON notes;\nDROP POLICY IF EXISTS \\"Authors can update their own notes\\" ON notes;\n\n-- Enable RLS on all tables\nALTER TABLE organizations ENABLE ROW LEVEL SECURITY;\nALTER TABLE organization_members ENABLE ROW LEVEL SECURITY;\nALTER TABLE teams ENABLE ROW LEVEL SECURITY;\nALTER TABLE team_members ENABLE ROW LEVEL SECURITY;\nALTER TABLE equipment ENABLE ROW LEVEL SECURITY;\nALTER TABLE work_orders ENABLE ROW LEVEL SECURITY;\nALTER TABLE profiles ENABLE ROW LEVEL SECURITY;\nALTER TABLE scans ENABLE ROW LEVEL SECURITY;\nALTER TABLE notes ENABLE ROW LEVEL SECURITY;\n\n-- Create comprehensive security definer functions\nCREATE OR REPLACE FUNCTION public.get_user_organization_role(user_uuid uuid, org_id uuid)\nRETURNS text\nLANGUAGE sql\nSECURITY DEFINER\nSTABLE\nAS $$\n  SELECT om.role\n  FROM organization_members om\n  WHERE om.user_id = user_uuid \n    AND om.organization_id = org_id \n    AND om.status = 'active'\n  LIMIT 1;\n$$;\n\nCREATE OR REPLACE FUNCTION public.user_has_organization_access(user_uuid uuid, org_id uuid)\nRETURNS boolean\nLANGUAGE sql\nSECURITY DEFINER\nSTABLE\nAS $$\n  SELECT EXISTS (\n    SELECT 1\n    FROM organization_members om\n    WHERE om.user_id = user_uuid \n      AND om.organization_id = org_id \n      AND om.status = 'active'\n  );\n$$;\n\nCREATE OR REPLACE FUNCTION public.user_is_organization_admin(user_uuid uuid, org_id uuid)\nRETURNS boolean\nLANGUAGE sql\nSECURITY DEFINER\nSTABLE\nAS $$\n  SELECT EXISTS (\n    SELECT 1\n    FROM organization_members om\n    WHERE om.user_id = user_uuid \n      AND om.organization_id = org_id \n      AND om.role IN ('owner', 'admin')\n      AND om.status = 'active'\n  );\n$$;\n\n-- Organization policies\nCREATE POLICY \\"Users can view their organizations\\" \n  ON organizations \n  FOR SELECT \n  USING (public.user_has_organization_access(auth.uid(), id));\n\nCREATE POLICY \\"Organization admins can update organizations\\" \n  ON organizations \n  FOR UPDATE \n  USING (public.user_is_organization_admin(auth.uid(), id));\n\n-- Organization members policies\nCREATE POLICY \\"Users can view organization members\\" \n  ON organization_members \n  FOR SELECT \n  USING (public.user_has_organization_access(auth.uid(), organization_id));\n\nCREATE POLICY \\"Organization admins can manage members\\" \n  ON organization_members \n  FOR ALL \n  USING (public.user_is_organization_admin(auth.uid(), organization_id));\n\n-- Teams policies\nCREATE POLICY \\"Users can view organization teams\\" \n  ON teams \n  FOR SELECT \n  USING (public.user_has_organization_access(auth.uid(), organization_id));\n\nCREATE POLICY \\"Organization admins can manage teams\\" \n  ON teams \n  FOR ALL \n  USING (public.user_is_organization_admin(auth.uid(), organization_id));\n\nCREATE POLICY \\"Team managers can update their teams\\" \n  ON teams \n  FOR UPDATE \n  USING (public.check_user_team_role(auth.uid(), id, 'manager'));\n\n-- Team members policies\nCREATE POLICY \\"Users can view team members\\" \n  ON team_members \n  FOR SELECT \n  USING (\n    public.user_has_organization_access(auth.uid(), (\n      SELECT organization_id FROM teams WHERE id = team_id\n    ))\n  );\n\nCREATE POLICY \\"Organization admins can manage team members\\" \n  ON team_members \n  FOR ALL \n  USING (\n    public.user_is_organization_admin(auth.uid(), (\n      SELECT organization_id FROM teams WHERE id = team_id\n    ))\n  );\n\nCREATE POLICY \\"Team managers can manage their team members\\" \n  ON team_members \n  FOR ALL \n  USING (public.check_user_team_role(auth.uid(), team_id, 'manager'));\n\n-- Equipment policies\nCREATE POLICY \\"Users can view organization equipment\\" \n  ON equipment \n  FOR SELECT \n  USING (public.user_has_organization_access(auth.uid(), organization_id));\n\nCREATE POLICY \\"Organization admins can manage equipment\\" \n  ON equipment \n  FOR ALL \n  USING (public.user_is_organization_admin(auth.uid(), organization_id));\n\n-- Work orders policies\nCREATE POLICY \\"Users can view organization work orders\\" \n  ON work_orders \n  FOR SELECT \n  USING (public.user_has_organization_access(auth.uid(), organization_id));\n\nCREATE POLICY \\"Users can create work orders\\" \n  ON work_orders \n  FOR INSERT \n  WITH CHECK (\n    public.user_has_organization_access(auth.uid(), organization_id) AND\n    created_by = auth.uid()\n  );\n\nCREATE POLICY \\"Organization admins can manage work orders\\" \n  ON work_orders \n  FOR UPDATE \n  USING (public.user_is_organization_admin(auth.uid(), organization_id));\n\nCREATE POLICY \\"Organization admins can delete work orders\\" \n  ON work_orders \n  FOR DELETE \n  USING (public.user_is_organization_admin(auth.uid(), organization_id));\n\nCREATE POLICY \\"Assigned users can update work orders\\" \n  ON work_orders \n  FOR UPDATE \n  USING (\n    assignee_id = auth.uid() OR\n    public.check_user_team_access(auth.uid(), team_id)\n  );\n\n-- Profiles policies\nCREATE POLICY \\"Users can view all profiles\\" \n  ON profiles \n  FOR SELECT \n  USING (true);\n\nCREATE POLICY \\"Users can update own profile\\" \n  ON profiles \n  FOR UPDATE \n  USING (id = auth.uid());\n\n-- Scans policies\nCREATE POLICY \\"Users can view organization scans\\" \n  ON scans \n  FOR SELECT \n  USING (\n    public.user_has_organization_access(auth.uid(), (\n      SELECT organization_id FROM equipment WHERE id = equipment_id\n    ))\n  );\n\nCREATE POLICY \\"Users can create scans\\" \n  ON scans \n  FOR INSERT \n  WITH CHECK (\n    scanned_by = auth.uid() AND\n    public.user_has_organization_access(auth.uid(), (\n      SELECT organization_id FROM equipment WHERE id = equipment_id\n    ))\n  );\n\n-- Notes policies\nCREATE POLICY \\"Users can view organization notes\\" \n  ON notes \n  FOR SELECT \n  USING (\n    public.user_has_organization_access(auth.uid(), (\n      SELECT organization_id FROM equipment WHERE id = equipment_id\n    ))\n  );\n\nCREATE POLICY \\"Users can create notes\\" \n  ON notes \n  FOR INSERT \n  WITH CHECK (\n    author_id = auth.uid() AND\n    public.user_has_organization_access(auth.uid(), (\n      SELECT organization_id FROM equipment WHERE id = equipment_id\n    ))\n  );\n\nCREATE POLICY \\"Authors can update own notes\\" \n  ON notes \n  FOR UPDATE \n  USING (author_id = auth.uid());\n"}	4686ed50-321f-4eba-b0cc-059c88844a95	viral.architect@gmail.com	\N
20250617032743	{"\n-- First, let's add the team_id column to equipment table to establish team ownership\nALTER TABLE equipment ADD COLUMN team_id uuid REFERENCES teams(id);\n\n-- Add team_id to work_orders table if not already present (it seems to exist already)\n-- The work_orders table already has team_id column based on the schema\n\n-- Create enhanced security definer functions for team-based access control\nCREATE OR REPLACE FUNCTION public.get_user_team_ids(user_uuid uuid, org_id uuid)\nRETURNS uuid[]\nLANGUAGE sql\nSECURITY DEFINER\nSTABLE\nAS $$\n  SELECT ARRAY_AGG(tm.team_id)\n  FROM team_members tm\n  JOIN teams t ON tm.team_id = t.id\n  WHERE tm.user_id = user_uuid \n    AND t.organization_id = org_id;\n$$;\n\nCREATE OR REPLACE FUNCTION public.user_has_team_equipment_access(user_uuid uuid, equipment_team_id uuid)\nRETURNS boolean\nLANGUAGE sql\nSECURITY DEFINER\nSTABLE\nAS $$\n  SELECT EXISTS (\n    SELECT 1\n    FROM team_members tm\n    WHERE tm.user_id = user_uuid \n      AND tm.team_id = equipment_team_id\n  );\n$$;\n\nCREATE OR REPLACE FUNCTION public.user_has_work_order_access(user_uuid uuid, work_order_team_id uuid, work_order_assignee_id uuid, work_order_created_by uuid)\nRETURNS boolean\nLANGUAGE sql\nSECURITY DEFINER\nSTABLE\nAS $$\n  SELECT (\n    -- User is assigned to the work order\n    work_order_assignee_id = user_uuid OR\n    -- User created the work order\n    work_order_created_by = user_uuid OR\n    -- User is a member of the team assigned to the work order\n    (work_order_team_id IS NOT NULL AND EXISTS (\n      SELECT 1\n      FROM team_members tm\n      WHERE tm.user_id = user_uuid \n        AND tm.team_id = work_order_team_id\n    ))\n  );\n$$;\n\n-- Drop all existing RLS policies to avoid conflicts\nDROP POLICY IF EXISTS \\"Users can view their organizations\\" ON organizations;\nDROP POLICY IF EXISTS \\"Organization admins can update organizations\\" ON organizations;\nDROP POLICY IF EXISTS \\"Users can view organization members\\" ON organization_members;\nDROP POLICY IF EXISTS \\"Organization admins can manage members\\" ON organization_members;\nDROP POLICY IF EXISTS \\"Users can view organization teams\\" ON teams;\nDROP POLICY IF EXISTS \\"Organization admins can manage teams\\" ON teams;\nDROP POLICY IF EXISTS \\"Team managers can update their teams\\" ON teams;\nDROP POLICY IF EXISTS \\"Users can view team members\\" ON team_members;\nDROP POLICY IF EXISTS \\"Organization admins can manage team members\\" ON team_members;\nDROP POLICY IF EXISTS \\"Team managers can manage their team members\\" ON team_members;\nDROP POLICY IF EXISTS \\"Users can view organization equipment\\" ON equipment;\nDROP POLICY IF EXISTS \\"Organization admins can manage equipment\\" ON equipment;\nDROP POLICY IF EXISTS \\"Users can view organization work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Users can create work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Organization admins can manage work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Organization admins can delete work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Assigned users can update work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Users can view all profiles\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can update own profile\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can view organization scans\\" ON scans;\nDROP POLICY IF EXISTS \\"Users can create scans\\" ON scans;\nDROP POLICY IF EXISTS \\"Users can view organization notes\\" ON notes;\nDROP POLICY IF EXISTS \\"Users can create notes\\" ON notes;\nDROP POLICY IF EXISTS \\"Authors can update own notes\\" ON notes;\n\n-- Create new comprehensive RLS policies with team-based isolation\n\n-- Organizations policies (unchanged)\nCREATE POLICY \\"Users can view their organizations\\" \n  ON organizations \n  FOR SELECT \n  USING (public.user_has_organization_access(auth.uid(), id));\n\nCREATE POLICY \\"Organization admins can update organizations\\" \n  ON organizations \n  FOR UPDATE \n  USING (public.user_is_organization_admin(auth.uid(), id));\n\n-- Organization members policies (unchanged)\nCREATE POLICY \\"Users can view organization members\\" \n  ON organization_members \n  FOR SELECT \n  USING (public.user_has_organization_access(auth.uid(), organization_id));\n\nCREATE POLICY \\"Organization admins can manage members\\" \n  ON organization_members \n  FOR ALL \n  USING (public.user_is_organization_admin(auth.uid(), organization_id));\n\n-- Teams policies (unchanged)\nCREATE POLICY \\"Users can view organization teams\\" \n  ON teams \n  FOR SELECT \n  USING (public.user_has_organization_access(auth.uid(), organization_id));\n\nCREATE POLICY \\"Organization admins can manage teams\\" \n  ON teams \n  FOR ALL \n  USING (public.user_is_organization_admin(auth.uid(), organization_id));\n\nCREATE POLICY \\"Team managers can update their teams\\" \n  ON teams \n  FOR UPDATE \n  USING (public.check_user_team_role(auth.uid(), id, 'manager'));\n\n-- Team members policies (unchanged)\nCREATE POLICY \\"Users can view team members\\" \n  ON team_members \n  FOR SELECT \n  USING (\n    public.user_has_organization_access(auth.uid(), (\n      SELECT organization_id FROM teams WHERE id = team_id\n    ))\n  );\n\nCREATE POLICY \\"Organization admins can manage team members\\" \n  ON team_members \n  FOR ALL \n  USING (\n    public.user_is_organization_admin(auth.uid(), (\n      SELECT organization_id FROM teams WHERE id = team_id\n    ))\n  );\n\nCREATE POLICY \\"Team managers can manage their team members\\" \n  ON team_members \n  FOR ALL \n  USING (public.check_user_team_role(auth.uid(), team_id, 'manager'));\n\n-- NEW: Team-based equipment policies\nCREATE POLICY \\"Users can view team equipment\\" \n  ON equipment \n  FOR SELECT \n  USING (\n    -- Organization admins can see all equipment\n    public.user_is_organization_admin(auth.uid(), organization_id) OR\n    -- Team members can see their team's equipment\n    (team_id IS NOT NULL AND public.user_has_team_equipment_access(auth.uid(), team_id)) OR\n    -- Unassigned equipment visible to all org members\n    (team_id IS NULL AND public.user_has_organization_access(auth.uid(), organization_id))\n  );\n\nCREATE POLICY \\"Organization admins can manage all equipment\\" \n  ON equipment \n  FOR ALL \n  USING (public.user_is_organization_admin(auth.uid(), organization_id));\n\nCREATE POLICY \\"Team managers can manage their team equipment\\" \n  ON equipment \n  FOR UPDATE \n  USING (\n    team_id IS NOT NULL AND \n    public.check_user_team_role(auth.uid(), team_id, 'manager')\n  );\n\nCREATE POLICY \\"Team technicians can update their team equipment status\\" \n  ON equipment \n  FOR UPDATE \n  USING (\n    team_id IS NOT NULL AND \n    public.check_user_team_access(auth.uid(), team_id)\n  );\n\n-- NEW: Team-based work orders policies\nCREATE POLICY \\"Users can view relevant work orders\\" \n  ON work_orders \n  FOR SELECT \n  USING (\n    -- Organization admins can see all work orders\n    public.user_is_organization_admin(auth.uid(), organization_id) OR\n    -- Users can see work orders they have access to\n    public.user_has_work_order_access(auth.uid(), team_id, assignee_id, created_by)\n  );\n\nCREATE POLICY \\"Users can create work orders\\" \n  ON work_orders \n  FOR INSERT \n  WITH CHECK (\n    public.user_has_organization_access(auth.uid(), organization_id) AND\n    created_by = auth.uid()\n  );\n\nCREATE POLICY \\"Organization admins can manage all work orders\\" \n  ON work_orders \n  FOR UPDATE \n  USING (public.user_is_organization_admin(auth.uid(), organization_id));\n\nCREATE POLICY \\"Users can update relevant work orders\\" \n  ON work_orders \n  FOR UPDATE \n  USING (\n    public.user_has_work_order_access(auth.uid(), team_id, assignee_id, created_by)\n  );\n\nCREATE POLICY \\"Organization admins can delete work orders\\" \n  ON work_orders \n  FOR DELETE \n  USING (public.user_is_organization_admin(auth.uid(), organization_id));\n\n-- Profiles policies (unchanged)\nCREATE POLICY \\"Users can view all profiles\\" \n  ON profiles \n  FOR SELECT \n  USING (true);\n\nCREATE POLICY \\"Users can update own profile\\" \n  ON profiles \n  FOR UPDATE \n  USING (id = auth.uid());\n\n-- NEW: Team-based scans policies\nCREATE POLICY \\"Users can view team equipment scans\\" \n  ON scans \n  FOR SELECT \n  USING (\n    EXISTS (\n      SELECT 1 FROM equipment e \n      WHERE e.id = equipment_id \n      AND (\n        public.user_is_organization_admin(auth.uid(), e.organization_id) OR\n        (e.team_id IS NOT NULL AND public.user_has_team_equipment_access(auth.uid(), e.team_id)) OR\n        (e.team_id IS NULL AND public.user_has_organization_access(auth.uid(), e.organization_id))\n      )\n    )\n  );\n\nCREATE POLICY \\"Users can create scans for accessible equipment\\" \n  ON scans \n  FOR INSERT \n  WITH CHECK (\n    scanned_by = auth.uid() AND\n    EXISTS (\n      SELECT 1 FROM equipment e \n      WHERE e.id = equipment_id \n      AND (\n        public.user_is_organization_admin(auth.uid(), e.organization_id) OR\n        (e.team_id IS NOT NULL AND public.user_has_team_equipment_access(auth.uid(), e.team_id)) OR\n        (e.team_id IS NULL AND public.user_has_organization_access(auth.uid(), e.organization_id))\n      )\n    )\n  );\n\n-- NEW: Team-based notes policies\nCREATE POLICY \\"Users can view team equipment notes\\" \n  ON notes \n  FOR SELECT \n  USING (\n    EXISTS (\n      SELECT 1 FROM equipment e \n      WHERE e.id = equipment_id \n      AND (\n        public.user_is_organization_admin(auth.uid(), e.organization_id) OR\n        (e.team_id IS NOT NULL AND public.user_has_team_equipment_access(auth.uid(), e.team_id)) OR\n        (e.team_id IS NULL AND public.user_has_organization_access(auth.uid(), e.organization_id))\n      )\n    )\n  );\n\nCREATE POLICY \\"Users can create notes for accessible equipment\\" \n  ON notes \n  FOR INSERT \n  WITH CHECK (\n    author_id = auth.uid() AND\n    EXISTS (\n      SELECT 1 FROM equipment e \n      WHERE e.id = equipment_id \n      AND (\n        public.user_is_organization_admin(auth.uid(), e.organization_id) OR\n        (e.team_id IS NOT NULL AND public.user_has_team_equipment_access(auth.uid(), e.team_id)) OR\n        (e.team_id IS NULL AND public.user_has_organization_access(auth.uid(), e.organization_id))\n      )\n    )\n  );\n\nCREATE POLICY \\"Authors can update own notes\\" \n  ON notes \n  FOR UPDATE \n  USING (author_id = auth.uid());\n"}	fe3bf811-3691-4d75-a552-e2ac15f90e5d	viral.architect@gmail.com	\N
20250617033952	{"\n-- Step 1: Temporarily disable RLS on organization_members to break the recursion\nALTER TABLE organization_members DISABLE ROW LEVEL SECURITY;\n\n-- Step 2: Drop all existing RLS policies to start fresh\nDROP POLICY IF EXISTS \\"Users can view their organizations\\" ON organizations;\nDROP POLICY IF EXISTS \\"Organization admins can update organizations\\" ON organizations;\nDROP POLICY IF EXISTS \\"Users can view organization members\\" ON organization_members;\nDROP POLICY IF EXISTS \\"Organization admins can manage members\\" ON organization_members;\nDROP POLICY IF EXISTS \\"Users can view organization teams\\" ON teams;\nDROP POLICY IF EXISTS \\"Organization admins can manage teams\\" ON teams;\nDROP POLICY IF EXISTS \\"Team managers can update their teams\\" ON teams;\nDROP POLICY IF EXISTS \\"Users can view team members\\" ON team_members;\nDROP POLICY IF EXISTS \\"Organization admins can manage team members\\" ON team_members;\nDROP POLICY IF EXISTS \\"Team managers can manage their team members\\" ON team_members;\nDROP POLICY IF EXISTS \\"Users can view organization equipment\\" ON equipment;\nDROP POLICY IF EXISTS \\"Organization admins can manage equipment\\" ON equipment;\nDROP POLICY IF EXISTS \\"Users can view organization work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Users can create work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Organization admins can manage work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Organization admins can delete work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Assigned users can update work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Users can view all profiles\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can update own profile\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can view organization scans\\" ON scans;\nDROP POLICY IF EXISTS \\"Users can create scans\\" ON scans;\nDROP POLICY IF EXISTS \\"Users can view organization notes\\" ON notes;\nDROP POLICY IF EXISTS \\"Users can create notes\\" ON notes;\nDROP POLICY IF EXISTS \\"Authors can update own notes\\" ON notes;\n\n-- Step 3: Update security definer functions to use direct table access (bypassing RLS)\nCREATE OR REPLACE FUNCTION public.get_user_organization_role(user_uuid uuid, org_id uuid)\nRETURNS text\nLANGUAGE sql\nSECURITY DEFINER\nSTABLE\nSET search_path = public\nAS $$\n  SELECT om.role\n  FROM organization_members om\n  WHERE om.user_id = user_uuid \n    AND om.organization_id = org_id \n    AND om.status = 'active'\n  LIMIT 1;\n$$;\n\nCREATE OR REPLACE FUNCTION public.user_has_organization_access(user_uuid uuid, org_id uuid)\nRETURNS boolean\nLANGUAGE sql\nSECURITY DEFINER\nSTABLE\nSET search_path = public\nAS $$\n  SELECT EXISTS (\n    SELECT 1\n    FROM organization_members om\n    WHERE om.user_id = user_uuid \n      AND om.organization_id = org_id \n      AND om.status = 'active'\n  );\n$$;\n\nCREATE OR REPLACE FUNCTION public.user_is_organization_admin(user_uuid uuid, org_id uuid)\nRETURNS boolean\nLANGUAGE sql\nSECURITY DEFINER\nSTABLE\nSET search_path = public\nAS $$\n  SELECT EXISTS (\n    SELECT 1\n    FROM organization_members om\n    WHERE om.user_id = user_uuid \n      AND om.organization_id = org_id \n      AND om.role IN ('owner', 'admin')\n      AND om.status = 'active'\n  );\n$$;\n\n-- Step 4: Re-enable RLS on organization_members\nALTER TABLE organization_members ENABLE ROW LEVEL SECURITY;\n\n-- Step 5: Create consolidated, non-recursive RLS policies\n\n-- Organizations policies\nCREATE POLICY \\"Users can view their organizations\\" \n  ON organizations \n  FOR SELECT \n  USING (public.user_has_organization_access(auth.uid(), id));\n\nCREATE POLICY \\"Organization admins can update organizations\\" \n  ON organizations \n  FOR UPDATE \n  USING (public.user_is_organization_admin(auth.uid(), id));\n\n-- Organization members policies (simplified to avoid recursion)\nCREATE POLICY \\"Users can view organization members\\" \n  ON organization_members \n  FOR SELECT \n  USING (public.user_has_organization_access(auth.uid(), organization_id));\n\nCREATE POLICY \\"Organization admins can manage members\\" \n  ON organization_members \n  FOR ALL \n  USING (public.user_is_organization_admin(auth.uid(), organization_id));\n\n-- Teams policies\nCREATE POLICY \\"Users can view organization teams\\" \n  ON teams \n  FOR SELECT \n  USING (public.user_has_organization_access(auth.uid(), organization_id));\n\nCREATE POLICY \\"Organization admins can manage teams\\" \n  ON teams \n  FOR ALL \n  USING (public.user_is_organization_admin(auth.uid(), organization_id));\n\nCREATE POLICY \\"Team managers can update their teams\\" \n  ON teams \n  FOR UPDATE \n  USING (public.check_user_team_role(auth.uid(), id, 'manager'));\n\n-- Team members policies\nCREATE POLICY \\"Users can view team members\\" \n  ON team_members \n  FOR SELECT \n  USING (\n    public.user_has_organization_access(auth.uid(), (\n      SELECT organization_id FROM teams WHERE id = team_id\n    ))\n  );\n\nCREATE POLICY \\"Organization admins can manage team members\\" \n  ON team_members \n  FOR ALL \n  USING (\n    public.user_is_organization_admin(auth.uid(), (\n      SELECT organization_id FROM teams WHERE id = team_id\n    ))\n  );\n\nCREATE POLICY \\"Team managers can manage their team members\\" \n  ON team_members \n  FOR ALL \n  USING (public.check_user_team_role(auth.uid(), team_id, 'manager'));\n\n-- Equipment policies\nCREATE POLICY \\"Users can view organization equipment\\" \n  ON equipment \n  FOR SELECT \n  USING (public.user_has_organization_access(auth.uid(), organization_id));\n\nCREATE POLICY \\"Organization admins can manage equipment\\" \n  ON equipment \n  FOR ALL \n  USING (public.user_is_organization_admin(auth.uid(), organization_id));\n\n-- Work orders policies\nCREATE POLICY \\"Users can view organization work orders\\" \n  ON work_orders \n  FOR SELECT \n  USING (public.user_has_organization_access(auth.uid(), organization_id));\n\nCREATE POLICY \\"Users can create work orders\\" \n  ON work_orders \n  FOR INSERT \n  WITH CHECK (\n    public.user_has_organization_access(auth.uid(), organization_id) AND\n    created_by = auth.uid()\n  );\n\nCREATE POLICY \\"Organization admins can update work orders\\" \n  ON work_orders \n  FOR UPDATE \n  USING (public.user_is_organization_admin(auth.uid(), organization_id));\n\nCREATE POLICY \\"Organization admins can delete work orders\\" \n  ON work_orders \n  FOR DELETE \n  USING (public.user_is_organization_admin(auth.uid(), organization_id));\n\nCREATE POLICY \\"Assigned users can update work orders\\" \n  ON work_orders \n  FOR UPDATE \n  USING (\n    assignee_id = auth.uid() OR\n    public.check_user_team_access(auth.uid(), team_id)\n  );\n\n-- Profiles policies\nCREATE POLICY \\"Users can view all profiles\\" \n  ON profiles \n  FOR SELECT \n  USING (true);\n\nCREATE POLICY \\"Users can update own profile\\" \n  ON profiles \n  FOR UPDATE \n  USING (id = auth.uid());\n\n-- Scans policies\nCREATE POLICY \\"Users can view organization scans\\" \n  ON scans \n  FOR SELECT \n  USING (\n    public.user_has_organization_access(auth.uid(), (\n      SELECT organization_id FROM equipment WHERE id = equipment_id\n    ))\n  );\n\nCREATE POLICY \\"Users can create scans\\" \n  ON scans \n  FOR INSERT \n  WITH CHECK (\n    scanned_by = auth.uid() AND\n    public.user_has_organization_access(auth.uid(), (\n      SELECT organization_id FROM equipment WHERE id = equipment_id\n    ))\n  );\n\n-- Notes policies\nCREATE POLICY \\"Users can view organization notes\\" \n  ON notes \n  FOR SELECT \n  USING (\n    public.user_has_organization_access(auth.uid(), (\n      SELECT organization_id FROM equipment WHERE id = equipment_id\n    ))\n  );\n\nCREATE POLICY \\"Users can create notes\\" \n  ON notes \n  FOR INSERT \n  WITH CHECK (\n    author_id = auth.uid() AND\n    public.user_has_organization_access(auth.uid(), (\n      SELECT organization_id FROM equipment WHERE id = equipment_id\n    ))\n  );\n\nCREATE POLICY \\"Authors can update own notes\\" \n  ON notes \n  FOR UPDATE \n  USING (author_id = auth.uid());\n"}	833e3065-b348-42b2-9977-59a16620ead5	viral.architect@gmail.com	\N
20250617042825	{"\n-- Step 1: Drop ALL policies that might exist (comprehensive list)\nDROP POLICY IF EXISTS \\"Users can view their organizations\\" ON organizations;\nDROP POLICY IF EXISTS \\"Organization admins can update organizations\\" ON organizations;\nDROP POLICY IF EXISTS \\"Users can view organization members\\" ON organization_members;\nDROP POLICY IF EXISTS \\"Organization admins can manage members\\" ON organization_members;\nDROP POLICY IF EXISTS \\"Users can view organization teams\\" ON teams;\nDROP POLICY IF EXISTS \\"Organization admins can manage teams\\" ON teams;\nDROP POLICY IF EXISTS \\"Team managers can update their teams\\" ON teams;\nDROP POLICY IF EXISTS \\"Users can view team members\\" ON team_members;\nDROP POLICY IF EXISTS \\"Organization admins can manage team members\\" ON team_members;\nDROP POLICY IF EXISTS \\"Team managers can manage their team members\\" ON team_members;\nDROP POLICY IF EXISTS \\"Users can view organization equipment\\" ON equipment;\nDROP POLICY IF EXISTS \\"Organization admins can manage equipment\\" ON equipment;\nDROP POLICY IF EXISTS \\"Users can view organization work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Users can create work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Organization admins can update work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Organization admins can delete work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Assigned users can update work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Users can view all profiles\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can update own profile\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can view organization scans\\" ON scans;\nDROP POLICY IF EXISTS \\"Users can create scans\\" ON scans;\nDROP POLICY IF EXISTS \\"Users can view organization notes\\" ON notes;\nDROP POLICY IF EXISTS \\"Users can create notes\\" ON notes;\nDROP POLICY IF EXISTS \\"Authors can update own notes\\" ON notes;\n\n-- Additional policies that might exist (from the error message)\nDROP POLICY IF EXISTS \\"Users can view organization members if they have access\\" ON organization_members;\nDROP POLICY IF EXISTS \\"Users can view team members in their organization\\" ON team_members;\nDROP POLICY IF EXISTS \\"Users can create work orders in their organization\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Users can view scans for equipment in their organization\\" ON scans;\nDROP POLICY IF EXISTS \\"Users can create scans for equipment in their organization\\" ON scans;\nDROP POLICY IF EXISTS \\"Users can view notes for equipment in their organization\\" ON notes;\nDROP POLICY IF EXISTS \\"Users can create notes for equipment in their organization\\" ON notes;\n\n-- Drop any other potential policies\nDROP POLICY IF EXISTS \\"Users can view team equipment\\" ON equipment;\nDROP POLICY IF EXISTS \\"Organization admins can manage all equipment\\" ON equipment;\nDROP POLICY IF EXISTS \\"Team managers can manage their team equipment\\" ON equipment;\nDROP POLICY IF EXISTS \\"Team technicians can update their team equipment status\\" ON equipment;\nDROP POLICY IF EXISTS \\"Users can view relevant work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Organization admins can manage all work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Users can update relevant work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Users can view team equipment scans\\" ON scans;\nDROP POLICY IF EXISTS \\"Users can create scans for accessible equipment\\" ON scans;\nDROP POLICY IF EXISTS \\"Users can view team equipment notes\\" ON notes;\nDROP POLICY IF EXISTS \\"Users can create notes for accessible equipment\\" ON notes;\n\n-- Step 2: Now drop the functions using CASCADE to force removal of any remaining dependencies\nDROP FUNCTION IF EXISTS public.get_user_organization_role(uuid, uuid) CASCADE;\nDROP FUNCTION IF EXISTS public.user_has_organization_access(uuid, uuid) CASCADE;\nDROP FUNCTION IF EXISTS public.user_is_organization_admin(uuid, uuid) CASCADE;\nDROP FUNCTION IF EXISTS public.get_user_team_ids(uuid, uuid) CASCADE;\nDROP FUNCTION IF EXISTS public.user_has_team_equipment_access(uuid, uuid) CASCADE;\nDROP FUNCTION IF EXISTS public.user_has_work_order_access(uuid, uuid, uuid, uuid) CASCADE;\nDROP FUNCTION IF EXISTS public.check_user_team_role(uuid, uuid, text) CASCADE;\nDROP FUNCTION IF EXISTS public.check_user_team_access(uuid, uuid) CASCADE;\n\n-- Step 3: Create simple, non-recursive security functions\nCREATE OR REPLACE FUNCTION public.get_user_org_role_direct(user_uuid uuid, org_id uuid)\nRETURNS text\nLANGUAGE sql\nSECURITY DEFINER\nSTABLE\nSET search_path = public\nAS $$\n  SELECT role\n  FROM organization_members\n  WHERE user_id = user_uuid \n    AND organization_id = org_id \n    AND status = 'active'\n  LIMIT 1;\n$$;\n\nCREATE OR REPLACE FUNCTION public.check_org_access_direct(user_uuid uuid, org_id uuid)\nRETURNS boolean\nLANGUAGE sql\nSECURITY DEFINER\nSTABLE\nSET search_path = public\nAS $$\n  SELECT EXISTS (\n    SELECT 1\n    FROM organization_members\n    WHERE user_id = user_uuid \n      AND organization_id = org_id \n      AND status = 'active'\n  );\n$$;\n\n-- Step 4: Create minimal RLS policies starting with the most basic ones\n\n-- Profiles policies (no dependencies)\nCREATE POLICY \\"Users can view all profiles\\" \n  ON profiles \n  FOR SELECT \n  USING (true);\n\nCREATE POLICY \\"Users can update own profile\\" \n  ON profiles \n  FOR UPDATE \n  USING (id = auth.uid());\n\n-- Organizations policies (depends on organization_members but NOT vice versa)\nCREATE POLICY \\"Users can view their organizations\\" \n  ON organizations \n  FOR SELECT \n  USING (\n    EXISTS (\n      SELECT 1 FROM organization_members om \n      WHERE om.organization_id = id \n        AND om.user_id = auth.uid() \n        AND om.status = 'active'\n    )\n  );\n\nCREATE POLICY \\"Organization admins can update organizations\\" \n  ON organizations \n  FOR UPDATE \n  USING (\n    EXISTS (\n      SELECT 1 FROM organization_members om \n      WHERE om.organization_id = id \n        AND om.user_id = auth.uid() \n        AND om.role IN ('owner', 'admin')\n        AND om.status = 'active'\n    )\n  );\n\n-- Organization members policies (ULTRA SIMPLE - no function calls)\nCREATE POLICY \\"Users can view org members of their orgs\\" \n  ON organization_members \n  FOR SELECT \n  USING (\n    EXISTS (\n      SELECT 1 FROM organization_members om2 \n      WHERE om2.organization_id = organization_id \n        AND om2.user_id = auth.uid() \n        AND om2.status = 'active'\n    )\n  );\n\nCREATE POLICY \\"Org admins can manage members\\" \n  ON organization_members \n  FOR ALL \n  USING (\n    EXISTS (\n      SELECT 1 FROM organization_members om2 \n      WHERE om2.organization_id = organization_id \n        AND om2.user_id = auth.uid() \n        AND om2.role IN ('owner', 'admin')\n        AND om2.status = 'active'\n    )\n  );\n\n-- Teams policies (using the safe functions)\nCREATE POLICY \\"Users can view organization teams\\" \n  ON teams \n  FOR SELECT \n  USING (public.check_org_access_direct(auth.uid(), organization_id));\n\nCREATE POLICY \\"Organization admins can manage teams\\" \n  ON teams \n  FOR ALL \n  USING (\n    public.get_user_org_role_direct(auth.uid(), organization_id) IN ('owner', 'admin')\n  );\n\n-- Equipment policies (basic)\nCREATE POLICY \\"Users can view organization equipment\\" \n  ON equipment \n  FOR SELECT \n  USING (public.check_org_access_direct(auth.uid(), organization_id));\n\nCREATE POLICY \\"Organization admins can manage equipment\\" \n  ON equipment \n  FOR ALL \n  USING (\n    public.get_user_org_role_direct(auth.uid(), organization_id) IN ('owner', 'admin')\n  );\n\n-- Work orders policies (basic)\nCREATE POLICY \\"Users can view organization work orders\\" \n  ON work_orders \n  FOR SELECT \n  USING (public.check_org_access_direct(auth.uid(), organization_id));\n\nCREATE POLICY \\"Users can create work orders\\" \n  ON work_orders \n  FOR INSERT \n  WITH CHECK (\n    public.check_org_access_direct(auth.uid(), organization_id) AND\n    created_by = auth.uid()\n  );\n\nCREATE POLICY \\"Organization admins can manage work orders\\" \n  ON work_orders \n  FOR UPDATE \n  USING (\n    public.get_user_org_role_direct(auth.uid(), organization_id) IN ('owner', 'admin')\n  );\n\n-- Team members policies (basic)\nCREATE POLICY \\"Users can view team members\\" \n  ON team_members \n  FOR SELECT \n  USING (\n    public.check_org_access_direct(auth.uid(), (\n      SELECT organization_id FROM teams WHERE id = team_id\n    ))\n  );\n\nCREATE POLICY \\"Organization admins can manage team members\\" \n  ON team_members \n  FOR ALL \n  USING (\n    public.get_user_org_role_direct(auth.uid(), (\n      SELECT organization_id FROM teams WHERE id = team_id\n    )) IN ('owner', 'admin')\n  );\n\n-- Scans policies (basic)\nCREATE POLICY \\"Users can view organization scans\\" \n  ON scans \n  FOR SELECT \n  USING (\n    public.check_org_access_direct(auth.uid(), (\n      SELECT organization_id FROM equipment WHERE id = equipment_id\n    ))\n  );\n\nCREATE POLICY \\"Users can create scans\\" \n  ON scans \n  FOR INSERT \n  WITH CHECK (\n    scanned_by = auth.uid() AND\n    public.check_org_access_direct(auth.uid(), (\n      SELECT organization_id FROM equipment WHERE id = equipment_id\n    ))\n  );\n\n-- Notes policies (basic)\nCREATE POLICY \\"Users can view organization notes\\" \n  ON notes \n  FOR SELECT \n  USING (\n    public.check_org_access_direct(auth.uid(), (\n      SELECT organization_id FROM equipment WHERE id = equipment_id\n    ))\n  );\n\nCREATE POLICY \\"Users can create notes\\" \n  ON notes \n  FOR INSERT \n  WITH CHECK (\n    author_id = auth.uid() AND\n    public.check_org_access_direct(auth.uid(), (\n      SELECT organization_id FROM equipment WHERE id = equipment_id\n    ))\n  );\n\nCREATE POLICY \\"Authors can update own notes\\" \n  ON notes \n  FOR UPDATE \n  USING (author_id = auth.uid());\n"}	d41e2390-5322-498d-9b0f-6326b4c23883	viral.architect@gmail.com	\N
20250810101032	{"-- Add RLS policies for invitation_performance_logs table to fix security warning\n-- This table is for system monitoring, so we'll restrict access to system operations only\n\n-- Policy to allow system-level functions to insert performance logs\nCREATE POLICY \\"system_insert_performance_logs\\" ON public.invitation_performance_logs\n  FOR INSERT\n  WITH CHECK (true);\n\n-- Policy to restrict all other operations (no one can read, update, or delete these logs through normal queries)\nCREATE POLICY \\"no_user_access_performance_logs\\" ON public.invitation_performance_logs\n  FOR ALL\n  USING (false);"}		viral.architect@gmail.com	\N
20250617044104	{"\n-- Step 1: Fix all security definer functions to have immutable search paths\n-- This addresses the security warnings and prevents infinite recursion\n\n-- Drop existing functions that have mutable search paths\nDROP FUNCTION IF EXISTS public.get_user_organization_role(uuid, uuid) CASCADE;\nDROP FUNCTION IF EXISTS public.user_has_organization_access(uuid, uuid) CASCADE;\nDROP FUNCTION IF EXISTS public.user_is_organization_admin(uuid, uuid) CASCADE;\nDROP FUNCTION IF EXISTS public.get_user_team_ids(uuid, uuid) CASCADE;\nDROP FUNCTION IF EXISTS public.user_has_team_equipment_access(uuid, uuid) CASCADE;\nDROP FUNCTION IF EXISTS public.user_has_work_order_access(uuid, uuid, uuid, uuid) CASCADE;\nDROP FUNCTION IF EXISTS public.check_user_team_role(uuid, uuid, text) CASCADE;\nDROP FUNCTION IF EXISTS public.check_user_team_access(uuid, uuid) CASCADE;\n\n-- Step 2: Drop ALL existing RLS policies to start fresh\nDROP POLICY IF EXISTS \\"Users can view their organizations\\" ON organizations;\nDROP POLICY IF EXISTS \\"Organization admins can update organizations\\" ON organizations;\nDROP POLICY IF EXISTS \\"Users can view org members of their orgs\\" ON organization_members;\nDROP POLICY IF EXISTS \\"Org admins can manage members\\" ON organization_members;\nDROP POLICY IF EXISTS \\"Users can view organization teams\\" ON teams;\nDROP POLICY IF EXISTS \\"Organization admins can manage teams\\" ON teams;\nDROP POLICY IF EXISTS \\"Team managers can update their teams\\" ON teams;\nDROP POLICY IF EXISTS \\"Users can view team members\\" ON team_members;\nDROP POLICY IF EXISTS \\"Organization admins can manage team members\\" ON team_members;\nDROP POLICY IF EXISTS \\"Team managers can manage their team members\\" ON team_members;\nDROP POLICY IF EXISTS \\"Users can view organization equipment\\" ON equipment;\nDROP POLICY IF EXISTS \\"Organization admins can manage equipment\\" ON equipment;\nDROP POLICY IF EXISTS \\"Users can view organization work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Users can create work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Organization admins can manage work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Organization admins can delete work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Assigned users can update work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Users can view all profiles\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can update own profile\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can view organization scans\\" ON scans;\nDROP POLICY IF EXISTS \\"Users can create scans\\" ON scans;\nDROP POLICY IF EXISTS \\"Users can view organization notes\\" ON notes;\nDROP POLICY IF EXISTS \\"Users can create notes\\" ON notes;\nDROP POLICY IF EXISTS \\"Authors can update own notes\\" ON notes;\n\n-- Step 3: Create NEW security definer functions with proper immutable search paths\nCREATE OR REPLACE FUNCTION public.get_user_org_role_secure(user_uuid uuid, org_id uuid)\nRETURNS text\nLANGUAGE sql\nSECURITY DEFINER\nSTABLE\nSET search_path = 'public'\nAS $$\n  SELECT role\n  FROM public.organization_members\n  WHERE user_id = user_uuid \n    AND organization_id = org_id \n    AND status = 'active'\n  LIMIT 1;\n$$;\n\nCREATE OR REPLACE FUNCTION public.check_org_access_secure(user_uuid uuid, org_id uuid)\nRETURNS boolean\nLANGUAGE sql\nSECURITY DEFINER\nSTABLE\nSET search_path = 'public'\nAS $$\n  SELECT EXISTS (\n    SELECT 1\n    FROM public.organization_members\n    WHERE user_id = user_uuid \n      AND organization_id = org_id \n      AND status = 'active'\n  );\n$$;\n\nCREATE OR REPLACE FUNCTION public.check_org_admin_secure(user_uuid uuid, org_id uuid)\nRETURNS boolean\nLANGUAGE sql\nSECURITY DEFINER\nSTABLE\nSET search_path = 'public'\nAS $$\n  SELECT EXISTS (\n    SELECT 1\n    FROM public.organization_members\n    WHERE user_id = user_uuid \n      AND organization_id = org_id \n      AND role IN ('owner', 'admin')\n      AND status = 'active'\n  );\n$$;\n\nCREATE OR REPLACE FUNCTION public.check_team_access_secure(user_uuid uuid, team_uuid uuid)\nRETURNS boolean\nLANGUAGE sql\nSECURITY DEFINER\nSTABLE\nSET search_path = 'public'\nAS $$\n  SELECT EXISTS (\n    SELECT 1\n    FROM public.team_members tm\n    WHERE tm.user_id = user_uuid \n      AND tm.team_id = team_uuid\n  );\n$$;\n\nCREATE OR REPLACE FUNCTION public.check_team_role_secure(user_uuid uuid, team_uuid uuid, required_role text)\nRETURNS boolean\nLANGUAGE sql\nSECURITY DEFINER\nSTABLE\nSET search_path = 'public'\nAS $$\n  SELECT EXISTS (\n    SELECT 1\n    FROM public.team_members tm\n    WHERE tm.user_id = user_uuid \n      AND tm.team_id = team_uuid\n      AND tm.role::text = required_role\n  );\n$$;\n\n-- Step 4: Create simple, non-recursive RLS policies using only the secure functions\n\n-- Profiles policies (no dependencies)\nCREATE POLICY \\"profiles_select_all\\" \n  ON profiles \n  FOR SELECT \n  USING (true);\n\nCREATE POLICY \\"profiles_update_own\\" \n  ON profiles \n  FOR UPDATE \n  USING (id = auth.uid());\n\n-- Organizations policies\nCREATE POLICY \\"orgs_select_members\\" \n  ON organizations \n  FOR SELECT \n  USING (public.check_org_access_secure(auth.uid(), id));\n\nCREATE POLICY \\"orgs_update_admins\\" \n  ON organizations \n  FOR UPDATE \n  USING (public.check_org_admin_secure(auth.uid(), id));\n\n-- Organization members policies\nCREATE POLICY \\"org_members_select_same_org\\" \n  ON organization_members \n  FOR SELECT \n  USING (public.check_org_access_secure(auth.uid(), organization_id));\n\nCREATE POLICY \\"org_members_manage_admins\\" \n  ON organization_members \n  FOR ALL \n  USING (public.check_org_admin_secure(auth.uid(), organization_id));\n\n-- Teams policies\nCREATE POLICY \\"teams_select_org_members\\" \n  ON teams \n  FOR SELECT \n  USING (public.check_org_access_secure(auth.uid(), organization_id));\n\nCREATE POLICY \\"teams_manage_admins\\" \n  ON teams \n  FOR ALL \n  USING (public.check_org_admin_secure(auth.uid(), organization_id));\n\n-- Team members policies\nCREATE POLICY \\"team_members_select_org_access\\" \n  ON team_members \n  FOR SELECT \n  USING (\n    public.check_org_access_secure(auth.uid(), (\n      SELECT organization_id FROM public.teams WHERE id = team_id\n    ))\n  );\n\nCREATE POLICY \\"team_members_manage_org_admins\\" \n  ON team_members \n  FOR ALL \n  USING (\n    public.check_org_admin_secure(auth.uid(), (\n      SELECT organization_id FROM public.teams WHERE id = team_id\n    ))\n  );\n\n-- Equipment policies\nCREATE POLICY \\"equipment_select_org_members\\" \n  ON equipment \n  FOR SELECT \n  USING (public.check_org_access_secure(auth.uid(), organization_id));\n\nCREATE POLICY \\"equipment_manage_org_admins\\" \n  ON equipment \n  FOR ALL \n  USING (public.check_org_admin_secure(auth.uid(), organization_id));\n\n-- Work orders policies\nCREATE POLICY \\"work_orders_select_org_members\\" \n  ON work_orders \n  FOR SELECT \n  USING (public.check_org_access_secure(auth.uid(), organization_id));\n\nCREATE POLICY \\"work_orders_insert_org_members\\" \n  ON work_orders \n  FOR INSERT \n  WITH CHECK (\n    public.check_org_access_secure(auth.uid(), organization_id) AND\n    created_by = auth.uid()\n  );\n\nCREATE POLICY \\"work_orders_update_org_admins\\" \n  ON work_orders \n  FOR UPDATE \n  USING (public.check_org_admin_secure(auth.uid(), organization_id));\n\nCREATE POLICY \\"work_orders_delete_org_admins\\" \n  ON work_orders \n  FOR DELETE \n  USING (public.check_org_admin_secure(auth.uid(), organization_id));\n\n-- Scans policies\nCREATE POLICY \\"scans_select_equipment_org\\" \n  ON scans \n  FOR SELECT \n  USING (\n    public.check_org_access_secure(auth.uid(), (\n      SELECT organization_id FROM public.equipment WHERE id = equipment_id\n    ))\n  );\n\nCREATE POLICY \\"scans_insert_equipment_org\\" \n  ON scans \n  FOR INSERT \n  WITH CHECK (\n    scanned_by = auth.uid() AND\n    public.check_org_access_secure(auth.uid(), (\n      SELECT organization_id FROM public.equipment WHERE id = equipment_id\n    ))\n  );\n\n-- Notes policies\nCREATE POLICY \\"notes_select_equipment_org\\" \n  ON notes \n  FOR SELECT \n  USING (\n    public.check_org_access_secure(auth.uid(), (\n      SELECT organization_id FROM public.equipment WHERE id = equipment_id\n    ))\n  );\n\nCREATE POLICY \\"notes_insert_equipment_org\\" \n  ON notes \n  FOR INSERT \n  WITH CHECK (\n    author_id = auth.uid() AND\n    public.check_org_access_secure(auth.uid(), (\n      SELECT organization_id FROM public.equipment WHERE id = equipment_id\n    ))\n  );\n\nCREATE POLICY \\"notes_update_own\\" \n  ON notes \n  FOR UPDATE \n  USING (author_id = auth.uid());\n"}	9090039c-0e84-46f6-80f1-2bf1ed7d40f0	viral.architect@gmail.com	\N
20250617044455	{"\n-- Fix the mutable search path issue in get_user_organization_membership function\nCREATE OR REPLACE FUNCTION public.get_user_organization_membership(user_uuid uuid)\nRETURNS TABLE(organization_id uuid, role text, status text)\nLANGUAGE sql\nSECURITY DEFINER\nSTABLE\nSET search_path = 'public'\nAS $$\n  SELECT om.organization_id, om.role, om.status\n  FROM public.organization_members om\n  WHERE om.user_id = user_uuid AND om.status = 'active';\n$$;\n"}	9be77636-ebb0-4ba8-8d23-bc2d3f214967	viral.architect@gmail.com	\N
20250617050253	{"\n-- COMPREHENSIVE SECURITY FIX: Complete RLS Policy Reconstruction\n-- This migration addresses infinite recursion, missing policies, and security vulnerabilities\n\n-- Step 1: Complete policy cleanup (remove ALL existing policies)\nDROP POLICY IF EXISTS \\"Users can view their organizations\\" ON organizations;\nDROP POLICY IF EXISTS \\"Organization admins can update organizations\\" ON organizations;\nDROP POLICY IF EXISTS \\"Users can view organization members\\" ON organization_members;\nDROP POLICY IF EXISTS \\"Organization admins can manage members\\" ON organization_members;\nDROP POLICY IF EXISTS \\"Users can view org members of their orgs\\" ON organization_members;\nDROP POLICY IF EXISTS \\"Org admins can manage members\\" ON organization_members;\nDROP POLICY IF EXISTS \\"Users can view organization teams\\" ON teams;\nDROP POLICY IF EXISTS \\"Organization admins can manage teams\\" ON teams;\nDROP POLICY IF EXISTS \\"Team managers can update their teams\\" ON teams;\nDROP POLICY IF EXISTS \\"Users can view team members\\" ON team_members;\nDROP POLICY IF EXISTS \\"Organization admins can manage team members\\" ON team_members;\nDROP POLICY IF EXISTS \\"Team managers can manage their team members\\" ON team_members;\nDROP POLICY IF EXISTS \\"Users can view organization equipment\\" ON equipment;\nDROP POLICY IF EXISTS \\"Organization admins can manage equipment\\" ON equipment;\nDROP POLICY IF EXISTS \\"Users can view organization work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Users can create work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Organization admins can manage work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Organization admins can update work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Organization admins can delete work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Assigned users can update work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Users can view all profiles\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can update own profile\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can view organization scans\\" ON scans;\nDROP POLICY IF EXISTS \\"Users can create scans\\" ON scans;\nDROP POLICY IF EXISTS \\"Users can view organization notes\\" ON notes;\nDROP POLICY IF EXISTS \\"Users can create notes\\" ON notes;\nDROP POLICY IF EXISTS \\"Authors can update own notes\\" ON notes;\n\n-- Additional cleanup for any other policy variants\nDROP POLICY IF EXISTS \\"profiles_select_all\\" ON profiles;\nDROP POLICY IF EXISTS \\"profiles_update_own\\" ON profiles;\nDROP POLICY IF EXISTS \\"orgs_select_members\\" ON organizations;\nDROP POLICY IF EXISTS \\"orgs_update_admins\\" ON organizations;\nDROP POLICY IF EXISTS \\"org_members_select_same_org\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_manage_admins\\" ON organization_members;\nDROP POLICY IF EXISTS \\"teams_select_org_members\\" ON teams;\nDROP POLICY IF EXISTS \\"teams_manage_admins\\" ON teams;\nDROP POLICY IF EXISTS \\"team_members_select_org_access\\" ON team_members;\nDROP POLICY IF EXISTS \\"team_members_manage_org_admins\\" ON team_members;\nDROP POLICY IF EXISTS \\"equipment_select_org_members\\" ON equipment;\nDROP POLICY IF EXISTS \\"equipment_manage_org_admins\\" ON equipment;\nDROP POLICY IF EXISTS \\"work_orders_select_org_members\\" ON work_orders;\nDROP POLICY IF EXISTS \\"work_orders_insert_org_members\\" ON work_orders;\nDROP POLICY IF EXISTS \\"work_orders_update_org_admins\\" ON work_orders;\nDROP POLICY IF EXISTS \\"work_orders_delete_org_admins\\" ON work_orders;\nDROP POLICY IF EXISTS \\"scans_select_equipment_org\\" ON scans;\nDROP POLICY IF EXISTS \\"scans_insert_equipment_org\\" ON scans;\nDROP POLICY IF EXISTS \\"notes_select_equipment_org\\" ON notes;\nDROP POLICY IF EXISTS \\"notes_insert_equipment_org\\" ON notes;\nDROP POLICY IF EXISTS \\"notes_update_own\\" ON notes;\n\n-- Step 2: Drop conflicting security definer functions\nDROP FUNCTION IF EXISTS public.get_user_organization_role(uuid, uuid) CASCADE;\nDROP FUNCTION IF EXISTS public.user_has_organization_access(uuid, uuid) CASCADE;\nDROP FUNCTION IF EXISTS public.user_is_organization_admin(uuid, uuid) CASCADE;\nDROP FUNCTION IF EXISTS public.get_user_team_ids(uuid, uuid) CASCADE;\nDROP FUNCTION IF EXISTS public.user_has_team_equipment_access(uuid, uuid) CASCADE;\nDROP FUNCTION IF EXISTS public.user_has_work_order_access(uuid, uuid, uuid, uuid) CASCADE;\nDROP FUNCTION IF EXISTS public.check_user_team_role(uuid, uuid, text) CASCADE;\nDROP FUNCTION IF EXISTS public.check_user_team_access(uuid, uuid) CASCADE;\n\n-- Keep the working functions that don't cause recursion\n-- These functions are already defined and working correctly:\n-- - public.get_user_org_role_direct(uuid, uuid)\n-- - public.check_org_access_direct(uuid, uuid)\n-- - public.get_user_org_role_secure(uuid, uuid)\n-- - public.check_org_access_secure(uuid, uuid)\n-- - public.check_org_admin_secure(uuid, uuid)\n-- - public.check_team_access_secure(uuid, uuid)\n-- - public.check_team_role_secure(uuid, uuid, text)\n-- - public.get_user_team_memberships(uuid, uuid)\n-- - public.get_user_organization_membership(uuid)\n\n-- Step 3: Create comprehensive, non-recursive RLS policies\n\n-- PROFILES TABLE (Foundation - no dependencies)\nCREATE POLICY \\"secure_profiles_select_all\\" \n  ON profiles \n  FOR SELECT \n  USING (true);\n\nCREATE POLICY \\"secure_profiles_update_own\\" \n  ON profiles \n  FOR UPDATE \n  USING (id = auth.uid());\n\nCREATE POLICY \\"secure_profiles_insert_own\\" \n  ON profiles \n  FOR INSERT \n  WITH CHECK (id = auth.uid());\n\n-- ORGANIZATIONS TABLE\nCREATE POLICY \\"secure_orgs_select_members\\" \n  ON organizations \n  FOR SELECT \n  USING (public.check_org_access_secure(auth.uid(), id));\n\nCREATE POLICY \\"secure_orgs_update_admins\\" \n  ON organizations \n  FOR UPDATE \n  USING (public.check_org_admin_secure(auth.uid(), id));\n\nCREATE POLICY \\"secure_orgs_insert_admins\\" \n  ON organizations \n  FOR INSERT \n  WITH CHECK (true); -- New organizations can be created\n\n-- ORGANIZATION_MEMBERS TABLE (Critical - must avoid recursion)\nCREATE POLICY \\"secure_org_members_select_same_org\\" \n  ON organization_members \n  FOR SELECT \n  USING (\n    EXISTS (\n      SELECT 1 FROM organization_members om2 \n      WHERE om2.organization_id = organization_id \n        AND om2.user_id = auth.uid() \n        AND om2.status = 'active'\n    )\n  );\n\nCREATE POLICY \\"secure_org_members_insert_admins\\" \n  ON organization_members \n  FOR INSERT \n  WITH CHECK (\n    public.check_org_admin_secure(auth.uid(), organization_id)\n  );\n\nCREATE POLICY \\"secure_org_members_update_admins\\" \n  ON organization_members \n  FOR UPDATE \n  USING (\n    public.check_org_admin_secure(auth.uid(), organization_id)\n  );\n\nCREATE POLICY \\"secure_org_members_delete_admins\\" \n  ON organization_members \n  FOR DELETE \n  USING (\n    public.check_org_admin_secure(auth.uid(), organization_id)\n  );\n\n-- TEAMS TABLE\nCREATE POLICY \\"secure_teams_select_org_members\\" \n  ON teams \n  FOR SELECT \n  USING (public.check_org_access_secure(auth.uid(), organization_id));\n\nCREATE POLICY \\"secure_teams_insert_admins\\" \n  ON teams \n  FOR INSERT \n  WITH CHECK (public.check_org_admin_secure(auth.uid(), organization_id));\n\nCREATE POLICY \\"secure_teams_update_admins\\" \n  ON teams \n  FOR UPDATE \n  USING (public.check_org_admin_secure(auth.uid(), organization_id));\n\nCREATE POLICY \\"secure_teams_delete_admins\\" \n  ON teams \n  FOR DELETE \n  USING (public.check_org_admin_secure(auth.uid(), organization_id));\n\n-- TEAM_MEMBERS TABLE\nCREATE POLICY \\"secure_team_members_select_org_access\\" \n  ON team_members \n  FOR SELECT \n  USING (\n    public.check_org_access_secure(auth.uid(), (\n      SELECT organization_id FROM teams WHERE id = team_id\n    ))\n  );\n\nCREATE POLICY \\"secure_team_members_insert_org_admins\\" \n  ON team_members \n  FOR INSERT \n  WITH CHECK (\n    public.check_org_admin_secure(auth.uid(), (\n      SELECT organization_id FROM teams WHERE id = team_id\n    ))\n  );\n\nCREATE POLICY \\"secure_team_members_update_org_admins\\" \n  ON team_members \n  FOR UPDATE \n  USING (\n    public.check_org_admin_secure(auth.uid(), (\n      SELECT organization_id FROM teams WHERE id = team_id\n    ))\n  );\n\nCREATE POLICY \\"secure_team_members_delete_org_admins\\" \n  ON team_members \n  FOR DELETE \n  USING (\n    public.check_org_admin_secure(auth.uid(), (\n      SELECT organization_id FROM teams WHERE id = team_id\n    ))\n  );\n\n-- EQUIPMENT TABLE\nCREATE POLICY \\"secure_equipment_select_org_members\\" \n  ON equipment \n  FOR SELECT \n  USING (public.check_org_access_secure(auth.uid(), organization_id));\n\nCREATE POLICY \\"secure_equipment_insert_org_members\\" \n  ON equipment \n  FOR INSERT \n  WITH CHECK (public.check_org_access_secure(auth.uid(), organization_id));\n\nCREATE POLICY \\"secure_equipment_update_org_admins\\" \n  ON equipment \n  FOR UPDATE \n  USING (public.check_org_admin_secure(auth.uid(), organization_id));\n\nCREATE POLICY \\"secure_equipment_delete_org_admins\\" \n  ON equipment \n  FOR DELETE \n  USING (public.check_org_admin_secure(auth.uid(), organization_id));\n\n-- WORK_ORDERS TABLE\nCREATE POLICY \\"secure_work_orders_select_org_members\\" \n  ON work_orders \n  FOR SELECT \n  USING (public.check_org_access_secure(auth.uid(), organization_id));\n\nCREATE POLICY \\"secure_work_orders_insert_org_members\\" \n  ON work_orders \n  FOR INSERT \n  WITH CHECK (\n    public.check_org_access_secure(auth.uid(), organization_id) AND\n    created_by = auth.uid()\n  );\n\nCREATE POLICY \\"secure_work_orders_update_org_admins\\" \n  ON work_orders \n  FOR UPDATE \n  USING (public.check_org_admin_secure(auth.uid(), organization_id));\n\nCREATE POLICY \\"secure_work_orders_delete_org_admins\\" \n  ON work_orders \n  FOR DELETE \n  USING (public.check_org_admin_secure(auth.uid(), organization_id));\n\n-- SCANS TABLE\nCREATE POLICY \\"secure_scans_select_equipment_org\\" \n  ON scans \n  FOR SELECT \n  USING (\n    public.check_org_access_secure(auth.uid(), (\n      SELECT organization_id FROM equipment WHERE id = equipment_id\n    ))\n  );\n\nCREATE POLICY \\"secure_scans_insert_equipment_org\\" \n  ON scans \n  FOR INSERT \n  WITH CHECK (\n    scanned_by = auth.uid() AND\n    public.check_org_access_secure(auth.uid(), (\n      SELECT organization_id FROM equipment WHERE id = equipment_id\n    ))\n  );\n\nCREATE POLICY \\"secure_scans_update_own\\" \n  ON scans \n  FOR UPDATE \n  USING (scanned_by = auth.uid());\n\nCREATE POLICY \\"secure_scans_delete_org_admins\\" \n  ON scans \n  FOR DELETE \n  USING (\n    public.check_org_admin_secure(auth.uid(), (\n      SELECT organization_id FROM equipment WHERE id = equipment_id\n    ))\n  );\n\n-- NOTES TABLE\nCREATE POLICY \\"secure_notes_select_equipment_org\\" \n  ON notes \n  FOR SELECT \n  USING (\n    public.check_org_access_secure(auth.uid(), (\n      SELECT organization_id FROM equipment WHERE id = equipment_id\n    ))\n  );\n\nCREATE POLICY \\"secure_notes_insert_equipment_org\\" \n  ON notes \n  FOR INSERT \n  WITH CHECK (\n    author_id = auth.uid() AND\n    public.check_org_access_secure(auth.uid(), (\n      SELECT organization_id FROM equipment WHERE id = equipment_id\n    ))\n  );\n\nCREATE POLICY \\"secure_notes_update_own\\" \n  ON notes \n  FOR UPDATE \n  USING (author_id = auth.uid());\n\nCREATE POLICY \\"secure_notes_delete_own_or_admin\\" \n  ON notes \n  FOR DELETE \n  USING (\n    author_id = auth.uid() OR\n    public.check_org_admin_secure(auth.uid(), (\n      SELECT organization_id FROM equipment WHERE id = equipment_id\n    ))\n  );\n\n-- Step 4: Ensure all tables have RLS enabled\nALTER TABLE profiles ENABLE ROW LEVEL SECURITY;\nALTER TABLE organizations ENABLE ROW LEVEL SECURITY;\nALTER TABLE organization_members ENABLE ROW LEVEL SECURITY;\nALTER TABLE teams ENABLE ROW LEVEL SECURITY;\nALTER TABLE team_members ENABLE ROW LEVEL SECURITY;\nALTER TABLE equipment ENABLE ROW LEVEL SECURITY;\nALTER TABLE work_orders ENABLE ROW LEVEL SECURITY;\nALTER TABLE scans ENABLE ROW LEVEL SECURITY;\nALTER TABLE notes ENABLE ROW LEVEL SECURITY;\n\n-- Step 5: Add missing database constraints for data integrity\n-- Ensure organization member counts are consistent\nCREATE OR REPLACE FUNCTION public.update_organization_member_count()\nRETURNS TRIGGER AS $$\nBEGIN\n  IF TG_OP = 'INSERT' THEN\n    UPDATE organizations \n    SET member_count = (\n      SELECT COUNT(*) FROM organization_members \n      WHERE organization_id = NEW.organization_id AND status = 'active'\n    )\n    WHERE id = NEW.organization_id;\n    RETURN NEW;\n  ELSIF TG_OP = 'DELETE' THEN\n    UPDATE organizations \n    SET member_count = (\n      SELECT COUNT(*) FROM organization_members \n      WHERE organization_id = OLD.organization_id AND status = 'active'\n    )\n    WHERE id = OLD.organization_id;\n    RETURN OLD;\n  ELSIF TG_OP = 'UPDATE' THEN\n    -- Update both old and new organizations if organization_id changed\n    UPDATE organizations \n    SET member_count = (\n      SELECT COUNT(*) FROM organization_members \n      WHERE organization_id = OLD.organization_id AND status = 'active'\n    )\n    WHERE id = OLD.organization_id;\n    \n    UPDATE organizations \n    SET member_count = (\n      SELECT COUNT(*) FROM organization_members \n      WHERE organization_id = NEW.organization_id AND status = 'active'\n    )\n    WHERE id = NEW.organization_id;\n    RETURN NEW;\n  END IF;\n  RETURN NULL;\nEND;\n$$ LANGUAGE plpgsql SECURITY DEFINER;\n\n-- Create triggers for member count updates\nDROP TRIGGER IF EXISTS trigger_update_member_count ON organization_members;\nCREATE TRIGGER trigger_update_member_count\n  AFTER INSERT OR UPDATE OR DELETE ON organization_members\n  FOR EACH ROW EXECUTE FUNCTION public.update_organization_member_count();\n\n-- Add validation to prevent exceeding max_members\nCREATE OR REPLACE FUNCTION public.validate_member_limit()\nRETURNS TRIGGER AS $$\nDECLARE\n  current_count INTEGER;\n  max_count INTEGER;\nBEGIN\n  IF NEW.status = 'active' THEN\n    SELECT member_count, max_members INTO current_count, max_count\n    FROM organizations WHERE id = NEW.organization_id;\n    \n    IF current_count >= max_count THEN\n      RAISE EXCEPTION 'Organization has reached maximum member limit of %', max_count;\n    END IF;\n  END IF;\n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql SECURITY DEFINER;\n\nDROP TRIGGER IF EXISTS trigger_validate_member_limit ON organization_members;\nCREATE TRIGGER trigger_validate_member_limit\n  BEFORE INSERT OR UPDATE ON organization_members\n  FOR EACH ROW EXECUTE FUNCTION public.validate_member_limit();\n"}	35f29c91-8442-466a-8c35-f80edd55cfd4	viral.architect@gmail.com	\N
20250617053540	{"\n-- FINAL FIX: Complete RLS Policy Reconstruction to Eliminate Infinite Recursion\n-- This migration removes ALL conflicting policies and creates a clean, minimal set\n\n-- Step 1: Drop ALL existing policies that could cause conflicts\nDROP POLICY IF EXISTS \\"Users can view their organizations\\" ON organizations;\nDROP POLICY IF EXISTS \\"Organization admins can update organizations\\" ON organizations;\nDROP POLICY IF EXISTS \\"Users can view organization members\\" ON organization_members;\nDROP POLICY IF EXISTS \\"Organization admins can manage members\\" ON organization_members;\nDROP POLICY IF EXISTS \\"Users can view org members of their orgs\\" ON organization_members;\nDROP POLICY IF EXISTS \\"Org admins can manage members\\" ON organization_members;\nDROP POLICY IF EXISTS \\"secure_org_members_select_same_org\\" ON organization_members;\nDROP POLICY IF EXISTS \\"secure_org_members_insert_admins\\" ON organization_members;\nDROP POLICY IF EXISTS \\"secure_org_members_update_admins\\" ON organization_members;\nDROP POLICY IF EXISTS \\"secure_org_members_delete_admins\\" ON organization_members;\nDROP POLICY IF EXISTS \\"Users can view organization teams\\" ON teams;\nDROP POLICY IF EXISTS \\"Organization admins can manage teams\\" ON teams;\nDROP POLICY IF EXISTS \\"secure_teams_select_org_members\\" ON teams;\nDROP POLICY IF EXISTS \\"secure_teams_insert_admins\\" ON teams;\nDROP POLICY IF EXISTS \\"secure_teams_update_admins\\" ON teams;\nDROP POLICY IF EXISTS \\"secure_teams_delete_admins\\" ON teams;\nDROP POLICY IF EXISTS \\"Users can view team members\\" ON team_members;\nDROP POLICY IF EXISTS \\"Organization admins can manage team members\\" ON team_members;\nDROP POLICY IF EXISTS \\"secure_team_members_select_org_access\\" ON team_members;\nDROP POLICY IF EXISTS \\"secure_team_members_insert_org_admins\\" ON team_members;\nDROP POLICY IF EXISTS \\"secure_team_members_update_org_admins\\" ON team_members;\nDROP POLICY IF EXISTS \\"secure_team_members_delete_org_admins\\" ON team_members;\nDROP POLICY IF EXISTS \\"Users can view organization equipment\\" ON equipment;\nDROP POLICY IF EXISTS \\"Organization admins can manage equipment\\" ON equipment;\nDROP POLICY IF EXISTS \\"secure_equipment_select_org_members\\" ON equipment;\nDROP POLICY IF EXISTS \\"secure_equipment_insert_org_members\\" ON equipment;\nDROP POLICY IF EXISTS \\"secure_equipment_update_org_admins\\" ON equipment;\nDROP POLICY IF EXISTS \\"secure_equipment_delete_org_admins\\" ON equipment;\nDROP POLICY IF EXISTS \\"Users can view organization work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Users can create work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Organization admins can manage work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"secure_work_orders_select_org_members\\" ON work_orders;\nDROP POLICY IF EXISTS \\"secure_work_orders_insert_org_members\\" ON work_orders;\nDROP POLICY IF EXISTS \\"secure_work_orders_update_org_admins\\" ON work_orders;\nDROP POLICY IF EXISTS \\"secure_work_orders_delete_org_admins\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Users can view all profiles\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can update own profile\\" ON profiles;\nDROP POLICY IF EXISTS \\"secure_profiles_select_all\\" ON profiles;\nDROP POLICY IF EXISTS \\"secure_profiles_update_own\\" ON profiles;\nDROP POLICY IF EXISTS \\"secure_profiles_insert_own\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can view organization scans\\" ON scans;\nDROP POLICY IF EXISTS \\"Users can create scans\\" ON scans;\nDROP POLICY IF EXISTS \\"secure_scans_select_equipment_org\\" ON scans;\nDROP POLICY IF EXISTS \\"secure_scans_insert_equipment_org\\" ON scans;\nDROP POLICY IF EXISTS \\"secure_scans_update_own\\" ON scans;\nDROP POLICY IF EXISTS \\"secure_scans_delete_org_admins\\" ON scans;\nDROP POLICY IF EXISTS \\"Users can view organization notes\\" ON notes;\nDROP POLICY IF EXISTS \\"Users can create notes\\" ON notes;\nDROP POLICY IF EXISTS \\"Authors can update own notes\\" ON notes;\nDROP POLICY IF EXISTS \\"secure_notes_select_equipment_org\\" ON notes;\nDROP POLICY IF EXISTS \\"secure_notes_insert_equipment_org\\" ON notes;\nDROP POLICY IF EXISTS \\"secure_notes_update_own\\" ON notes;\nDROP POLICY IF EXISTS \\"secure_notes_delete_own_or_admin\\" ON notes;\n\n-- Step 2: Create MINIMAL, NON-RECURSIVE policies using only safe functions\n\n-- PROFILES TABLE (Foundation - no dependencies)\nCREATE POLICY \\"final_profiles_select_all\\" \n  ON profiles \n  FOR SELECT \n  USING (true);\n\nCREATE POLICY \\"final_profiles_update_own\\" \n  ON profiles \n  FOR UPDATE \n  USING (id = auth.uid());\n\nCREATE POLICY \\"final_profiles_insert_own\\" \n  ON profiles \n  FOR INSERT \n  WITH CHECK (id = auth.uid());\n\n-- ORGANIZATION_MEMBERS TABLE (Critical - MUST avoid recursion)\n-- Use ONLY direct auth.uid() checks - NO function calls that might reference this table\nCREATE POLICY \\"final_org_members_select_own\\" \n  ON organization_members \n  FOR SELECT \n  USING (user_id = auth.uid());\n\nCREATE POLICY \\"final_org_members_insert_own\\" \n  ON organization_members \n  FOR INSERT \n  WITH CHECK (user_id = auth.uid());\n\nCREATE POLICY \\"final_org_members_update_own\\" \n  ON organization_members \n  FOR UPDATE \n  USING (user_id = auth.uid());\n\nCREATE POLICY \\"final_org_members_delete_own\\" \n  ON organization_members \n  FOR DELETE \n  USING (user_id = auth.uid());\n\n-- ORGANIZATIONS TABLE (Safe to use secure functions now)\nCREATE POLICY \\"final_orgs_select_members\\" \n  ON organizations \n  FOR SELECT \n  USING (public.check_org_access_secure(auth.uid(), id));\n\nCREATE POLICY \\"final_orgs_update_admins\\" \n  ON organizations \n  FOR UPDATE \n  USING (public.check_org_admin_secure(auth.uid(), id));\n\nCREATE POLICY \\"final_orgs_insert_anyone\\" \n  ON organizations \n  FOR INSERT \n  WITH CHECK (true);\n\n-- TEAMS TABLE\nCREATE POLICY \\"final_teams_select_org_members\\" \n  ON teams \n  FOR SELECT \n  USING (public.check_org_access_secure(auth.uid(), organization_id));\n\nCREATE POLICY \\"final_teams_insert_admins\\" \n  ON teams \n  FOR INSERT \n  WITH CHECK (public.check_org_admin_secure(auth.uid(), organization_id));\n\nCREATE POLICY \\"final_teams_update_admins\\" \n  ON teams \n  FOR UPDATE \n  USING (public.check_org_admin_secure(auth.uid(), organization_id));\n\nCREATE POLICY \\"final_teams_delete_admins\\" \n  ON teams \n  FOR DELETE \n  USING (public.check_org_admin_secure(auth.uid(), organization_id));\n\n-- TEAM_MEMBERS TABLE\nCREATE POLICY \\"final_team_members_select_org_access\\" \n  ON team_members \n  FOR SELECT \n  USING (\n    public.check_org_access_secure(auth.uid(), (\n      SELECT organization_id FROM teams WHERE id = team_id\n    ))\n  );\n\nCREATE POLICY \\"final_team_members_insert_admins\\" \n  ON team_members \n  FOR INSERT \n  WITH CHECK (\n    public.check_org_admin_secure(auth.uid(), (\n      SELECT organization_id FROM teams WHERE id = team_id\n    ))\n  );\n\nCREATE POLICY \\"final_team_members_update_admins\\" \n  ON team_members \n  FOR UPDATE \n  USING (\n    public.check_org_admin_secure(auth.uid(), (\n      SELECT organization_id FROM teams WHERE id = team_id\n    ))\n  );\n\nCREATE POLICY \\"final_team_members_delete_admins\\" \n  ON team_members \n  FOR DELETE \n  USING (\n    public.check_org_admin_secure(auth.uid(), (\n      SELECT organization_id FROM teams WHERE id = team_id\n    ))\n  );\n\n-- EQUIPMENT TABLE\nCREATE POLICY \\"final_equipment_select_org_members\\" \n  ON equipment \n  FOR SELECT \n  USING (public.check_org_access_secure(auth.uid(), organization_id));\n\nCREATE POLICY \\"final_equipment_insert_members\\" \n  ON equipment \n  FOR INSERT \n  WITH CHECK (public.check_org_access_secure(auth.uid(), organization_id));\n\nCREATE POLICY \\"final_equipment_update_admins\\" \n  ON equipment \n  FOR UPDATE \n  USING (public.check_org_admin_secure(auth.uid(), organization_id));\n\nCREATE POLICY \\"final_equipment_delete_admins\\" \n  ON equipment \n  FOR DELETE \n  USING (public.check_org_admin_secure(auth.uid(), organization_id));\n\n-- WORK_ORDERS TABLE\nCREATE POLICY \\"final_work_orders_select_org_members\\" \n  ON work_orders \n  FOR SELECT \n  USING (public.check_org_access_secure(auth.uid(), organization_id));\n\nCREATE POLICY \\"final_work_orders_insert_members\\" \n  ON work_orders \n  FOR INSERT \n  WITH CHECK (\n    public.check_org_access_secure(auth.uid(), organization_id) AND\n    created_by = auth.uid()\n  );\n\nCREATE POLICY \\"final_work_orders_update_admins\\" \n  ON work_orders \n  FOR UPDATE \n  USING (public.check_org_admin_secure(auth.uid(), organization_id));\n\nCREATE POLICY \\"final_work_orders_delete_admins\\" \n  ON work_orders \n  FOR DELETE \n  USING (public.check_org_admin_secure(auth.uid(), organization_id));\n\n-- SCANS TABLE\nCREATE POLICY \\"final_scans_select_equipment_org\\" \n  ON scans \n  FOR SELECT \n  USING (\n    public.check_org_access_secure(auth.uid(), (\n      SELECT organization_id FROM equipment WHERE id = equipment_id\n    ))\n  );\n\nCREATE POLICY \\"final_scans_insert_equipment_org\\" \n  ON scans \n  FOR INSERT \n  WITH CHECK (\n    scanned_by = auth.uid() AND\n    public.check_org_access_secure(auth.uid(), (\n      SELECT organization_id FROM equipment WHERE id = equipment_id\n    ))\n  );\n\nCREATE POLICY \\"final_scans_update_own\\" \n  ON scans \n  FOR UPDATE \n  USING (scanned_by = auth.uid());\n\nCREATE POLICY \\"final_scans_delete_admins\\" \n  ON scans \n  FOR DELETE \n  USING (\n    public.check_org_admin_secure(auth.uid(), (\n      SELECT organization_id FROM equipment WHERE id = equipment_id\n    ))\n  );\n\n-- NOTES TABLE\nCREATE POLICY \\"final_notes_select_equipment_org\\" \n  ON notes \n  FOR SELECT \n  USING (\n    public.check_org_access_secure(auth.uid(), (\n      SELECT organization_id FROM equipment WHERE id = equipment_id\n    ))\n  );\n\nCREATE POLICY \\"final_notes_insert_equipment_org\\" \n  ON notes \n  FOR INSERT \n  WITH CHECK (\n    author_id = auth.uid() AND\n    public.check_org_access_secure(auth.uid(), (\n      SELECT organization_id FROM equipment WHERE id = equipment_id\n    ))\n  );\n\nCREATE POLICY \\"final_notes_update_own\\" \n  ON notes \n  FOR UPDATE \n  USING (author_id = auth.uid());\n\nCREATE POLICY \\"final_notes_delete_own_or_admin\\" \n  ON notes \n  FOR DELETE \n  USING (\n    author_id = auth.uid() OR\n    public.check_org_admin_secure(auth.uid(), (\n      SELECT organization_id FROM equipment WHERE id = equipment_id\n    ))\n  );\n\n-- Step 3: Ensure all tables have RLS enabled\nALTER TABLE profiles ENABLE ROW LEVEL SECURITY;\nALTER TABLE organizations ENABLE ROW LEVEL SECURITY;\nALTER TABLE organization_members ENABLE ROW LEVEL SECURITY;\nALTER TABLE teams ENABLE ROW LEVEL SECURITY;\nALTER TABLE team_members ENABLE ROW LEVEL SECURITY;\nALTER TABLE equipment ENABLE ROW LEVEL SECURITY;\nALTER TABLE work_orders ENABLE ROW LEVEL SECURITY;\nALTER TABLE scans ENABLE ROW LEVEL SECURITY;\nALTER TABLE notes ENABLE ROW LEVEL SECURITY;\n"}	e3f048f4-e431-4a0a-9f95-7a54c09778ad	viral.architect@gmail.com	\N
20250617054725	{"\n-- FINAL SOLUTION: Fix infinite recursion by creating clean, non-recursive policies\n-- This completely eliminates the circular dependency between organizations and organization_members\n\n-- Step 1: Drop ALL existing policies on organization_members to start fresh\nDROP POLICY IF EXISTS \\"Users can view org members of their orgs\\" ON organization_members;\nDROP POLICY IF EXISTS \\"Org admins can manage members\\" ON organization_members;\nDROP POLICY IF EXISTS \\"final_org_members_select_own\\" ON organization_members;\nDROP POLICY IF EXISTS \\"final_org_members_insert_own\\" ON organization_members;\nDROP POLICY IF EXISTS \\"final_org_members_update_own\\" ON organization_members;\nDROP POLICY IF EXISTS \\"final_org_members_delete_own\\" ON organization_members;\n\n-- Step 2: Create ONE simple, non-recursive policy for organization_members\n-- This allows users to manage only their own membership records\nCREATE POLICY \\"org_members_own_records_only\\" \n  ON organization_members \n  FOR ALL \n  USING (user_id = auth.uid()) \n  WITH CHECK (user_id = auth.uid());\n\n-- Step 3: Update organizations policy to use the secure function\n-- This will now work because organization_members has non-recursive policies\nDROP POLICY IF EXISTS \\"final_orgs_select_members\\" ON organizations;\n\nCREATE POLICY \\"orgs_members_can_view\\" \n  ON organizations \n  FOR SELECT \n  USING (public.check_org_access_secure(auth.uid(), id));\n\n-- Step 4: Verify RLS is enabled on both tables\nALTER TABLE organization_members ENABLE ROW LEVEL SECURITY;\nALTER TABLE organizations ENABLE ROW LEVEL SECURITY;\n"}	71b9393b-29e0-4dad-8654-f5639d2efe18	viral.architect@gmail.com	\N
20250617055215	{"\n-- Complete cleanup and rebuild of RLS policies to fix infinite recursion\n-- Drop ALL existing policies on both tables first\nDROP POLICY IF EXISTS \\"org_members_own_records_only\\" ON organization_members;\nDROP POLICY IF EXISTS \\"Users can view org members of their orgs\\" ON organization_members;\nDROP POLICY IF EXISTS \\"Org admins can manage members\\" ON organization_members;\nDROP POLICY IF EXISTS \\"final_org_members_select_own\\" ON organization_members;\nDROP POLICY IF EXISTS \\"final_org_members_insert_own\\" ON organization_members;\nDROP POLICY IF EXISTS \\"final_org_members_update_own\\" ON organization_members;\nDROP POLICY IF EXISTS \\"final_org_members_delete_own\\" ON organization_members;\nDROP POLICY IF EXISTS \\"final_orgs_select_members\\" ON organizations;\nDROP POLICY IF EXISTS \\"orgs_members_can_view\\" ON organizations;\n\n-- Create the simple, non-recursive policy for organization_members\n-- This allows users to manage only their own membership records\nCREATE POLICY \\"org_members_own_records_only\\" \n  ON organization_members \n  FOR ALL \n  USING (user_id = auth.uid()) \n  WITH CHECK (user_id = auth.uid());\n\n-- Create the organizations policy using the secure function\n-- This will work because organization_members now has non-recursive policies\nCREATE POLICY \\"orgs_members_can_view\\" \n  ON organizations \n  FOR SELECT \n  USING (public.check_org_access_secure(auth.uid(), id));\n\n-- Ensure RLS is enabled on both tables\nALTER TABLE organization_members ENABLE ROW LEVEL SECURITY;\nALTER TABLE organizations ENABLE ROW LEVEL SECURITY;\n"}	99c69732-8dcf-48a8-8aca-86050f94db17	viral.architect@gmail.com	\N
20250621013539	{"\n-- Add acceptance_date column to work_orders table\nALTER TABLE work_orders ADD COLUMN acceptance_date timestamp with time zone;\n\n-- Create notifications table\nCREATE TABLE notifications (\n  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n  organization_id uuid NOT NULL,\n  user_id uuid NOT NULL,\n  type text NOT NULL CHECK (type IN ('work_order_request', 'work_order_accepted', 'work_order_assigned', 'work_order_completed', 'general')),\n  title text NOT NULL,\n  message text NOT NULL,\n  data jsonb DEFAULT '{}',\n  read boolean NOT NULL DEFAULT false,\n  created_at timestamp with time zone NOT NULL DEFAULT now(),\n  updated_at timestamp with time zone NOT NULL DEFAULT now()\n);\n\n-- Create work_order_notes table\nCREATE TABLE work_order_notes (\n  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n  work_order_id uuid NOT NULL,\n  author_id uuid NOT NULL,\n  content text NOT NULL,\n  hours_worked numeric(5,2) DEFAULT 0,\n  is_private boolean NOT NULL DEFAULT false,\n  created_at timestamp with time zone NOT NULL DEFAULT now(),\n  updated_at timestamp with time zone NOT NULL DEFAULT now()\n);\n\n-- Create work_order_images table\nCREATE TABLE work_order_images (\n  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n  work_order_id uuid NOT NULL,\n  uploaded_by uuid NOT NULL,\n  file_name text NOT NULL,\n  file_url text NOT NULL,\n  file_size integer,\n  mime_type text,\n  description text,\n  created_at timestamp with time zone NOT NULL DEFAULT now()\n);\n\n-- Add updated_at triggers for new tables\nCREATE TRIGGER handle_updated_at_notifications\n  BEFORE UPDATE ON notifications\n  FOR EACH ROW EXECUTE PROCEDURE handle_updated_at();\n\nCREATE TRIGGER handle_updated_at_work_order_notes\n  BEFORE UPDATE ON work_order_notes\n  FOR EACH ROW EXECUTE PROCEDURE handle_updated_at();\n\n-- Enable RLS on new tables\nALTER TABLE notifications ENABLE ROW LEVEL SECURITY;\nALTER TABLE work_order_notes ENABLE ROW LEVEL SECURITY;\nALTER TABLE work_order_images ENABLE ROW LEVEL SECURITY;\n\n-- RLS policies for notifications\nCREATE POLICY \\"Users can view their own notifications\\"\n  ON notifications FOR SELECT\n  USING (user_id = auth.uid());\n\nCREATE POLICY \\"System can create notifications\\"\n  ON notifications FOR INSERT\n  WITH CHECK (true);\n\nCREATE POLICY \\"Users can update their own notifications\\"\n  ON notifications FOR UPDATE\n  USING (user_id = auth.uid());\n\n-- RLS policies for work_order_notes\nCREATE POLICY \\"Users can view work order notes\\"\n  ON work_order_notes FOR SELECT\n  USING (\n    EXISTS (\n      SELECT 1 FROM work_orders wo\n      WHERE wo.id = work_order_id \n        AND wo.organization_id IN (\n          SELECT organization_id FROM organization_members\n          WHERE user_id = auth.uid() AND status = 'active'\n        )\n    )\n    AND (NOT is_private OR author_id = auth.uid())\n  );\n\nCREATE POLICY \\"Users can create work order notes\\"\n  ON work_order_notes FOR INSERT\n  WITH CHECK (\n    author_id = auth.uid()\n    AND EXISTS (\n      SELECT 1 FROM work_orders wo\n      WHERE wo.id = work_order_id \n        AND wo.organization_id IN (\n          SELECT organization_id FROM organization_members\n          WHERE user_id = auth.uid() AND status = 'active'\n        )\n    )\n  );\n\nCREATE POLICY \\"Users can update their own work order notes\\"\n  ON work_order_notes FOR UPDATE\n  USING (author_id = auth.uid());\n\nCREATE POLICY \\"Users can delete their own work order notes\\"\n  ON work_order_notes FOR DELETE\n  USING (author_id = auth.uid());\n\n-- RLS policies for work_order_images\nCREATE POLICY \\"Users can view work order images\\"\n  ON work_order_images FOR SELECT\n  USING (\n    EXISTS (\n      SELECT 1 FROM work_orders wo\n      WHERE wo.id = work_order_id \n        AND wo.organization_id IN (\n          SELECT organization_id FROM organization_members\n          WHERE user_id = auth.uid() AND status = 'active'\n        )\n    )\n  );\n\nCREATE POLICY \\"Users can upload work order images\\"\n  ON work_order_images FOR INSERT\n  WITH CHECK (\n    uploaded_by = auth.uid()\n    AND EXISTS (\n      SELECT 1 FROM work_orders wo\n      WHERE wo.id = work_order_id \n        AND wo.organization_id IN (\n          SELECT organization_id FROM organization_members\n          WHERE user_id = auth.uid() AND status = 'active'\n        )\n    )\n  );\n\nCREATE POLICY \\"Users can delete their own work order images\\"\n  ON work_order_images FOR DELETE\n  USING (uploaded_by = auth.uid());\n\n-- Create storage bucket for work order images\nINSERT INTO storage.buckets (id, name, public)\nVALUES ('work-order-images', 'work-order-images', true);\n\n-- Storage policies for work order images bucket\nCREATE POLICY \\"Users can view work order images\\"\n  ON storage.objects FOR SELECT\n  USING (bucket_id = 'work-order-images');\n\nCREATE POLICY \\"Authenticated users can upload work order images\\"\n  ON storage.objects FOR INSERT\n  WITH CHECK (\n    bucket_id = 'work-order-images'\n    AND auth.role() = 'authenticated'\n  );\n\nCREATE POLICY \\"Users can update their own work order images\\"\n  ON storage.objects FOR UPDATE\n  USING (\n    bucket_id = 'work-order-images'\n    AND auth.uid()::text = (storage.foldername(name))[1]\n  );\n\nCREATE POLICY \\"Users can delete their own work order images\\"\n  ON storage.objects FOR DELETE\n  USING (\n    bucket_id = 'work-order-images'\n    AND auth.uid()::text = (storage.foldername(name))[1]\n  );\n"}	4d16279b-179a-4153-9b62-d5a28ce5812a	viral.architect@gmail.com	\N
20250622030200	{"\n-- Create organization_invitations table\nCREATE TABLE public.organization_invitations (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  organization_id UUID NOT NULL REFERENCES public.organizations(id) ON DELETE CASCADE,\n  email TEXT NOT NULL,\n  role TEXT NOT NULL CHECK (role IN ('admin', 'member')),\n  invited_by UUID NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,\n  status TEXT NOT NULL DEFAULT 'pending' CHECK (status IN ('pending', 'accepted', 'declined', 'expired')),\n  message TEXT,\n  invitation_token UUID NOT NULL DEFAULT gen_random_uuid(),\n  expires_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT (now() + INTERVAL '7 days'),\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  accepted_at TIMESTAMP WITH TIME ZONE,\n  accepted_by UUID REFERENCES auth.users(id) ON DELETE SET NULL,\n  UNIQUE(organization_id, email, status) -- Prevent duplicate pending invitations\n);\n\n-- Create billing_events table for tracking billable events\nCREATE TABLE public.billing_events (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  organization_id UUID NOT NULL REFERENCES public.organizations(id) ON DELETE CASCADE,\n  event_type TEXT NOT NULL CHECK (event_type IN ('member_added', 'member_removed', 'plan_upgraded', 'plan_downgraded', 'storage_used', 'feature_enabled', 'feature_disabled')),\n  user_id UUID REFERENCES auth.users(id) ON DELETE SET NULL,\n  event_data JSONB DEFAULT '{}',\n  amount_change DECIMAL(10,2) DEFAULT 0, -- Positive for increases, negative for decreases\n  effective_date TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  processed BOOLEAN DEFAULT FALSE\n);\n\n-- Create notification_preferences table\nCREATE TABLE public.notification_preferences (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  user_id UUID NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,\n  email_invitations BOOLEAN DEFAULT TRUE,\n  email_work_orders BOOLEAN DEFAULT TRUE,\n  email_equipment_alerts BOOLEAN DEFAULT TRUE,\n  email_billing BOOLEAN DEFAULT TRUE,\n  push_notifications BOOLEAN DEFAULT TRUE,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  UNIQUE(user_id)\n);\n\n-- Enable RLS on new tables\nALTER TABLE public.organization_invitations ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.billing_events ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.notification_preferences ENABLE ROW LEVEL SECURITY;\n\n-- RLS policies for organization_invitations\nCREATE POLICY \\"Users can view invitations for their organizations\\"\n  ON public.organization_invitations\n  FOR SELECT\n  USING (\n    organization_id IN (\n      SELECT organization_id FROM public.organization_members \n      WHERE user_id = auth.uid() AND status = 'active'\n    )\n  );\n\nCREATE POLICY \\"Admins can create invitations\\"\n  ON public.organization_invitations\n  FOR INSERT\n  WITH CHECK (\n    organization_id IN (\n      SELECT organization_id FROM public.organization_members \n      WHERE user_id = auth.uid() AND role IN ('owner', 'admin') AND status = 'active'\n    )\n  );\n\nCREATE POLICY \\"Admins can update invitations\\"\n  ON public.organization_invitations\n  FOR UPDATE\n  USING (\n    organization_id IN (\n      SELECT organization_id FROM public.organization_members \n      WHERE user_id = auth.uid() AND role IN ('owner', 'admin') AND status = 'active'\n    )\n  );\n\n-- RLS policies for billing_events\nCREATE POLICY \\"Admins can view billing events\\"\n  ON public.billing_events\n  FOR SELECT\n  USING (\n    organization_id IN (\n      SELECT organization_id FROM public.organization_members \n      WHERE user_id = auth.uid() AND role IN ('owner', 'admin') AND status = 'active'\n    )\n  );\n\nCREATE POLICY \\"System can insert billing events\\"\n  ON public.billing_events\n  FOR INSERT\n  WITH CHECK (true); -- This will be restricted by application logic\n\n-- RLS policies for notification_preferences\nCREATE POLICY \\"Users can manage their own notification preferences\\"\n  ON public.notification_preferences\n  FOR ALL\n  USING (user_id = auth.uid())\n  WITH CHECK (user_id = auth.uid());\n\n-- Add updated_at triggers\nCREATE TRIGGER update_organization_invitations_updated_at\n  BEFORE UPDATE ON public.organization_invitations\n  FOR EACH ROW EXECUTE FUNCTION public.handle_updated_at();\n\nCREATE TRIGGER update_notification_preferences_updated_at\n  BEFORE UPDATE ON public.notification_preferences\n  FOR EACH ROW EXECUTE FUNCTION public.handle_updated_at();\n\n-- Add billing calculation fields to organizations table\nALTER TABLE public.organizations \nADD COLUMN IF NOT EXISTS billable_members INTEGER DEFAULT 0,\nADD COLUMN IF NOT EXISTS storage_used_mb INTEGER DEFAULT 0,\nADD COLUMN IF NOT EXISTS fleet_map_enabled BOOLEAN DEFAULT FALSE,\nADD COLUMN IF NOT EXISTS last_billing_calculation TIMESTAMP WITH TIME ZONE DEFAULT now();\n\n-- Function to calculate billable members\nCREATE OR REPLACE FUNCTION public.calculate_billable_members(org_id UUID)\nRETURNS INTEGER\nLANGUAGE SQL\nSTABLE SECURITY DEFINER\nSET search_path TO 'public'\nAS $$\n  SELECT COUNT(*)::INTEGER\n  FROM public.organization_members om\n  JOIN public.profiles p ON om.user_id = p.id\n  WHERE om.organization_id = org_id \n    AND om.status = 'active'\n    AND om.role IN ('admin', 'member'); -- Exclude owners from billing\n$$;\n\n-- Function to update billing metrics\nCREATE OR REPLACE FUNCTION public.update_organization_billing_metrics(org_id UUID)\nRETURNS VOID\nLANGUAGE PLPGSQL\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nBEGIN\n  UPDATE public.organizations \n  SET \n    billable_members = public.calculate_billable_members(org_id),\n    last_billing_calculation = now()\n  WHERE id = org_id;\nEND;\n$$;\n\n-- Trigger to update billing metrics when membership changes\nCREATE OR REPLACE FUNCTION public.handle_membership_billing_update()\nRETURNS TRIGGER\nLANGUAGE PLPGSQL\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nBEGIN\n  -- Update billing metrics for the affected organization\n  IF TG_OP = 'INSERT' THEN\n    PERFORM public.update_organization_billing_metrics(NEW.organization_id);\n    \n    -- Log billing event\n    INSERT INTO public.billing_events (organization_id, event_type, user_id, event_data)\n    VALUES (\n      NEW.organization_id, \n      'member_added', \n      NEW.user_id,\n      jsonb_build_object('role', NEW.role, 'status', NEW.status)\n    );\n    \n    RETURN NEW;\n  ELSIF TG_OP = 'DELETE' THEN\n    PERFORM public.update_organization_billing_metrics(OLD.organization_id);\n    \n    -- Log billing event\n    INSERT INTO public.billing_events (organization_id, event_type, user_id, event_data)\n    VALUES (\n      OLD.organization_id, \n      'member_removed', \n      OLD.user_id,\n      jsonb_build_object('role', OLD.role, 'status', OLD.status)\n    );\n    \n    RETURN OLD;\n  ELSIF TG_OP = 'UPDATE' THEN\n    -- Update for both old and new organizations if changed\n    IF OLD.organization_id != NEW.organization_id THEN\n      PERFORM public.update_organization_billing_metrics(OLD.organization_id);\n      PERFORM public.update_organization_billing_metrics(NEW.organization_id);\n    ELSE\n      PERFORM public.update_organization_billing_metrics(NEW.organization_id);\n    END IF;\n    \n    -- Log billing event if role or status changed\n    IF OLD.role != NEW.role OR OLD.status != NEW.status THEN\n      INSERT INTO public.billing_events (organization_id, event_type, user_id, event_data)\n      VALUES (\n        NEW.organization_id, \n        'member_updated', \n        NEW.user_id,\n        jsonb_build_object(\n          'old_role', OLD.role, \n          'new_role', NEW.role,\n          'old_status', OLD.status,\n          'new_status', NEW.status\n        )\n      );\n    END IF;\n    \n    RETURN NEW;\n  END IF;\n  \n  RETURN NULL;\nEND;\n$$;\n\n-- Create trigger for billing updates\nDROP TRIGGER IF EXISTS organization_member_billing_update ON public.organization_members;\nCREATE TRIGGER organization_member_billing_update\n  AFTER INSERT OR UPDATE OR DELETE ON public.organization_members\n  FOR EACH ROW EXECUTE FUNCTION public.handle_membership_billing_update();\n\n-- Initialize billing metrics for existing organizations\nUPDATE public.organizations \nSET \n  billable_members = public.calculate_billable_members(id),\n  last_billing_calculation = now()\nWHERE billable_members IS NULL OR billable_members = 0;\n"}	c9c13e2b-2699-428d-962b-21781514bb9d	viral.architect@gmail.com	\N
20250623060726	{"\n-- Create subscribers table to track subscription information\nCREATE TABLE public.subscribers (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE,\n  email TEXT NOT NULL UNIQUE,\n  stripe_customer_id TEXT,\n  subscribed BOOLEAN NOT NULL DEFAULT false,\n  subscription_tier TEXT,\n  subscription_end TIMESTAMPTZ,\n  updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),\n  created_at TIMESTAMPTZ NOT NULL DEFAULT now()\n);\n\n-- Enable Row Level Security\nALTER TABLE public.subscribers ENABLE ROW LEVEL SECURITY;\n\n-- Create policy for users to view their own subscription info\nCREATE POLICY \\"select_own_subscription\\" ON public.subscribers\nFOR SELECT\nUSING (user_id = auth.uid() OR email = auth.email());\n\n-- Create policy for edge functions to update subscription info\nCREATE POLICY \\"update_own_subscription\\" ON public.subscribers\nFOR UPDATE\nUSING (true);\n\n-- Create policy for edge functions to insert subscription info\nCREATE POLICY \\"insert_subscription\\" ON public.subscribers\nFOR INSERT\nWITH CHECK (true);\n\n-- Create organization_subscriptions table for premium features\nCREATE TABLE public.organization_subscriptions (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  organization_id UUID REFERENCES public.organizations(id) ON DELETE CASCADE,\n  stripe_subscription_id TEXT UNIQUE,\n  status TEXT NOT NULL DEFAULT 'active',\n  feature_type TEXT NOT NULL, -- 'user_license', 'fleet_map', 'storage_overage'\n  quantity INTEGER DEFAULT 1,\n  unit_price_cents INTEGER NOT NULL,\n  billing_cycle TEXT NOT NULL DEFAULT 'monthly',\n  current_period_start TIMESTAMPTZ,\n  current_period_end TIMESTAMPTZ,\n  cancel_at_period_end BOOLEAN DEFAULT false,\n  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),\n  updated_at TIMESTAMPTZ NOT NULL DEFAULT now()\n);\n\n-- Enable RLS for organization subscriptions\nALTER TABLE public.organization_subscriptions ENABLE ROW LEVEL SECURITY;\n\n-- Policy for organization members to view their org's subscriptions\nCREATE POLICY \\"view_org_subscriptions\\" ON public.organization_subscriptions\nFOR SELECT\nUSING (\n  EXISTS (\n    SELECT 1 FROM public.organization_members om\n    WHERE om.organization_id = organization_subscriptions.organization_id\n    AND om.user_id = auth.uid()\n    AND om.status = 'active'\n  )\n);\n\n-- Policy for edge functions to manage subscriptions\nCREATE POLICY \\"manage_subscriptions\\" ON public.organization_subscriptions\nFOR ALL\nUSING (true);\n\n-- Create billing usage tracking table\nCREATE TABLE public.billing_usage (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  organization_id UUID REFERENCES public.organizations(id) ON DELETE CASCADE,\n  usage_type TEXT NOT NULL, -- 'active_users', 'storage_mb'\n  usage_value INTEGER NOT NULL,\n  billing_period_start TIMESTAMPTZ NOT NULL,\n  billing_period_end TIMESTAMPTZ NOT NULL,\n  created_at TIMESTAMPTZ NOT NULL DEFAULT now()\n);\n\n-- Enable RLS for billing usage\nALTER TABLE public.billing_usage ENABLE ROW LEVEL SECURITY;\n\n-- Policy for viewing organization usage\nCREATE POLICY \\"view_org_usage\\" ON public.billing_usage\nFOR SELECT\nUSING (\n  EXISTS (\n    SELECT 1 FROM public.organization_members om\n    WHERE om.organization_id = billing_usage.organization_id\n    AND om.user_id = auth.uid()\n    AND om.status = 'active'\n  )\n);\n\n-- Function to calculate current billing for an organization\nCREATE OR REPLACE FUNCTION public.calculate_organization_billing(org_id uuid)\nRETURNS jsonb\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  active_users INTEGER;\n  storage_mb INTEGER;\n  result jsonb;\nBEGIN\n  -- Get active user count (excluding owners)\n  SELECT COUNT(*)::INTEGER INTO active_users\n  FROM public.organization_members om\n  JOIN public.profiles p ON om.user_id = p.id\n  WHERE om.organization_id = org_id \n    AND om.status = 'active'\n    AND om.role IN ('admin', 'member');\n\n  -- Get storage usage\n  SELECT COALESCE(storage_used_mb, 0)::INTEGER INTO storage_mb\n  FROM public.organizations\n  WHERE id = org_id;\n\n  -- Build result JSON\n  result := jsonb_build_object(\n    'organization_id', org_id,\n    'active_users', active_users,\n    'storage_mb', storage_mb,\n    'user_license_cost', active_users * 1000, -- $10.00 per user in cents\n    'storage_overage_cost', GREATEST(0, storage_mb - 1000) * 10, -- $0.10 per MB over 1GB\n    'calculated_at', now()\n  );\n\n  RETURN result;\nEND;\n$$;\n\n-- Function to get organization premium features\nCREATE OR REPLACE FUNCTION public.get_organization_premium_features(org_id uuid)\nRETURNS jsonb\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  result jsonb;\n  fleet_map_active BOOLEAN DEFAULT false;\nBEGIN\n  -- Check if fleet map is active\n  SELECT EXISTS(\n    SELECT 1 FROM public.organization_subscriptions\n    WHERE organization_id = org_id\n    AND feature_type = 'fleet_map'\n    AND status = 'active'\n    AND current_period_end > now()\n  ) INTO fleet_map_active;\n\n  result := jsonb_build_object(\n    'organization_id', org_id,\n    'fleet_map_enabled', fleet_map_active,\n    'premium_features', CASE\n      WHEN fleet_map_active THEN jsonb_build_array('Fleet Map')\n      ELSE jsonb_build_array()\n    END\n  );\n\n  RETURN result;\nEND;\n$$;\n\n-- Add updated_at trigger for new tables\nCREATE TRIGGER update_subscribers_updated_at\n    BEFORE UPDATE ON public.subscribers\n    FOR EACH ROW\n    EXECUTE FUNCTION public.handle_updated_at();\n\nCREATE TRIGGER update_organization_subscriptions_updated_at\n    BEFORE UPDATE ON public.organization_subscriptions\n    FOR EACH ROW\n    EXECUTE FUNCTION public.handle_updated_at();\n"}	11f1589f-9b66-4159-9526-8c4fcac000c1	viral.architect@gmail.com	\N
20250623023115	{"\n-- Add slot-based billing tables\nCREATE TABLE public.organization_slots (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  organization_id UUID NOT NULL REFERENCES public.organizations(id) ON DELETE CASCADE,\n  slot_type TEXT NOT NULL DEFAULT 'user_license',\n  purchased_slots INTEGER NOT NULL DEFAULT 0,\n  used_slots INTEGER NOT NULL DEFAULT 0,\n  billing_period_start TIMESTAMP WITH TIME ZONE NOT NULL,\n  billing_period_end TIMESTAMP WITH TIME ZONE NOT NULL,\n  stripe_payment_intent_id TEXT,\n  amount_paid_cents INTEGER NOT NULL DEFAULT 0,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Add slot purchase transactions\nCREATE TABLE public.slot_purchases (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  organization_id UUID NOT NULL REFERENCES public.organizations(id) ON DELETE CASCADE,\n  purchased_by UUID NOT NULL REFERENCES public.profiles(id),\n  slot_type TEXT NOT NULL DEFAULT 'user_license',\n  quantity INTEGER NOT NULL,\n  unit_price_cents INTEGER NOT NULL DEFAULT 1000, -- $10.00\n  total_amount_cents INTEGER NOT NULL,\n  stripe_payment_intent_id TEXT UNIQUE,\n  stripe_session_id TEXT,\n  billing_period_start TIMESTAMP WITH TIME ZONE NOT NULL,\n  billing_period_end TIMESTAMP WITH TIME ZONE NOT NULL,\n  status TEXT NOT NULL DEFAULT 'pending',\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Update organization_invitations table for better tracking\nALTER TABLE public.organization_invitations \nADD COLUMN slot_reserved BOOLEAN DEFAULT false,\nADD COLUMN slot_purchase_id UUID REFERENCES public.slot_purchases(id),\nADD COLUMN declined_at TIMESTAMP WITH TIME ZONE,\nADD COLUMN expired_at TIMESTAMP WITH TIME ZONE;\n\n-- Update organization_members for slot tracking\nALTER TABLE public.organization_members\nADD COLUMN slot_purchase_id UUID REFERENCES public.slot_purchases(id),\nADD COLUMN activated_slot_at TIMESTAMP WITH TIME ZONE;\n\n-- Enable RLS on new tables\nALTER TABLE public.organization_slots ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.slot_purchases ENABLE ROW LEVEL SECURITY;\n\n-- RLS policies for organization_slots\nCREATE POLICY \\"org_members_view_slots\\" ON public.organization_slots\nFOR SELECT USING (\n  EXISTS (\n    SELECT 1 FROM public.organization_members om\n    WHERE om.organization_id = organization_slots.organization_id\n    AND om.user_id = auth.uid()\n    AND om.status = 'active'\n  )\n);\n\nCREATE POLICY \\"org_admins_manage_slots\\" ON public.organization_slots\nFOR ALL USING (\n  EXISTS (\n    SELECT 1 FROM public.organization_members om\n    WHERE om.organization_id = organization_slots.organization_id\n    AND om.user_id = auth.uid()\n    AND om.role IN ('owner', 'admin')\n    AND om.status = 'active'\n  )\n);\n\n-- RLS policies for slot_purchases\nCREATE POLICY \\"org_members_view_purchases\\" ON public.slot_purchases\nFOR SELECT USING (\n  EXISTS (\n    SELECT 1 FROM public.organization_members om\n    WHERE om.organization_id = slot_purchases.organization_id\n    AND om.user_id = auth.uid()\n    AND om.status = 'active'\n  )\n);\n\nCREATE POLICY \\"org_admins_manage_purchases\\" ON public.slot_purchases\nFOR ALL USING (\n  EXISTS (\n    SELECT 1 FROM public.organization_members om\n    WHERE om.organization_id = slot_purchases.organization_id\n    AND om.user_id = auth.uid()\n    AND om.role IN ('owner', 'admin')\n    AND om.status = 'active'\n  )\n);\n\n-- Function to get current billing period\nCREATE OR REPLACE FUNCTION public.get_current_billing_period()\nRETURNS TABLE(period_start TIMESTAMP WITH TIME ZONE, period_end TIMESTAMP WITH TIME ZONE)\nLANGUAGE SQL\nSTABLE\nAS $$\n  SELECT \n    date_trunc('month', CURRENT_TIMESTAMP) AS period_start,\n    (date_trunc('month', CURRENT_TIMESTAMP) + INTERVAL '1 month' - INTERVAL '1 second') AS period_end;\n$$;\n\n-- Function to calculate available slots for an organization\nCREATE OR REPLACE FUNCTION public.get_organization_slot_availability(org_id UUID)\nRETURNS TABLE(\n  total_purchased INTEGER,\n  used_slots INTEGER,\n  available_slots INTEGER,\n  current_period_start TIMESTAMP WITH TIME ZONE,\n  current_period_end TIMESTAMP WITH TIME ZONE\n)\nLANGUAGE PLPGSQL\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  billing_period RECORD;\nBEGIN\n  -- Get current billing period\n  SELECT * INTO billing_period FROM public.get_current_billing_period();\n  \n  -- Calculate slot availability\n  SELECT \n    COALESCE(SUM(os.purchased_slots), 0)::INTEGER,\n    COALESCE(SUM(os.used_slots), 0)::INTEGER,\n    COALESCE(SUM(os.purchased_slots) - SUM(os.used_slots), 0)::INTEGER,\n    billing_period.period_start,\n    billing_period.period_end\n  INTO total_purchased, used_slots, available_slots, current_period_start, current_period_end\n  FROM public.organization_slots os\n  WHERE os.organization_id = org_id\n    AND os.billing_period_start <= billing_period.period_start\n    AND os.billing_period_end >= billing_period.period_end;\n    \n  -- If no slots found, return zeros\n  IF total_purchased IS NULL THEN\n    total_purchased := 0;\n    used_slots := 0;\n    available_slots := 0;\n    current_period_start := billing_period.period_start;\n    current_period_end := billing_period.period_end;\n  END IF;\n  \n  RETURN NEXT;\nEND;\n$$;\n\n-- Trigger to automatically expire invitations after 30 days\nCREATE OR REPLACE FUNCTION public.expire_old_invitations()\nRETURNS TRIGGER\nLANGUAGE PLPGSQL\nSECURITY DEFINER\nAS $$\nBEGIN\n  -- Mark invitations as expired if they're past expiration and still pending\n  UPDATE public.organization_invitations\n  SET \n    status = 'expired',\n    expired_at = now(),\n    updated_at = now()\n  WHERE status = 'pending'\n    AND expires_at < now()\n    AND expired_at IS NULL;\n    \n  RETURN NULL;\nEND;\n$$;\n\n-- Create trigger for invitation expiration (runs on updates)\nCREATE OR REPLACE TRIGGER expire_invitations_trigger\n  AFTER UPDATE OR INSERT ON public.organization_invitations\n  FOR EACH STATEMENT\n  EXECUTE FUNCTION public.expire_old_invitations();\n\n-- Function to reserve a slot for invitation (fixed - removed LIMIT)\nCREATE OR REPLACE FUNCTION public.reserve_slot_for_invitation(\n  org_id UUID,\n  invitation_id UUID\n)\nRETURNS BOOLEAN\nLANGUAGE PLPGSQL\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  slot_available BOOLEAN := FALSE;\n  billing_period RECORD;\n  slot_record RECORD;\nBEGIN\n  -- Get current billing period\n  SELECT * INTO billing_period FROM public.get_current_billing_period();\n  \n  -- Check if slots are available and get the first available slot record\n  SELECT * INTO slot_record\n  FROM public.organization_slots\n  WHERE organization_id = org_id\n    AND billing_period_start <= billing_period.period_start\n    AND billing_period_end >= billing_period.period_end\n    AND (purchased_slots - used_slots) > 0\n  ORDER BY created_at\n  FOR UPDATE;\n  \n  IF FOUND THEN\n    -- Reserve the slot by incrementing used_slots\n    UPDATE public.organization_slots\n    SET \n      used_slots = used_slots + 1,\n      updated_at = now()\n    WHERE id = slot_record.id;\n    \n    -- Mark invitation as having reserved slot\n    UPDATE public.organization_invitations\n    SET \n      slot_reserved = true,\n      updated_at = now()\n    WHERE id = invitation_id;\n    \n    RETURN TRUE;\n  END IF;\n  \n  RETURN FALSE;\nEND;\n$$;\n\n-- Function to release a reserved slot\nCREATE OR REPLACE FUNCTION public.release_reserved_slot(\n  org_id UUID,\n  invitation_id UUID\n)\nRETURNS VOID\nLANGUAGE PLPGSQL\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  billing_period RECORD;\nBEGIN\n  -- Get current billing period\n  SELECT * INTO billing_period FROM public.get_current_billing_period();\n  \n  -- Release the slot by decrementing used_slots\n  UPDATE public.organization_slots\n  SET \n    used_slots = GREATEST(0, used_slots - 1),\n    updated_at = now()\n  WHERE organization_id = org_id\n    AND billing_period_start <= billing_period.period_start\n    AND billing_period_end >= billing_period.period_end;\n  \n  -- Mark invitation as no longer reserving slot\n  UPDATE public.organization_invitations\n  SET \n    slot_reserved = false,\n    updated_at = now()\n  WHERE id = invitation_id;\nEND;\n$$;\n\n-- Add updated_at trigger for new tables\nCREATE TRIGGER handle_updated_at_organization_slots\n  BEFORE UPDATE ON public.organization_slots\n  FOR EACH ROW\n  EXECUTE FUNCTION public.handle_updated_at();\n\nCREATE TRIGGER handle_updated_at_slot_purchases\n  BEFORE UPDATE ON public.slot_purchases\n  FOR EACH ROW\n  EXECUTE FUNCTION public.handle_updated_at();\n"}	a318e5b4-e8dc-480b-8a41-e016deb2afc4	viral.architect@gmail.com	\N
20250623025942	{"\n-- Fix mutable search path security warnings in database functions\n-- This addresses the security vulnerabilities without changing any existing functionality\n\n-- 1. Fix get_current_billing_period function\nCREATE OR REPLACE FUNCTION public.get_current_billing_period()\nRETURNS TABLE(period_start timestamp with time zone, period_end timestamp with time zone)\nLANGUAGE sql\nSTABLE\nSET search_path TO 'public'\nAS $$\n  SELECT \n    date_trunc('month', CURRENT_TIMESTAMP) AS period_start,\n    (date_trunc('month', CURRENT_TIMESTAMP) + INTERVAL '1 month' - INTERVAL '1 second') AS period_end;\n$$;\n\n-- 2. Fix expire_old_invitations function\nCREATE OR REPLACE FUNCTION public.expire_old_invitations()\nRETURNS trigger\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nBEGIN\n  -- Mark invitations as expired if they're past expiration and still pending\n  UPDATE public.organization_invitations\n  SET \n    status = 'expired',\n    expired_at = now(),\n    updated_at = now()\n  WHERE status = 'pending'\n    AND expires_at < now()\n    AND expired_at IS NULL;\n    \n  RETURN NULL;\nEND;\n$$;\n\n-- 3. Verify that the get_current_billing_period function works correctly\nDO $$\nDECLARE\n  test_result RECORD;\nBEGIN\n  -- Test that the function returns expected results\n  SELECT * INTO test_result FROM public.get_current_billing_period();\n  \n  IF test_result.period_start IS NULL OR test_result.period_end IS NULL THEN\n    RAISE EXCEPTION 'get_current_billing_period function test failed: NULL values returned';\n  END IF;\n  \n  IF test_result.period_end <= test_result.period_start THEN\n    RAISE EXCEPTION 'get_current_billing_period function test failed: Invalid date range';\n  END IF;\n  \n  RAISE NOTICE 'get_current_billing_period function test passed successfully';\nEND;\n$$;\n\n-- 4. Test that organization_slot_availability function still works with the updated dependency\nDO $$\nDECLARE\n  test_org_id uuid := gen_random_uuid();\n  test_result RECORD;\nBEGIN\n  -- Test the dependent function\n  SELECT * INTO test_result FROM public.get_organization_slot_availability(test_org_id);\n  \n  -- The function should return a result even for non-existent organization\n  IF test_result.current_period_start IS NULL OR test_result.current_period_end IS NULL THEN\n    RAISE EXCEPTION 'get_organization_slot_availability function test failed: NULL period values';\n  END IF;\n  \n  RAISE NOTICE 'get_organization_slot_availability function test passed successfully';\nEND;\n$$;\n\n-- Note: expire_old_invitations is a trigger function and cannot be tested directly\n-- It will work correctly when called as a trigger on the organization_invitations table\n"}	14809179-e017-48fc-a4e4-d76a73dd3ca2	viral.architect@gmail.com	\N
20250623051841	{"\n-- Fix RLS policies on profiles table to allow proper joins with work order notes\n-- Remove the conflicting policies and create a proper one\n\n-- First, drop the existing conflicting policies\nDROP POLICY IF EXISTS \\"Users can view all profiles\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can update own profile\\" ON profiles;\n\n-- Create a comprehensive policy that allows viewing profiles for organizational context\n-- This allows users to see profile information when it's needed for work order notes, equipment notes, etc.\nCREATE POLICY \\"Users can view profiles in their organization context\\" \n  ON profiles \n  FOR SELECT \n  USING (\n    -- Allow users to see their own profile\n    id = auth.uid() \n    OR \n    -- Allow users to see profiles of other users in the same organization\n    EXISTS (\n      SELECT 1 \n      FROM organization_members om1\n      JOIN organization_members om2 ON om1.organization_id = om2.organization_id\n      WHERE om1.user_id = auth.uid() \n        AND om1.status = 'active'\n        AND om2.user_id = profiles.id \n        AND om2.status = 'active'\n    )\n  );\n\n-- Create policy for updating own profile\nCREATE POLICY \\"Users can update own profile\\" \n  ON profiles \n  FOR UPDATE \n  USING (id = auth.uid());\n\n-- Create policy for inserting profiles (needed for new user registration)\nCREATE POLICY \\"Users can insert their own profile\\" \n  ON profiles \n  FOR INSERT \n  WITH CHECK (id = auth.uid());\n"}	f5705d0d-47bb-4530-9cf1-45526abc0109	viral.architect@gmail.com	\N
20250623052623	{"\n-- First, drop any existing RLS policies on work_order_notes table\nDROP POLICY IF EXISTS \\"Users can view work order notes in their organization\\" ON work_order_notes;\nDROP POLICY IF EXISTS \\"Users can create work order notes in their organization\\" ON work_order_notes;\nDROP POLICY IF EXISTS \\"Users can update their own work order notes\\" ON work_order_notes;\nDROP POLICY IF EXISTS \\"Users can delete their own work order notes\\" ON work_order_notes;\n\n-- Add foreign key constraint between work_order_notes.author_id and profiles.id\nALTER TABLE work_order_notes \nADD CONSTRAINT fk_work_order_notes_author \nFOREIGN KEY (author_id) REFERENCES profiles(id) ON DELETE CASCADE;\n\n-- Enable RLS on work_order_notes table\nALTER TABLE work_order_notes ENABLE ROW LEVEL SECURITY;\n\n-- Add RLS policies for work_order_notes table\nCREATE POLICY \\"Users can view work order notes in their organization\\" \n  ON work_order_notes \n  FOR SELECT \n  USING (\n    EXISTS (\n      SELECT 1 FROM work_orders wo\n      WHERE wo.id = work_order_notes.work_order_id \n        AND wo.organization_id IN (\n          SELECT organization_id FROM organization_members\n          WHERE user_id = auth.uid() AND status = 'active'\n        )\n    )\n    AND (NOT is_private OR author_id = auth.uid())\n  );\n\nCREATE POLICY \\"Users can create work order notes in their organization\\" \n  ON work_order_notes \n  FOR INSERT \n  WITH CHECK (\n    author_id = auth.uid()\n    AND EXISTS (\n      SELECT 1 FROM work_orders wo\n      WHERE wo.id = work_order_notes.work_order_id \n        AND wo.organization_id IN (\n          SELECT organization_id FROM organization_members\n          WHERE user_id = auth.uid() AND status = 'active'\n        )\n    )\n  );\n\nCREATE POLICY \\"Users can update their own work order notes\\" \n  ON work_order_notes \n  FOR UPDATE \n  USING (author_id = auth.uid());\n\nCREATE POLICY \\"Users can delete their own work order notes\\" \n  ON work_order_notes \n  FOR DELETE \n  USING (author_id = auth.uid());\n"}	36d61d20-a285-4482-8f82-af8484ba63be	viral.architect@gmail.com	\N
20250624082939	{"\n-- Create equipment_notes table to replace the existing notes table functionality\nCREATE TABLE public.equipment_notes (\n  id uuid NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  equipment_id uuid NOT NULL REFERENCES equipment(id) ON DELETE CASCADE,\n  content text NOT NULL,\n  author_id uuid NOT NULL REFERENCES profiles(id) ON DELETE CASCADE,\n  is_private boolean NOT NULL DEFAULT false,\n  hours_worked numeric DEFAULT 0,\n  created_at timestamp with time zone NOT NULL DEFAULT now(),\n  updated_at timestamp with time zone NOT NULL DEFAULT now(),\n  last_modified_by uuid REFERENCES profiles(id) ON DELETE SET NULL,\n  last_modified_at timestamp with time zone DEFAULT now()\n);\n\n-- Create equipment_note_images table for image attachments\nCREATE TABLE public.equipment_note_images (\n  id uuid NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  equipment_note_id uuid NOT NULL REFERENCES equipment_notes(id) ON DELETE CASCADE,\n  file_name text NOT NULL,\n  file_url text NOT NULL,\n  file_size integer,\n  mime_type text,\n  description text,\n  uploaded_by uuid NOT NULL REFERENCES profiles(id) ON DELETE CASCADE,\n  created_at timestamp with time zone NOT NULL DEFAULT now()\n);\n\n-- Enable RLS on equipment_notes\nALTER TABLE public.equipment_notes ENABLE ROW LEVEL SECURITY;\n\n-- Enable RLS on equipment_note_images\nALTER TABLE public.equipment_note_images ENABLE ROW LEVEL SECURITY;\n\n-- RLS policies for equipment_notes\nCREATE POLICY \\"Users can view equipment notes in their organization\\" \n  ON public.equipment_notes \n  FOR SELECT \n  USING (\n    EXISTS (\n      SELECT 1 FROM equipment e\n      WHERE e.id = equipment_notes.equipment_id \n        AND e.organization_id IN (\n          SELECT organization_id FROM organization_members\n          WHERE user_id = auth.uid() AND status = 'active'\n        )\n    )\n    AND (NOT is_private OR author_id = auth.uid())\n  );\n\nCREATE POLICY \\"Users can create equipment notes in their organization\\" \n  ON public.equipment_notes \n  FOR INSERT \n  WITH CHECK (\n    author_id = auth.uid()\n    AND EXISTS (\n      SELECT 1 FROM equipment e\n      WHERE e.id = equipment_notes.equipment_id \n        AND e.organization_id IN (\n          SELECT organization_id FROM organization_members\n          WHERE user_id = auth.uid() AND status = 'active'\n        )\n    )\n  );\n\nCREATE POLICY \\"Users can update their own equipment notes\\" \n  ON public.equipment_notes \n  FOR UPDATE \n  USING (author_id = auth.uid());\n\nCREATE POLICY \\"Users can delete their own equipment notes\\" \n  ON public.equipment_notes \n  FOR DELETE \n  USING (author_id = auth.uid());\n\n-- RLS policies for equipment_note_images\nCREATE POLICY \\"Users can view images for accessible notes\\" \n  ON public.equipment_note_images \n  FOR SELECT \n  USING (\n    EXISTS (\n      SELECT 1 FROM equipment_notes en\n      JOIN equipment e ON e.id = en.equipment_id\n      WHERE en.id = equipment_note_images.equipment_note_id\n        AND e.organization_id IN (\n          SELECT organization_id FROM organization_members\n          WHERE user_id = auth.uid() AND status = 'active'\n        )\n        AND (NOT en.is_private OR en.author_id = auth.uid())\n    )\n  );\n\nCREATE POLICY \\"Users can upload images to their notes\\" \n  ON public.equipment_note_images \n  FOR INSERT \n  WITH CHECK (\n    uploaded_by = auth.uid()\n    AND EXISTS (\n      SELECT 1 FROM equipment_notes en\n      JOIN equipment e ON e.id = en.equipment_id\n      WHERE en.id = equipment_note_images.equipment_note_id\n        AND e.organization_id IN (\n          SELECT organization_id FROM organization_members\n          WHERE user_id = auth.uid() AND status = 'active'\n        )\n    )\n  );\n\nCREATE POLICY \\"Users can delete images they uploaded\\" \n  ON public.equipment_note_images \n  FOR DELETE \n  USING (uploaded_by = auth.uid());\n\n-- Create storage bucket for equipment note images\nINSERT INTO storage.buckets (id, name, public) \nVALUES ('equipment-note-images', 'equipment-note-images', true)\nON CONFLICT (id) DO NOTHING;\n\n-- Storage policies for equipment note images\nCREATE POLICY \\"Authenticated users can upload equipment note images\\"\nON storage.objects FOR INSERT \nWITH CHECK (\n  bucket_id = 'equipment-note-images' \n  AND auth.role() = 'authenticated'\n);\n\nCREATE POLICY \\"Users can view equipment note images\\"\nON storage.objects FOR SELECT \nUSING (bucket_id = 'equipment-note-images');\n\nCREATE POLICY \\"Users can delete their own equipment note images\\"\nON storage.objects FOR DELETE \nUSING (\n  bucket_id = 'equipment-note-images' \n  AND auth.uid()::text = (storage.foldername(name))[1]\n);\n\n-- Add updated_at trigger for equipment_notes\nCREATE TRIGGER handle_updated_at_equipment_notes\n    BEFORE UPDATE ON public.equipment_notes\n    FOR EACH ROW\n    EXECUTE FUNCTION public.handle_updated_at();\n"}	65a97b46-1258-4977-87c2-2ed56dccb5d5	viral.architect@gmail.com	\N
20250624110043	{"\n-- Create preventative_maintenance table\nCREATE TABLE public.preventative_maintenance (\n  id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  work_order_id UUID NOT NULL,\n  equipment_id UUID NOT NULL,\n  organization_id UUID NOT NULL,\n  created_by UUID NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  completed_at TIMESTAMP WITH TIME ZONE,\n  completed_by UUID,\n  status TEXT NOT NULL DEFAULT 'pending' CHECK (status IN ('pending', 'in_progress', 'completed', 'cancelled')),\n  checklist_data JSONB NOT NULL DEFAULT '[]'::jsonb,\n  notes TEXT,\n  CONSTRAINT fk_pm_work_order FOREIGN KEY (work_order_id) REFERENCES work_orders(id) ON DELETE CASCADE,\n  CONSTRAINT fk_pm_equipment FOREIGN KEY (equipment_id) REFERENCES equipment(id) ON DELETE CASCADE,\n  CONSTRAINT fk_pm_organization FOREIGN KEY (organization_id) REFERENCES organizations(id) ON DELETE CASCADE\n);\n\n-- Add RLS policies for preventative_maintenance\nALTER TABLE public.preventative_maintenance ENABLE ROW LEVEL SECURITY;\n\n-- Policy to allow users to view PM records for their organization's equipment\nCREATE POLICY \\"Users can view PM for their organization\\" \n  ON public.preventative_maintenance \n  FOR SELECT \n  USING (\n    organization_id IN (\n      SELECT om.organization_id \n      FROM organization_members om \n      WHERE om.user_id = auth.uid() AND om.status = 'active'\n    )\n  );\n\n-- Policy to allow users to create PM records for their organization\nCREATE POLICY \\"Users can create PM for their organization\\" \n  ON public.preventative_maintenance \n  FOR INSERT \n  WITH CHECK (\n    organization_id IN (\n      SELECT om.organization_id \n      FROM organization_members om \n      WHERE om.user_id = auth.uid() AND om.status = 'active'\n    )\n  );\n\n-- Policy to allow users to update PM records for their organization\nCREATE POLICY \\"Users can update PM for their organization\\" \n  ON public.preventative_maintenance \n  FOR UPDATE \n  USING (\n    organization_id IN (\n      SELECT om.organization_id \n      FROM organization_members om \n      WHERE om.user_id = auth.uid() AND om.status = 'active'\n    )\n  );\n\n-- Add PM flag to work_orders table\nALTER TABLE public.work_orders \nADD COLUMN has_pm BOOLEAN NOT NULL DEFAULT false,\nADD COLUMN pm_required BOOLEAN NOT NULL DEFAULT false;\n\n-- Create trigger to update updated_at timestamp\nCREATE OR REPLACE FUNCTION update_pm_updated_at()\nRETURNS TRIGGER AS $$\nBEGIN\n  NEW.updated_at = now();\n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\nCREATE TRIGGER trigger_update_pm_updated_at\n  BEFORE UPDATE ON public.preventative_maintenance\n  FOR EACH ROW\n  EXECUTE FUNCTION update_pm_updated_at();\n\n-- Create function to get latest completed PM for equipment\nCREATE OR REPLACE FUNCTION get_latest_completed_pm(equipment_uuid uuid)\nRETURNS TABLE(\n  id uuid,\n  work_order_id uuid,\n  completed_at timestamp with time zone,\n  completed_by uuid,\n  work_order_title text\n) \nLANGUAGE sql\nSTABLE SECURITY DEFINER\nSET search_path TO 'public'\nAS $function$\n  SELECT \n    pm.id,\n    pm.work_order_id,\n    pm.completed_at,\n    pm.completed_by,\n    wo.title as work_order_title\n  FROM preventative_maintenance pm\n  JOIN work_orders wo ON pm.work_order_id = wo.id\n  WHERE pm.equipment_id = equipment_uuid \n    AND pm.status = 'completed'\n    AND pm.completed_at IS NOT NULL\n  ORDER BY pm.completed_at DESC\n  LIMIT 1;\n$function$;\n"}	aa48a7ac-f8d1-4919-abdb-bd7f69955ee7	viral.architect@gmail.com	\N
20250624115935	{"\n-- Fix the update_pm_updated_at function security configuration\n-- This addresses the security vulnerability without changing any existing functionality\n\nCREATE OR REPLACE FUNCTION public.update_pm_updated_at()\nRETURNS trigger\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nBEGIN\n  NEW.updated_at = now();\n  RETURN NEW;\nEND;\n$$;\n"}	aac0b249-60d2-4fed-92db-a55dc1836425	viral.architect@gmail.com	\N
20250625031921	{"\n-- Add Stripe integration fields to organization_slots table\nALTER TABLE public.organization_slots \nADD COLUMN IF NOT EXISTS stripe_subscription_id TEXT,\nADD COLUMN IF NOT EXISTS stripe_price_id TEXT,\nADD COLUMN IF NOT EXISTS auto_renew BOOLEAN DEFAULT true;\n\n-- Create user_license_subscriptions table for tracking Stripe subscriptions\nCREATE TABLE IF NOT EXISTS public.user_license_subscriptions (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  organization_id UUID NOT NULL REFERENCES public.organizations(id) ON DELETE CASCADE,\n  stripe_subscription_id TEXT UNIQUE NOT NULL,\n  stripe_customer_id TEXT NOT NULL,\n  stripe_price_id TEXT NOT NULL,\n  quantity INTEGER NOT NULL DEFAULT 1,\n  status TEXT NOT NULL DEFAULT 'active',\n  current_period_start TIMESTAMP WITH TIME ZONE NOT NULL,\n  current_period_end TIMESTAMP WITH TIME ZONE NOT NULL,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Enable RLS on new table\nALTER TABLE public.user_license_subscriptions ENABLE ROW LEVEL SECURITY;\n\n-- RLS policies for user_license_subscriptions\nCREATE POLICY \\"org_members_view_license_subs\\" ON public.user_license_subscriptions\nFOR SELECT USING (\n  EXISTS (\n    SELECT 1 FROM public.organization_members om\n    WHERE om.organization_id = user_license_subscriptions.organization_id\n    AND om.user_id = auth.uid()\n    AND om.status = 'active'\n  )\n);\n\nCREATE POLICY \\"org_admins_manage_license_subs\\" ON public.user_license_subscriptions\nFOR ALL USING (\n  EXISTS (\n    SELECT 1 FROM public.organization_members om\n    WHERE om.organization_id = user_license_subscriptions.organization_id\n    AND om.user_id = auth.uid()\n    AND om.role IN ('owner', 'admin')\n    AND om.status = 'active'\n  )\n);\n\n-- Add updated_at trigger\nCREATE TRIGGER handle_updated_at_user_license_subscriptions\n  BEFORE UPDATE ON public.user_license_subscriptions\n  FOR EACH ROW\n  EXECUTE FUNCTION public.handle_updated_at();\n\n-- Function to sync Stripe subscription with organization slots\nCREATE OR REPLACE FUNCTION public.sync_stripe_subscription_slots(\n  org_id UUID,\n  subscription_id TEXT,\n  quantity INTEGER,\n  period_start TIMESTAMP WITH TIME ZONE,\n  period_end TIMESTAMP WITH TIME ZONE\n)\nRETURNS VOID\nLANGUAGE PLPGSQL\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nBEGIN\n  -- Upsert organization slots based on Stripe subscription\n  INSERT INTO public.organization_slots (\n    organization_id,\n    slot_type,\n    purchased_slots,\n    used_slots,\n    billing_period_start,\n    billing_period_end,\n    stripe_subscription_id,\n    amount_paid_cents\n  )\n  VALUES (\n    org_id,\n    'user_license',\n    quantity,\n    0, -- Reset used slots for new period\n    period_start,\n    period_end,\n    subscription_id,\n    quantity * 1000 -- $10 per slot in cents\n  )\n  ON CONFLICT (organization_id, billing_period_start) \n  DO UPDATE SET\n    purchased_slots = EXCLUDED.purchased_slots,\n    stripe_subscription_id = EXCLUDED.stripe_subscription_id,\n    amount_paid_cents = EXCLUDED.amount_paid_cents,\n    updated_at = now();\nEND;\n$$;\n"}	362c0d20-1d8c-46a0-89ac-90a5bd31e836	viral.architect@gmail.com	\N
20250702051458	{"\n-- Create work_order_costs table to store itemized costs\nCREATE TABLE public.work_order_costs (\n  id uuid NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  work_order_id uuid NOT NULL REFERENCES work_orders(id) ON DELETE CASCADE,\n  description text NOT NULL,\n  quantity numeric(10,2) NOT NULL DEFAULT 1 CHECK (quantity > 0),\n  unit_price_cents integer NOT NULL DEFAULT 0 CHECK (unit_price_cents >= 0),\n  total_price_cents integer GENERATED ALWAYS AS (ROUND(quantity * unit_price_cents)) STORED,\n  created_by uuid NOT NULL REFERENCES auth.users(id),\n  created_at timestamp with time zone NOT NULL DEFAULT now(),\n  updated_at timestamp with time zone NOT NULL DEFAULT now()\n);\n\n-- Enable RLS on work_order_costs\nALTER TABLE public.work_order_costs ENABLE ROW LEVEL SECURITY;\n\n-- Create RLS policies for work_order_costs\n-- Users can view costs if they have access to the work order and appropriate permissions\nCREATE POLICY \\"Users can view work order costs\\" \nON public.work_order_costs \nFOR SELECT \nUSING (\n  EXISTS (\n    SELECT 1 \n    FROM work_orders wo\n    JOIN organization_members om ON wo.organization_id = om.organization_id\n    WHERE wo.id = work_order_costs.work_order_id\n    AND om.user_id = auth.uid()\n    AND om.status = 'active'\n    AND om.role IN ('owner', 'admin')\n  )\n  OR\n  EXISTS (\n    SELECT 1\n    FROM work_orders wo\n    JOIN team_members tm ON wo.team_id = tm.team_id\n    WHERE wo.id = work_order_costs.work_order_id\n    AND tm.user_id = auth.uid()\n    AND tm.role IN ('manager', 'technician')\n  )\n);\n\n-- Users can insert costs if they can manage the work order\nCREATE POLICY \\"Users can create work order costs\\" \nON public.work_order_costs \nFOR INSERT \nWITH CHECK (\n  created_by = auth.uid()\n  AND (\n    EXISTS (\n      SELECT 1 \n      FROM work_orders wo\n      JOIN organization_members om ON wo.organization_id = om.organization_id\n      WHERE wo.id = work_order_costs.work_order_id\n      AND om.user_id = auth.uid()\n      AND om.status = 'active'\n      AND om.role IN ('owner', 'admin')\n    )\n    OR\n    EXISTS (\n      SELECT 1\n      FROM work_orders wo\n      JOIN team_members tm ON wo.team_id = tm.team_id\n      WHERE wo.id = work_order_costs.work_order_id\n      AND tm.user_id = auth.uid()\n      AND tm.role IN ('manager', 'technician')\n    )\n  )\n);\n\n-- Users can update costs they created or if they're admin\nCREATE POLICY \\"Users can update work order costs\\" \nON public.work_order_costs \nFOR UPDATE \nUSING (\n  created_by = auth.uid()\n  OR\n  EXISTS (\n    SELECT 1 \n    FROM work_orders wo\n    JOIN organization_members om ON wo.organization_id = om.organization_id\n    WHERE wo.id = work_order_costs.work_order_id\n    AND om.user_id = auth.uid()\n    AND om.status = 'active'\n    AND om.role IN ('owner', 'admin')\n  )\n);\n\n-- Users can delete costs they created or if they're admin\nCREATE POLICY \\"Users can delete work order costs\\" \nON public.work_order_costs \nFOR DELETE \nUSING (\n  created_by = auth.uid()\n  OR\n  EXISTS (\n    SELECT 1 \n    FROM work_orders wo\n    JOIN organization_members om ON wo.organization_id = om.organization_id\n    WHERE wo.id = work_order_costs.work_order_id\n    AND om.user_id = auth.uid()\n    AND om.status = 'active'\n    AND om.role IN ('owner', 'admin')\n  )\n);\n\n-- Create trigger to update updated_at timestamp\nCREATE OR REPLACE FUNCTION public.update_work_order_costs_updated_at()\nRETURNS trigger\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path = public\nAS $$\nBEGIN\n  NEW.updated_at = now();\n  RETURN NEW;\nEND;\n$$;\n\nCREATE TRIGGER work_order_costs_updated_at\n  BEFORE UPDATE ON public.work_order_costs\n  FOR EACH ROW\n  EXECUTE FUNCTION public.update_work_order_costs_updated_at();\n\n-- Add index for performance\nCREATE INDEX idx_work_order_costs_work_order_id ON public.work_order_costs(work_order_id);\n"}		viral.architect@gmail.com	\N
20250702093903	{"-- First, list all current policies on work_order_notes to see what exists\nSELECT schemaname, tablename, policyname, cmd, permissive, roles, qual, with_check\nFROM pg_policies \nWHERE schemaname = 'public' AND tablename = 'work_order_notes'\nORDER BY policyname;"}		viral.architect@gmail.com	\N
20250702094019	{"-- Drop ALL existing policies on work_order_notes (comprehensive cleanup)\nDO $$ \nDECLARE\n    pol_name TEXT;\nBEGIN\n    FOR pol_name IN \n        SELECT policyname \n        FROM pg_policies \n        WHERE schemaname = 'public' AND tablename = 'work_order_notes'\n    LOOP\n        EXECUTE format('DROP POLICY IF EXISTS %I ON work_order_notes', pol_name);\n    END LOOP;\nEND $$;\n\n-- Verify all policies are dropped\nSELECT COUNT(*) as remaining_policies \nFROM pg_policies \nWHERE schemaname = 'public' AND tablename = 'work_order_notes';"}		viral.architect@gmail.com	\N
20250702094036	{"-- Create consolidated, non-duplicate policies for work_order_notes\nCREATE POLICY \\"work_order_notes_select_organization_members\\" \n  ON work_order_notes \n  FOR SELECT \n  USING (\n    EXISTS (\n      SELECT 1 FROM work_orders wo\n      WHERE wo.id = work_order_notes.work_order_id \n        AND wo.organization_id IN (\n          SELECT organization_id FROM organization_members\n          WHERE user_id = auth.uid() AND status = 'active'\n        )\n    )\n    AND (NOT is_private OR author_id = auth.uid())\n  );\n\nCREATE POLICY \\"work_order_notes_insert_organization_members\\" \n  ON work_order_notes \n  FOR INSERT \n  WITH CHECK (\n    author_id = auth.uid()\n    AND EXISTS (\n      SELECT 1 FROM work_orders wo\n      WHERE wo.id = work_order_notes.work_order_id \n        AND wo.organization_id IN (\n          SELECT organization_id FROM organization_members\n          WHERE user_id = auth.uid() AND status = 'active'\n        )\n    )\n  );\n\nCREATE POLICY \\"work_order_notes_update_own\\" \n  ON work_order_notes \n  FOR UPDATE \n  USING (author_id = auth.uid());\n\nCREATE POLICY \\"work_order_notes_delete_own\\" \n  ON work_order_notes \n  FOR DELETE \n  USING (author_id = auth.uid());"}		viral.architect@gmail.com	\N
20250702094342	{"-- Drop duplicate/redundant policies on scans table\nDROP POLICY IF EXISTS \\"Organization members can create scans\\" ON scans;\nDROP POLICY IF EXISTS \\"Organization members can view scans\\" ON scans;\nDROP POLICY IF EXISTS \\"Users can create scans in their organizations\\" ON scans;\nDROP POLICY IF EXISTS \\"Users can view scans in their organizations\\" ON scans;\n\n-- Keep and rename the efficient final_ policies for clarity\nDROP POLICY IF EXISTS \\"final_scans_select_equipment_org\\" ON scans;\nDROP POLICY IF EXISTS \\"final_scans_insert_equipment_org\\" ON scans;\nDROP POLICY IF EXISTS \\"final_scans_update_own\\" ON scans;\nDROP POLICY IF EXISTS \\"final_scans_delete_admins\\" ON scans;\n\n-- Create consolidated, non-duplicate policies for scans\nCREATE POLICY \\"scans_select_organization_members\\" \n  ON scans \n  FOR SELECT \n  USING (\n    check_org_access_secure(auth.uid(), (\n      SELECT organization_id FROM equipment \n      WHERE equipment.id = scans.equipment_id\n    ))\n  );\n\nCREATE POLICY \\"scans_insert_organization_members\\" \n  ON scans \n  FOR INSERT \n  WITH CHECK (\n    scanned_by = auth.uid() \n    AND check_org_access_secure(auth.uid(), (\n      SELECT organization_id FROM equipment \n      WHERE equipment.id = scans.equipment_id\n    ))\n  );\n\nCREATE POLICY \\"scans_update_own\\" \n  ON scans \n  FOR UPDATE \n  USING (scanned_by = auth.uid());\n\nCREATE POLICY \\"scans_delete_admins\\" \n  ON scans \n  FOR DELETE \n  USING (\n    check_org_admin_secure(auth.uid(), (\n      SELECT organization_id FROM equipment \n      WHERE equipment.id = scans.equipment_id\n    ))\n  );"}		viral.architect@gmail.com	\N
20250706020541	{"-- Complete RLS policy implementation for invitation system\n-- Add missing DELETE policy for organization_invitations\n\nCREATE POLICY \\"invitation_minimal_delete\\"\n  ON organization_invitations\n  FOR DELETE\n  USING (\n    invited_by = auth.uid()  -- Users can only delete invitations they sent\n  );\n\n-- Add enhanced security function for invitation management\nCREATE OR REPLACE FUNCTION public.can_manage_invitation_safe(\n  user_uuid uuid,\n  invitation_id uuid\n) RETURNS boolean\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  org_id uuid;\n  is_admin boolean := false;\n  is_inviter boolean := false;\nBEGIN\n  -- Get organization ID and check if user is the inviter\n  SELECT organization_id, (invited_by = user_uuid) \n  INTO org_id, is_inviter\n  FROM public.organization_invitations\n  WHERE id = invitation_id;\n  \n  -- If user is the inviter, they can manage it\n  IF is_inviter THEN\n    RETURN true;\n  END IF;\n  \n  -- Check if user is admin of the organization\n  IF org_id IS NOT NULL THEN\n    SELECT public.raw_check_admin_bypass(user_uuid, org_id) INTO is_admin;\n    RETURN is_admin;\n  END IF;\n  \n  RETURN false;\nEXCEPTION WHEN OTHERS THEN\n  RETURN false;\nEND;\n$$;\n\n-- Grant execute permissions\nGRANT EXECUTE ON FUNCTION public.can_manage_invitation_safe(uuid, uuid) TO authenticated;\n\n-- Add function to safely get user's invitations\nCREATE OR REPLACE FUNCTION public.get_user_invitations_safe(\n  user_uuid uuid,\n  org_id uuid\n) RETURNS TABLE(\n  id uuid,\n  email text,\n  role text,\n  status text,\n  message text,\n  created_at timestamp with time zone,\n  expires_at timestamp with time zone,\n  accepted_at timestamp with time zone,\n  declined_at timestamp with time zone,\n  expired_at timestamp with time zone,\n  slot_reserved boolean,\n  slot_purchase_id uuid\n)\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nBEGIN\n  -- Check if user is admin of the organization\n  IF public.raw_check_admin_bypass(user_uuid, org_id) THEN\n    -- Admins can see all invitations for their organization\n    RETURN QUERY\n    SELECT \n      oi.id,\n      oi.email,\n      oi.role,\n      oi.status,\n      oi.message,\n      oi.created_at,\n      oi.expires_at,\n      oi.accepted_at,\n      oi.declined_at,\n      oi.expired_at,\n      oi.slot_reserved,\n      oi.slot_purchase_id\n    FROM public.organization_invitations oi\n    WHERE oi.organization_id = org_id\n    ORDER BY oi.created_at DESC;\n  ELSE\n    -- Regular users can only see invitations they sent\n    RETURN QUERY\n    SELECT \n      oi.id,\n      oi.email,\n      oi.role,\n      oi.status,\n      oi.message,\n      oi.created_at,\n      oi.expires_at,\n      oi.accepted_at,\n      oi.declined_at,\n      oi.expired_at,\n      oi.slot_reserved,\n      oi.slot_purchase_id\n    FROM public.organization_invitations oi\n    WHERE oi.organization_id = org_id\n      AND oi.invited_by = user_uuid\n    ORDER BY oi.created_at DESC;\n  END IF;\nEND;\n$$;\n\n-- Grant execute permissions\nGRANT EXECUTE ON FUNCTION public.get_user_invitations_safe(uuid, uuid) TO authenticated;\n\n-- Success message\nDO $$\nBEGIN\n  RAISE NOTICE 'SUCCESS: Enhanced RLS policies and security functions implemented.';\n  RAISE NOTICE 'Added DELETE policy for invitations and enhanced security functions.';\nEND $$;"}		viral.architect@gmail.com	\N
20250702094746	{"-- Performance optimization: Add indexes to foreign key columns\n-- Based on Supabase performance advisor recommendations\n\n-- Index for work_order_costs table\nCREATE INDEX IF NOT EXISTS idx_work_order_costs_created_by ON work_order_costs(created_by);\n\n-- Index for work_order_notes table  \nCREATE INDEX IF NOT EXISTS idx_work_order_notes_author_id ON work_order_notes(author_id);\n\n-- Indexes for work_orders table foreign keys\nCREATE INDEX IF NOT EXISTS idx_work_orders_assignee_id ON work_orders(assignee_id);\nCREATE INDEX IF NOT EXISTS idx_work_orders_created_by ON work_orders(created_by);\nCREATE INDEX IF NOT EXISTS idx_work_orders_equipment_id ON work_orders(equipment_id);\nCREATE INDEX IF NOT EXISTS idx_work_orders_organization_id ON work_orders(organization_id);\nCREATE INDEX IF NOT EXISTS idx_work_orders_team_id ON work_orders(team_id);\n\n-- Composite indexes for common query patterns\n-- Work orders by organization and status (common filtering pattern)\nCREATE INDEX IF NOT EXISTS idx_work_orders_org_status ON work_orders(organization_id, status);\n\n-- Work orders by organization and due date (for dashboard queries)\nCREATE INDEX IF NOT EXISTS idx_work_orders_org_due_date ON work_orders(organization_id, due_date) WHERE due_date IS NOT NULL;\n\n-- Work orders by equipment and status (equipment details page)\nCREATE INDEX IF NOT EXISTS idx_work_orders_equipment_status ON work_orders(equipment_id, status);\n\n-- Work orders by team and status (team workload queries)\nCREATE INDEX IF NOT EXISTS idx_work_orders_team_status ON work_orders(team_id, status) WHERE team_id IS NOT NULL;"}		viral.architect@gmail.com	\N
20250702101130	{"-- Drop duplicate/redundant policies on notes table\nDROP POLICY IF EXISTS \\"Authors can update their own notes\\" ON notes;\nDROP POLICY IF EXISTS \\"Organization members can create notes\\" ON notes;\nDROP POLICY IF EXISTS \\"Organization members can view notes\\" ON notes;\nDROP POLICY IF EXISTS \\"Users can manage notes in their organizations\\" ON notes;\nDROP POLICY IF EXISTS \\"Users can view notes in their organizations\\" ON notes;\n\n-- Keep and rename the efficient final_ policies for clarity\nDROP POLICY IF EXISTS \\"final_notes_select_equipment_org\\" ON notes;\nDROP POLICY IF EXISTS \\"final_notes_insert_equipment_org\\" ON notes;\nDROP POLICY IF EXISTS \\"final_notes_update_own\\" ON notes;\nDROP POLICY IF EXISTS \\"final_notes_delete_own_or_admin\\" ON notes;\n\n-- Create consolidated, non-duplicate policies for notes\nCREATE POLICY \\"notes_select_organization_members\\" \n  ON notes \n  FOR SELECT \n  USING (\n    check_org_access_secure(auth.uid(), (\n      SELECT organization_id FROM equipment \n      WHERE equipment.id = notes.equipment_id\n    ))\n  );\n\nCREATE POLICY \\"notes_insert_organization_members\\" \n  ON notes \n  FOR INSERT \n  WITH CHECK (\n    author_id = auth.uid() \n    AND check_org_access_secure(auth.uid(), (\n      SELECT organization_id FROM equipment \n      WHERE equipment.id = notes.equipment_id\n    ))\n  );\n\nCREATE POLICY \\"notes_update_own\\" \n  ON notes \n  FOR UPDATE \n  USING (author_id = auth.uid());\n\nCREATE POLICY \\"notes_delete_own_or_admin\\" \n  ON notes \n  FOR DELETE \n  USING (\n    author_id = auth.uid() \n    OR check_org_admin_secure(auth.uid(), (\n      SELECT organization_id FROM equipment \n      WHERE equipment.id = notes.equipment_id\n    ))\n  );"}		viral.architect@gmail.com	\N
20250702101524	{"-- Drop duplicate/redundant policies on work_orders table\nDROP POLICY IF EXISTS \\"Organization members can create work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Organization members can update work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Organization members can view work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Users can create work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Users can view organization work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Organization admins can manage work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Organization admins can update work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Organization admins can delete work orders\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Assigned users can update work orders\\" ON work_orders;\n\n-- Create consolidated, non-duplicate policies for work_orders\nCREATE POLICY \\"work_orders_select_organization_members\\" \n  ON work_orders \n  FOR SELECT \n  USING (\n    check_org_access_secure(auth.uid(), organization_id)\n  );\n\nCREATE POLICY \\"work_orders_insert_organization_members\\" \n  ON work_orders \n  FOR INSERT \n  WITH CHECK (\n    check_org_access_secure(auth.uid(), organization_id)\n    AND created_by = auth.uid()\n  );\n\nCREATE POLICY \\"work_orders_update_organization_members\\" \n  ON work_orders \n  FOR UPDATE \n  USING (\n    check_org_access_secure(auth.uid(), organization_id)\n    AND (\n      -- Organization admins can update any work order\n      check_org_admin_secure(auth.uid(), organization_id)\n      -- Or assigned users can update their assigned work orders\n      OR assignee_id = auth.uid()\n      -- Or team managers can update work orders assigned to their teams\n      OR EXISTS (\n        SELECT 1 FROM team_members tm \n        WHERE tm.team_id = work_orders.team_id \n        AND tm.user_id = auth.uid() \n        AND tm.role = 'manager'\n      )\n    )\n  );\n\nCREATE POLICY \\"work_orders_delete_admins\\" \n  ON work_orders \n  FOR DELETE \n  USING (\n    check_org_admin_secure(auth.uid(), organization_id)\n  );"}		viral.architect@gmail.com	\N
20250702102014	{"-- Create indexes for unindexed foreign keys to improve performance\n\n-- Equipment table indexes\nCREATE INDEX IF NOT EXISTS idx_equipment_organization_id ON equipment(organization_id);\nCREATE INDEX IF NOT EXISTS idx_equipment_team_id ON equipment(team_id);\n\n-- Equipment notes indexes\nCREATE INDEX IF NOT EXISTS idx_equipment_notes_equipment_id ON equipment_notes(equipment_id);\nCREATE INDEX IF NOT EXISTS idx_equipment_notes_author_id ON equipment_notes(author_id);\nCREATE INDEX IF NOT EXISTS idx_equipment_notes_last_modified_by ON equipment_notes(last_modified_by);\n\n-- Notes table indexes\nCREATE INDEX IF NOT EXISTS idx_notes_equipment_id ON notes(equipment_id);\nCREATE INDEX IF NOT EXISTS idx_notes_author_id ON notes(author_id);\n\n-- Equipment note images indexes\nCREATE INDEX IF NOT EXISTS idx_equipment_note_images_equipment_note_id ON equipment_note_images(equipment_note_id);\nCREATE INDEX IF NOT EXISTS idx_equipment_note_images_uploaded_by ON equipment_note_images(uploaded_by);\n\n-- Work orders indexes\nCREATE INDEX IF NOT EXISTS idx_work_orders_organization_id ON work_orders(organization_id);\nCREATE INDEX IF NOT EXISTS idx_work_orders_equipment_id ON work_orders(equipment_id);\nCREATE INDEX IF NOT EXISTS idx_work_orders_assignee_id ON work_orders(assignee_id);\nCREATE INDEX IF NOT EXISTS idx_work_orders_team_id ON work_orders(team_id);\nCREATE INDEX IF NOT EXISTS idx_work_orders_created_by ON work_orders(created_by);\n\n-- Work order costs indexes\nCREATE INDEX IF NOT EXISTS idx_work_order_costs_work_order_id ON work_order_costs(work_order_id);\nCREATE INDEX IF NOT EXISTS idx_work_order_costs_created_by ON work_order_costs(created_by);\n\n-- Work order notes indexes\nCREATE INDEX IF NOT EXISTS idx_work_order_notes_work_order_id ON work_order_notes(work_order_id);\nCREATE INDEX IF NOT EXISTS idx_work_order_notes_author_id ON work_order_notes(author_id);\n\n-- Work order images indexes\nCREATE INDEX IF NOT EXISTS idx_work_order_images_work_order_id ON work_order_images(work_order_id);\nCREATE INDEX IF NOT EXISTS idx_work_order_images_uploaded_by ON work_order_images(uploaded_by);\nCREATE INDEX IF NOT EXISTS idx_work_order_images_note_id ON work_order_images(note_id);\n\n-- Teams indexes\nCREATE INDEX IF NOT EXISTS idx_teams_organization_id ON teams(organization_id);\n\n-- Team members indexes\nCREATE INDEX IF NOT EXISTS idx_team_members_team_id ON team_members(team_id);\nCREATE INDEX IF NOT EXISTS idx_team_members_user_id ON team_members(user_id);\n\n-- Organization members indexes\nCREATE INDEX IF NOT EXISTS idx_organization_members_organization_id ON organization_members(organization_id);\nCREATE INDEX IF NOT EXISTS idx_organization_members_user_id ON organization_members(user_id);\n\n-- Organization invitations indexes\nCREATE INDEX IF NOT EXISTS idx_organization_invitations_organization_id ON organization_invitations(organization_id);\nCREATE INDEX IF NOT EXISTS idx_organization_invitations_invited_by ON organization_invitations(invited_by);\nCREATE INDEX IF NOT EXISTS idx_organization_invitations_accepted_by ON organization_invitations(accepted_by);\nCREATE INDEX IF NOT EXISTS idx_organization_invitations_slot_purchase_id ON organization_invitations(slot_purchase_id);\n\n-- Scans indexes\nCREATE INDEX IF NOT EXISTS idx_scans_equipment_id ON scans(equipment_id);\nCREATE INDEX IF NOT EXISTS idx_scans_scanned_by ON scans(scanned_by);\n\n-- Preventative maintenance indexes\nCREATE INDEX IF NOT EXISTS idx_preventative_maintenance_equipment_id ON preventative_maintenance(equipment_id);\nCREATE INDEX IF NOT EXISTS idx_preventative_maintenance_organization_id ON preventative_maintenance(organization_id);\nCREATE INDEX IF NOT EXISTS idx_preventative_maintenance_work_order_id ON preventative_maintenance(work_order_id);\nCREATE INDEX IF NOT EXISTS idx_preventative_maintenance_created_by ON preventative_maintenance(created_by);\nCREATE INDEX IF NOT EXISTS idx_preventative_maintenance_completed_by ON preventative_maintenance(completed_by);\n\n-- Billing and organization related indexes\nCREATE INDEX IF NOT EXISTS idx_billing_events_organization_id ON billing_events(organization_id);\nCREATE INDEX IF NOT EXISTS idx_billing_events_user_id ON billing_events(user_id);\nCREATE INDEX IF NOT EXISTS idx_billing_usage_organization_id ON billing_usage(organization_id);\nCREATE INDEX IF NOT EXISTS idx_organization_slots_organization_id ON organization_slots(organization_id);\nCREATE INDEX IF NOT EXISTS idx_organization_subscriptions_organization_id ON organization_subscriptions(organization_id);\nCREATE INDEX IF NOT EXISTS idx_slot_purchases_organization_id ON slot_purchases(organization_id);\nCREATE INDEX IF NOT EXISTS idx_slot_purchases_purchased_by ON slot_purchases(purchased_by);\nCREATE INDEX IF NOT EXISTS idx_user_license_subscriptions_organization_id ON user_license_subscriptions(organization_id);\n\n-- Additional performance-oriented composite indexes\nCREATE INDEX IF NOT EXISTS idx_work_orders_org_status ON work_orders(organization_id, status);\nCREATE INDEX IF NOT EXISTS idx_work_orders_org_due_date ON work_orders(organization_id, due_date);\nCREATE INDEX IF NOT EXISTS idx_equipment_notes_equipment_created ON equipment_notes(equipment_id, created_at);\nCREATE INDEX IF NOT EXISTS idx_organization_members_org_status ON organization_members(organization_id, status);"}		viral.architect@gmail.com	\N
20250702102713	{"-- Add missing foreign key indexes identified in performance analysis\n-- These indexes are critical for join performance and RLS policy efficiency\n\n-- Missing foreign key indexes\nCREATE INDEX IF NOT EXISTS idx_organization_members_slot_purchase_id ON organization_members(slot_purchase_id);\nCREATE INDEX IF NOT EXISTS idx_subscribers_user_id ON subscribers(user_id);\n\n-- Additional composite indexes for equipment notes optimization\nCREATE INDEX IF NOT EXISTS idx_equipment_notes_equipment_author ON equipment_notes(equipment_id, author_id);\nCREATE INDEX IF NOT EXISTS idx_equipment_notes_equipment_created ON equipment_notes(equipment_id, created_at DESC);\n\n-- Team-based query optimization indexes\nCREATE INDEX IF NOT EXISTS idx_team_members_user_team ON team_members(user_id, team_id);\n\n-- Organization member lookup optimization\nCREATE INDEX IF NOT EXISTS idx_organization_members_user_status ON organization_members(user_id, status) WHERE status = 'active';\n\n-- Work order assignment optimization\nCREATE INDEX IF NOT EXISTS idx_work_orders_assignee_status ON work_orders(assignee_id, status) WHERE assignee_id IS NOT NULL;"}		viral.architect@gmail.com	\N
20250702103358	{"-- Performance optimization for RLS policies\n-- Address Supabase Performance Advisor warnings\n\n-- Step 1: Create optimized security definer functions for common operations\nCREATE OR REPLACE FUNCTION public.get_current_user_id()\nRETURNS uuid\nLANGUAGE sql\nSTABLE\nSECURITY DEFINER\nSET search_path = 'public'\nAS $$\n  SELECT auth.uid();\n$$;\n\nCREATE OR REPLACE FUNCTION public.get_user_organizations(user_uuid uuid)\nRETURNS TABLE(organization_id uuid)\nLANGUAGE sql\nSTABLE\nSECURITY DEFINER\nSET search_path = 'public'\nAS $$\n  SELECT om.organization_id\n  FROM organization_members om\n  WHERE om.user_id = user_uuid \n    AND om.status = 'active';\n$$;\n\nCREATE OR REPLACE FUNCTION public.is_organization_member(user_uuid uuid, org_id uuid)\nRETURNS boolean\nLANGUAGE sql\nSTABLE\nSECURITY DEFINER\nSET search_path = 'public'\nAS $$\n  SELECT EXISTS (\n    SELECT 1\n    FROM organization_members om\n    WHERE om.user_id = user_uuid \n      AND om.organization_id = org_id \n      AND om.status = 'active'\n  );\n$$;\n\nCREATE OR REPLACE FUNCTION public.is_organization_admin(user_uuid uuid, org_id uuid)\nRETURNS boolean\nLANGUAGE sql\nSTABLE\nSECURITY DEFINER\nSET search_path = 'public'\nAS $$\n  SELECT EXISTS (\n    SELECT 1\n    FROM organization_members om\n    WHERE om.user_id = user_uuid \n      AND om.organization_id = org_id \n      AND om.role IN ('owner', 'admin')\n      AND om.status = 'active'\n  );\n$$;\n\n-- Step 2: Drop redundant and inefficient policies\n\n-- Equipment table - remove redundant policies\nDROP POLICY IF EXISTS \\"Organization members can insert equipment\\" ON equipment;\nDROP POLICY IF EXISTS \\"Organization members can update equipment\\" ON equipment;\nDROP POLICY IF EXISTS \\"Organization members can view equipment\\" ON equipment;\nDROP POLICY IF EXISTS \\"Users can manage equipment in their organizations\\" ON equipment;\nDROP POLICY IF EXISTS \\"Users can view equipment in their organizations\\" ON equipment;\n\n-- Team members table - remove redundant policies\nDROP POLICY IF EXISTS \\"Users can manage team members in their organizations\\" ON team_members;\nDROP POLICY IF EXISTS \\"Users can view team members in their organizations\\" ON team_members;\n\n-- Teams table - remove redundant policies\nDROP POLICY IF EXISTS \\"Organization members can view teams\\" ON teams;\nDROP POLICY IF EXISTS \\"Users can manage teams in their organizations\\" ON teams;\nDROP POLICY IF EXISTS \\"Users can view teams in their organizations\\" ON teams;\n\n-- Work orders table - remove redundant policies\nDROP POLICY IF EXISTS \\"Users can manage work orders in their organizations\\" ON work_orders;\nDROP POLICY IF EXISTS \\"Users can view work orders in their organizations\\" ON work_orders;\n\n-- Organization members - remove redundant policies\nDROP POLICY IF EXISTS \\"org_members_own_records_only\\" ON organization_members;\n\n-- Profiles - remove redundant policies\nDROP POLICY IF EXISTS \\"Users can view profiles in their organization context\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can view their own profile\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can insert their own profile\\" ON profiles;\nDROP POLICY IF EXISTS \\"Users can update own profile\\" ON profiles;\n\n-- Step 3: Create optimized policies using new functions and efficient patterns\n\n-- Equipment policies (optimized)\nCREATE POLICY \\"equipment_select_optimized\\" \n  ON equipment \n  FOR SELECT \n  USING (public.is_organization_member((SELECT auth.uid()), organization_id));\n\nCREATE POLICY \\"equipment_insert_optimized\\" \n  ON equipment \n  FOR INSERT \n  WITH CHECK (public.is_organization_member((SELECT auth.uid()), organization_id));\n\nCREATE POLICY \\"equipment_update_optimized\\" \n  ON equipment \n  FOR UPDATE \n  USING (public.is_organization_admin((SELECT auth.uid()), organization_id));\n\n-- Teams policies (optimized)\nCREATE POLICY \\"teams_select_optimized\\" \n  ON teams \n  FOR SELECT \n  USING (public.is_organization_member((SELECT auth.uid()), organization_id));\n\nCREATE POLICY \\"teams_insert_optimized\\" \n  ON teams \n  FOR INSERT \n  WITH CHECK (public.is_organization_admin((SELECT auth.uid()), organization_id));\n\nCREATE POLICY \\"teams_update_optimized\\" \n  ON teams \n  FOR UPDATE \n  USING (public.is_organization_admin((SELECT auth.uid()), organization_id));\n\n-- Team members policies (optimized)\nCREATE POLICY \\"team_members_select_optimized\\" \n  ON team_members \n  FOR SELECT \n  USING (\n    public.is_organization_member(\n      (SELECT auth.uid()), \n      (SELECT organization_id FROM teams WHERE id = team_members.team_id)\n    )\n  );\n\nCREATE POLICY \\"team_members_insert_optimized\\" \n  ON team_members \n  FOR INSERT \n  WITH CHECK (\n    public.is_organization_admin(\n      (SELECT auth.uid()), \n      (SELECT organization_id FROM teams WHERE id = team_members.team_id)\n    )\n  );\n\nCREATE POLICY \\"team_members_update_optimized\\" \n  ON team_members \n  FOR UPDATE \n  USING (\n    public.is_organization_admin(\n      (SELECT auth.uid()), \n      (SELECT organization_id FROM teams WHERE id = team_members.team_id)\n    )\n  );\n\n-- Work orders policies (optimized)\nCREATE POLICY \\"work_orders_select_optimized\\" \n  ON work_orders \n  FOR SELECT \n  USING (public.is_organization_member((SELECT auth.uid()), organization_id));\n\nCREATE POLICY \\"work_orders_insert_optimized\\" \n  ON work_orders \n  FOR INSERT \n  WITH CHECK (public.is_organization_member((SELECT auth.uid()), organization_id));\n\nCREATE POLICY \\"work_orders_update_optimized\\" \n  ON work_orders \n  FOR UPDATE \n  USING (public.is_organization_member((SELECT auth.uid()), organization_id));\n\nCREATE POLICY \\"work_orders_delete_optimized\\" \n  ON work_orders \n  FOR DELETE \n  USING (public.is_organization_admin((SELECT auth.uid()), organization_id));\n\n-- Organization members policies (optimized)\nCREATE POLICY \\"org_members_select_optimized\\" \n  ON organization_members \n  FOR SELECT \n  USING (user_id = (SELECT auth.uid()));\n\nCREATE POLICY \\"org_members_insert_optimized\\" \n  ON organization_members \n  FOR INSERT \n  WITH CHECK (user_id = (SELECT auth.uid()));\n\nCREATE POLICY \\"org_members_update_optimized\\" \n  ON organization_members \n  FOR UPDATE \n  USING (user_id = (SELECT auth.uid()));\n\nCREATE POLICY \\"org_members_delete_optimized\\" \n  ON organization_members \n  FOR DELETE \n  USING (user_id = (SELECT auth.uid()));\n\n-- Profiles policies (optimized)\nCREATE POLICY \\"profiles_select_optimized\\" \n  ON profiles \n  FOR SELECT \n  USING (true); -- Profiles are public within the application\n\nCREATE POLICY \\"profiles_insert_optimized\\" \n  ON profiles \n  FOR INSERT \n  WITH CHECK (id = (SELECT auth.uid()));\n\nCREATE POLICY \\"profiles_update_optimized\\" \n  ON profiles \n  FOR UPDATE \n  USING (id = (SELECT auth.uid()));\n\n-- Step 4: Optimize equipment notes policies\nDROP POLICY IF EXISTS \\"Users can view equipment notes in their organization\\" ON equipment_notes;\nDROP POLICY IF EXISTS \\"Users can create equipment notes in their organization\\" ON equipment_notes;\nDROP POLICY IF EXISTS \\"Users can update their own equipment notes\\" ON equipment_notes;\nDROP POLICY IF EXISTS \\"Users can delete their own equipment notes\\" ON equipment_notes;\n\nCREATE POLICY \\"equipment_notes_select_optimized\\" \n  ON equipment_notes \n  FOR SELECT \n  USING (\n    public.is_organization_member(\n      (SELECT auth.uid()), \n      (SELECT organization_id FROM equipment WHERE id = equipment_notes.equipment_id)\n    ) \n    AND ((NOT is_private) OR (author_id = (SELECT auth.uid())))\n  );\n\nCREATE POLICY \\"equipment_notes_insert_optimized\\" \n  ON equipment_notes \n  FOR INSERT \n  WITH CHECK (\n    author_id = (SELECT auth.uid()) \n    AND public.is_organization_member(\n      (SELECT auth.uid()), \n      (SELECT organization_id FROM equipment WHERE id = equipment_notes.equipment_id)\n    )\n  );\n\nCREATE POLICY \\"equipment_notes_update_optimized\\" \n  ON equipment_notes \n  FOR UPDATE \n  USING (author_id = (SELECT auth.uid()));\n\nCREATE POLICY \\"equipment_notes_delete_optimized\\" \n  ON equipment_notes \n  FOR DELETE \n  USING (author_id = (SELECT auth.uid()));\n\n-- Step 5: Optimize work order costs policies\nDROP POLICY IF EXISTS \\"Users can view work order costs\\" ON work_order_costs;\nDROP POLICY IF EXISTS \\"Users can create work order costs\\" ON work_order_costs;\nDROP POLICY IF EXISTS \\"Users can update work order costs\\" ON work_order_costs;\nDROP POLICY IF EXISTS \\"Users can delete work order costs\\" ON work_order_costs;\n\nCREATE POLICY \\"work_order_costs_select_optimized\\" \n  ON work_order_costs \n  FOR SELECT \n  USING (\n    public.is_organization_member(\n      (SELECT auth.uid()), \n      (SELECT organization_id FROM work_orders WHERE id = work_order_costs.work_order_id)\n    )\n  );\n\nCREATE POLICY \\"work_order_costs_insert_optimized\\" \n  ON work_order_costs \n  FOR INSERT \n  WITH CHECK (\n    created_by = (SELECT auth.uid()) \n    AND public.is_organization_member(\n      (SELECT auth.uid()), \n      (SELECT organization_id FROM work_orders WHERE id = work_order_costs.work_order_id)\n    )\n  );\n\nCREATE POLICY \\"work_order_costs_update_optimized\\" \n  ON work_order_costs \n  FOR UPDATE \n  USING (\n    (created_by = (SELECT auth.uid())) \n    OR public.is_organization_admin(\n      (SELECT auth.uid()), \n      (SELECT organization_id FROM work_orders WHERE id = work_order_costs.work_order_id)\n    )\n  );\n\nCREATE POLICY \\"work_order_costs_delete_optimized\\" \n  ON work_order_costs \n  FOR DELETE \n  USING (\n    (created_by = (SELECT auth.uid())) \n    OR public.is_organization_admin(\n      (SELECT auth.uid()), \n      (SELECT organization_id FROM work_orders WHERE id = work_order_costs.work_order_id)\n    )\n  );\n\n-- Step 6: Add performance indexes for the new functions\nCREATE INDEX IF NOT EXISTS idx_organization_members_user_org_status ON organization_members(user_id, organization_id, status) WHERE status = 'active';\nCREATE INDEX IF NOT EXISTS idx_organization_members_org_role_status ON organization_members(organization_id, role, status) WHERE status = 'active' AND role IN ('owner', 'admin');\n\n-- Performance monitoring comment\nCOMMENT ON FUNCTION public.get_current_user_id() IS 'Optimized function to get current user ID for RLS policies - reduces auth.uid() calls';\nCOMMENT ON FUNCTION public.is_organization_member(uuid, uuid) IS 'Optimized function to check organization membership - replaces complex EXISTS subqueries';\nCOMMENT ON FUNCTION public.is_organization_admin(uuid, uuid) IS 'Optimized function to check admin access - uses indexed lookups';"}		viral.architect@gmail.com	\N
20250705092633	{"-- Step 1: Add unique constraint to organization_slots table to fix sync function\nALTER TABLE public.organization_slots \nADD CONSTRAINT unique_org_billing_period \nUNIQUE (organization_id, billing_period_start);\n\n-- Step 2: Sync existing license subscriptions to organization_slots\n-- This will populate the organization_slots table with data from user_license_subscriptions\nINSERT INTO public.organization_slots (\n  organization_id,\n  slot_type,\n  purchased_slots,\n  used_slots,\n  billing_period_start,\n  billing_period_end,\n  stripe_subscription_id,\n  amount_paid_cents\n)\nSELECT \n  uls.organization_id,\n  'user_license' as slot_type,\n  uls.quantity as purchased_slots,\n  0 as used_slots, -- Start with 0 used slots\n  uls.current_period_start as billing_period_start,\n  uls.current_period_end as billing_period_end,\n  uls.stripe_subscription_id,\n  (uls.quantity * 1000) as amount_paid_cents -- $10 per slot in cents\nFROM public.user_license_subscriptions uls\nWHERE uls.status = 'active'\nON CONFLICT (organization_id, billing_period_start) DO UPDATE SET\n  purchased_slots = EXCLUDED.purchased_slots,\n  stripe_subscription_id = EXCLUDED.stripe_subscription_id,\n  amount_paid_cents = EXCLUDED.amount_paid_cents,\n  updated_at = now();\n\nCOMMENT ON CONSTRAINT unique_org_billing_period ON public.organization_slots IS 'Ensures one slot record per organization per billing period for proper upsert operations';"}		viral.architect@gmail.com	\N
20250705093701	{"-- Update the get_organization_slot_availability function to find currently active slots\n-- instead of trying to match exact billing periods\nCREATE OR REPLACE FUNCTION public.get_organization_slot_availability(org_id uuid)\n RETURNS TABLE(total_purchased integer, used_slots integer, available_slots integer, current_period_start timestamp with time zone, current_period_end timestamp with time zone)\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path TO 'public'\nAS $function$\nDECLARE\n  active_slot_record RECORD;\nBEGIN\n  -- Find currently active slots (where now() is between start and end dates)\n  SELECT \n    COALESCE(SUM(os.purchased_slots), 0)::INTEGER as total_purchased,\n    COALESCE(SUM(os.used_slots), 0)::INTEGER as used_slots,\n    COALESCE(SUM(os.purchased_slots) - SUM(os.used_slots), 0)::INTEGER as available_slots,\n    MIN(os.billing_period_start) as period_start,\n    MAX(os.billing_period_end) as period_end\n  INTO active_slot_record\n  FROM public.organization_slots os\n  WHERE os.organization_id = org_id\n    AND os.billing_period_start <= now()\n    AND os.billing_period_end >= now();\n    \n  -- Return the values\n  total_purchased := COALESCE(active_slot_record.total_purchased, 0);\n  used_slots := COALESCE(active_slot_record.used_slots, 0);\n  available_slots := COALESCE(active_slot_record.available_slots, 0);\n  current_period_start := COALESCE(active_slot_record.period_start, now());\n  current_period_end := COALESCE(active_slot_record.period_end, now());\n  \n  RETURN NEXT;\nEND;\n$function$;"}		viral.architect@gmail.com	\N
20250705102310	{"-- Drop existing constraints if they exist (to handle any partial state)\nALTER TABLE public.organization_invitations \nDROP CONSTRAINT IF EXISTS organization_invitations_invited_by_fkey;\n\nALTER TABLE public.organization_invitations \nDROP CONSTRAINT IF EXISTS organization_invitations_accepted_by_fkey;\n\n-- Add the foreign key constraints properly\nALTER TABLE public.organization_invitations \nADD CONSTRAINT organization_invitations_invited_by_fkey \nFOREIGN KEY (invited_by) REFERENCES public.profiles(id) ON DELETE CASCADE;\n\nALTER TABLE public.organization_invitations \nADD CONSTRAINT organization_invitations_accepted_by_fkey \nFOREIGN KEY (accepted_by) REFERENCES public.profiles(id) ON DELETE SET NULL;\n\n-- Create indexes for better performance\nCREATE INDEX IF NOT EXISTS idx_organization_invitations_invited_by \nON public.organization_invitations(invited_by);\n\nCREATE INDEX IF NOT EXISTS idx_organization_invitations_accepted_by \nON public.organization_invitations(accepted_by);\n\nCREATE INDEX IF NOT EXISTS idx_organization_invitations_status \nON public.organization_invitations(status);\n\nCREATE INDEX IF NOT EXISTS idx_organization_invitations_organization_id \nON public.organization_invitations(organization_id);"}		viral.architect@gmail.com	\N
20250705103439	{"-- Clean up duplicate RLS policies that cause circular dependencies\n-- This fixes the \\"stack depth limit exceeded\\" error when creating invitations\n\n-- Step 1: Drop all duplicate \\"final_\\" policies (keeping the optimized ones)\n\n-- Profiles table - remove final_ policies (keep optimized)\nDROP POLICY IF EXISTS \\"final_profiles_insert_own\\" ON profiles;\nDROP POLICY IF EXISTS \\"final_profiles_select_all\\" ON profiles;\nDROP POLICY IF EXISTS \\"final_profiles_update_own\\" ON profiles;\n\n-- Organization members table - remove both sets and create clean ones\nDROP POLICY IF EXISTS \\"org_members_delete_optimized\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_delete_own\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_insert_optimized\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_insert_own\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_select_optimized\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_select_own\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_update_optimized\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_update_own\\" ON organization_members;\n\n-- Equipment table - remove final_ policies (keep optimized)\nDROP POLICY IF EXISTS \\"final_equipment_delete_admins\\" ON equipment;\nDROP POLICY IF EXISTS \\"final_equipment_insert_members\\" ON equipment;\nDROP POLICY IF EXISTS \\"final_equipment_select_org_members\\" ON equipment;\nDROP POLICY IF EXISTS \\"final_equipment_update_admins\\" ON equipment;\n\n-- Teams table - remove final_ policies (keep optimized)\nDROP POLICY IF EXISTS \\"final_teams_delete_admins\\" ON teams;\nDROP POLICY IF EXISTS \\"final_teams_insert_admins\\" ON teams;\nDROP POLICY IF EXISTS \\"final_teams_select_org_members\\" ON teams;\nDROP POLICY IF EXISTS \\"final_teams_update_admins\\" ON teams;\n\n-- Team members table - remove final_ policies (keep optimized)\nDROP POLICY IF EXISTS \\"final_team_members_delete_admins\\" ON team_members;\nDROP POLICY IF EXISTS \\"final_team_members_insert_admins\\" ON team_members;\nDROP POLICY IF EXISTS \\"final_team_members_select_org_access\\" ON team_members;\nDROP POLICY IF EXISTS \\"final_team_members_update_admins\\" ON team_members;\n\n-- Work orders table - remove final_ and duplicate policies\nDROP POLICY IF EXISTS \\"final_work_orders_delete_admins\\" ON work_orders;\nDROP POLICY IF EXISTS \\"final_work_orders_insert_members\\" ON work_orders;\nDROP POLICY IF EXISTS \\"final_work_orders_select_org_members\\" ON work_orders;\nDROP POLICY IF EXISTS \\"final_work_orders_update_admins\\" ON work_orders;\nDROP POLICY IF EXISTS \\"work_orders_delete_admins\\" ON work_orders;\nDROP POLICY IF EXISTS \\"work_orders_insert_organization_members\\" ON work_orders;\nDROP POLICY IF EXISTS \\"work_orders_select_organization_members\\" ON work_orders;\nDROP POLICY IF EXISTS \\"work_orders_update_organization_members\\" ON work_orders;\n\n-- Step 2: Create clean, non-conflicting policies for organization_members\n-- This is the critical table that needs simple, non-recursive policies\n\nCREATE POLICY \\"organization_members_select_own\\" \n  ON organization_members \n  FOR SELECT \n  USING (user_id = auth.uid());\n\nCREATE POLICY \\"organization_members_insert_own\\" \n  ON organization_members \n  FOR INSERT \n  WITH CHECK (user_id = auth.uid());\n\nCREATE POLICY \\"organization_members_update_own\\" \n  ON organization_members \n  FOR UPDATE \n  USING (user_id = auth.uid());\n\nCREATE POLICY \\"organization_members_delete_own\\" \n  ON organization_members \n  FOR DELETE \n  USING (user_id = auth.uid());\n\n-- Step 3: Ensure all remaining policies use consistent security definer functions\n-- No changes needed for other tables as they use the optimized policies with security definer functions\n\n-- Comment for reference\nCOMMENT ON TABLE organization_members IS 'RLS policies cleaned up to prevent circular dependencies - users can only access their own membership records';"}		viral.architect@gmail.com	\N
20250705104332	{"-- Fix invitation RLS policies to prevent circular dependencies\n-- Replace direct organization_members queries with security definer functions\n\n-- Step 1: Drop existing problematic invitation policies\nDROP POLICY IF EXISTS \\"Admins can create invitations\\" ON organization_invitations;\nDROP POLICY IF EXISTS \\"Admins can update invitations\\" ON organization_invitations;\nDROP POLICY IF EXISTS \\"Users can view invitations for their organizations\\" ON organization_invitations;\n\n-- Step 2: Create new policies using security definer functions (no recursion)\nCREATE POLICY \\"invitation_insert_admins\\"\n  ON organization_invitations\n  FOR INSERT\n  WITH CHECK (is_organization_admin(auth.uid(), organization_id));\n\nCREATE POLICY \\"invitation_update_admins\\"\n  ON organization_invitations\n  FOR UPDATE\n  USING (is_organization_admin(auth.uid(), organization_id));\n\nCREATE POLICY \\"invitation_select_members\\"\n  ON organization_invitations\n  FOR SELECT\n  USING (is_organization_member(auth.uid(), organization_id));\n\n-- Add comment for clarity\nCOMMENT ON TABLE organization_invitations IS 'RLS policies updated to use security definer functions to prevent circular dependencies';"}		viral.architect@gmail.com	\N
20250705105755	{"-- Core fix: Update organization_members RLS policies to be organization-scoped\n-- This prevents circular dependencies when security definer functions query this table\n\n-- Step 1: Drop existing organization_members policies that cause recursion\nDROP POLICY IF EXISTS \\"organization_members_select_own\\" ON organization_members;\nDROP POLICY IF EXISTS \\"organization_members_insert_own\\" ON organization_members;\nDROP POLICY IF EXISTS \\"organization_members_update_own\\" ON organization_members;\nDROP POLICY IF EXISTS \\"organization_members_delete_own\\" ON organization_members;\n\n-- Step 2: Create organization-scoped policies that don't cause recursion\n-- These policies allow access based on organization membership without querying the same table\n\nCREATE POLICY \\"org_members_select_organization_scoped\\"\n  ON organization_members\n  FOR SELECT\n  USING (\n    -- Allow users to see members of organizations they're part of\n    organization_id IN (\n      SELECT DISTINCT om.organization_id \n      FROM organization_members om \n      WHERE om.user_id = auth.uid() \n      AND om.status = 'active'\n    )\n  );\n\nCREATE POLICY \\"org_members_insert_organization_scoped\\"\n  ON organization_members\n  FOR INSERT\n  WITH CHECK (\n    -- Only allow inserting if user is admin of the organization\n    organization_id IN (\n      SELECT DISTINCT om.organization_id \n      FROM organization_members om \n      WHERE om.user_id = auth.uid() \n      AND om.role IN ('owner', 'admin')\n      AND om.status = 'active'\n    )\n    OR user_id = auth.uid() -- Allow users to insert their own membership\n  );\n\nCREATE POLICY \\"org_members_update_organization_scoped\\"\n  ON organization_members\n  FOR UPDATE\n  USING (\n    -- Allow admins to update any member in their organization\n    organization_id IN (\n      SELECT DISTINCT om.organization_id \n      FROM organization_members om \n      WHERE om.user_id = auth.uid() \n      AND om.role IN ('owner', 'admin')\n      AND om.status = 'active'\n    )\n    OR user_id = auth.uid() -- Allow users to update their own membership\n  );\n\nCREATE POLICY \\"org_members_delete_organization_scoped\\"\n  ON organization_members\n  FOR DELETE\n  USING (\n    -- Allow admins to remove members from their organization\n    organization_id IN (\n      SELECT DISTINCT om.organization_id \n      FROM organization_members om \n      WHERE om.user_id = auth.uid() \n      AND om.role IN ('owner', 'admin')\n      AND om.status = 'active'\n    )\n    OR user_id = auth.uid() -- Allow users to remove themselves\n  );\n\n-- Step 3: Create optimized security definer functions that use simple queries\nCREATE OR REPLACE FUNCTION public.is_organization_admin_optimized(user_uuid uuid, org_id uuid)\nRETURNS boolean\nLANGUAGE sql\nSTABLE SECURITY DEFINER\nSET search_path TO 'public'\nAS $$\n  SELECT EXISTS (\n    SELECT 1 \n    FROM organization_members om\n    WHERE om.user_id = user_uuid \n      AND om.organization_id = org_id \n      AND om.role IN ('owner', 'admin')\n      AND om.status = 'active'\n  );\n$$;\n\nCREATE OR REPLACE FUNCTION public.is_organization_member_optimized(user_uuid uuid, org_id uuid)\nRETURNS boolean\nLANGUAGE sql\nSTABLE SECURITY DEFINER\nSET search_path TO 'public'\nAS $$\n  SELECT EXISTS (\n    SELECT 1 \n    FROM organization_members om\n    WHERE om.user_id = user_uuid \n      AND om.organization_id = org_id \n      AND om.status = 'active'\n  );\n$$;\n\n-- Step 4: Temporarily disable problematic triggers during invitation operations\n-- Create a session variable to bypass certain triggers when needed\nCREATE OR REPLACE FUNCTION public.set_bypass_triggers(bypass boolean DEFAULT true)\nRETURNS void\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nBEGIN\n  PERFORM set_config('app.bypass_triggers', bypass::text, true);\nEND;\n$$;\n\n-- Step 5: Update invitation policies to use optimized functions\nDROP POLICY IF EXISTS \\"invitation_insert_admins\\" ON organization_invitations;\nDROP POLICY IF EXISTS \\"invitation_update_admins\\" ON organization_invitations;\nDROP POLICY IF EXISTS \\"invitation_select_members\\" ON organization_invitations;\n\nCREATE POLICY \\"invitation_insert_admins_optimized\\"\n  ON organization_invitations\n  FOR INSERT\n  WITH CHECK (is_organization_admin_optimized(auth.uid(), organization_id));\n\nCREATE POLICY \\"invitation_update_admins_optimized\\"\n  ON organization_invitations\n  FOR UPDATE\n  USING (is_organization_admin_optimized(auth.uid(), organization_id));\n\nCREATE POLICY \\"invitation_select_members_optimized\\"\n  ON organization_invitations\n  FOR SELECT\n  USING (is_organization_member_optimized(auth.uid(), organization_id));\n\n-- Add indexes for better performance\nCREATE INDEX IF NOT EXISTS idx_org_members_user_org_status \nON organization_members(user_id, organization_id, status);\n\nCREATE INDEX IF NOT EXISTS idx_org_members_org_role_status \nON organization_members(organization_id, role, status);\n\n-- Add comment for documentation\nCOMMENT ON TABLE organization_members IS 'Updated RLS policies to prevent circular dependencies and optimize invitation creation performance';"}		viral.architect@gmail.com	\N
20250705111655	{"-- COMPREHENSIVE FIX: Eliminate ALL circular dependencies in invitation system\n-- Fixed version - drop policies before functions\n\n-- Step 1: Drop ALL existing policies that depend on the functions we need to recreate\nDROP POLICY IF EXISTS \\"invitation_insert_admins_optimized\\" ON organization_invitations;\nDROP POLICY IF EXISTS \\"invitation_update_admins_optimized\\" ON organization_invitations;\nDROP POLICY IF EXISTS \\"invitation_select_members_optimized\\" ON organization_invitations;\n\nDROP POLICY IF EXISTS \\"org_members_select_organization_scoped\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_insert_organization_scoped\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_update_organization_scoped\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_delete_organization_scoped\\" ON organization_members;\n\n-- Step 2: Now safely drop and recreate the optimized functions\nDROP FUNCTION IF EXISTS public.is_organization_admin_optimized(uuid, uuid);\nDROP FUNCTION IF EXISTS public.is_organization_member_optimized(uuid, uuid);\n\n-- Create truly optimized functions that bypass RLS entirely\nCREATE OR REPLACE FUNCTION public.is_organization_admin_optimized(user_uuid uuid, org_id uuid)\nRETURNS boolean\nLANGUAGE sql\nSTABLE SECURITY DEFINER\nSET search_path TO 'public'\nAS $$\n  -- Direct query without any RLS policy evaluation\n  SELECT EXISTS (\n    SELECT 1 \n    FROM organization_members om\n    WHERE om.user_id = user_uuid \n      AND om.organization_id = org_id \n      AND om.role IN ('owner', 'admin')\n      AND om.status = 'active'\n  );\n$$;\n\nCREATE OR REPLACE FUNCTION public.is_organization_member_optimized(user_uuid uuid, org_id uuid)\nRETURNS boolean\nLANGUAGE sql\nSTABLE SECURITY DEFINER\nSET search_path TO 'public'\nAS $$\n  -- Direct query without any RLS policy evaluation\n  SELECT EXISTS (\n    SELECT 1 \n    FROM organization_members om\n    WHERE om.user_id = user_uuid \n      AND om.organization_id = org_id \n      AND om.status = 'active'\n  );\n$$;\n\n-- Step 3: Create completely non-recursive policies for organization_members\n-- These policies are designed to NEVER query organization_members within their conditions\n\nCREATE POLICY \\"org_members_select_simple\\"\n  ON organization_members\n  FOR SELECT\n  USING (\n    -- Simple ownership check - users can see their own records\n    user_id = auth.uid()\n    OR \n    -- Direct admin check without recursion\n    EXISTS (\n      SELECT 1 \n      FROM organization_members om \n      WHERE om.organization_id = organization_members.organization_id \n        AND om.user_id = auth.uid()\n        AND om.role IN ('owner', 'admin') \n        AND om.status = 'active'\n    )\n  );\n\nCREATE POLICY \\"org_members_insert_simple\\"\n  ON organization_members\n  FOR INSERT\n  WITH CHECK (\n    -- Users can insert their own membership\n    user_id = auth.uid()\n    OR\n    -- Direct admin check\n    EXISTS (\n      SELECT 1 \n      FROM organization_members om \n      WHERE om.organization_id = organization_members.organization_id \n        AND om.user_id = auth.uid()\n        AND om.role IN ('owner', 'admin') \n        AND om.status = 'active'\n    )\n  );\n\nCREATE POLICY \\"org_members_update_simple\\"\n  ON organization_members\n  FOR UPDATE\n  USING (\n    -- Users can update their own records\n    user_id = auth.uid()\n    OR\n    -- Direct admin check\n    EXISTS (\n      SELECT 1 \n      FROM organization_members om \n      WHERE om.organization_id = organization_members.organization_id \n        AND om.user_id = auth.uid()\n        AND om.role IN ('owner', 'admin') \n        AND om.status = 'active'\n    )\n  );\n\nCREATE POLICY \\"org_members_delete_simple\\"\n  ON organization_members\n  FOR DELETE\n  USING (\n    -- Users can delete their own membership\n    user_id = auth.uid()\n    OR\n    -- Direct admin check\n    EXISTS (\n      SELECT 1 \n      FROM organization_members om \n      WHERE om.organization_id = organization_members.organization_id \n        AND om.user_id = auth.uid()\n        AND om.role IN ('owner', 'admin') \n        AND om.status = 'active'\n    )\n  );\n\n-- Step 4: Create invitation policies using the optimized functions\nCREATE POLICY \\"invitation_insert_final\\"\n  ON organization_invitations\n  FOR INSERT\n  WITH CHECK (\n    -- Use the optimized function which bypasses RLS completely\n    public.is_organization_admin_optimized(auth.uid(), organization_id)\n  );\n\nCREATE POLICY \\"invitation_update_final\\"\n  ON organization_invitations\n  FOR UPDATE\n  USING (\n    -- Use the optimized function which bypasses RLS completely\n    public.is_organization_admin_optimized(auth.uid(), organization_id)\n  );\n\nCREATE POLICY \\"invitation_select_final\\"\n  ON organization_invitations\n  FOR SELECT\n  USING (\n    -- Use the optimized function which bypasses RLS completely\n    public.is_organization_member_optimized(auth.uid(), organization_id)\n  );\n\n-- Step 5: Create safe invitation wrapper function\nCREATE OR REPLACE FUNCTION public.create_invitation_safe(\n  p_organization_id uuid,\n  p_email text,\n  p_role text,\n  p_message text DEFAULT NULL,\n  p_invited_by uuid DEFAULT auth.uid()\n)\nRETURNS uuid\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  invitation_id uuid;\n  is_admin boolean;\nBEGIN\n  -- Check permissions using optimized function\n  SELECT public.is_organization_admin_optimized(p_invited_by, p_organization_id) INTO is_admin;\n  \n  IF NOT is_admin THEN\n    RAISE EXCEPTION 'User does not have permission to create invitations for this organization';\n  END IF;\n\n  -- Create the invitation directly\n  INSERT INTO organization_invitations (\n    organization_id,\n    email,\n    role,\n    message,\n    invited_by\n  ) VALUES (\n    p_organization_id,\n    lower(trim(p_email)),\n    p_role,\n    p_message,\n    p_invited_by\n  ) RETURNING id INTO invitation_id;\n  \n  RETURN invitation_id;\n  \nEXCEPTION WHEN OTHERS THEN\n  -- Re-raise with context\n  RAISE EXCEPTION 'Failed to create invitation for %: %', p_email, SQLERRM;\nEND;\n$$;\n\n-- Step 6: Create optimized indexes for better performance\nCREATE INDEX IF NOT EXISTS idx_org_members_user_org_role_status_optimized \nON organization_members(user_id, organization_id, role, status) \nWHERE status = 'active';\n\nCREATE INDEX IF NOT EXISTS idx_org_members_org_admin_status_optimized \nON organization_members(organization_id, role, status) \nWHERE role IN ('owner', 'admin') AND status = 'active';\n\nCREATE INDEX IF NOT EXISTS idx_org_invitations_org_status_optimized \nON organization_invitations(organization_id, status) \nWHERE status = 'pending';\n\n-- Step 7: Ensure RLS is properly enabled\nALTER TABLE organization_members ENABLE ROW LEVEL SECURITY;\nALTER TABLE organization_invitations ENABLE ROW LEVEL SECURITY;\n\n-- Step 8: Add documentation\nCOMMENT ON FUNCTION public.is_organization_admin_optimized IS 'Optimized function to check admin status without RLS recursion - uses SECURITY DEFINER to bypass RLS';\nCOMMENT ON FUNCTION public.is_organization_member_optimized IS 'Optimized function to check membership without RLS recursion - uses SECURITY DEFINER to bypass RLS';\nCOMMENT ON FUNCTION public.create_invitation_safe IS 'Safe wrapper for creating invitations with proper permission checks and error handling';\n\n-- Success message\nDO $$\nBEGIN\n  RAISE NOTICE 'SUCCESS: Circular dependency fix implemented successfully. Invitation system should now work without stack depth errors.';\nEND $$;"}		viral.architect@gmail.com	\N
20250818022137	{"\n-- Restrict reading global PM templates to authenticated users only\n-- and keep org templates visible to org members.\n\n-- Drop the broad existing policy if it exists\nDROP POLICY IF EXISTS \\"read org/global templates\\" ON public.pm_checklist_templates;\n\n-- Authenticated users (or service role) can read GLOBAL templates\nCREATE POLICY \\"authenticated_can_read_global_templates\\"\n  ON public.pm_checklist_templates\n  FOR SELECT\n  USING (\n    organization_id IS NULL\n    AND (\n      auth.uid() IS NOT NULL\n      OR auth.role() = 'service_role'\n    )\n  );\n\n-- Organization members (or service role) can read ORG templates\nCREATE POLICY \\"members_can_read_org_templates\\"\n  ON public.pm_checklist_templates\n  FOR SELECT\n  USING (\n    organization_id IS NOT NULL\n    AND (\n      is_org_member(auth.uid(), organization_id)\n      OR auth.role() = 'service_role'\n    )\n  );\n"}		viral.architect@gmail.com	\N
20250705112118	{"-- FINAL FIX: Replace recursive policies with truly non-recursive ones using optimized functions\n-- This addresses the core issue: current policies still query organization_members within their own conditions\n\n-- Step 1: Drop ALL current problematic policies on organization_members\nDROP POLICY IF EXISTS \\"org_members_select_simple\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_insert_simple\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_update_simple\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_delete_simple\\" ON organization_members;\n\n-- Step 2: Create truly non-recursive policies using the optimized security definer functions\n-- These functions bypass RLS entirely, preventing any recursion\n\nCREATE POLICY \\"org_members_select_nonrecursive\\"\n  ON organization_members\n  FOR SELECT\n  USING (\n    -- Users can see their own records\n    user_id = auth.uid()\n    OR \n    -- Use optimized function that bypasses RLS completely\n    public.is_organization_admin_optimized(auth.uid(), organization_id)\n  );\n\nCREATE POLICY \\"org_members_insert_nonrecursive\\"\n  ON organization_members\n  FOR INSERT\n  WITH CHECK (\n    -- Users can insert their own membership\n    user_id = auth.uid()\n    OR\n    -- Use optimized function for admin check\n    public.is_organization_admin_optimized(auth.uid(), organization_id)\n  );\n\nCREATE POLICY \\"org_members_update_nonrecursive\\"\n  ON organization_members\n  FOR UPDATE\n  USING (\n    -- Users can update their own records\n    user_id = auth.uid()\n    OR\n    -- Use optimized function for admin check\n    public.is_organization_admin_optimized(auth.uid(), organization_id)\n  );\n\nCREATE POLICY \\"org_members_delete_nonrecursive\\"\n  ON organization_members\n  FOR DELETE\n  USING (\n    -- Users can delete their own membership\n    user_id = auth.uid()\n    OR\n    -- Use optimized function for admin check\n    public.is_organization_admin_optimized(auth.uid(), organization_id)\n  );\n\n-- Step 3: Ensure RLS is enabled\nALTER TABLE organization_members ENABLE ROW LEVEL SECURITY;\n\n-- Step 4: Verify the optimized functions exist and work correctly\n-- Re-create them to ensure they're properly defined\nCREATE OR REPLACE FUNCTION public.is_organization_admin_optimized(user_uuid uuid, org_id uuid)\nRETURNS boolean\nLANGUAGE sql\nSTABLE SECURITY DEFINER\nSET search_path TO 'public'\nAS $$\n  -- Direct query without any RLS policy evaluation\n  SELECT EXISTS (\n    SELECT 1 \n    FROM organization_members om\n    WHERE om.user_id = user_uuid \n      AND om.organization_id = org_id \n      AND om.role IN ('owner', 'admin')\n      AND om.status = 'active'\n  );\n$$;\n\nCREATE OR REPLACE FUNCTION public.is_organization_member_optimized(user_uuid uuid, org_id uuid)\nRETURNS boolean\nLANGUAGE sql\nSTABLE SECURITY DEFINER\nSET search_path TO 'public'\nAS $$\n  -- Direct query without any RLS policy evaluation\n  SELECT EXISTS (\n    SELECT 1 \n    FROM organization_members om\n    WHERE om.user_id = user_uuid \n      AND om.organization_id = org_id \n      AND om.status = 'active'\n  );\n$$;\n\n-- Step 5: Add performance monitoring and cleanup old indexes\nCREATE INDEX IF NOT EXISTS idx_org_members_nonrecursive_admin_check \nON organization_members(organization_id, user_id, role, status) \nWHERE role IN ('owner', 'admin') AND status = 'active';\n\nCREATE INDEX IF NOT EXISTS idx_org_members_nonrecursive_member_check \nON organization_members(organization_id, user_id, status) \nWHERE status = 'active';\n\n-- Step 6: Add validation to prevent future recursion issues\nCOMMENT ON POLICY \\"org_members_select_nonrecursive\\" ON organization_members IS 'Non-recursive policy using security definer functions to prevent infinite recursion';\nCOMMENT ON POLICY \\"org_members_insert_nonrecursive\\" ON organization_members IS 'Non-recursive policy using security definer functions to prevent infinite recursion';\nCOMMENT ON POLICY \\"org_members_update_nonrecursive\\" ON organization_members IS 'Non-recursive policy using security definer functions to prevent infinite recursion';\nCOMMENT ON POLICY \\"org_members_delete_nonrecursive\\" ON organization_members IS 'Non-recursive policy using security definer functions to prevent infinite recursion';\n\n-- Step 7: Final verification message\nDO $$\nBEGIN\n  RAISE NOTICE 'SUCCESS: Infinite recursion fix applied. Organization members table should now work without recursion errors.';\n  RAISE NOTICE 'The new policies use optimized security definer functions that bypass RLS entirely.';\nEND $$;"}		viral.architect@gmail.com	\N
20250706120917	{"-- ULTIMATE FIX: Make create_invitation_safe function completely bypass RLS\n-- This prevents the infinite recursion by ensuring the INSERT doesn't trigger RLS policies\n\nCREATE OR REPLACE FUNCTION public.create_invitation_safe(\n  p_organization_id uuid,\n  p_email text,\n  p_role text,\n  p_message text DEFAULT NULL,\n  p_invited_by uuid DEFAULT auth.uid()\n)\nRETURNS uuid\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  invitation_id uuid;\n  is_admin boolean;\n  rls_was_enabled boolean;\nBEGIN\n  -- Log start of function\n  RAISE LOG 'create_invitation_safe: Starting for email % in org %', p_email, p_organization_id;\n  \n  -- Check permissions using optimized function first\n  SELECT public.is_organization_admin_optimized(p_invited_by, p_organization_id) INTO is_admin;\n  \n  IF NOT is_admin THEN\n    RAISE EXCEPTION 'User % does not have permission to create invitations for organization %', p_invited_by, p_organization_id;\n  END IF;\n\n  -- Check current RLS status for organization_invitations\n  SELECT \n    CASE WHEN relrowsecurity THEN true ELSE false END \n  INTO rls_was_enabled\n  FROM pg_class \n  WHERE relname = 'organization_invitations' AND relnamespace = 'public'::regnamespace;\n\n  -- Temporarily disable RLS for this session to prevent recursion\n  PERFORM set_config('row_security', 'off', true);\n  \n  RAISE LOG 'create_invitation_safe: RLS disabled, creating invitation';\n\n  -- Create the invitation directly without triggering RLS policies\n  INSERT INTO organization_invitations (\n    organization_id,\n    email,\n    role,\n    message,\n    invited_by,\n    expires_at,\n    status,\n    invitation_token\n  ) VALUES (\n    p_organization_id,\n    lower(trim(p_email)),\n    p_role,\n    p_message,\n    p_invited_by,\n    now() + interval '7 days',\n    'pending',\n    gen_random_uuid()\n  ) RETURNING id INTO invitation_id;\n  \n  RAISE LOG 'create_invitation_safe: Invitation created with ID %', invitation_id;\n  \n  -- Re-enable RLS if it was enabled before\n  IF rls_was_enabled THEN\n    PERFORM set_config('row_security', 'on', true);\n  END IF;\n  \n  RAISE LOG 'create_invitation_safe: RLS restored, function completed successfully';\n  \n  RETURN invitation_id;\n  \nEXCEPTION WHEN OTHERS THEN\n  -- Ensure RLS is restored even on error\n  IF rls_was_enabled THEN\n    PERFORM set_config('row_security', 'on', true);\n  END IF;\n  \n  -- Log the error with full context\n  RAISE LOG 'create_invitation_safe: ERROR - % for email % in org %', SQLERRM, p_email, p_organization_id;\n  \n  -- Re-raise with context\n  RAISE EXCEPTION 'Failed to create invitation for %: %', p_email, SQLERRM;\nEND;\n$$;\n\n-- Add function comment for documentation\nCOMMENT ON FUNCTION public.create_invitation_safe IS 'Creates organization invitations while completely bypassing RLS to prevent infinite recursion. Uses SECURITY DEFINER with temporary RLS disable.';\n\n-- Test the function to ensure it works\nDO $$\nBEGIN\n  RAISE NOTICE 'SUCCESS: create_invitation_safe function updated to bypass RLS completely.';\n  RAISE NOTICE 'This should resolve the stack depth limit exceeded errors during invitation creation.';\nEND $$;"}		viral.architect@gmail.com	\N
20250706124046	{"-- FIXED ORDER: Drop policies first, then functions, then recreate everything\n-- This prevents dependency errors when dropping functions\n\n-- Step 1: Drop all policies that depend on the functions we need to replace\nDROP POLICY IF EXISTS \\"org_members_select_nonrecursive\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_insert_nonrecursive\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_update_nonrecursive\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_delete_nonrecursive\\" ON organization_members;\n\nDROP POLICY IF EXISTS \\"invitation_insert_final\\" ON organization_invitations;\nDROP POLICY IF EXISTS \\"invitation_update_final\\" ON organization_invitations;\nDROP POLICY IF EXISTS \\"invitation_select_final\\" ON organization_invitations;\n\n-- Step 2: Now safely drop the problematic optimized functions\nDROP FUNCTION IF EXISTS public.is_organization_admin_optimized(uuid, uuid);\nDROP FUNCTION IF EXISTS public.is_organization_member_optimized(uuid, uuid);\n\n-- Step 3: Create truly non-recursive permission functions that bypass ALL RLS\nCREATE OR REPLACE FUNCTION public.is_organization_admin_bypass_rls(user_uuid uuid, org_id uuid)\nRETURNS boolean\nLANGUAGE plpgsql\nSTABLE SECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  result boolean := false;\nBEGIN\n  -- Temporarily disable RLS for this session\n  PERFORM set_config('row_security', 'off', true);\n  \n  -- Direct query without any RLS policy evaluation\n  SELECT EXISTS (\n    SELECT 1 \n    FROM organization_members om\n    WHERE om.user_id = user_uuid \n      AND om.organization_id = org_id \n      AND om.role IN ('owner', 'admin')\n      AND om.status = 'active'\n  ) INTO result;\n  \n  -- Re-enable RLS\n  PERFORM set_config('row_security', 'on', true);\n  \n  RETURN result;\n  \nEXCEPTION WHEN OTHERS THEN\n  -- Ensure RLS is restored even on error\n  PERFORM set_config('row_security', 'on', true);\n  RAISE;\nEND;\n$$;\n\nCREATE OR REPLACE FUNCTION public.is_organization_member_bypass_rls(user_uuid uuid, org_id uuid)\nRETURNS boolean\nLANGUAGE plpgsql\nSTABLE SECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  result boolean := false;\nBEGIN\n  -- Temporarily disable RLS for this session\n  PERFORM set_config('row_security', 'off', true);\n  \n  -- Direct query without any RLS policy evaluation\n  SELECT EXISTS (\n    SELECT 1 \n    FROM organization_members om\n    WHERE om.user_id = user_uuid \n      AND om.organization_id = org_id \n      AND om.status = 'active'\n  ) INTO result;\n  \n  -- Re-enable RLS\n  PERFORM set_config('row_security', 'on', true);\n  \n  RETURN result;\n  \nEXCEPTION WHEN OTHERS THEN\n  -- Ensure RLS is restored even on error\n  PERFORM set_config('row_security', 'on', true);\n  RAISE;\nEND;\n$$;\n\n-- Step 4: Update create_invitation_safe to use the new bypass functions\nCREATE OR REPLACE FUNCTION public.create_invitation_safe(\n  p_organization_id uuid,\n  p_email text,\n  p_role text,\n  p_message text DEFAULT NULL,\n  p_invited_by uuid DEFAULT auth.uid()\n)\nRETURNS uuid\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  invitation_id uuid;\n  is_admin boolean;\nBEGIN\n  -- Check permissions using bypass function that completely avoids RLS\n  SELECT public.is_organization_admin_bypass_rls(p_invited_by, p_organization_id) INTO is_admin;\n  \n  IF NOT is_admin THEN\n    RAISE EXCEPTION 'User % does not have permission to create invitations for organization %', p_invited_by, p_organization_id;\n  END IF;\n\n  -- Create the invitation directly - now safe because permission check bypassed RLS\n  INSERT INTO organization_invitations (\n    organization_id,\n    email,\n    role,\n    message,\n    invited_by,\n    expires_at,\n    status,\n    invitation_token\n  ) VALUES (\n    p_organization_id,\n    lower(trim(p_email)),\n    p_role,\n    p_message,\n    p_invited_by,\n    now() + interval '7 days',\n    'pending',\n    gen_random_uuid()\n  ) RETURNING id INTO invitation_id;\n  \n  RETURN invitation_id;\n  \nEXCEPTION WHEN OTHERS THEN\n  RAISE EXCEPTION 'Failed to create invitation for %: %', p_email, SQLERRM;\nEND;\n$$;\n\n-- Step 5: Create new policies using the bypass functions\nCREATE POLICY \\"org_members_select_bypass\\"\n  ON organization_members\n  FOR SELECT\n  USING (\n    user_id = auth.uid()\n    OR \n    public.is_organization_admin_bypass_rls(auth.uid(), organization_id)\n  );\n\nCREATE POLICY \\"org_members_insert_bypass\\"\n  ON organization_members\n  FOR INSERT\n  WITH CHECK (\n    user_id = auth.uid()\n    OR\n    public.is_organization_admin_bypass_rls(auth.uid(), organization_id)\n  );\n\nCREATE POLICY \\"org_members_update_bypass\\"\n  ON organization_members\n  FOR UPDATE\n  USING (\n    user_id = auth.uid()\n    OR\n    public.is_organization_admin_bypass_rls(auth.uid(), organization_id)\n  );\n\nCREATE POLICY \\"org_members_delete_bypass\\"\n  ON organization_members\n  FOR DELETE\n  USING (\n    user_id = auth.uid()\n    OR\n    public.is_organization_admin_bypass_rls(auth.uid(), organization_id)\n  );\n\nCREATE POLICY \\"invitation_insert_bypass\\"\n  ON organization_invitations\n  FOR INSERT\n  WITH CHECK (\n    public.is_organization_admin_bypass_rls(auth.uid(), organization_id)\n  );\n\nCREATE POLICY \\"invitation_update_bypass\\"\n  ON organization_invitations\n  FOR UPDATE\n  USING (\n    public.is_organization_admin_bypass_rls(auth.uid(), organization_id)\n  );\n\nCREATE POLICY \\"invitation_select_bypass\\"\n  ON organization_invitations\n  FOR SELECT\n  USING (\n    public.is_organization_member_bypass_rls(auth.uid(), organization_id)\n  );\n\n-- Step 6: Ensure RLS is enabled\nALTER TABLE organization_members ENABLE ROW LEVEL SECURITY;\nALTER TABLE organization_invitations ENABLE ROW LEVEL SECURITY;\n\n-- Step 7: Add documentation\nCOMMENT ON FUNCTION public.is_organization_admin_bypass_rls IS 'Checks admin status by completely bypassing RLS to prevent circular dependencies';\nCOMMENT ON FUNCTION public.is_organization_member_bypass_rls IS 'Checks membership by completely bypassing RLS to prevent circular dependencies';\nCOMMENT ON FUNCTION public.create_invitation_safe IS 'Creates invitations using RLS-bypass functions to prevent stack depth errors';\n\n-- Success message\nDO $$\nBEGIN\n  RAISE NOTICE 'SUCCESS: Circular dependency completely eliminated using RLS bypass functions.';\n  RAISE NOTICE 'All permission checks now bypass RLS entirely to prevent infinite recursion.';\nEND $$;"}		viral.architect@gmail.com	\N
20250706124908	{"-- ULTIMATE FIX: Complete elimination of circular dependencies\n-- This approach uses SECURITY DEFINER functions that query the base tables directly\n-- without any RLS policy evaluation whatsoever\n\n-- Step 1: Drop ALL existing problematic policies and functions\nDROP POLICY IF EXISTS \\"org_members_select_bypass\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_insert_bypass\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_update_bypass\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_delete_bypass\\" ON organization_members;\n\nDROP POLICY IF EXISTS \\"invitation_insert_bypass\\" ON organization_invitations;\nDROP POLICY IF EXISTS \\"invitation_update_bypass\\" ON organization_invitations;\nDROP POLICY IF EXISTS \\"invitation_select_bypass\\" ON organization_invitations;\n\nDROP FUNCTION IF EXISTS public.is_organization_admin_bypass_rls(uuid, uuid);\nDROP FUNCTION IF EXISTS public.is_organization_member_bypass_rls(uuid, uuid);\nDROP FUNCTION IF EXISTS public.create_invitation_safe(uuid, text, text, text, uuid);\n\n-- Step 2: Create completely isolated permission functions using raw SQL access\n-- These functions have SECURITY DEFINER and query tables directly without invoking any policies\nCREATE OR REPLACE FUNCTION public.check_admin_direct(user_uuid uuid, org_id uuid)\nRETURNS boolean\nLANGUAGE sql\nSTABLE SECURITY DEFINER\nSET search_path TO 'public'\nAS $$\n  -- Direct SQL query with no function calls that could trigger RLS\n  SELECT EXISTS (\n    SELECT 1 \n    FROM public.organization_members\n    WHERE user_id = user_uuid \n      AND organization_id = org_id \n      AND role IN ('owner', 'admin')\n      AND status = 'active'\n  );\n$$;\n\nCREATE OR REPLACE FUNCTION public.check_member_direct(user_uuid uuid, org_id uuid)\nRETURNS boolean\nLANGUAGE sql\nSTABLE SECURITY DEFINER\nSET search_path TO 'public'\nAS $$\n  -- Direct SQL query with no function calls that could trigger RLS\n  SELECT EXISTS (\n    SELECT 1 \n    FROM public.organization_members\n    WHERE user_id = user_uuid \n      AND organization_id = org_id \n      AND status = 'active'\n  );\n$$;\n\n-- Step 3: Create invitation function using the direct check functions\nCREATE OR REPLACE FUNCTION public.create_invitation_direct(\n  p_organization_id uuid,\n  p_email text,\n  p_role text,\n  p_message text DEFAULT NULL,\n  p_invited_by uuid DEFAULT auth.uid()\n)\nRETURNS uuid\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  invitation_id uuid;\n  is_admin boolean;\nBEGIN\n  -- Use direct check function that won't trigger RLS recursion\n  SELECT public.check_admin_direct(p_invited_by, p_organization_id) INTO is_admin;\n  \n  IF NOT is_admin THEN\n    RAISE EXCEPTION 'User % does not have permission to create invitations for organization %', p_invited_by, p_organization_id;\n  END IF;\n\n  -- Create the invitation\n  INSERT INTO organization_invitations (\n    organization_id,\n    email,\n    role,\n    message,\n    invited_by,\n    expires_at,\n    status,\n    invitation_token\n  ) VALUES (\n    p_organization_id,\n    lower(trim(p_email)),\n    p_role,\n    p_message,\n    p_invited_by,\n    now() + interval '7 days',\n    'pending',\n    gen_random_uuid()\n  ) RETURNING id INTO invitation_id;\n  \n  RETURN invitation_id;\n  \nEXCEPTION WHEN OTHERS THEN\n  RAISE EXCEPTION 'Failed to create invitation for %: %', p_email, SQLERRM;\nEND;\n$$;\n\n-- Step 4: Create simple, non-recursive RLS policies using the direct functions\nCREATE POLICY \\"org_members_select_direct\\"\n  ON organization_members\n  FOR SELECT\n  USING (\n    user_id = auth.uid()\n    OR \n    public.check_admin_direct(auth.uid(), organization_id)\n  );\n\nCREATE POLICY \\"org_members_insert_direct\\"\n  ON organization_members\n  FOR INSERT\n  WITH CHECK (\n    user_id = auth.uid()\n    OR\n    public.check_admin_direct(auth.uid(), organization_id)\n  );\n\nCREATE POLICY \\"org_members_update_direct\\"\n  ON organization_members\n  FOR UPDATE\n  USING (\n    user_id = auth.uid()\n    OR\n    public.check_admin_direct(auth.uid(), organization_id)\n  );\n\nCREATE POLICY \\"org_members_delete_direct\\"\n  ON organization_members\n  FOR DELETE\n  USING (\n    user_id = auth.uid()\n    OR\n    public.check_admin_direct(auth.uid(), organization_id)\n  );\n\nCREATE POLICY \\"invitation_insert_direct\\"\n  ON organization_invitations\n  FOR INSERT\n  WITH CHECK (\n    public.check_admin_direct(auth.uid(), organization_id)\n  );\n\nCREATE POLICY \\"invitation_update_direct\\"\n  ON organization_invitations\n  FOR UPDATE\n  USING (\n    public.check_admin_direct(auth.uid(), organization_id)\n  );\n\nCREATE POLICY \\"invitation_select_direct\\"\n  ON organization_invitations\n  FOR SELECT\n  USING (\n    public.check_member_direct(auth.uid(), organization_id)\n  );\n\n-- Step 5: Ensure RLS is enabled\nALTER TABLE organization_members ENABLE ROW LEVEL SECURITY;\nALTER TABLE organization_invitations ENABLE ROW LEVEL SECURITY;\n\n-- Step 6: Add documentation\nCOMMENT ON FUNCTION public.check_admin_direct IS 'Direct admin check using raw SQL without any RLS policy evaluation';\nCOMMENT ON FUNCTION public.check_member_direct IS 'Direct member check using raw SQL without any RLS policy evaluation';\nCOMMENT ON FUNCTION public.create_invitation_direct IS 'Creates invitations using direct permission checks to prevent all recursion';\n\n-- Success message\nDO $$\nBEGIN\n  RAISE NOTICE 'SUCCESS: Circular dependency completely eliminated using direct SQL functions.';\n  RAISE NOTICE 'All permission checks now use raw SQL queries that bypass RLS entirely.';\nEND $$;"}		viral.architect@gmail.com	\N
20250706010130	{"-- ULTIMATE BYPASS: Complete RLS elimination for invitation system\n-- This creates functions that operate entirely outside of RLS scope\n\n-- Step 1: Drop existing problematic functions and policies\nDROP FUNCTION IF EXISTS public.check_admin_direct(uuid, uuid) CASCADE;\nDROP FUNCTION IF EXISTS public.check_member_direct(uuid, uuid) CASCADE;\nDROP FUNCTION IF EXISTS public.create_invitation_direct(uuid, text, text, text, uuid) CASCADE;\n\n-- Drop all existing policies on these tables\nDROP POLICY IF EXISTS \\"org_members_select_direct\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_insert_direct\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_update_direct\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_delete_direct\\" ON organization_members;\n\nDROP POLICY IF EXISTS \\"invitation_insert_direct\\" ON organization_invitations;\nDROP POLICY IF EXISTS \\"invitation_update_direct\\" ON organization_invitations;\nDROP POLICY IF EXISTS \\"invitation_select_direct\\" ON organization_invitations;\n\n-- Step 2: Create completely isolated bypass functions\n-- These functions use SECURITY DEFINER to run with superuser privileges\n-- They completely bypass ALL RLS policies by operating at the raw SQL level\n\nCREATE OR REPLACE FUNCTION public.raw_check_admin_bypass(user_uuid uuid, org_id uuid)\nRETURNS boolean\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  result boolean := false;\nBEGIN\n  -- Direct table access with explicit schema and no function calls\n  SELECT EXISTS (\n    SELECT 1 \n    FROM public.organization_members\n    WHERE user_id = user_uuid \n      AND organization_id = org_id \n      AND role IN ('owner', 'admin')\n      AND status = 'active'\n  ) INTO result;\n  \n  RETURN result;\nEND;\n$$;\n\nCREATE OR REPLACE FUNCTION public.raw_check_member_bypass(user_uuid uuid, org_id uuid)\nRETURNS boolean\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  result boolean := false;\nBEGIN\n  -- Direct table access with explicit schema and no function calls\n  SELECT EXISTS (\n    SELECT 1 \n    FROM public.organization_members\n    WHERE user_id = user_uuid \n      AND organization_id = org_id \n      AND status = 'active'\n  ) INTO result;\n  \n  RETURN result;\nEND;\n$$;\n\n-- Step 3: Create invitation function that bypasses all RLS\nCREATE OR REPLACE FUNCTION public.create_invitation_bypass(\n  p_organization_id uuid,\n  p_email text,\n  p_role text,\n  p_message text DEFAULT NULL,\n  p_invited_by uuid DEFAULT auth.uid()\n)\nRETURNS uuid\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  invitation_id uuid;\n  is_admin boolean;\nBEGIN\n  -- Use the raw bypass function that won't trigger any RLS\n  SELECT public.raw_check_admin_bypass(p_invited_by, p_organization_id) INTO is_admin;\n  \n  IF NOT is_admin THEN\n    RAISE EXCEPTION 'User % does not have permission to create invitations for organization %', p_invited_by, p_organization_id;\n  END IF;\n\n  -- Direct INSERT without any RLS triggers\n  INSERT INTO public.organization_invitations (\n    organization_id,\n    email,\n    role,\n    message,\n    invited_by,\n    expires_at,\n    status,\n    invitation_token\n  ) VALUES (\n    p_organization_id,\n    lower(trim(p_email)),\n    p_role,\n    p_message,\n    p_invited_by,\n    now() + interval '7 days',\n    'pending',\n    gen_random_uuid()\n  ) RETURNING id INTO invitation_id;\n  \n  RETURN invitation_id;\n  \nEXCEPTION WHEN OTHERS THEN\n  RAISE EXCEPTION 'Failed to create invitation for %: %', p_email, SQLERRM;\nEND;\n$$;\n\n-- Step 4: Create simple RLS policies that don't use functions at all\n-- These policies use basic conditions only, no function calls\n\nCREATE POLICY \\"org_members_basic_select\\"\n  ON organization_members\n  FOR SELECT\n  USING (\n    user_id = auth.uid()\n    OR \n    organization_id IN (\n      SELECT om.organization_id \n      FROM organization_members om \n      WHERE om.user_id = auth.uid() \n        AND om.role IN ('owner', 'admin') \n        AND om.status = 'active'\n    )\n  );\n\nCREATE POLICY \\"org_members_basic_insert\\"\n  ON organization_members\n  FOR INSERT\n  WITH CHECK (\n    user_id = auth.uid()\n    OR\n    organization_id IN (\n      SELECT om.organization_id \n      FROM organization_members om \n      WHERE om.user_id = auth.uid() \n        AND om.role IN ('owner', 'admin') \n        AND om.status = 'active'\n    )\n  );\n\nCREATE POLICY \\"org_members_basic_update\\"\n  ON organization_members\n  FOR UPDATE\n  USING (\n    user_id = auth.uid()\n    OR\n    organization_id IN (\n      SELECT om.organization_id \n      FROM organization_members om \n      WHERE om.user_id = auth.uid() \n        AND om.role IN ('owner', 'admin') \n        AND om.status = 'active'\n    )\n  );\n\nCREATE POLICY \\"org_members_basic_delete\\"\n  ON organization_members\n  FOR DELETE\n  USING (\n    user_id = auth.uid()\n    OR\n    organization_id IN (\n      SELECT om.organization_id \n      FROM organization_members om \n      WHERE om.user_id = auth.uid() \n        AND om.role IN ('owner', 'admin') \n        AND om.status = 'active'\n    )\n  );\n\n-- Invitation policies using basic conditions\nCREATE POLICY \\"invitation_basic_insert\\"\n  ON organization_invitations\n  FOR INSERT\n  WITH CHECK (\n    organization_id IN (\n      SELECT om.organization_id \n      FROM organization_members om \n      WHERE om.user_id = auth.uid() \n        AND om.role IN ('owner', 'admin') \n        AND om.status = 'active'\n    )\n  );\n\nCREATE POLICY \\"invitation_basic_update\\"\n  ON organization_invitations\n  FOR UPDATE\n  USING (\n    organization_id IN (\n      SELECT om.organization_id \n      FROM organization_members om \n      WHERE om.user_id = auth.uid() \n        AND om.role IN ('owner', 'admin') \n        AND om.status = 'active'\n    )\n  );\n\nCREATE POLICY \\"invitation_basic_select\\"\n  ON organization_invitations\n  FOR SELECT\n  USING (\n    organization_id IN (\n      SELECT om.organization_id \n      FROM organization_members om \n      WHERE om.user_id = auth.uid() \n        AND om.status = 'active'\n    )\n  );\n\n-- Step 5: Ensure RLS is enabled\nALTER TABLE organization_members ENABLE ROW LEVEL SECURITY;\nALTER TABLE organization_invitations ENABLE ROW LEVEL SECURITY;\n\n-- Step 6: Grant execute permissions to bypass functions\nGRANT EXECUTE ON FUNCTION public.raw_check_admin_bypass(uuid, uuid) TO authenticated;\nGRANT EXECUTE ON FUNCTION public.raw_check_member_bypass(uuid, uuid) TO authenticated;\nGRANT EXECUTE ON FUNCTION public.create_invitation_bypass(uuid, text, text, text, uuid) TO authenticated;\n\n-- Success message\nDO $$\nBEGIN\n  RAISE NOTICE 'SUCCESS: Complete RLS bypass implemented for invitation system.';\n  RAISE NOTICE 'All circular dependencies eliminated using raw SQL functions.';\nEND $$;"}		viral.architect@gmail.com	\N
20250706010620	{"-- FINAL SOLUTION: Eliminate all circular dependencies in RLS policies\n-- This migration creates ultra-simple policies that only use the bypass functions\n\n-- Step 1: Drop ALL existing policies that could cause circular dependencies\nDROP POLICY IF EXISTS \\"org_members_basic_select\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_basic_insert\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_basic_update\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_basic_delete\\" ON organization_members;\n\nDROP POLICY IF EXISTS \\"invitation_basic_insert\\" ON organization_invitations;\nDROP POLICY IF EXISTS \\"invitation_basic_update\\" ON organization_invitations;\nDROP POLICY IF EXISTS \\"invitation_basic_select\\" ON organization_invitations;\n\n-- Step 2: Create minimal RLS policies that NEVER query organization_members table\n-- These policies only use direct comparisons and bypass functions\n\n-- Organization Members: Only allow users to see/modify their own records\n-- Admins can manage others using bypass functions ONLY\nCREATE POLICY \\"org_members_minimal_select\\"\n  ON organization_members\n  FOR SELECT\n  USING (\n    user_id = auth.uid()  -- Users can always see their own membership\n  );\n\nCREATE POLICY \\"org_members_minimal_insert\\"\n  ON organization_members\n  FOR INSERT\n  WITH CHECK (\n    user_id = auth.uid()  -- Users can only insert themselves\n  );\n\nCREATE POLICY \\"org_members_minimal_update\\"\n  ON organization_members\n  FOR UPDATE\n  USING (\n    user_id = auth.uid()  -- Users can only update their own records\n  );\n\nCREATE POLICY \\"org_members_minimal_delete\\"\n  ON organization_members\n  FOR DELETE\n  USING (\n    user_id = auth.uid()  -- Users can only delete their own records\n  );\n\n-- For admin operations, we'll use the bypass functions in application code\n\n-- Organization Invitations: Completely bypass RLS using functions\nCREATE POLICY \\"invitation_minimal_select\\"\n  ON organization_invitations\n  FOR SELECT\n  USING (\n    invited_by = auth.uid()  -- Users can see invitations they sent\n  );\n\nCREATE POLICY \\"invitation_minimal_insert\\"\n  ON organization_invitations\n  FOR INSERT\n  WITH CHECK (\n    invited_by = auth.uid()  -- Users can only create invitations as themselves\n  );\n\nCREATE POLICY \\"invitation_minimal_update\\"\n  ON organization_invitations\n  FOR UPDATE\n  USING (\n    invited_by = auth.uid()  -- Users can only update invitations they sent\n  );\n\n-- Step 3: Ensure RLS is enabled\nALTER TABLE organization_members ENABLE ROW LEVEL SECURITY;\nALTER TABLE organization_invitations ENABLE ROW LEVEL SECURITY;\n\n-- Step 4: Add helper function for admin permission checks that applications can use\nCREATE OR REPLACE FUNCTION public.check_admin_permission_safe(\n  user_uuid uuid,\n  org_id uuid\n) RETURNS boolean\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  result boolean := false;\nBEGIN\n  -- Use the raw bypass function\n  SELECT public.raw_check_admin_bypass(user_uuid, org_id) INTO result;\n  RETURN result;\nEXCEPTION WHEN OTHERS THEN\n  -- Return false on any error\n  RETURN false;\nEND;\n$$;\n\n-- Grant execute permissions\nGRANT EXECUTE ON FUNCTION public.check_admin_permission_safe(uuid, uuid) TO authenticated;\n\n-- Success message\nDO $$\nBEGIN\n  RAISE NOTICE 'SUCCESS: All circular dependencies eliminated using minimal RLS policies.';\n  RAISE NOTICE 'Organization members table now uses only direct user_id comparisons.';\n  RAISE NOTICE 'Admin operations should use bypass functions in application code.';\nEND $$;"}		viral.architect@gmail.com	\N
20250818021929	{"-- Safe migration to add historical work order support\n-- Guards against missing work_orders table and uses safe column additions\n\nDO $$ \nBEGIN\n  -- Only proceed if work_orders table exists\n  IF EXISTS (SELECT 1 FROM information_schema.tables \n             WHERE table_schema = 'public' \n             AND table_name = 'work_orders') THEN\n    \n    RAISE NOTICE 'Adding historical columns to work_orders table';\n    \n    -- Add historical columns safely (only if they don't exist)\n    ALTER TABLE public.work_orders \n    ADD COLUMN IF NOT EXISTS is_historical BOOLEAN NOT NULL DEFAULT false,\n    ADD COLUMN IF NOT EXISTS historical_start_date TIMESTAMP WITH TIME ZONE,\n    ADD COLUMN IF NOT EXISTS historical_notes TEXT,\n    ADD COLUMN IF NOT EXISTS created_by_admin UUID;\n    \n    -- Add FK to profiles if both tables exist and constraint doesn't exist\n    IF EXISTS (SELECT 1 FROM information_schema.tables \n               WHERE table_schema = 'public' \n               AND table_name = 'profiles') AND\n       NOT EXISTS (SELECT 1 FROM information_schema.table_constraints \n                   WHERE constraint_name = 'work_orders_created_by_admin_fkey'\n                   AND table_name = 'work_orders'\n                   AND table_schema = 'public') THEN\n      \n      ALTER TABLE public.work_orders \n      ADD CONSTRAINT work_orders_created_by_admin_fkey \n      FOREIGN KEY (created_by_admin) REFERENCES public.profiles(id);\n      \n      RAISE NOTICE 'Added foreign key constraint for created_by_admin';\n    END IF;\n    \n    -- Create index for performance if it doesn't exist\n    IF NOT EXISTS (SELECT 1 FROM pg_indexes \n                   WHERE tablename = 'work_orders' \n                   AND indexname = 'idx_work_orders_historical') THEN\n      CREATE INDEX idx_work_orders_historical \n      ON public.work_orders(is_historical, historical_start_date);\n      \n      RAISE NOTICE 'Created index for historical work orders';\n    END IF;\n    \n    RAISE NOTICE 'Historical work order columns added successfully';\n    \n  ELSE\n    RAISE NOTICE 'work_orders table does not exist, skipping historical columns addition';\n  END IF;\nEND $$;"}		viral.architect@gmail.com	\N
20250706021954	{"-- Fix for stack depth limit exceeded in invitation system\n-- Create functions that truly bypass RLS using row_security = off\n\n-- Drop existing problematic functions\nDROP FUNCTION IF EXISTS public.raw_check_admin_bypass(uuid, uuid) CASCADE;\nDROP FUNCTION IF EXISTS public.raw_check_member_bypass(uuid, uuid) CASCADE;\n\n-- Create new functions that completely bypass RLS\nCREATE OR REPLACE FUNCTION public.check_admin_bypass_fixed(\n  user_uuid uuid, \n  org_id uuid\n)\nRETURNS boolean\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nSET row_security = off  -- This completely disables RLS for this function\nAS $$\nDECLARE\n  result boolean := false;\nBEGIN\n  -- Direct query without RLS interference\n  SELECT EXISTS (\n    SELECT 1 \n    FROM organization_members\n    WHERE user_id = user_uuid \n      AND organization_id = org_id \n      AND role IN ('owner', 'admin')\n      AND status = 'active'\n  ) INTO result;\n  \n  RETURN result;\nEND;\n$$;\n\nCREATE OR REPLACE FUNCTION public.check_member_bypass_fixed(\n  user_uuid uuid, \n  org_id uuid\n)\nRETURNS boolean\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nSET row_security = off  -- This completely disables RLS for this function\nAS $$\nDECLARE\n  result boolean := false;\nBEGIN\n  -- Direct query without RLS interference\n  SELECT EXISTS (\n    SELECT 1 \n    FROM organization_members\n    WHERE user_id = user_uuid \n      AND organization_id = org_id \n      AND status = 'active'\n  ) INTO result;\n  \n  RETURN result;\nEND;\n$$;\n\n-- Update create_invitation_bypass to use the fixed function\nCREATE OR REPLACE FUNCTION public.create_invitation_bypass(\n  p_organization_id uuid,\n  p_email text,\n  p_role text,\n  p_message text DEFAULT NULL,\n  p_invited_by uuid DEFAULT auth.uid()\n)\nRETURNS uuid\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  invitation_id uuid;\n  is_admin boolean;\nBEGIN\n  -- Use the fixed bypass function\n  SELECT public.check_admin_bypass_fixed(p_invited_by, p_organization_id) INTO is_admin;\n  \n  IF NOT is_admin THEN\n    RAISE EXCEPTION 'User % does not have permission to create invitations for organization %', p_invited_by, p_organization_id;\n  END IF;\n\n  -- Direct INSERT without any RLS triggers\n  INSERT INTO organization_invitations (\n    organization_id,\n    email,\n    role,\n    message,\n    invited_by,\n    expires_at,\n    status,\n    invitation_token\n  ) VALUES (\n    p_organization_id,\n    lower(trim(p_email)),\n    p_role,\n    p_message,\n    p_invited_by,\n    now() + interval '7 days',\n    'pending',\n    gen_random_uuid()\n  ) RETURNING id INTO invitation_id;\n  \n  RETURN invitation_id;\n  \nEXCEPTION WHEN OTHERS THEN\n  RAISE EXCEPTION 'Failed to create invitation for %: %', p_email, SQLERRM;\nEND;\n$$;\n\n-- Update get_user_invitations_safe\nCREATE OR REPLACE FUNCTION public.get_user_invitations_safe(\n  user_uuid uuid,\n  org_id uuid\n) RETURNS TABLE(\n  id uuid,\n  email text,\n  role text,\n  status text,\n  message text,\n  created_at timestamp with time zone,\n  expires_at timestamp with time zone,\n  accepted_at timestamp with time zone,\n  declined_at timestamp with time zone,\n  expired_at timestamp with time zone,\n  slot_reserved boolean,\n  slot_purchase_id uuid\n)\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nBEGIN\n  -- Use the fixed bypass function\n  IF public.check_admin_bypass_fixed(user_uuid, org_id) THEN\n    RETURN QUERY\n    SELECT \n      oi.id, oi.email, oi.role, oi.status, oi.message,\n      oi.created_at, oi.expires_at, oi.accepted_at, \n      oi.declined_at, oi.expired_at, oi.slot_reserved, \n      oi.slot_purchase_id\n    FROM organization_invitations oi\n    WHERE oi.organization_id = org_id\n    ORDER BY oi.created_at DESC;\n  ELSE\n    RETURN QUERY\n    SELECT \n      oi.id, oi.email, oi.role, oi.status, oi.message,\n      oi.created_at, oi.expires_at, oi.accepted_at, \n      oi.declined_at, oi.expired_at, oi.slot_reserved, \n      oi.slot_purchase_id\n    FROM organization_invitations oi\n    WHERE oi.organization_id = org_id\n      AND oi.invited_by = user_uuid\n    ORDER BY oi.created_at DESC;\n  END IF;\nEND;\n$$;\n\n-- Update can_manage_invitation_safe\nCREATE OR REPLACE FUNCTION public.can_manage_invitation_safe(\n  user_uuid uuid,\n  invitation_id uuid\n) RETURNS boolean\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  org_id uuid;\n  is_admin boolean := false;\n  is_inviter boolean := false;\nBEGIN\n  SELECT organization_id, (invited_by = user_uuid) \n  INTO org_id, is_inviter\n  FROM organization_invitations\n  WHERE id = invitation_id;\n  \n  IF is_inviter THEN\n    RETURN true;\n  END IF;\n  \n  IF org_id IS NOT NULL THEN\n    SELECT public.check_admin_bypass_fixed(user_uuid, org_id) INTO is_admin;\n    RETURN is_admin;\n  END IF;\n  \n  RETURN false;\nEXCEPTION WHEN OTHERS THEN\n  RETURN false;\nEND;\n$$;\n\n-- Grant execute permissions to the new functions\nGRANT EXECUTE ON FUNCTION public.check_admin_bypass_fixed(uuid, uuid) TO authenticated;\nGRANT EXECUTE ON FUNCTION public.check_member_bypass_fixed(uuid, uuid) TO authenticated;\nGRANT EXECUTE ON FUNCTION public.create_invitation_bypass(uuid, text, text, text, uuid) TO authenticated;\nGRANT EXECUTE ON FUNCTION public.get_user_invitations_safe(uuid, uuid) TO authenticated;\nGRANT EXECUTE ON FUNCTION public.can_manage_invitation_safe(uuid, uuid) TO authenticated;\n\n-- Success message\nDO $$\nBEGIN\n  RAISE NOTICE 'SUCCESS: Fixed stack depth limit exceeded error in invitation system.';\n  RAISE NOTICE 'Created bypass functions with row_security = off to prevent circular RLS dependencies.';\nEND $$;"}		viral.architect@gmail.com	\N
20250706023234	{"-- Complete fix for stack depth limit exceeded in invitation system\n-- This migration optimizes the invitation creation process and adds performance improvements\n\n-- Step 1: Add database indexes for better performance\nCREATE INDEX IF NOT EXISTS idx_organization_members_user_org_active \n  ON organization_members(user_id, organization_id, status) \n  WHERE status = 'active';\n\nCREATE INDEX IF NOT EXISTS idx_organization_invitations_org_status \n  ON organization_invitations(organization_id, status) \n  WHERE status = 'pending';\n\nCREATE INDEX IF NOT EXISTS idx_organization_invitations_email_org \n  ON organization_invitations(email, organization_id);\n\n-- Step 2: Create ultra-optimized bypass functions that completely avoid RLS\nDROP FUNCTION IF EXISTS public.create_invitation_bypass_optimized(uuid, text, text, text, uuid) CASCADE;\n\nCREATE OR REPLACE FUNCTION public.create_invitation_bypass_optimized(\n  p_organization_id uuid,\n  p_email text,\n  p_role text,\n  p_message text DEFAULT NULL,\n  p_invited_by uuid DEFAULT auth.uid()\n)\nRETURNS uuid\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nSET row_security TO 'off'  -- Completely disable RLS for this function\nAS $$\nDECLARE\n  invitation_id uuid;\n  admin_check_result boolean := false;\nBEGIN\n  -- Direct admin check without any RLS interference\n  SELECT EXISTS (\n    SELECT 1 \n    FROM organization_members\n    WHERE user_id = p_invited_by \n      AND organization_id = p_organization_id \n      AND role IN ('owner', 'admin')\n      AND status = 'active'\n  ) INTO admin_check_result;\n  \n  IF NOT admin_check_result THEN\n    RAISE EXCEPTION 'PERMISSION_DENIED: User does not have admin privileges for organization %', p_organization_id;\n  END IF;\n\n  -- Check for existing invitation\n  IF EXISTS (\n    SELECT 1 FROM organization_invitations \n    WHERE organization_id = p_organization_id \n      AND lower(trim(email)) = lower(trim(p_email))\n      AND status = 'pending'\n  ) THEN\n    RAISE EXCEPTION 'DUPLICATE_INVITATION: An active invitation already exists for %', p_email;\n  END IF;\n\n  -- Direct INSERT with minimal overhead\n  INSERT INTO organization_invitations (\n    organization_id,\n    email,\n    role,\n    message,\n    invited_by,\n    expires_at,\n    status,\n    invitation_token\n  ) VALUES (\n    p_organization_id,\n    lower(trim(p_email)),\n    p_role,\n    p_message,\n    p_invited_by,\n    now() + interval '7 days',\n    'pending',\n    gen_random_uuid()\n  ) RETURNING id INTO invitation_id;\n  \n  RETURN invitation_id;\n  \nEXCEPTION \n  WHEN SQLSTATE '23505' THEN\n    RAISE EXCEPTION 'DUPLICATE_INVITATION: An invitation to this email already exists';\n  WHEN OTHERS THEN\n    RAISE EXCEPTION 'INVITATION_ERROR: %', SQLERRM;\nEND;\n$$;\n\n-- Step 3: Create optimized function to get invitations without RLS overhead\nCREATE OR REPLACE FUNCTION public.get_invitations_bypass_optimized(\n  user_uuid uuid,\n  org_id uuid\n) RETURNS TABLE(\n  id uuid,\n  email text,\n  role text,\n  status text,\n  message text,\n  created_at timestamp with time zone,\n  expires_at timestamp with time zone,\n  accepted_at timestamp with time zone,\n  declined_at timestamp with time zone,\n  expired_at timestamp with time zone,\n  slot_reserved boolean,\n  slot_purchase_id uuid\n)\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nSET row_security TO 'off'\nAS $$\nDECLARE\n  is_admin_result boolean := false;\nBEGIN\n  -- Direct admin check\n  SELECT EXISTS (\n    SELECT 1 \n    FROM organization_members\n    WHERE user_id = user_uuid \n      AND organization_id = org_id \n      AND role IN ('owner', 'admin')\n      AND status = 'active'\n  ) INTO is_admin_result;\n  \n  IF is_admin_result THEN\n    -- Admins see all invitations\n    RETURN QUERY\n    SELECT \n      oi.id, oi.email, oi.role, oi.status, oi.message,\n      oi.created_at, oi.expires_at, oi.accepted_at, \n      oi.declined_at, oi.expired_at, oi.slot_reserved, \n      oi.slot_purchase_id\n    FROM organization_invitations oi\n    WHERE oi.organization_id = org_id\n    ORDER BY oi.created_at DESC;\n  ELSE\n    -- Regular users see only their own invitations\n    RETURN QUERY\n    SELECT \n      oi.id, oi.email, oi.role, oi.status, oi.message,\n      oi.created_at, oi.expires_at, oi.accepted_at, \n      oi.declined_at, oi.expired_at, oi.slot_reserved, \n      oi.slot_purchase_id\n    FROM organization_invitations oi\n    WHERE oi.organization_id = org_id\n      AND oi.invited_by = user_uuid\n    ORDER BY oi.created_at DESC;\n  END IF;\nEND;\n$$;\n\n-- Step 4: Create function to check invitation management permissions\nCREATE OR REPLACE FUNCTION public.can_manage_invitation_optimized(\n  user_uuid uuid,\n  invitation_id uuid\n) RETURNS boolean\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nSET row_security TO 'off'\nAS $$\nDECLARE\n  org_id uuid;\n  invited_by_user uuid;\n  is_admin_result boolean := false;\nBEGIN\n  -- Get invitation details\n  SELECT organization_id, invited_by \n  INTO org_id, invited_by_user\n  FROM organization_invitations\n  WHERE id = invitation_id;\n  \n  -- If user created the invitation, they can manage it\n  IF invited_by_user = user_uuid THEN\n    RETURN true;\n  END IF;\n  \n  -- Check if user is admin\n  IF org_id IS NOT NULL THEN\n    SELECT EXISTS (\n      SELECT 1 \n      FROM organization_members\n      WHERE user_id = user_uuid \n        AND organization_id = org_id \n        AND role IN ('owner', 'admin')\n        AND status = 'active'\n    ) INTO is_admin_result;\n    \n    RETURN is_admin_result;\n  END IF;\n  \n  RETURN false;\nEXCEPTION WHEN OTHERS THEN\n  RETURN false;\nEND;\n$$;\n\n-- Grant execute permissions\nGRANT EXECUTE ON FUNCTION public.create_invitation_bypass_optimized(uuid, text, text, text, uuid) TO authenticated;\nGRANT EXECUTE ON FUNCTION public.get_invitations_bypass_optimized(uuid, uuid) TO authenticated;\nGRANT EXECUTE ON FUNCTION public.can_manage_invitation_optimized(uuid, uuid) TO authenticated;\n\n-- Step 5: Add performance monitoring function\nCREATE OR REPLACE FUNCTION public.log_invitation_performance(\n  function_name text,\n  execution_time_ms numeric,\n  success boolean,\n  error_message text DEFAULT NULL\n) RETURNS void\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nBEGIN\n  -- Log to a simple table for monitoring (create if not exists)\n  CREATE TABLE IF NOT EXISTS invitation_performance_logs (\n    id uuid DEFAULT gen_random_uuid() PRIMARY KEY,\n    function_name text NOT NULL,\n    execution_time_ms numeric NOT NULL,\n    success boolean NOT NULL,\n    error_message text,\n    created_at timestamp with time zone DEFAULT now()\n  );\n  \n  INSERT INTO invitation_performance_logs (\n    function_name, \n    execution_time_ms, \n    success, \n    error_message\n  ) VALUES (\n    function_name, \n    execution_time_ms, \n    success, \n    error_message\n  );\nEXCEPTION WHEN OTHERS THEN\n  -- Silently fail to avoid blocking main operations\n  NULL;\nEND;\n$$;\n\nGRANT EXECUTE ON FUNCTION public.log_invitation_performance(text, numeric, boolean, text) TO authenticated;\n\n-- Success message\nDO $$\nBEGIN\n  RAISE NOTICE 'SUCCESS: Optimized invitation system implementation completed.';\n  RAISE NOTICE 'Added indexes, bypass functions, and performance monitoring.';\n  RAISE NOTICE 'Stack depth limit exceeded error should now be resolved.';\nEND $$;"}		viral.architect@gmail.com	\N
20250706025336	{"-- Solution 1: Context-aware RLS policies for organization_members\n-- This prevents circular dependencies by using a context parameter approach\n\n-- Step 1: Create a context-aware admin check function\nCREATE OR REPLACE FUNCTION public.check_admin_with_context(\n  user_uuid uuid, \n  org_id uuid,\n  bypass_context text DEFAULT NULL\n)\nRETURNS boolean\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  result boolean := false;\n  current_context text;\nBEGIN\n  -- Get the current context from session variable\n  current_context := current_setting('app.rls_context', true);\n  \n  -- If we're in a bypass context (like invitation creation), use direct query\n  IF current_context = 'invitation_bypass' OR bypass_context = 'invitation_bypass' THEN\n    -- Direct query without RLS interference for invitation context\n    SELECT EXISTS (\n      SELECT 1 \n      FROM organization_members\n      WHERE user_id = user_uuid \n        AND organization_id = org_id \n        AND role IN ('owner', 'admin')\n        AND status = 'active'\n    ) INTO result;\n  ELSE\n    -- Normal RLS-aware query for regular contexts\n    SELECT EXISTS (\n      SELECT 1 \n      FROM organization_members\n      WHERE user_id = user_uuid \n        AND organization_id = org_id \n        AND role IN ('owner', 'admin')\n        AND status = 'active'\n        AND user_id = auth.uid() -- Only check for current user in normal context\n    ) INTO result;\n  END IF;\n  \n  RETURN result;\nEND;\n$$;\n\n-- Step 2: Create a function to set RLS context\nCREATE OR REPLACE FUNCTION public.set_rls_context(context_name text)\nRETURNS void\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nBEGIN\n  PERFORM set_config('app.rls_context', context_name, true);\nEND;\n$$;\n\n-- Step 3: Create a function to clear RLS context\nCREATE OR REPLACE FUNCTION public.clear_rls_context()\nRETURNS void\nLANGUAGE plpgsql\nSECURITY DEFINER\nAS $$\nBEGIN\n  PERFORM set_config('app.rls_context', '', true);\nEND;\n$$;\n\n-- Step 4: Update the invitation creation function to use context\nCREATE OR REPLACE FUNCTION public.create_invitation_with_context(\n  p_organization_id uuid,\n  p_email text,\n  p_role text,\n  p_message text DEFAULT NULL,\n  p_invited_by uuid DEFAULT auth.uid()\n)\nRETURNS uuid\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  invitation_id uuid;\n  admin_check_result boolean := false;\nBEGIN\n  -- Set the bypass context for this operation\n  PERFORM public.set_rls_context('invitation_bypass');\n  \n  -- Check admin privileges using context-aware function\n  SELECT public.check_admin_with_context(p_invited_by, p_organization_id, 'invitation_bypass') INTO admin_check_result;\n  \n  IF NOT admin_check_result THEN\n    PERFORM public.clear_rls_context();\n    RAISE EXCEPTION 'PERMISSION_DENIED: User does not have admin privileges for organization %', p_organization_id;\n  END IF;\n\n  -- Check for existing invitation\n  IF EXISTS (\n    SELECT 1 FROM organization_invitations \n    WHERE organization_id = p_organization_id \n      AND lower(trim(email)) = lower(trim(p_email))\n      AND status = 'pending'\n  ) THEN\n    PERFORM public.clear_rls_context();\n    RAISE EXCEPTION 'DUPLICATE_INVITATION: An active invitation already exists for %', p_email;\n  END IF;\n\n  -- Insert invitation\n  INSERT INTO organization_invitations (\n    organization_id,\n    email,\n    role,\n    message,\n    invited_by,\n    expires_at,\n    status,\n    invitation_token\n  ) VALUES (\n    p_organization_id,\n    lower(trim(p_email)),\n    p_role,\n    p_message,\n    p_invited_by,\n    now() + interval '7 days',\n    'pending',\n    gen_random_uuid()\n  ) RETURNING id INTO invitation_id;\n  \n  -- Clear the context\n  PERFORM public.clear_rls_context();\n  \n  RETURN invitation_id;\n  \nEXCEPTION \n  WHEN SQLSTATE '23505' THEN\n    PERFORM public.clear_rls_context();\n    RAISE EXCEPTION 'DUPLICATE_INVITATION: An invitation to this email already exists';\n  WHEN OTHERS THEN\n    PERFORM public.clear_rls_context();\n    RAISE EXCEPTION 'INVITATION_ERROR: %', SQLERRM;\nEND;\n$$;\n\n-- Step 5: Update organization_members RLS policies to be context-aware\nDROP POLICY IF EXISTS \\"org_members_minimal_select\\" ON organization_members;\nDROP POLICY IF EXISTS \\"organization_members_select_own\\" ON organization_members;\n\nCREATE POLICY \\"organization_members_context_aware_select\\" \n  ON organization_members \n  FOR SELECT \n  USING (\n    -- Allow access to own records always\n    user_id = auth.uid() \n    OR \n    -- Allow broader access when in invitation bypass context\n    (current_setting('app.rls_context', true) = 'invitation_bypass')\n    OR\n    -- Allow admins to see other members in their organizations\n    (EXISTS (\n      SELECT 1 FROM organization_members om2 \n      WHERE om2.user_id = auth.uid() \n        AND om2.organization_id = organization_members.organization_id\n        AND om2.role IN ('owner', 'admin')\n        AND om2.status = 'active'\n    ))\n  );\n\n-- Grant execute permissions\nGRANT EXECUTE ON FUNCTION public.check_admin_with_context(uuid, uuid, text) TO authenticated;\nGRANT EXECUTE ON FUNCTION public.set_rls_context(text) TO authenticated;\nGRANT EXECUTE ON FUNCTION public.clear_rls_context() TO authenticated;\nGRANT EXECUTE ON FUNCTION public.create_invitation_with_context(uuid, text, text, text, uuid) TO authenticated;\n\n-- Success message\nDO $$\nBEGIN\n  RAISE NOTICE 'SUCCESS: Solution 1 implemented - Context-aware RLS policies created.';\n  RAISE NOTICE 'The invitation system now uses context-aware admin checking to prevent circular dependencies.';\n  RAISE NOTICE 'RLS policies remain enabled while allowing safe admin checks during invitation creation.';\nEND $$;"}		viral.architect@gmail.com	\N
20250706025939	{"-- Fix infinite recursion in organization_members RLS policies\n-- Drop the problematic context-aware SELECT policy that causes circular dependencies\nDROP POLICY IF EXISTS \\"organization_members_context_aware_select\\" ON organization_members;\n\n-- Create a simple, non-recursive SELECT policy that allows:\n-- 1. Users to see their own membership records\n-- 2. Admins to see other members in their organizations (using security definer function)\nCREATE POLICY \\"organization_members_select_safe\\" \n  ON organization_members \n  FOR SELECT \n  USING (\n    -- Allow users to see their own records\n    user_id = auth.uid() \n    OR \n    -- Allow admins to see members in organizations where they are admin\n    -- Using security definer function to avoid circular dependency\n    public.check_admin_bypass_fixed(auth.uid(), organization_id)\n  );\n\n-- Success message\nDO $$\nBEGIN\n  RAISE NOTICE 'SUCCESS: Fixed infinite recursion in organization_members RLS policies.';\n  RAISE NOTICE 'The circular dependency has been eliminated using a security definer function.';\nEND $$;"}		viral.architect@gmail.com	\N
20250706030343	{"-- Fix column ambiguity error in get_invitations_bypass_optimized function\n-- The error occurs because both the return signature and organization_members table have a 'role' column\n\nCREATE OR REPLACE FUNCTION public.get_invitations_bypass_optimized(user_uuid uuid, org_id uuid)\n RETURNS TABLE(id uuid, email text, role text, status text, message text, created_at timestamp with time zone, expires_at timestamp with time zone, accepted_at timestamp with time zone, declined_at timestamp with time zone, expired_at timestamp with time zone, slot_reserved boolean, slot_purchase_id uuid)\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path TO 'public'\n SET row_security TO 'off'\nAS $function$\nDECLARE\n  is_admin_result boolean := false;\nBEGIN\n  -- Direct admin check with explicit table qualification\n  SELECT EXISTS (\n    SELECT 1 \n    FROM organization_members om\n    WHERE om.user_id = user_uuid \n      AND om.organization_id = org_id \n      AND om.role IN ('owner', 'admin')  -- Explicitly qualify as om.role\n      AND om.status = 'active'\n  ) INTO is_admin_result;\n  \n  IF is_admin_result THEN\n    -- Admins see all invitations\n    RETURN QUERY\n    SELECT \n      oi.id, oi.email, oi.role, oi.status, oi.message,\n      oi.created_at, oi.expires_at, oi.accepted_at, \n      oi.declined_at, oi.expired_at, oi.slot_reserved, \n      oi.slot_purchase_id\n    FROM organization_invitations oi\n    WHERE oi.organization_id = org_id\n    ORDER BY oi.created_at DESC;\n  ELSE\n    -- Regular users see only their own invitations\n    RETURN QUERY\n    SELECT \n      oi.id, oi.email, oi.role, oi.status, oi.message,\n      oi.created_at, oi.expires_at, oi.accepted_at, \n      oi.declined_at, oi.expired_at, oi.slot_reserved, \n      oi.slot_purchase_id\n    FROM organization_invitations oi\n    WHERE oi.organization_id = org_id\n      AND oi.invited_by = user_uuid\n    ORDER BY oi.created_at DESC;\n  END IF;\nEND;\n$function$;"}		viral.architect@gmail.com	\N
20250706031155	{"-- Solution 2: Direct Database Function Approach - Complete Fix for Invitation Recursion\n-- This eliminates all circular dependencies by creating atomic, bypass functions\n\n-- Step 1: Create a completely atomic invitation creation function\nCREATE OR REPLACE FUNCTION public.create_invitation_atomic(\n  p_organization_id uuid,\n  p_email text,\n  p_role text,\n  p_message text DEFAULT NULL,\n  p_invited_by uuid DEFAULT auth.uid()\n)\nRETURNS uuid\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nSET row_security TO 'off'\nAS $$\nDECLARE\n  invitation_id uuid;\n  admin_check_result boolean := false;\nBEGIN\n  -- Direct admin check - completely bypass RLS\n  SELECT EXISTS (\n    SELECT 1 \n    FROM organization_members\n    WHERE user_id = p_invited_by \n      AND organization_id = p_organization_id \n      AND role IN ('owner', 'admin')\n      AND status = 'active'\n  ) INTO admin_check_result;\n  \n  IF NOT admin_check_result THEN\n    RAISE EXCEPTION 'PERMISSION_DENIED: User does not have admin privileges';\n  END IF;\n\n  -- Check for existing active invitation\n  IF EXISTS (\n    SELECT 1 FROM organization_invitations \n    WHERE organization_id = p_organization_id \n      AND lower(trim(email)) = lower(trim(p_email))\n      AND status = 'pending'\n  ) THEN\n    RAISE EXCEPTION 'DUPLICATE_INVITATION: An active invitation already exists for this email';\n  END IF;\n\n  -- Direct insert with minimal overhead\n  INSERT INTO organization_invitations (\n    organization_id,\n    email,\n    role,\n    message,\n    invited_by,\n    expires_at,\n    status,\n    invitation_token\n  ) VALUES (\n    p_organization_id,\n    lower(trim(p_email)),\n    p_role,\n    p_message,\n    p_invited_by,\n    now() + interval '7 days',\n    'pending',\n    gen_random_uuid()\n  ) RETURNING id INTO invitation_id;\n  \n  RETURN invitation_id;\n  \nEXCEPTION \n  WHEN SQLSTATE '23505' THEN\n    RAISE EXCEPTION 'DUPLICATE_INVITATION: An invitation to this email already exists';\n  WHEN OTHERS THEN\n    RAISE EXCEPTION 'INVITATION_ERROR: %', SQLERRM;\nEND;\n$$;\n\n-- Step 2: Create atomic invitation retrieval function\nCREATE OR REPLACE FUNCTION public.get_invitations_atomic(\n  user_uuid uuid, \n  org_id uuid\n)\nRETURNS TABLE(\n  id uuid, \n  email text, \n  role text, \n  status text, \n  message text, \n  created_at timestamp with time zone, \n  expires_at timestamp with time zone, \n  accepted_at timestamp with time zone, \n  declined_at timestamp with time zone, \n  expired_at timestamp with time zone, \n  slot_reserved boolean, \n  slot_purchase_id uuid\n)\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nSET row_security TO 'off'\nAS $$\nDECLARE\n  is_admin_result boolean := false;\nBEGIN\n  -- Direct admin check\n  SELECT EXISTS (\n    SELECT 1 \n    FROM organization_members om\n    WHERE om.user_id = user_uuid \n      AND om.organization_id = org_id \n      AND om.role IN ('owner', 'admin')\n      AND om.status = 'active'\n  ) INTO is_admin_result;\n  \n  IF is_admin_result THEN\n    -- Admins see all invitations\n    RETURN QUERY\n    SELECT \n      oi.id, oi.email, oi.role, oi.status, oi.message,\n      oi.created_at, oi.expires_at, oi.accepted_at, \n      oi.declined_at, oi.expired_at, oi.slot_reserved, \n      oi.slot_purchase_id\n    FROM organization_invitations oi\n    WHERE oi.organization_id = org_id\n    ORDER BY oi.created_at DESC;\n  ELSE\n    -- Regular users see only their own invitations\n    RETURN QUERY\n    SELECT \n      oi.id, oi.email, oi.role, oi.status, oi.message,\n      oi.created_at, oi.expires_at, oi.accepted_at, \n      oi.declined_at, oi.expired_at, oi.slot_reserved, \n      oi.slot_purchase_id\n    FROM organization_invitations oi\n    WHERE oi.organization_id = org_id\n      AND oi.invited_by = user_uuid\n    ORDER BY oi.created_at DESC;\n  END IF;\nEND;\n$$;\n\n-- Step 3: Create atomic permission check function\nCREATE OR REPLACE FUNCTION public.can_manage_invitation_atomic(\n  user_uuid uuid, \n  invitation_id uuid\n)\nRETURNS boolean\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nSET row_security TO 'off'\nAS $$\nDECLARE\n  org_id uuid;\n  invited_by_user uuid;\n  is_admin_result boolean := false;\nBEGIN\n  -- Get invitation details\n  SELECT organization_id, invited_by \n  INTO org_id, invited_by_user\n  FROM organization_invitations\n  WHERE id = invitation_id;\n  \n  -- If user created the invitation, they can manage it\n  IF invited_by_user = user_uuid THEN\n    RETURN true;\n  END IF;\n  \n  -- Check if user is admin\n  IF org_id IS NOT NULL THEN\n    SELECT EXISTS (\n      SELECT 1 \n      FROM organization_members\n      WHERE user_id = user_uuid \n        AND organization_id = org_id \n        AND role IN ('owner', 'admin')\n        AND status = 'active'\n    ) INTO is_admin_result;\n    \n    RETURN is_admin_result;\n  END IF;\n  \n  RETURN false;\nEXCEPTION WHEN OTHERS THEN\n  RETURN false;\nEND;\n$$;\n\n-- Step 4: Grant permissions\nGRANT EXECUTE ON FUNCTION public.create_invitation_atomic(uuid, text, text, text, uuid) TO authenticated;\nGRANT EXECUTE ON FUNCTION public.get_invitations_atomic(uuid, uuid) TO authenticated;\nGRANT EXECUTE ON FUNCTION public.can_manage_invitation_atomic(uuid, uuid) TO authenticated;\n\n-- Success message\nDO $$\nBEGIN\n  RAISE NOTICE 'SUCCESS: Direct Database Function Approach implemented.';\n  RAISE NOTICE 'All circular dependencies eliminated with atomic functions.';\n  RAISE NOTICE 'Functions bypass RLS completely to prevent recursion.';\nEND $$;"}		viral.architect@gmail.com	\N
20250706032236	{"-- RLS Policy Simplification Plan Implementation\n-- This migration consolidates security functions and standardizes policy patterns\n\n-- Step 1: Create consolidated security functions to replace multiple similar functions\nCREATE OR REPLACE FUNCTION public.is_org_member(user_uuid uuid, org_id uuid)\nRETURNS boolean\nLANGUAGE sql\nSTABLE SECURITY DEFINER\nSET search_path TO 'public'\nSET row_security TO 'off'\nAS $$\n  SELECT EXISTS (\n    SELECT 1 \n    FROM organization_members\n    WHERE user_id = user_uuid \n      AND organization_id = org_id \n      AND status = 'active'\n  );\n$$;\n\nCREATE OR REPLACE FUNCTION public.is_org_admin(user_uuid uuid, org_id uuid)\nRETURNS boolean\nLANGUAGE sql\nSTABLE SECURITY DEFINER\nSET search_path TO 'public'\nSET row_security TO 'off'\nAS $$\n  SELECT EXISTS (\n    SELECT 1 \n    FROM organization_members\n    WHERE user_id = user_uuid \n      AND organization_id = org_id \n      AND role IN ('owner', 'admin')\n      AND status = 'active'\n  );\n$$;\n\n-- Step 2: Simplify organization_members policies (remove duplicates and consolidate)\nDROP POLICY IF EXISTS \\"org_members_minimal_delete\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_minimal_insert\\" ON organization_members;\nDROP POLICY IF EXISTS \\"org_members_minimal_update\\" ON organization_members;\nDROP POLICY IF EXISTS \\"organization_members_select_safe\\" ON organization_members;\n\nCREATE POLICY \\"members_own_record\\" ON organization_members\nFOR ALL\nUSING (user_id = auth.uid())\nWITH CHECK (user_id = auth.uid());\n\nCREATE POLICY \\"admins_manage_members\\" ON organization_members\nFOR ALL  \nUSING (is_org_admin(auth.uid(), organization_id))\nWITH CHECK (is_org_admin(auth.uid(), organization_id));\n\n-- Step 3: Simplify organization_invitations policies\nDROP POLICY IF EXISTS \\"invitation_minimal_delete\\" ON organization_invitations;\nDROP POLICY IF EXISTS \\"invitation_minimal_insert\\" ON organization_invitations;\nDROP POLICY IF EXISTS \\"invitation_minimal_select\\" ON organization_invitations;\nDROP POLICY IF EXISTS \\"invitation_minimal_update\\" ON organization_invitations;\n\nCREATE POLICY \\"admins_manage_invitations\\" ON organization_invitations\nFOR ALL\nUSING (is_org_admin(auth.uid(), organization_id))\nWITH CHECK (is_org_admin(auth.uid(), organization_id));\n\n-- Step 4: Standardize equipment policies\nDROP POLICY IF EXISTS \\"equipment_insert_optimized\\" ON equipment;\nDROP POLICY IF EXISTS \\"equipment_select_optimized\\" ON equipment;\nDROP POLICY IF EXISTS \\"equipment_update_optimized\\" ON equipment;\n\nCREATE POLICY \\"members_view_equipment\\" ON equipment\nFOR SELECT\nUSING (is_org_member(auth.uid(), organization_id));\n\nCREATE POLICY \\"members_create_equipment\\" ON equipment\nFOR INSERT\nWITH CHECK (is_org_member(auth.uid(), organization_id));\n\nCREATE POLICY \\"admins_manage_equipment\\" ON equipment\nFOR UPDATE\nUSING (is_org_admin(auth.uid(), organization_id));\n\n-- Step 5: Standardize work_orders policies\nDROP POLICY IF EXISTS \\"work_orders_delete_optimized\\" ON work_orders;\nDROP POLICY IF EXISTS \\"work_orders_insert_optimized\\" ON work_orders;\nDROP POLICY IF EXISTS \\"work_orders_select_optimized\\" ON work_orders;\nDROP POLICY IF EXISTS \\"work_orders_update_optimized\\" ON work_orders;\n\nCREATE POLICY \\"members_access_work_orders\\" ON work_orders\nFOR ALL\nUSING (is_org_member(auth.uid(), organization_id))\nWITH CHECK (is_org_member(auth.uid(), organization_id));\n\nCREATE POLICY \\"admins_delete_work_orders\\" ON work_orders\nFOR DELETE\nUSING (is_org_admin(auth.uid(), organization_id));\n\n-- Step 6: Standardize teams policies\nDROP POLICY IF EXISTS \\"teams_insert_optimized\\" ON teams;\nDROP POLICY IF EXISTS \\"teams_select_optimized\\" ON teams;\nDROP POLICY IF EXISTS \\"teams_update_optimized\\" ON teams;\n\nCREATE POLICY \\"members_view_teams\\" ON teams\nFOR SELECT\nUSING (is_org_member(auth.uid(), organization_id));\n\nCREATE POLICY \\"admins_manage_teams\\" ON teams\nFOR INSERT\nWITH CHECK (is_org_admin(auth.uid(), organization_id));\n\nCREATE POLICY \\"admins_update_teams\\" ON teams\nFOR UPDATE\nUSING (is_org_admin(auth.uid(), organization_id));\n\n-- Step 7: Standardize team_members policies\nDROP POLICY IF EXISTS \\"team_members_insert_optimized\\" ON team_members;\nDROP POLICY IF EXISTS \\"team_members_select_optimized\\" ON team_members;\nDROP POLICY IF EXISTS \\"team_members_update_optimized\\" ON team_members;\n\nCREATE POLICY \\"members_view_team_members\\" ON team_members\nFOR SELECT\nUSING (is_org_member(auth.uid(), (SELECT organization_id FROM teams WHERE id = team_id)));\n\nCREATE POLICY \\"admins_manage_team_members\\" ON team_members\nFOR ALL\nUSING (is_org_admin(auth.uid(), (SELECT organization_id FROM teams WHERE id = team_id)))\nWITH CHECK (is_org_admin(auth.uid(), (SELECT organization_id FROM teams WHERE id = team_id)));\n\n-- Step 8: Standardize work_order_costs policies\nDROP POLICY IF EXISTS \\"work_order_costs_delete_optimized\\" ON work_order_costs;\nDROP POLICY IF EXISTS \\"work_order_costs_insert_optimized\\" ON work_order_costs;\nDROP POLICY IF EXISTS \\"work_order_costs_select_optimized\\" ON work_order_costs;\nDROP POLICY IF EXISTS \\"work_order_costs_update_optimized\\" ON work_order_costs;\n\nCREATE POLICY \\"members_view_costs\\" ON work_order_costs\nFOR SELECT\nUSING (is_org_member(auth.uid(), (SELECT organization_id FROM work_orders WHERE id = work_order_id)));\n\nCREATE POLICY \\"users_manage_own_costs\\" ON work_order_costs\nFOR ALL\nUSING (created_by = auth.uid())\nWITH CHECK (created_by = auth.uid());\n\nCREATE POLICY \\"admins_manage_all_costs\\" ON work_order_costs\nFOR ALL\nUSING (is_org_admin(auth.uid(), (SELECT organization_id FROM work_orders WHERE id = work_order_id)))\nWITH CHECK (is_org_admin(auth.uid(), (SELECT organization_id FROM work_orders WHERE id = work_order_id)));\n\n-- Step 9: Standardize equipment_notes policies\nDROP POLICY IF EXISTS \\"equipment_notes_delete_optimized\\" ON equipment_notes;\nDROP POLICY IF EXISTS \\"equipment_notes_insert_optimized\\" ON equipment_notes;\nDROP POLICY IF EXISTS \\"equipment_notes_select_optimized\\" ON equipment_notes;\nDROP POLICY IF EXISTS \\"equipment_notes_update_optimized\\" ON equipment_notes;\n\nCREATE POLICY \\"members_view_notes\\" ON equipment_notes\nFOR SELECT\nUSING (\n  is_org_member(auth.uid(), (SELECT organization_id FROM equipment WHERE id = equipment_id))\n  AND (NOT is_private OR author_id = auth.uid())\n);\n\nCREATE POLICY \\"members_create_notes\\" ON equipment_notes\nFOR INSERT\nWITH CHECK (\n  author_id = auth.uid() \n  AND is_org_member(auth.uid(), (SELECT organization_id FROM equipment WHERE id = equipment_id))\n);\n\nCREATE POLICY \\"authors_manage_own_notes\\" ON equipment_notes\nFOR ALL\nUSING (author_id = auth.uid())\nWITH CHECK (author_id = auth.uid());\n\n-- Step 10: Grant permissions for new consolidated functions\nGRANT EXECUTE ON FUNCTION public.is_org_member(uuid, uuid) TO authenticated;\nGRANT EXECUTE ON FUNCTION public.is_org_admin(uuid, uuid) TO authenticated;\n\n-- Step 11: Clean up old unused functions (keep only the ones still needed)\n-- Note: We're keeping the atomic functions as they're used for invitation management\n-- and the specific secure functions that may be referenced elsewhere\n\nCOMMENT ON FUNCTION public.is_org_member IS 'Consolidated function to check organization membership - replaces multiple similar functions';\nCOMMENT ON FUNCTION public.is_org_admin IS 'Consolidated function to check organization admin status - replaces multiple similar functions';\n\n-- Success message\nDO $$\nBEGIN\n  RAISE NOTICE 'SUCCESS: RLS policies have been simplified and standardized.';\n  RAISE NOTICE 'Consolidated security functions created: is_org_member, is_org_admin';\n  RAISE NOTICE 'Removed duplicate policies and standardized patterns across all tables.';\n  RAISE NOTICE 'All functionality preserved while reducing complexity.';\nEND $$;"}		viral.architect@gmail.com	\N
20250706034544	{"-- Fix security warnings by adding explicit search_path declarations\n-- to functions flagged by the database linter\n\n-- Update set_bypass_triggers function\nCREATE OR REPLACE FUNCTION public.set_bypass_triggers(bypass boolean DEFAULT true)\n RETURNS void\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path TO 'public'\nAS $function$\nBEGIN\n  PERFORM set_config('app.bypass_triggers', bypass::text, true);\nEND;\n$function$;\n\n-- Update set_rls_context function  \nCREATE OR REPLACE FUNCTION public.set_rls_context(context_name text)\n RETURNS void\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path TO 'public'\nAS $function$\nBEGIN\n  PERFORM set_config('app.rls_context', context_name, true);\nEND;\n$function$;\n\n-- Update clear_rls_context function\nCREATE OR REPLACE FUNCTION public.clear_rls_context()\n RETURNS void\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path TO 'public'\nAS $function$\nBEGIN\n  PERFORM set_config('app.rls_context', '', true);\nEND;\n$function$;\n\n-- Success message\nDO $$\nBEGIN\n  RAISE NOTICE 'SUCCESS: Added explicit search_path declarations to fix security warnings.';\n  RAISE NOTICE 'Functions updated: set_bypass_triggers, set_rls_context, clear_rls_context';\nEND $$;"}		viral.architect@gmail.com	\N
20250818015007	{"-- Secure billing and financial tables with comprehensive RLS policies\n\n-- billing_events table - Add missing restrictive policies\nCREATE POLICY \\"Prevent unauthorized billing_events updates\\" ON public.billing_events\nFOR UPDATE\nUSING (false); -- No user updates allowed - system only\n\nCREATE POLICY \\"Prevent unauthorized billing_events deletes\\" ON public.billing_events  \nFOR DELETE\nUSING (false); -- No user deletes allowed - system only\n\n-- billing_usage table - Add restrictive policies for financial data\nCREATE POLICY \\"Prevent unauthorized billing_usage inserts\\" ON public.billing_usage\nFOR INSERT  \nWITH CHECK (false); -- System only inserts\n\nCREATE POLICY \\"Prevent unauthorized billing_usage updates\\" ON public.billing_usage\nFOR UPDATE\nUSING (false); -- System only updates\n\nCREATE POLICY \\"Prevent unauthorized billing_usage deletes\\" ON public.billing_usage\nFOR DELETE\nUSING (false); -- System only deletes\n\n-- Strengthen existing billing_events INSERT policy to be more explicit\nDROP POLICY IF EXISTS \\"System can insert billing events\\" ON public.billing_events;\nCREATE POLICY \\"System only billing_events inserts\\" ON public.billing_events\nFOR INSERT\nWITH CHECK (auth.role() = 'service_role'); -- Only service role can insert\n\n-- Add additional security for organization_slots - ensure only proper org members\nDROP POLICY IF EXISTS \\"org_members_view_slots\\" ON public.organization_slots;\nCREATE POLICY \\"Restrict slots viewing to active org members\\" ON public.organization_slots\nFOR SELECT\nUSING (\n  EXISTS (\n    SELECT 1 FROM public.organization_members om\n    WHERE om.organization_id = organization_slots.organization_id\n    AND om.user_id = auth.uid()\n    AND om.status = 'active'\n  )\n);\n\n-- Add additional security for slot_purchases - ensure only proper org members  \nDROP POLICY IF EXISTS \\"org_members_view_purchases\\" ON public.slot_purchases;\nCREATE POLICY \\"Restrict purchases viewing to active org members\\" ON public.slot_purchases\nFOR SELECT\nUSING (\n  EXISTS (\n    SELECT 1 FROM public.organization_members om\n    WHERE om.organization_id = slot_purchases.organization_id\n    AND om.user_id = auth.uid() \n    AND om.status = 'active'\n  )\n);\n\n-- Add policy to prevent unauthorized access to user_license_subscriptions\nCREATE POLICY \\"Restrict license subscription deletes\\" ON public.user_license_subscriptions\nFOR DELETE\nUSING (\n  EXISTS (\n    SELECT 1 FROM public.organization_members om\n    WHERE om.organization_id = user_license_subscriptions.organization_id\n    AND om.user_id = auth.uid()\n    AND om.role IN ('owner', 'admin')\n    AND om.status = 'active'\n  )\n);\n\n-- Add comprehensive billing_exemptions security\nCREATE POLICY \\"Prevent unauthorized exemption deletes\\" ON public.billing_exemptions\nFOR DELETE  \nUSING (\n  EXISTS (\n    SELECT 1 FROM public.organization_members om\n    WHERE om.organization_id = billing_exemptions.organization_id\n    AND om.user_id = auth.uid()\n    AND om.role = 'owner' -- Only owners can delete exemptions\n    AND om.status = 'active'\n  )\n);"}		viral.architect@gmail.com	\N
20250707075851	{"-- Refine organization_invitations RLS policies for comprehensive invitation flow\n-- This addresses the gap where invited users cannot access invitations by token\n\n-- Step 1: Add policy for organization members to view all invitations\nCREATE POLICY \\"members_view_invitations\\" ON organization_invitations\nFOR SELECT\nUSING (is_org_member(auth.uid(), organization_id));\n\n-- Step 2: Add policy for invited users to access invitations by email match\n-- This allows users to view invitations sent to their email (for invitation acceptance flow)\nCREATE POLICY \\"invited_users_access_by_email\\" ON organization_invitations\nFOR SELECT\nUSING (\n  auth.email() IS NOT NULL \n  AND lower(trim(email)) = lower(trim(auth.email()))\n);\n\n-- Step 3: Add policy for invited users to update invitations by email match\n-- This allows users to accept/decline invitations sent to their email\nCREATE POLICY \\"invited_users_update_by_email\\" ON organization_invitations\nFOR UPDATE\nUSING (\n  auth.email() IS NOT NULL \n  AND lower(trim(email)) = lower(trim(auth.email()))\n  AND status = 'pending'\n);\n\n-- Step 4: Add policy for invited users to view invitations by token\n-- This supports the invitation acceptance page where users access via token\nCREATE POLICY \\"token_based_access\\" ON organization_invitations\nFOR SELECT\nUSING (true); -- Allow reading by token in application code\n\n-- Success message\nDO $$\nBEGIN\n  RAISE NOTICE 'SUCCESS: Enhanced organization_invitations RLS policies implemented.';\n  RAISE NOTICE 'Added policies for: member viewing, email-based access, email-based updates, and token-based access.';\n  RAISE NOTICE 'Invitation flow now supports all user types: admins, members, and invited users.';\nEND $$;"}		viral.architect@gmail.com	\N
20250707081625	{"-- Fix circular dependency by removing problematic RLS policy\n-- This removes the policy that calls is_org_admin() which queries organization_members\n-- and causes infinite recursion\n\n-- Step 1: Drop the problematic policy that causes circular dependency\nDROP POLICY IF EXISTS \\"admins_manage_members\\" ON organization_members;\n\n-- Step 2: Keep the safe policy that only checks user_id = auth.uid()\n-- This policy remains because it doesn't cause recursion\n-- (The members_own_record policy is already in place and working)\n\n-- Step 3: Add a comment explaining the change\nCOMMENT ON TABLE organization_members IS 'RLS simplified to prevent circular dependency. Admin permissions handled at application level.';\n\n-- Success message\nDO $$\nBEGIN\n  RAISE NOTICE 'SUCCESS: Removed circular dependency in organization_members RLS policies.';\n  RAISE NOTICE 'Only members_own_record policy remains, preventing infinite recursion.';\n  RAISE NOTICE 'Admin permissions should now be handled at the application level.';\nEND $$;"}		viral.architect@gmail.com	\N
20250707082829	{"-- Fix stack depth limit exceeded error by simplifying RLS policies\n-- Replace recursive policies with simple, non-recursive ones\n\n-- Step 1: Drop the problematic recursive policy on organization_invitations\nDROP POLICY IF EXISTS \\"admins_manage_invitations\\" ON organization_invitations;\n\n-- Step 2: Create simple, non-recursive policies for organization_invitations\n-- These policies do NOT call functions that query organization_members\n\n-- Allow users to see invitations they created\nCREATE POLICY \\"users_view_own_invitations\\" ON organization_invitations\nFOR SELECT\nUSING (invited_by = auth.uid());\n\n-- Allow users to manage invitations they created\nCREATE POLICY \\"users_manage_own_invitations\\" ON organization_invitations  \nFOR UPDATE\nUSING (invited_by = auth.uid());\n\n-- Allow users to create invitations (permission check handled in application)\nCREATE POLICY \\"users_create_invitations\\" ON organization_invitations\nFOR INSERT\nWITH CHECK (invited_by = auth.uid());\n\n-- Allow users to delete invitations they created\nCREATE POLICY \\"users_delete_own_invitations\\" ON organization_invitations\nFOR DELETE  \nUSING (invited_by = auth.uid());\n\n-- Step 3: Update the useOrganizationInvitations hook to use a direct database query\n-- instead of relying on RLS policies for admin permission checking\n\n-- Success message\nDO $$\nBEGIN\n  RAISE NOTICE 'SUCCESS: Replaced recursive RLS policies with simple, non-recursive ones.';\n  RAISE NOTICE 'Stack depth error should now be resolved.';\n  RAISE NOTICE 'Permission checking will be handled at the application level.';\nEND $$;"}		viral.architect@gmail.com	\N
20250709040032	{"-- Add recursion protection to the expire_old_invitations trigger\n-- This prevents infinite loops when the trigger updates the same table\n\n-- First, drop the existing trigger if it exists\nDROP TRIGGER IF EXISTS expire_old_invitations_trigger ON organization_invitations;\n\n-- Recreate the function with recursion protection\nCREATE OR REPLACE FUNCTION public.expire_old_invitations()\nRETURNS trigger\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nBEGIN\n  -- Check if we're already inside this trigger to prevent recursion\n  IF current_setting('app.expire_invitations_running', true) = 'true' THEN\n    RETURN NULL;\n  END IF;\n  \n  -- Set the flag to indicate we're running\n  PERFORM set_config('app.expire_invitations_running', 'true', true);\n  \n  -- Mark invitations as expired if they're past expiration and still pending\n  UPDATE public.organization_invitations\n  SET \n    status = 'expired',\n    expired_at = now(),\n    updated_at = now()\n  WHERE status = 'pending'\n    AND expires_at < now()\n    AND expired_at IS NULL;\n    \n  -- Clear the flag\n  PERFORM set_config('app.expire_invitations_running', 'false', true);\n  \n  RETURN NULL;\nEND;\n$$;\n\n-- Recreate the trigger (only on INSERT to avoid recursion on UPDATE)\nCREATE TRIGGER expire_old_invitations_trigger\n    AFTER INSERT ON organization_invitations\n    FOR EACH STATEMENT\n    EXECUTE FUNCTION public.expire_old_invitations();\n\n-- Add a comment explaining the recursion protection\nCOMMENT ON FUNCTION public.expire_old_invitations() IS 'Expires old pending invitations with recursion protection to prevent infinite loops';\n\n-- Success message\nDO $$\nBEGIN\n  RAISE NOTICE 'SUCCESS: Added recursion protection to expire_old_invitations trigger';\n  RAISE NOTICE 'The trigger now only runs on INSERT operations and includes recursion checks';\nEND $$;"}		viral.architect@gmail.com	\N
20250721031233	{"-- Add function to check if email exists in auth system\nCREATE OR REPLACE FUNCTION public.check_email_exists_in_auth(p_email text)\nRETURNS boolean\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  email_exists boolean := false;\nBEGIN\n  -- Check if email exists in auth.users table\n  SELECT EXISTS (\n    SELECT 1 \n    FROM auth.users \n    WHERE lower(trim(email)) = lower(trim(p_email))\n  ) INTO email_exists;\n  \n  RETURN email_exists;\nEXCEPTION WHEN OTHERS THEN\n  -- Return true on error to be safe (don't create account if we can't verify)\n  RETURN true;\nEND;\n$$;\n\n-- Add function to validate invitation and user eligibility for account creation\nCREATE OR REPLACE FUNCTION public.validate_invitation_for_account_creation(p_invitation_id uuid)\nRETURNS jsonb\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  invitation_record RECORD;\n  email_exists boolean;\n  result jsonb;\nBEGIN\n  -- Get invitation details\n  SELECT id, organization_id, email, role, status, expires_at, invited_by\n  INTO invitation_record\n  FROM organization_invitations\n  WHERE id = p_invitation_id;\n  \n  -- Validate invitation exists\n  IF NOT FOUND THEN\n    RETURN jsonb_build_object(\n      'success', false, \n      'error', 'Invitation not found'\n    );\n  END IF;\n  \n  -- Validate invitation status\n  IF invitation_record.status != 'pending' THEN\n    RETURN jsonb_build_object(\n      'success', false, \n      'error', 'Invitation is not pending'\n    );\n  END IF;\n  \n  -- Validate invitation not expired\n  IF invitation_record.expires_at < now() THEN\n    RETURN jsonb_build_object(\n      'success', false, \n      'error', 'Invitation has expired'\n    );\n  END IF;\n  \n  -- Check if email already exists in auth system\n  SELECT public.check_email_exists_in_auth(invitation_record.email) INTO email_exists;\n  \n  IF email_exists THEN\n    RETURN jsonb_build_object(\n      'success', false, \n      'error', 'User already exists in the system'\n    );\n  END IF;\n  \n  -- Return success with invitation details\n  RETURN jsonb_build_object(\n    'success', true,\n    'invitation', jsonb_build_object(\n      'id', invitation_record.id,\n      'organization_id', invitation_record.organization_id,\n      'email', invitation_record.email,\n      'role', invitation_record.role,\n      'invited_by', invitation_record.invited_by\n    )\n  );\n  \nEXCEPTION WHEN OTHERS THEN\n  RETURN jsonb_build_object(\n    'success', false, \n    'error', 'Validation failed: ' || SQLERRM\n  );\nEND;\n$$;\n\n-- Add function to handle successful account creation after invitation\nCREATE OR REPLACE FUNCTION public.handle_invitation_account_creation(p_invitation_id uuid, p_user_id uuid)\nRETURNS jsonb\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  invitation_record RECORD;\n  result jsonb;\nBEGIN\n  -- Get invitation details\n  SELECT id, organization_id, email, role, status\n  INTO invitation_record\n  FROM organization_invitations\n  WHERE id = p_invitation_id AND status = 'pending';\n  \n  IF NOT FOUND THEN\n    RETURN jsonb_build_object(\n      'success', false, \n      'error', 'Invalid invitation'\n    );\n  END IF;\n  \n  -- Update invitation status to accepted\n  UPDATE organization_invitations\n  SET \n    status = 'accepted',\n    accepted_at = now(),\n    accepted_by = p_user_id,\n    updated_at = now()\n  WHERE id = p_invitation_id;\n  \n  -- Create organization membership\n  INSERT INTO organization_members (\n    organization_id,\n    user_id,\n    role,\n    status\n  ) VALUES (\n    invitation_record.organization_id,\n    p_user_id,\n    invitation_record.role,\n    'active'\n  );\n  \n  RETURN jsonb_build_object(\n    'success', true,\n    'organization_id', invitation_record.organization_id,\n    'role', invitation_record.role\n  );\n  \nEXCEPTION \n  WHEN unique_violation THEN\n    RETURN jsonb_build_object(\n      'success', false, \n      'error', 'User is already a member of this organization'\n    );\n  WHEN OTHERS THEN\n    RETURN jsonb_build_object(\n      'success', false, \n      'error', 'Failed to process invitation: ' || SQLERRM\n    );\nEND;\n$$;\n\n-- Add column to track if invitation offers account creation\nALTER TABLE organization_invitations \nADD COLUMN IF NOT EXISTS offers_account_creation boolean DEFAULT false;\n\n-- Add index for better performance\nCREATE INDEX IF NOT EXISTS idx_invitations_offers_account_creation \nON organization_invitations(offers_account_creation) \nWHERE offers_account_creation = true;"}		viral.architect@gmail.com	\N
20250710043533	{"-- Fix invitation system constraint to allow re-inviting users\n-- Remove the overly restrictive unique constraint and replace with a partial index\n\n-- Step 1: Drop the existing unique constraint that prevents re-inviting users\nALTER TABLE organization_invitations \nDROP CONSTRAINT IF EXISTS organization_invitations_organization_id_email_status_key;\n\n-- Step 2: Create a partial unique index that only applies to pending invitations\n-- This allows multiple expired/declined invitations for the same email while preventing duplicate pending ones\nCREATE UNIQUE INDEX IF NOT EXISTS idx_org_invitations_pending_unique \nON organization_invitations (organization_id, lower(trim(email))) \nWHERE status = 'pending';\n\n-- Step 3: Add a comment to document the constraint logic\nCOMMENT ON INDEX idx_org_invitations_pending_unique IS \n'Ensures only one pending invitation per email per organization, while allowing multiple expired/declined invitations for re-inviting';\n\n-- Step 4: Update the atomic invitation creation function to handle the new constraint\nCREATE OR REPLACE FUNCTION public.create_invitation_atomic(\n  p_organization_id uuid,\n  p_email text,\n  p_role text,\n  p_message text DEFAULT NULL,\n  p_invited_by uuid DEFAULT auth.uid()\n)\nRETURNS uuid\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nSET row_security TO 'off'\nAS $$\nDECLARE\n  invitation_id uuid;\n  admin_check_result boolean := false;\nBEGIN\n  -- Direct admin check - completely bypass RLS\n  SELECT EXISTS (\n    SELECT 1 \n    FROM organization_members\n    WHERE user_id = p_invited_by \n      AND organization_id = p_organization_id \n      AND role IN ('owner', 'admin')\n      AND status = 'active'\n  ) INTO admin_check_result;\n  \n  IF NOT admin_check_result THEN\n    RAISE EXCEPTION 'PERMISSION_DENIED: User does not have admin privileges';\n  END IF;\n\n  -- Check for existing PENDING invitation only (now that we allow multiple expired/declined)\n  IF EXISTS (\n    SELECT 1 FROM organization_invitations \n    WHERE organization_id = p_organization_id \n      AND lower(trim(email)) = lower(trim(p_email))\n      AND status = 'pending'\n  ) THEN\n    RAISE EXCEPTION 'DUPLICATE_INVITATION: An active invitation already exists for this email';\n  END IF;\n\n  -- Direct insert with minimal overhead\n  INSERT INTO organization_invitations (\n    organization_id,\n    email,\n    role,\n    message,\n    invited_by,\n    expires_at,\n    status,\n    invitation_token\n  ) VALUES (\n    p_organization_id,\n    lower(trim(p_email)),\n    p_role,\n    p_message,\n    p_invited_by,\n    now() + interval '7 days',\n    'pending',\n    gen_random_uuid()\n  ) RETURNING id INTO invitation_id;\n  \n  RETURN invitation_id;\n  \nEXCEPTION \n  WHEN SQLSTATE '23505' THEN\n    -- Handle the new partial unique constraint violation\n    RAISE EXCEPTION 'DUPLICATE_INVITATION: An active invitation already exists for this email';\n  WHEN OTHERS THEN\n    RAISE EXCEPTION 'INVITATION_ERROR: %', SQLERRM;\nEND;\n$$;\n\n-- Success message\nDO $$\nBEGIN\n  RAISE NOTICE 'SUCCESS: Invitation system constraint fixed.';\n  RAISE NOTICE 'Users can now be re-invited after their invitations expire or are declined.';\n  RAISE NOTICE 'Only pending invitations are prevented from being duplicated.';\nEND $$;"}		viral.architect@gmail.com	\N
20250710045129	{"-- Fix invitation acceptance flow by adding RLS policy for invited users and atomic acceptance function\n\n-- 1. Add RLS policy to allow invited users to view organization details\nCREATE POLICY \\"invited_users_can_view_org_details\\"\n  ON organizations\n  FOR SELECT\n  USING (\n    -- Allow if user is already a member (existing policy logic)\n    check_org_access_secure(auth.uid(), id)\n    OR\n    -- Allow if user has a valid pending invitation for this organization\n    EXISTS (\n      SELECT 1 \n      FROM organization_invitations oi\n      WHERE oi.organization_id = organizations.id\n        AND oi.status = 'pending'\n        AND oi.expires_at > now()\n        AND auth.email() IS NOT NULL\n        AND lower(trim(oi.email)) = lower(trim(auth.email()))\n    )\n  );\n\n-- 2. Create atomic invitation acceptance function\nCREATE OR REPLACE FUNCTION public.accept_invitation_atomic(\n  p_invitation_token uuid,\n  p_user_id uuid DEFAULT auth.uid()\n)\nRETURNS jsonb\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nSET row_security TO 'off'\nAS $$\nDECLARE\n  invitation_record RECORD;\n  org_name TEXT;\n  result jsonb;\nBEGIN\n  -- Get invitation details\n  SELECT id, organization_id, email, role, status, expires_at, accepted_by\n  INTO invitation_record\n  FROM organization_invitations\n  WHERE invitation_token = p_invitation_token;\n  \n  -- Validate invitation exists\n  IF NOT FOUND THEN\n    RETURN jsonb_build_object('success', false, 'error', 'Invitation not found');\n  END IF;\n  \n  -- Validate invitation status\n  IF invitation_record.status != 'pending' THEN\n    RETURN jsonb_build_object('success', false, 'error', 'Invitation has already been processed');\n  END IF;\n  \n  -- Validate invitation not expired\n  IF invitation_record.expires_at < now() THEN\n    RETURN jsonb_build_object('success', false, 'error', 'Invitation has expired');\n  END IF;\n  \n  -- Validate user email matches invitation email\n  IF NOT EXISTS (\n    SELECT 1 FROM auth.users \n    WHERE id = p_user_id \n      AND lower(trim(email)) = lower(trim(invitation_record.email))\n  ) THEN\n    RETURN jsonb_build_object('success', false, 'error', 'User email does not match invitation email');\n  END IF;\n  \n  -- Check if user is already a member\n  IF EXISTS (\n    SELECT 1 FROM organization_members\n    WHERE user_id = p_user_id \n      AND organization_id = invitation_record.organization_id\n      AND status = 'active'\n  ) THEN\n    RETURN jsonb_build_object('success', false, 'error', 'User is already a member of this organization');\n  END IF;\n  \n  -- Begin the atomic acceptance process\n  \n  -- 1. Update invitation status\n  UPDATE organization_invitations\n  SET \n    status = 'accepted',\n    accepted_at = now(),\n    accepted_by = p_user_id,\n    updated_at = now()\n  WHERE id = invitation_record.id;\n  \n  -- 2. Create organization membership\n  INSERT INTO organization_members (\n    organization_id,\n    user_id,\n    role,\n    status\n  ) VALUES (\n    invitation_record.organization_id,\n    p_user_id,\n    invitation_record.role,\n    'active'\n  );\n  \n  -- Get organization name for response\n  SELECT name INTO org_name\n  FROM organizations\n  WHERE id = invitation_record.organization_id;\n  \n  -- Return success result\n  result := jsonb_build_object(\n    'success', true,\n    'organization_id', invitation_record.organization_id,\n    'organization_name', COALESCE(org_name, 'Unknown Organization'),\n    'role', invitation_record.role\n  );\n  \n  RETURN result;\n  \nEXCEPTION \n  WHEN unique_violation THEN\n    RETURN jsonb_build_object('success', false, 'error', 'User is already a member of this organization');\n  WHEN OTHERS THEN\n    RETURN jsonb_build_object('success', false, 'error', 'Failed to accept invitation: ' || SQLERRM);\nEND;\n$$;\n\n-- Grant execute permission to authenticated users\nGRANT EXECUTE ON FUNCTION public.accept_invitation_atomic(uuid, uuid) TO authenticated;"}		viral.architect@gmail.com	\N
20250710102733	{"-- Fix organization_members RLS policies to allow proper member visibility\n-- Drop the overly restrictive current policy\nDROP POLICY IF EXISTS \\"members_own_record\\" ON organization_members;\n\n-- Create new policies for proper access control\n\n-- 1. Allow users to view members in organizations they belong to\nCREATE POLICY \\"members_view_org_members\\" \n  ON organization_members \n  FOR SELECT \n  USING (\n    -- Users can see members in organizations where they are also members\n    organization_id IN (\n      SELECT om.organization_id \n      FROM organization_members om \n      WHERE om.user_id = auth.uid() AND om.status = 'active'\n    )\n  );\n\n-- 2. Allow users to manage their own membership records\nCREATE POLICY \\"members_manage_own_record\\" \n  ON organization_members \n  FOR ALL \n  USING (user_id = auth.uid()) \n  WITH CHECK (user_id = auth.uid());\n\n-- 3. Allow admins to manage memberships within their organizations\nCREATE POLICY \\"admins_manage_org_members\\" \n  ON organization_members \n  FOR ALL \n  USING (\n    is_org_admin(auth.uid(), organization_id)\n  ) \n  WITH CHECK (\n    is_org_admin(auth.uid(), organization_id)\n  );\n\n-- 4. Allow insertion of new members by admins or during invitation acceptance\nCREATE POLICY \\"allow_member_insertion\\" \n  ON organization_members \n  FOR INSERT \n  WITH CHECK (\n    -- Allow if user is admin of the organization\n    is_org_admin(auth.uid(), organization_id)\n    OR \n    -- Allow if user is adding themselves (invitation acceptance)\n    user_id = auth.uid()\n  );\n\n-- Ensure RLS is enabled\nALTER TABLE organization_members ENABLE ROW LEVEL SECURITY;"}		viral.architect@gmail.com	\N
20250710103040	{"-- Fix infinite recursion in organization_members RLS policies\n-- Drop ALL existing policies to start clean\nDROP POLICY IF EXISTS \\"members_view_org_members\\" ON organization_members;\nDROP POLICY IF EXISTS \\"members_manage_own_record\\" ON organization_members;\nDROP POLICY IF EXISTS \\"admins_manage_org_members\\" ON organization_members;\nDROP POLICY IF EXISTS \\"allow_member_insertion\\" ON organization_members;\n\n-- Create new non-recursive policies using security definer functions\n\n-- 1. Allow users to view members in organizations they belong to\nCREATE POLICY \\"members_view_org_members_fixed\\" \n  ON organization_members \n  FOR SELECT \n  USING (\n    -- Use security definer function to prevent recursion\n    is_org_member(auth.uid(), organization_id)\n  );\n\n-- 2. Allow users to manage their own membership records\nCREATE POLICY \\"members_manage_own_record_fixed\\" \n  ON organization_members \n  FOR ALL \n  USING (user_id = auth.uid()) \n  WITH CHECK (user_id = auth.uid());\n\n-- 3. Allow admins to manage memberships within their organizations\nCREATE POLICY \\"admins_manage_org_members_fixed\\" \n  ON organization_members \n  FOR ALL \n  USING (\n    -- Use security definer function to prevent recursion\n    is_org_admin(auth.uid(), organization_id)\n  ) \n  WITH CHECK (\n    -- Use security definer function to prevent recursion\n    is_org_admin(auth.uid(), organization_id)\n  );\n\n-- 4. Allow insertion of new members by admins or during invitation acceptance\nCREATE POLICY \\"allow_member_insertion_fixed\\" \n  ON organization_members \n  FOR INSERT \n  WITH CHECK (\n    -- Allow if user is admin of the organization OR adding themselves\n    is_org_admin(auth.uid(), organization_id) OR user_id = auth.uid()\n  );\n\n-- Ensure RLS is enabled\nALTER TABLE organization_members ENABLE ROW LEVEL SECURITY;"}		viral.architect@gmail.com	\N
20250810101000	{"-- Add billing exemption for VA Enterprises for development testing\nINSERT INTO public.billing_exemptions (\n  organization_id,\n  exemption_type,\n  exemption_value,\n  reason,\n  expires_at,\n  is_active,\n  granted_by,\n  granted_at\n) VALUES (\n  '96061a65-7e91-4ed3-9df1-282ff19a8471',\n  'user_licenses',\n  5,\n  'Testing exemption for development - allows testing member addition and organization switching',\n  NULL,\n  true,\n  auth.uid(),\n  now()\n);\n\n-- Verify the exemption by checking slot availability\nSELECT * FROM get_organization_slot_availability_with_exemptions('96061a65-7e91-4ed3-9df1-282ff19a8471');"}		viral.architect@gmail.com	\N
20250710103636	{"-- Fix the get_organization_slot_availability function to count actual active members\nCREATE OR REPLACE FUNCTION public.get_organization_slot_availability(org_id uuid)\n RETURNS TABLE(total_purchased integer, used_slots integer, available_slots integer, current_period_start timestamp with time zone, current_period_end timestamp with time zone)\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path TO 'public'\nAS $function$\nDECLARE\n  active_slot_record RECORD;\n  actual_used_slots INTEGER;\nBEGIN\n  -- Find currently active slots (where now() is between start and end dates)\n  SELECT \n    COALESCE(SUM(os.purchased_slots), 0)::INTEGER as total_purchased,\n    MIN(os.billing_period_start) as period_start,\n    MAX(os.billing_period_end) as period_end\n  INTO active_slot_record\n  FROM public.organization_slots os\n  WHERE os.organization_id = org_id\n    AND os.billing_period_start <= now()\n    AND os.billing_period_end >= now();\n    \n  -- Count actual active members (excluding owners from billing)\n  SELECT COUNT(*)::INTEGER INTO actual_used_slots\n  FROM public.organization_members om\n  WHERE om.organization_id = org_id \n    AND om.status = 'active'\n    AND om.role IN ('admin', 'member'); -- Exclude owners from slot usage\n    \n  -- Return the values with proper calculation\n  total_purchased := COALESCE(active_slot_record.total_purchased, 0);\n  used_slots := actual_used_slots;\n  available_slots := GREATEST(0, total_purchased - actual_used_slots); -- Ensure never negative\n  current_period_start := COALESCE(active_slot_record.period_start, now());\n  current_period_end := COALESCE(active_slot_record.period_end, now());\n  \n  RETURN NEXT;\nEND;\n$function$"}		viral.architect@gmail.com	\N
20250711020016	{"-- Add missing DELETE RLS policy for teams table\nCREATE POLICY \\"admins_delete_teams\\" \nON public.teams \nFOR DELETE \nUSING (is_org_admin(auth.uid(), organization_id));\n\n-- Add trigger to handle equipment reassignment when team is deleted\nCREATE OR REPLACE FUNCTION public.handle_team_deletion()\nRETURNS TRIGGER AS $$\nBEGIN\n  -- Set team_id to null for all equipment assigned to the deleted team\n  UPDATE public.equipment \n  SET team_id = NULL, updated_at = now()\n  WHERE team_id = OLD.id;\n  \n  RETURN OLD;\nEND;\n$$ LANGUAGE plpgsql SECURITY DEFINER;\n\n-- Create trigger that fires before team deletion\nCREATE TRIGGER before_team_delete\n  BEFORE DELETE ON public.teams\n  FOR EACH ROW\n  EXECUTE FUNCTION public.handle_team_deletion();"}		viral.architect@gmail.com	\N
20250711023219	{"-- Fix security warning by adding explicit search_path to handle_team_deletion function\nCREATE OR REPLACE FUNCTION public.handle_team_deletion()\nRETURNS TRIGGER AS $$\nBEGIN\n  -- Set team_id to null for all equipment assigned to the deleted team\n  UPDATE public.equipment \n  SET team_id = NULL, updated_at = now()\n  WHERE team_id = OLD.id;\n  \n  RETURN OLD;\nEND;\n$$ LANGUAGE plpgsql SECURITY DEFINER\nSET search_path TO 'public';"}		viral.architect@gmail.com	\N
20250711031310	{"-- Create work order status history table\nCREATE TABLE public.work_order_status_history (\n  id uuid NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  work_order_id uuid NOT NULL REFERENCES work_orders(id) ON DELETE CASCADE,\n  old_status work_order_status,\n  new_status work_order_status NOT NULL,\n  changed_by uuid NOT NULL REFERENCES profiles(id),\n  changed_at timestamp with time zone NOT NULL DEFAULT now(),\n  reason text,\n  metadata jsonb DEFAULT '{}'::jsonb,\n  created_at timestamp with time zone NOT NULL DEFAULT now()\n);\n\n-- Create preventative maintenance status history table\nCREATE TABLE public.pm_status_history (\n  id uuid NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  pm_id uuid NOT NULL REFERENCES preventative_maintenance(id) ON DELETE CASCADE,\n  old_status text,\n  new_status text NOT NULL,\n  changed_by uuid NOT NULL REFERENCES profiles(id),\n  changed_at timestamp with time zone NOT NULL DEFAULT now(),\n  reason text,\n  metadata jsonb DEFAULT '{}'::jsonb,\n  created_at timestamp with time zone NOT NULL DEFAULT now()\n);\n\n-- Enable RLS\nALTER TABLE public.work_order_status_history ENABLE ROW LEVEL SECURITY;\nALTER TABLE public.pm_status_history ENABLE ROW LEVEL SECURITY;\n\n-- RLS policies for work order status history\nCREATE POLICY \\"Users can view work order history for their organization\\"\nON public.work_order_status_history\nFOR SELECT\nUSING (\n  EXISTS (\n    SELECT 1 FROM work_orders wo\n    WHERE wo.id = work_order_status_history.work_order_id\n    AND is_org_member(auth.uid(), wo.organization_id)\n  )\n);\n\nCREATE POLICY \\"Admins can insert work order history\\"\nON public.work_order_status_history\nFOR INSERT\nWITH CHECK (\n  EXISTS (\n    SELECT 1 FROM work_orders wo\n    WHERE wo.id = work_order_status_history.work_order_id\n    AND is_org_admin(auth.uid(), wo.organization_id)\n  )\n  AND changed_by = auth.uid()\n);\n\n-- RLS policies for PM status history\nCREATE POLICY \\"Users can view PM history for their organization\\"\nON public.pm_status_history\nFOR SELECT\nUSING (\n  EXISTS (\n    SELECT 1 FROM preventative_maintenance pm\n    WHERE pm.id = pm_status_history.pm_id\n    AND is_org_member(auth.uid(), pm.organization_id)\n  )\n);\n\nCREATE POLICY \\"Admins can insert PM history\\"\nON public.pm_status_history\nFOR INSERT\nWITH CHECK (\n  EXISTS (\n    SELECT 1 FROM preventative_maintenance pm\n    WHERE pm.id = pm_status_history.pm_id\n    AND is_org_admin(auth.uid(), pm.organization_id)\n  )\n  AND changed_by = auth.uid()\n);\n\n-- Function to revert work order status\nCREATE OR REPLACE FUNCTION public.revert_work_order_status(\n  p_work_order_id uuid,\n  p_reason text DEFAULT 'Reverted by admin'\n)\nRETURNS jsonb\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path = 'public'\nAS $$\nDECLARE\n  current_status work_order_status;\n  org_id uuid;\n  result jsonb;\nBEGIN\n  -- Get current status and org\n  SELECT status, organization_id INTO current_status, org_id\n  FROM work_orders\n  WHERE id = p_work_order_id;\n  \n  IF NOT FOUND THEN\n    RETURN jsonb_build_object('success', false, 'error', 'Work order not found');\n  END IF;\n  \n  -- Check if user is admin\n  IF NOT is_org_admin(auth.uid(), org_id) THEN\n    RETURN jsonb_build_object('success', false, 'error', 'Permission denied');\n  END IF;\n  \n  -- Only allow reverting from completed or cancelled\n  IF current_status NOT IN ('completed', 'cancelled') THEN\n    RETURN jsonb_build_object('success', false, 'error', 'Can only revert completed or cancelled work orders');\n  END IF;\n  \n  -- Insert history record\n  INSERT INTO work_order_status_history (\n    work_order_id, old_status, new_status, changed_by, reason, metadata\n  ) VALUES (\n    p_work_order_id, current_status, 'accepted', auth.uid(), p_reason,\n    jsonb_build_object('reverted_from', current_status, 'reverted_at', now())\n  );\n  \n  -- Update work order status\n  UPDATE work_orders \n  SET \n    status = 'accepted',\n    completed_date = NULL,\n    updated_at = now()\n  WHERE id = p_work_order_id;\n  \n  RETURN jsonb_build_object('success', true, 'old_status', current_status, 'new_status', 'accepted');\nEND;\n$$;\n\n-- Function to revert PM completion\nCREATE OR REPLACE FUNCTION public.revert_pm_completion(\n  p_pm_id uuid,\n  p_reason text DEFAULT 'Reverted by admin'\n)\nRETURNS jsonb\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path = 'public'\nAS $$\nDECLARE\n  current_status text;\n  org_id uuid;\n  result jsonb;\nBEGIN\n  -- Get current status and org\n  SELECT status, organization_id INTO current_status, org_id\n  FROM preventative_maintenance\n  WHERE id = p_pm_id;\n  \n  IF NOT FOUND THEN\n    RETURN jsonb_build_object('success', false, 'error', 'PM record not found');\n  END IF;\n  \n  -- Check if user is admin\n  IF NOT is_org_admin(auth.uid(), org_id) THEN\n    RETURN jsonb_build_object('success', false, 'error', 'Permission denied');\n  END IF;\n  \n  -- Only allow reverting from completed\n  IF current_status != 'completed' THEN\n    RETURN jsonb_build_object('success', false, 'error', 'Can only revert completed PM records');\n  END IF;\n  \n  -- Insert history record\n  INSERT INTO pm_status_history (\n    pm_id, old_status, new_status, changed_by, reason, metadata\n  ) VALUES (\n    p_pm_id, current_status, 'pending', auth.uid(), p_reason,\n    jsonb_build_object('reverted_from', current_status, 'reverted_at', now())\n  );\n  \n  -- Update PM status\n  UPDATE preventative_maintenance \n  SET \n    status = 'pending',\n    completed_at = NULL,\n    completed_by = NULL,\n    updated_at = now()\n  WHERE id = p_pm_id;\n  \n  RETURN jsonb_build_object('success', true, 'old_status', current_status, 'new_status', 'pending');\nEND;\n$$;\n\n-- Trigger to automatically log status changes\nCREATE OR REPLACE FUNCTION public.log_work_order_status_change()\nRETURNS trigger\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path = 'public'\nAS $$\nBEGIN\n  -- Only log if status actually changed and it's not a revert operation\n  IF OLD.status IS DISTINCT FROM NEW.status \n     AND NOT EXISTS (\n       SELECT 1 FROM work_order_status_history \n       WHERE work_order_id = NEW.id \n       AND changed_at > now() - interval '1 second'\n       AND changed_by = auth.uid()\n     ) THEN\n    INSERT INTO work_order_status_history (\n      work_order_id, old_status, new_status, changed_by, reason\n    ) VALUES (\n      NEW.id, OLD.status, NEW.status, auth.uid(), 'Status updated'\n    );\n  END IF;\n  \n  RETURN NEW;\nEND;\n$$;\n\n-- Create trigger for work order status changes\nDROP TRIGGER IF EXISTS work_order_status_change_trigger ON work_orders;\nCREATE TRIGGER work_order_status_change_trigger\n  AFTER UPDATE ON work_orders\n  FOR EACH ROW\n  EXECUTE FUNCTION log_work_order_status_change();\n\n-- Similar trigger for PM status changes\nCREATE OR REPLACE FUNCTION public.log_pm_status_change()\nRETURNS trigger\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path = 'public'\nAS $$\nBEGIN\n  -- Only log if status actually changed and it's not a revert operation\n  IF OLD.status IS DISTINCT FROM NEW.status \n     AND NOT EXISTS (\n       SELECT 1 FROM pm_status_history \n       WHERE pm_id = NEW.id \n       AND changed_at > now() - interval '1 second'\n       AND changed_by = auth.uid()\n     ) THEN\n    INSERT INTO pm_status_history (\n      pm_id, old_status, new_status, changed_by, reason\n    ) VALUES (\n      NEW.id, OLD.status, NEW.status, auth.uid(), 'Status updated'\n    );\n  END IF;\n  \n  RETURN NEW;\nEND;\n$$;\n\n-- Create trigger for PM status changes\nDROP TRIGGER IF EXISTS pm_status_change_trigger ON preventative_maintenance;\nCREATE TRIGGER pm_status_change_trigger\n  AFTER UPDATE ON preventative_maintenance\n  FOR EACH ROW\n  EXECUTE FUNCTION log_pm_status_change();"}		viral.architect@gmail.com	\N
20250718084236	{"-- Enable real-time for organization_members table\nALTER TABLE public.organization_members REPLICA IDENTITY FULL;\nALTER PUBLICATION supabase_realtime ADD TABLE public.organization_members;\n\n-- Enable real-time for profiles table  \nALTER TABLE public.profiles REPLICA IDENTITY FULL;\nALTER PUBLICATION supabase_realtime ADD TABLE public.profiles;\n\n-- Enable real-time for organization_slots table for license availability updates\nALTER TABLE public.organization_slots REPLICA IDENTITY FULL;\nALTER PUBLICATION supabase_realtime ADD TABLE public.organization_slots;"}		viral.architect@gmail.com	\N
20250718111936	{"\n-- Update equipment RLS policy to enforce team-based access\n-- Drop existing policies that only check organization membership\nDROP POLICY IF EXISTS \\"members_view_equipment\\" ON equipment;\n\n-- Create new team-aware policy for viewing equipment\nCREATE POLICY \\"team_members_view_equipment\\" \n  ON equipment \n  FOR SELECT \n  USING (\n    -- Organization admins can see all equipment in their org\n    is_org_admin(auth.uid(), organization_id)\n    OR\n    -- Team members can only see equipment assigned to their teams\n    (\n      is_org_member(auth.uid(), organization_id) \n      AND (\n        team_id IS NULL -- Unassigned equipment visible to all org members\n        OR \n        team_id IN (\n          SELECT tm.team_id \n          FROM team_members tm \n          WHERE tm.user_id = auth.uid()\n        )\n      )\n    )\n  );\n\n-- Update equipment insert policy to be team-aware\nDROP POLICY IF EXISTS \\"members_create_equipment\\" ON equipment;\n\nCREATE POLICY \\"team_members_create_equipment\\"\n  ON equipment\n  FOR INSERT\n  WITH CHECK (\n    -- Must be organization member\n    is_org_member(auth.uid(), organization_id)\n    AND (\n      -- Either creating unassigned equipment\n      team_id IS NULL\n      OR\n      -- Or assigning to a team the user belongs to (or is admin)\n      is_org_admin(auth.uid(), organization_id)\n      OR\n      team_id IN (\n        SELECT tm.team_id \n        FROM team_members tm \n        WHERE tm.user_id = auth.uid()\n      )\n    )\n  );\n"}		viral.architect@gmail.com	\N
20250718112628	{"\n-- Update the team-based equipment access policy to be more restrictive\n-- Drop the current policy that allows all org members to see unassigned equipment\nDROP POLICY IF EXISTS \\"team_members_view_equipment\\" ON equipment;\n\n-- Create a more restrictive policy where only admins can see unassigned equipment\nCREATE POLICY \\"team_members_view_equipment\\" \n  ON equipment \n  FOR SELECT \n  USING (\n    -- Organization admins can see all equipment in their org\n    is_org_admin(auth.uid(), organization_id)\n    OR\n    -- Team members can only see equipment assigned to their specific teams\n    (\n      is_org_member(auth.uid(), organization_id) \n      AND team_id IS NOT NULL\n      AND team_id IN (\n        SELECT tm.team_id \n        FROM team_members tm \n        WHERE tm.user_id = auth.uid()\n      )\n    )\n  );\n"}		viral.architect@gmail.com	\N
20250719010306	{"\n-- Update the team-based equipment creation policy to be more restrictive\n-- Drop the current policy that allows all org members to create equipment\nDROP POLICY IF EXISTS \\"team_members_create_equipment\\" ON equipment;\n\n-- Create a more restrictive policy for equipment creation\nCREATE POLICY \\"team_members_create_equipment\\" \n  ON equipment \n  FOR INSERT \n  WITH CHECK (\n    -- Organization admins can create equipment and assign to any team or leave unassigned\n    is_org_admin(auth.uid(), organization_id)\n    OR\n    -- Non-admin users must be team managers and must assign to a team they manage\n    (\n      is_org_member(auth.uid(), organization_id) \n      AND team_id IS NOT NULL\n      AND team_id IN (\n        SELECT tm.team_id \n        FROM team_members tm \n        WHERE tm.user_id = auth.uid() \n        AND tm.role = 'manager'\n      )\n    )\n  );\n"}		viral.architect@gmail.com	\N
20250719060837	{"\n-- Step 1: Add author_name and assignee_name fields to preserve user names\nALTER TABLE work_orders \nADD COLUMN IF NOT EXISTS created_by_name TEXT,\nADD COLUMN IF NOT EXISTS assignee_name TEXT;\n\nALTER TABLE work_order_notes \nADD COLUMN IF NOT EXISTS author_name TEXT;\n\nALTER TABLE equipment_notes \nADD COLUMN IF NOT EXISTS author_name TEXT;\n\nALTER TABLE work_order_images \nADD COLUMN IF NOT EXISTS uploaded_by_name TEXT;\n\nALTER TABLE equipment_note_images \nADD COLUMN IF NOT EXISTS uploaded_by_name TEXT;\n\n-- Step 2: Create supporting functions\n\n-- Function to get teams where user is the only manager\nCREATE OR REPLACE FUNCTION get_user_managed_teams(user_uuid uuid)\nRETURNS TABLE(team_id uuid, team_name text, organization_id uuid, is_only_manager boolean)\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path = 'public'\nAS $$\nBEGIN\n  RETURN QUERY\n  SELECT \n    t.id as team_id,\n    t.name as team_name,\n    t.organization_id,\n    (\n      SELECT COUNT(*) = 1\n      FROM team_members tm2 \n      WHERE tm2.team_id = t.id \n      AND tm2.role = 'manager'\n    ) as is_only_manager\n  FROM teams t\n  JOIN team_members tm ON t.id = tm.team_id\n  WHERE tm.user_id = user_uuid \n    AND tm.role = 'manager';\nEND;\n$$;\n\n-- Function to preserve user attribution in historical records\nCREATE OR REPLACE FUNCTION preserve_user_attribution(user_uuid uuid)\nRETURNS void\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path = 'public'\nAS $$\nDECLARE\n  user_name TEXT;\nBEGIN\n  -- Get user name from profiles\n  SELECT name INTO user_name \n  FROM profiles \n  WHERE id = user_uuid;\n  \n  IF user_name IS NULL THEN\n    user_name := 'Unknown User';\n  END IF;\n  \n  -- Update work orders created by user\n  UPDATE work_orders \n  SET created_by_name = user_name\n  WHERE created_by = user_uuid \n    AND created_by_name IS NULL;\n  \n  -- Update work orders assigned to user\n  UPDATE work_orders \n  SET assignee_name = user_name\n  WHERE assignee_id = user_uuid \n    AND assignee_name IS NULL;\n  \n  -- Update work order notes\n  UPDATE work_order_notes \n  SET author_name = user_name\n  WHERE author_id = user_uuid \n    AND author_name IS NULL;\n  \n  -- Update equipment notes\n  UPDATE equipment_notes \n  SET author_name = user_name\n  WHERE author_id = user_uuid \n    AND author_name IS NULL;\n  \n  -- Update work order images\n  UPDATE work_order_images \n  SET uploaded_by_name = user_name\n  WHERE uploaded_by = user_uuid \n    AND uploaded_by_name IS NULL;\n  \n  -- Update equipment note images\n  UPDATE equipment_note_images \n  SET uploaded_by_name = user_name\n  WHERE uploaded_by = user_uuid \n    AND uploaded_by_name IS NULL;\nEND;\n$$;\n\n-- Function to handle team manager removal\nCREATE OR REPLACE FUNCTION handle_team_manager_removal(user_uuid uuid, org_id uuid)\nRETURNS jsonb\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path = 'public'\nAS $$\nDECLARE\n  team_record RECORD;\n  org_owner_id uuid;\n  transfer_count INTEGER := 0;\n  result jsonb;\nBEGIN\n  -- Get organization owner\n  SELECT user_id INTO org_owner_id\n  FROM organization_members\n  WHERE organization_id = org_id \n    AND role = 'owner' \n    AND status = 'active'\n  LIMIT 1;\n  \n  IF org_owner_id IS NULL THEN\n    RETURN jsonb_build_object('success', false, 'error', 'No organization owner found');\n  END IF;\n  \n  -- Handle teams where user is the only manager\n  FOR team_record IN \n    SELECT team_id, team_name, is_only_manager\n    FROM get_user_managed_teams(user_uuid)\n    WHERE organization_id = org_id AND is_only_manager = true\n  LOOP\n    -- Add organization owner as manager if not already a member\n    INSERT INTO team_members (team_id, user_id, role)\n    VALUES (team_record.team_id, org_owner_id, 'manager')\n    ON CONFLICT (team_id, user_id) \n    DO UPDATE SET role = 'manager';\n    \n    transfer_count := transfer_count + 1;\n  END LOOP;\n  \n  -- Remove user from all teams in the organization\n  DELETE FROM team_members \n  WHERE user_id = user_uuid \n    AND team_id IN (\n      SELECT id FROM teams WHERE organization_id = org_id\n    );\n  \n  result := jsonb_build_object(\n    'success', true,\n    'teams_transferred', transfer_count,\n    'new_manager_id', org_owner_id\n  );\n  \n  RETURN result;\nEND;\n$$;\n\n-- Main function to remove organization member safely\nCREATE OR REPLACE FUNCTION remove_organization_member_safely(\n  user_uuid uuid, \n  org_id uuid, \n  removed_by uuid\n)\nRETURNS jsonb\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path = 'public'\nAS $$\nDECLARE\n  user_role TEXT;\n  user_name TEXT;\n  owner_count INTEGER;\n  team_result jsonb;\n  result jsonb;\nBEGIN\n  -- Get user details\n  SELECT om.role, p.name \n  INTO user_role, user_name\n  FROM organization_members om\n  JOIN profiles p ON om.user_id = p.id\n  WHERE om.user_id = user_uuid \n    AND om.organization_id = org_id \n    AND om.status = 'active';\n  \n  IF user_role IS NULL THEN\n    RETURN jsonb_build_object('success', false, 'error', 'User is not a member of this organization');\n  END IF;\n  \n  -- Check if this is the last owner\n  IF user_role = 'owner' THEN\n    SELECT COUNT(*) INTO owner_count\n    FROM organization_members\n    WHERE organization_id = org_id \n      AND role = 'owner' \n      AND status = 'active';\n    \n    IF owner_count <= 1 THEN\n      RETURN jsonb_build_object('success', false, 'error', 'Cannot remove the last owner of the organization');\n    END IF;\n  END IF;\n  \n  -- Preserve user attribution in historical records\n  PERFORM preserve_user_attribution(user_uuid);\n  \n  -- Handle team management transfers\n  SELECT handle_team_manager_removal(user_uuid, org_id) INTO team_result;\n  \n  IF NOT (team_result->>'success')::boolean THEN\n    RETURN team_result;\n  END IF;\n  \n  -- Remove user from organization\n  DELETE FROM organization_members\n  WHERE user_id = user_uuid \n    AND organization_id = org_id;\n  \n  -- Create audit log entry\n  INSERT INTO notifications (\n    organization_id,\n    user_id,\n    type,\n    title,\n    message,\n    data\n  ) VALUES (\n    org_id,\n    removed_by,\n    'member_removal',\n    'Member Removed',\n    CONCAT(COALESCE(user_name, 'Unknown User'), ' was removed from the organization'),\n    jsonb_build_object(\n      'removed_user_id', user_uuid,\n      'removed_user_name', user_name,\n      'removed_user_role', user_role,\n      'teams_transferred', team_result->'teams_transferred',\n      'removed_by', removed_by,\n      'timestamp', now()\n    )\n  );\n  \n  result := jsonb_build_object(\n    'success', true,\n    'removed_user_name', user_name,\n    'removed_user_role', user_role,\n    'teams_transferred', team_result->'teams_transferred',\n    'new_manager_id', team_result->'new_manager_id'\n  );\n  \n  RETURN result;\nEND;\n$$;\n\n-- Create audit trail table for member removals\nCREATE TABLE IF NOT EXISTS member_removal_audit (\n  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n  organization_id uuid NOT NULL,\n  removed_user_id uuid NOT NULL,\n  removed_user_name TEXT NOT NULL,\n  removed_user_role TEXT NOT NULL,\n  removed_by uuid NOT NULL,\n  teams_transferred INTEGER DEFAULT 0,\n  new_manager_id uuid,\n  removal_reason TEXT,\n  created_at timestamp with time zone DEFAULT now(),\n  metadata jsonb DEFAULT '{}'::jsonb\n);\n\n-- Enable RLS on audit table\nALTER TABLE member_removal_audit ENABLE ROW LEVEL SECURITY;\n\n-- Allow org admins to view removal audit logs\nCREATE POLICY \\"Org admins can view removal audit\\"\nON member_removal_audit FOR SELECT\nUSING (\n  EXISTS (\n    SELECT 1 FROM organization_members om\n    WHERE om.organization_id = member_removal_audit.organization_id\n      AND om.user_id = auth.uid()\n      AND om.role IN ('owner', 'admin')\n      AND om.status = 'active'\n  )\n);\n\n-- Allow system to insert audit logs\nCREATE POLICY \\"System can insert removal audit\\"\nON member_removal_audit FOR INSERT\nWITH CHECK (true);\n"}		viral.architect@gmail.com	\N
20250719080150	{"\n-- Add logo and background_color columns to organizations table\nALTER TABLE public.organizations \nADD COLUMN logo TEXT,\nADD COLUMN background_color TEXT;\n\n-- Add comment for documentation\nCOMMENT ON COLUMN public.organizations.logo IS 'URL or path to organization logo image';\nCOMMENT ON COLUMN public.organizations.background_color IS 'Hex color code for organization branding (e.g., #ff0000)';\n"}		viral.architect@gmail.com	\N
20250721034001	{"\n-- Create billing_exemptions table\nCREATE TABLE public.billing_exemptions (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  organization_id UUID NOT NULL REFERENCES public.organizations(id) ON DELETE CASCADE,\n  exemption_type TEXT NOT NULL DEFAULT 'user_licenses',\n  exemption_value INTEGER NOT NULL DEFAULT 0,\n  reason TEXT,\n  granted_by UUID REFERENCES auth.users(id),\n  granted_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  expires_at TIMESTAMP WITH TIME ZONE,\n  is_active BOOLEAN NOT NULL DEFAULT true,\n  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n  \n  -- Ensure only one active exemption per organization per type\n  CONSTRAINT unique_active_exemption UNIQUE (organization_id, exemption_type, is_active)\n);\n\n-- Enable RLS\nALTER TABLE public.billing_exemptions ENABLE ROW LEVEL SECURITY;\n\n-- Create policies for billing exemptions\nCREATE POLICY \\"org_admins_view_exemptions\\" \nON public.billing_exemptions \nFOR SELECT \nUSING (\n  EXISTS (\n    SELECT 1 FROM public.organization_members om\n    WHERE om.organization_id = billing_exemptions.organization_id\n      AND om.user_id = auth.uid()\n      AND om.role IN ('owner', 'admin')\n      AND om.status = 'active'\n  )\n);\n\nCREATE POLICY \\"system_manage_exemptions\\" \nON public.billing_exemptions \nFOR ALL \nUSING (true)\nWITH CHECK (true);\n\n-- Grant the exemption to Matt's organization\nINSERT INTO public.billing_exemptions (\n  organization_id,\n  exemption_type,\n  exemption_value,\n  reason,\n  granted_at\n) \nSELECT \n  o.id,\n  'user_licenses',\n  2,\n  'Special arrangement - 2 free user licenses',\n  now()\nFROM public.organizations o\nJOIN public.organization_members om ON o.id = om.organization_id\nJOIN public.profiles p ON om.user_id = p.id\nWHERE p.email = 'matt@3aequip.com'\n  AND om.role = 'owner'\n  AND om.status = 'active';\n\n-- Create function to get organization exemptions\nCREATE OR REPLACE FUNCTION public.get_organization_exemptions(org_id UUID)\nRETURNS TABLE(\n  exemption_type TEXT,\n  exemption_value INTEGER,\n  reason TEXT,\n  expires_at TIMESTAMP WITH TIME ZONE\n)\nLANGUAGE SQL\nSTABLE SECURITY DEFINER\nSET search_path TO 'public'\nAS $$\n  SELECT \n    be.exemption_type,\n    be.exemption_value,\n    be.reason,\n    be.expires_at\n  FROM public.billing_exemptions be\n  WHERE be.organization_id = org_id\n    AND be.is_active = true\n    AND (be.expires_at IS NULL OR be.expires_at > now());\n$$;\n\n-- Update the license billing calculation function to include exemptions\nCREATE OR REPLACE FUNCTION public.get_organization_slot_availability_with_exemptions(org_id UUID)\nRETURNS TABLE(\n  total_purchased INTEGER,\n  used_slots INTEGER,\n  available_slots INTEGER,\n  exempted_slots INTEGER,\n  current_period_start TIMESTAMP WITH TIME ZONE,\n  current_period_end TIMESTAMP WITH TIME ZONE\n)\nLANGUAGE PLPGSQL\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  active_slot_record RECORD;\n  actual_used_slots INTEGER;\n  exemption_value INTEGER DEFAULT 0;\nBEGIN\n  -- Get active exemptions\n  SELECT COALESCE(SUM(be.exemption_value), 0)::INTEGER INTO exemption_value\n  FROM public.billing_exemptions be\n  WHERE be.organization_id = org_id\n    AND be.exemption_type = 'user_licenses'\n    AND be.is_active = true\n    AND (be.expires_at IS NULL OR be.expires_at > now());\n    \n  -- Find currently active purchased slots\n  SELECT \n    COALESCE(SUM(os.purchased_slots), 0)::INTEGER as total_purchased,\n    MIN(os.billing_period_start) as period_start,\n    MAX(os.billing_period_end) as period_end\n  INTO active_slot_record\n  FROM public.organization_slots os\n  WHERE os.organization_id = org_id\n    AND os.billing_period_start <= now()\n    AND os.billing_period_end >= now();\n    \n  -- Count actual active members (excluding owners from billing)\n  SELECT COUNT(*)::INTEGER INTO actual_used_slots\n  FROM public.organization_members om\n  WHERE om.organization_id = org_id \n    AND om.status = 'active'\n    AND om.role IN ('admin', 'member');\n    \n  -- Calculate totals including exemptions\n  total_purchased := COALESCE(active_slot_record.total_purchased, 0);\n  used_slots := actual_used_slots;\n  exempted_slots := exemption_value;\n  available_slots := GREATEST(0, total_purchased + exempted_slots - actual_used_slots);\n  current_period_start := COALESCE(active_slot_record.period_start, now());\n  current_period_end := COALESCE(active_slot_record.period_end, now());\n  \n  RETURN NEXT;\nEND;\n$$;\n"}		viral.architect@gmail.com	\N
20250724021424	{"-- Add working_hours column to equipment table\nALTER TABLE public.equipment \nADD COLUMN working_hours numeric DEFAULT 0;\n\n-- Create equipment_working_hours_history table\nCREATE TABLE public.equipment_working_hours_history (\n  id uuid NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n  equipment_id uuid NOT NULL,\n  old_hours numeric,\n  new_hours numeric NOT NULL,\n  hours_added numeric,\n  updated_by uuid NOT NULL,\n  updated_by_name text,\n  update_source text NOT NULL DEFAULT 'manual', -- 'manual' or 'work_order'\n  work_order_id uuid,\n  notes text,\n  created_at timestamp with time zone NOT NULL DEFAULT now()\n);\n\n-- Enable Row Level Security\nALTER TABLE public.equipment_working_hours_history ENABLE ROW LEVEL SECURITY;\n\n-- Create policies for equipment_working_hours_history\nCREATE POLICY \\"Users can view working hours history for accessible equipment\\"\nON public.equipment_working_hours_history\nFOR SELECT\nUSING (\n  EXISTS (\n    SELECT 1 FROM public.equipment e\n    WHERE e.id = equipment_working_hours_history.equipment_id\n    AND (\n      is_org_admin(auth.uid(), e.organization_id) \n      OR (\n        is_org_member(auth.uid(), e.organization_id) \n        AND e.team_id IS NOT NULL \n        AND e.team_id IN (\n          SELECT tm.team_id FROM public.team_members tm \n          WHERE tm.user_id = auth.uid()\n        )\n      )\n    )\n  )\n);\n\nCREATE POLICY \\"Users can create working hours history for accessible equipment\\"\nON public.equipment_working_hours_history\nFOR INSERT\nWITH CHECK (\n  updated_by = auth.uid() \n  AND EXISTS (\n    SELECT 1 FROM public.equipment e\n    WHERE e.id = equipment_working_hours_history.equipment_id\n    AND (\n      is_org_admin(auth.uid(), e.organization_id) \n      OR (\n        is_org_member(auth.uid(), e.organization_id) \n        AND e.team_id IS NOT NULL \n        AND e.team_id IN (\n          SELECT tm.team_id FROM public.team_members tm \n          WHERE tm.user_id = auth.uid()\n        )\n      )\n    )\n  )\n);\n\n-- Create function to update equipment working hours with history\nCREATE OR REPLACE FUNCTION public.update_equipment_working_hours(\n  p_equipment_id uuid,\n  p_new_hours numeric,\n  p_update_source text DEFAULT 'manual',\n  p_work_order_id uuid DEFAULT NULL,\n  p_notes text DEFAULT NULL\n)\nRETURNS jsonb\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  current_hours numeric;\n  user_name text;\n  org_id uuid;\n  result jsonb;\nBEGIN\n  -- Get current hours and organization\n  SELECT working_hours, organization_id INTO current_hours, org_id\n  FROM equipment\n  WHERE id = p_equipment_id;\n  \n  IF NOT FOUND THEN\n    RETURN jsonb_build_object('success', false, 'error', 'Equipment not found');\n  END IF;\n  \n  -- Check permissions\n  IF NOT (\n    is_org_admin(auth.uid(), org_id) \n    OR (\n      is_org_member(auth.uid(), org_id) \n      AND EXISTS (\n        SELECT 1 FROM equipment e\n        WHERE e.id = p_equipment_id\n        AND e.team_id IS NOT NULL \n        AND e.team_id IN (\n          SELECT tm.team_id FROM team_members tm \n          WHERE tm.user_id = auth.uid()\n        )\n      )\n    )\n  ) THEN\n    RETURN jsonb_build_object('success', false, 'error', 'Permission denied');\n  END IF;\n  \n  -- Get user name\n  SELECT name INTO user_name FROM profiles WHERE id = auth.uid();\n  \n  -- Update equipment working hours\n  UPDATE equipment \n  SET \n    working_hours = p_new_hours,\n    updated_at = now()\n  WHERE id = p_equipment_id;\n  \n  -- Create history entry\n  INSERT INTO equipment_working_hours_history (\n    equipment_id,\n    old_hours,\n    new_hours,\n    hours_added,\n    updated_by,\n    updated_by_name,\n    update_source,\n    work_order_id,\n    notes\n  ) VALUES (\n    p_equipment_id,\n    current_hours,\n    p_new_hours,\n    p_new_hours - COALESCE(current_hours, 0),\n    auth.uid(),\n    user_name,\n    p_update_source,\n    p_work_order_id,\n    p_notes\n  );\n  \n  RETURN jsonb_build_object(\n    'success', true,\n    'old_hours', current_hours,\n    'new_hours', p_new_hours,\n    'hours_added', p_new_hours - COALESCE(current_hours, 0)\n  );\nEND;\n$$;"}		viral.architect@gmail.com	\N
20250724021451	{"-- Add missing UPDATE and DELETE policies for equipment_working_hours_history\nCREATE POLICY \\"Admins can update working hours history\\"\nON public.equipment_working_hours_history\nFOR UPDATE\nUSING (\n  EXISTS (\n    SELECT 1 FROM public.equipment e\n    WHERE e.id = equipment_working_hours_history.equipment_id\n    AND is_org_admin(auth.uid(), e.organization_id)\n  )\n);\n\nCREATE POLICY \\"Admins can delete working hours history\\"\nON public.equipment_working_hours_history\nFOR DELETE\nUSING (\n  EXISTS (\n    SELECT 1 FROM public.equipment e\n    WHERE e.id = equipment_working_hours_history.equipment_id\n    AND is_org_admin(auth.uid(), e.organization_id)\n  )\n);"}		viral.architect@gmail.com	\N
20250731083231	{"-- Add support for historical work orders\nALTER TABLE work_orders \nADD COLUMN is_historical BOOLEAN NOT NULL DEFAULT false,\nADD COLUMN historical_start_date TIMESTAMP WITH TIME ZONE,\nADD COLUMN historical_notes TEXT,\nADD COLUMN created_by_admin UUID REFERENCES auth.users(id);\n\n-- Add historical PM support\nALTER TABLE preventative_maintenance\nADD COLUMN is_historical BOOLEAN NOT NULL DEFAULT false,\nADD COLUMN historical_completion_date TIMESTAMP WITH TIME ZONE,\nADD COLUMN historical_notes TEXT;\n\n-- Create index for better performance on historical queries\nCREATE INDEX idx_work_orders_historical ON work_orders(is_historical, organization_id);\nCREATE INDEX idx_pm_historical ON preventative_maintenance(is_historical, organization_id);\n\n-- Update work order status history to track historical creation\nALTER TABLE work_order_status_history\nADD COLUMN is_historical_creation BOOLEAN DEFAULT false;\n\n-- Add PM status history for historical tracking\nCREATE TABLE IF NOT EXISTS pm_status_history (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    pm_id UUID NOT NULL REFERENCES preventative_maintenance(id) ON DELETE CASCADE,\n    old_status TEXT,\n    new_status TEXT NOT NULL,\n    changed_by UUID NOT NULL REFERENCES auth.users(id),\n    changed_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),\n    reason TEXT,\n    metadata JSONB DEFAULT '{}',\n    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()\n);\n\n-- Create RLS policies for historical work orders\nCREATE POLICY \\"Admins can create historical work orders\\" \nON work_orders \nFOR INSERT \nWITH CHECK (\n    is_historical = true AND \n    is_org_admin(auth.uid(), organization_id) AND\n    created_by_admin = auth.uid()\n);\n\nCREATE POLICY \\"Admins can update historical work orders\\" \nON work_orders \nFOR UPDATE \nUSING (\n    is_historical = true AND \n    is_org_admin(auth.uid(), organization_id)\n);\n\n-- RLS policies for historical PM records\nCREATE POLICY \\"Admins can create historical PM\\" \nON preventative_maintenance \nFOR INSERT \nWITH CHECK (\n    is_historical = true AND \n    is_org_admin(auth.uid(), organization_id)\n);\n\nCREATE POLICY \\"Admins can update historical PM\\" \nON preventative_maintenance \nFOR UPDATE \nUSING (\n    is_historical = true AND \n    is_org_admin(auth.uid(), organization_id)\n);\n\n-- Function to create historical work order with PM\nCREATE OR REPLACE FUNCTION create_historical_work_order_with_pm(\n    p_organization_id UUID,\n    p_equipment_id UUID,\n    p_title TEXT,\n    p_description TEXT,\n    p_priority work_order_priority,\n    p_status work_order_status,\n    p_historical_start_date TIMESTAMP WITH TIME ZONE,\n    p_historical_notes TEXT DEFAULT NULL,\n    p_assignee_id UUID DEFAULT NULL,\n    p_team_id UUID DEFAULT NULL,\n    p_due_date TIMESTAMP WITH TIME ZONE DEFAULT NULL,\n    p_completed_date TIMESTAMP WITH TIME ZONE DEFAULT NULL,\n    p_has_pm BOOLEAN DEFAULT false,\n    p_pm_status TEXT DEFAULT 'pending',\n    p_pm_completion_date TIMESTAMP WITH TIME ZONE DEFAULT NULL,\n    p_pm_notes TEXT DEFAULT NULL,\n    p_pm_checklist_data JSONB DEFAULT '[]'\n) RETURNS JSONB\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n    work_order_id UUID;\n    pm_id UUID;\n    result JSONB;\nBEGIN\n    -- Check if user is admin\n    IF NOT is_org_admin(auth.uid(), p_organization_id) THEN\n        RETURN jsonb_build_object('success', false, 'error', 'Permission denied');\n    END IF;\n    \n    -- Create historical work order\n    INSERT INTO work_orders (\n        organization_id,\n        equipment_id,\n        title,\n        description,\n        priority,\n        status,\n        assignee_id,\n        team_id,\n        due_date,\n        completed_date,\n        is_historical,\n        historical_start_date,\n        historical_notes,\n        created_by_admin,\n        created_by,\n        created_date\n    ) VALUES (\n        p_organization_id,\n        p_equipment_id,\n        p_title,\n        p_description,\n        p_priority,\n        p_status,\n        p_assignee_id,\n        p_team_id,\n        p_due_date,\n        p_completed_date,\n        true,\n        p_historical_start_date,\n        p_historical_notes,\n        auth.uid(),\n        auth.uid(),\n        p_historical_start_date\n    ) RETURNING id INTO work_order_id;\n    \n    -- Create PM if requested\n    IF p_has_pm THEN\n        INSERT INTO preventative_maintenance (\n            work_order_id,\n            equipment_id,\n            organization_id,\n            status,\n            completed_at,\n            completed_by,\n            notes,\n            checklist_data,\n            is_historical,\n            historical_completion_date,\n            historical_notes,\n            created_by\n        ) VALUES (\n            work_order_id,\n            p_equipment_id,\n            p_organization_id,\n            p_pm_status,\n            CASE WHEN p_pm_status = 'completed' THEN COALESCE(p_pm_completion_date, p_completed_date) ELSE NULL END,\n            CASE WHEN p_pm_status = 'completed' THEN auth.uid() ELSE NULL END,\n            p_pm_notes,\n            p_pm_checklist_data,\n            true,\n            p_pm_completion_date,\n            CONCAT('Historical PM - ', p_pm_notes),\n            auth.uid()\n        ) RETURNING id INTO pm_id;\n    END IF;\n    \n    -- Create status history entry\n    INSERT INTO work_order_status_history (\n        work_order_id,\n        old_status,\n        new_status,\n        changed_by,\n        reason,\n        is_historical_creation,\n        metadata\n    ) VALUES (\n        work_order_id,\n        NULL,\n        p_status,\n        auth.uid(),\n        'Historical work order created',\n        true,\n        jsonb_build_object(\n            'historical_start_date', p_historical_start_date,\n            'has_pm', p_has_pm,\n            'pm_id', pm_id\n        )\n    );\n    \n    result := jsonb_build_object(\n        'success', true,\n        'work_order_id', work_order_id,\n        'pm_id', pm_id,\n        'has_pm', p_has_pm\n    );\n    \n    RETURN result;\nEND;\n$$;"}		viral.architect@gmail.com	\N
20250731083312	{"-- Add RLS policies for pm_status_history table\nCREATE POLICY \\"Admins can insert PM status history\\" \nON pm_status_history \nFOR INSERT \nWITH CHECK (\n    EXISTS (\n        SELECT 1 FROM preventative_maintenance pm\n        WHERE pm.id = pm_status_history.pm_id \n        AND is_org_admin(auth.uid(), pm.organization_id)\n    ) AND changed_by = auth.uid()\n);\n\nCREATE POLICY \\"Users can view PM status history for their organization\\" \nON pm_status_history \nFOR SELECT \nUSING (\n    EXISTS (\n        SELECT 1 FROM preventative_maintenance pm\n        WHERE pm.id = pm_status_history.pm_id \n        AND is_org_member(auth.uid(), pm.organization_id)\n    )\n);"}		viral.architect@gmail.com	\N
20250731110630	{"-- Fix the create_historical_work_order_with_pm function to properly handle PM checklists\nCREATE OR REPLACE FUNCTION public.create_historical_work_order_with_pm(\n    p_organization_id uuid, \n    p_equipment_id uuid, \n    p_title text, \n    p_description text, \n    p_priority work_order_priority, \n    p_status work_order_status, \n    p_historical_start_date timestamp with time zone, \n    p_historical_notes text DEFAULT NULL::text, \n    p_assignee_id uuid DEFAULT NULL::uuid, \n    p_team_id uuid DEFAULT NULL::uuid, \n    p_due_date timestamp with time zone DEFAULT NULL::timestamp with time zone, \n    p_completed_date timestamp with time zone DEFAULT NULL::timestamp with time zone, \n    p_has_pm boolean DEFAULT false, \n    p_pm_status text DEFAULT 'pending'::text, \n    p_pm_completion_date timestamp with time zone DEFAULT NULL::timestamp with time zone, \n    p_pm_notes text DEFAULT NULL::text, \n    p_pm_checklist_data jsonb DEFAULT '[]'::jsonb\n)\nRETURNS jsonb\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $function$\nDECLARE\n    work_order_id UUID;\n    pm_id UUID;\n    result JSONB;\n    default_checklist JSONB;\nBEGIN\n    -- Check if user is admin\n    IF NOT is_org_admin(auth.uid(), p_organization_id) THEN\n        RETURN jsonb_build_object('success', false, 'error', 'Permission denied');\n    END IF;\n    \n    -- Create historical work order with has_pm field\n    INSERT INTO work_orders (\n        organization_id,\n        equipment_id,\n        title,\n        description,\n        priority,\n        status,\n        assignee_id,\n        team_id,\n        due_date,\n        completed_date,\n        has_pm,  -- ADD THIS FIELD\n        is_historical,\n        historical_start_date,\n        historical_notes,\n        created_by_admin,\n        created_by,\n        created_date\n    ) VALUES (\n        p_organization_id,\n        p_equipment_id,\n        p_title,\n        p_description,\n        p_priority,\n        p_status,\n        p_assignee_id,\n        p_team_id,\n        p_due_date,\n        p_completed_date,\n        p_has_pm,  -- SET THE VALUE\n        true,\n        p_historical_start_date,\n        p_historical_notes,\n        auth.uid(),\n        auth.uid(),\n        p_historical_start_date\n    ) RETURNING id INTO work_order_id;\n    \n    -- Create PM if requested\n    IF p_has_pm THEN\n        -- Use default forklift checklist if no checklist data provided or empty\n        IF p_pm_checklist_data IS NULL OR jsonb_array_length(p_pm_checklist_data) = 0 THEN\n            -- Default forklift PM checklist\n            default_checklist := '[\n                {\\"id\\": \\"visual_001\\", \\"title\\": \\"Mast and Forks\\", \\"description\\": \\"Check mast for damage, cracks, or bent components. Inspect forks for cracks, bends, or excessive wear.\\", \\"condition\\": \\"good\\", \\"required\\": true, \\"section\\": \\"Visual Inspection\\", \\"completed\\": false},\n                {\\"id\\": \\"visual_002\\", \\"title\\": \\"Hydraulic System\\", \\"description\\": \\"Check for hydraulic fluid leaks around cylinders, hoses, and fittings.\\", \\"condition\\": \\"good\\", \\"required\\": true, \\"section\\": \\"Visual Inspection\\", \\"completed\\": false},\n                {\\"id\\": \\"visual_003\\", \\"title\\": \\"Tires and Wheels\\", \\"description\\": \\"Inspect tires for wear, cuts, or embedded objects. Check wheel bolts for tightness.\\", \\"condition\\": \\"good\\", \\"required\\": true, \\"section\\": \\"Visual Inspection\\", \\"completed\\": false},\n                {\\"id\\": \\"visual_004\\", \\"title\\": \\"Overhead Guard\\", \\"description\\": \\"Check overhead guard for damage, cracks, or loose bolts.\\", \\"condition\\": \\"good\\", \\"required\\": true, \\"section\\": \\"Visual Inspection\\", \\"completed\\": false},\n                {\\"id\\": \\"visual_005\\", \\"title\\": \\"Load Backrest\\", \\"description\\": \\"Inspect load backrest for damage and proper attachment.\\", \\"condition\\": \\"good\\", \\"required\\": true, \\"section\\": \\"Visual Inspection\\", \\"completed\\": false},\n                {\\"id\\": \\"engine_001\\", \\"title\\": \\"Engine Oil Level\\", \\"description\\": \\"Check engine oil level and top off if necessary. Look for leaks.\\", \\"condition\\": \\"good\\", \\"required\\": true, \\"section\\": \\"Engine Compartment\\", \\"completed\\": false},\n                {\\"id\\": \\"engine_002\\", \\"title\\": \\"Coolant Level\\", \\"description\\": \\"Check radiator coolant level and condition. Look for leaks.\\", \\"condition\\": \\"good\\", \\"required\\": true, \\"section\\": \\"Engine Compartment\\", \\"completed\\": false},\n                {\\"id\\": \\"engine_003\\", \\"title\\": \\"Air Filter\\", \\"description\\": \\"Inspect air filter for dirt and debris. Replace if necessary.\\", \\"condition\\": \\"good\\", \\"required\\": true, \\"section\\": \\"Engine Compartment\\", \\"completed\\": false},\n                {\\"id\\": \\"engine_004\\", \\"title\\": \\"Belt Condition\\", \\"description\\": \\"Check drive belts for proper tension, cracks, or fraying.\\", \\"condition\\": \\"good\\", \\"required\\": true, \\"section\\": \\"Engine Compartment\\", \\"completed\\": false},\n                {\\"id\\": \\"engine_005\\", \\"title\\": \\"Battery\\", \\"description\\": \\"Check battery terminals for corrosion and ensure secure connections.\\", \\"condition\\": \\"good\\", \\"required\\": true, \\"section\\": \\"Engine Compartment\\", \\"completed\\": false},\n                {\\"id\\": \\"electrical_001\\", \\"title\\": \\"Warning Lights\\", \\"description\\": \\"Test all warning lights and indicators on the dashboard.\\", \\"condition\\": \\"good\\", \\"required\\": true, \\"section\\": \\"Electrical Inspection\\", \\"completed\\": false},\n                {\\"id\\": \\"electrical_002\\", \\"title\\": \\"Horn\\", \\"description\\": \\"Test horn operation for proper sound and function.\\", \\"condition\\": \\"good\\", \\"required\\": true, \\"section\\": \\"Electrical Inspection\\", \\"completed\\": false},\n                {\\"id\\": \\"electrical_003\\", \\"title\\": \\"Work Lights\\", \\"description\\": \\"Test all work lights for proper operation.\\", \\"condition\\": \\"good\\", \\"required\\": true, \\"section\\": \\"Electrical Inspection\\", \\"completed\\": false},\n                {\\"id\\": \\"operational_001\\", \\"title\\": \\"Steering\\", \\"description\\": \\"Test steering for smooth operation and proper response.\\", \\"condition\\": \\"good\\", \\"required\\": true, \\"section\\": \\"Operational Check\\", \\"completed\\": false},\n                {\\"id\\": \\"operational_002\\", \\"title\\": \\"Brakes\\", \\"description\\": \\"Test service and parking brake operation.\\", \\"condition\\": \\"good\\", \\"required\\": true, \\"section\\": \\"Operational Check\\", \\"completed\\": false},\n                {\\"id\\": \\"operational_003\\", \\"title\\": \\"Hydraulic Functions\\", \\"description\\": \\"Test lift, lower, tilt, and side shift functions for smooth operation.\\", \\"condition\\": \\"good\\", \\"required\\": true, \\"section\\": \\"Operational Check\\", \\"completed\\": false},\n                {\\"id\\": \\"operational_004\\", \\"title\\": \\"Transmission\\", \\"description\\": \\"Test forward and reverse operation for smooth engagement.\\", \\"condition\\": \\"good\\", \\"required\\": true, \\"section\\": \\"Operational Check\\", \\"completed\\": false},\n                {\\"id\\": \\"safety_001\\", \\"title\\": \\"Seat Belt\\", \\"description\\": \\"Check seat belt for proper operation and condition.\\", \\"condition\\": \\"good\\", \\"required\\": true, \\"section\\": \\"Safety Features\\", \\"completed\\": false},\n                {\\"id\\": \\"safety_002\\", \\"title\\": \\"Dead Man Switch\\", \\"description\\": \\"Test operator presence system and dead man switch.\\", \\"condition\\": \\"good\\", \\"required\\": true, \\"section\\": \\"Safety Features\\", \\"completed\\": false},\n                {\\"id\\": \\"safety_003\\", \\"title\\": \\"Load Capacity Plate\\", \\"description\\": \\"Verify load capacity plate is visible and legible.\\", \\"condition\\": \\"good\\", \\"required\\": true, \\"section\\": \\"Safety Features\\", \\"completed\\": false}\n            ]'::jsonb;\n        ELSE\n            default_checklist := p_pm_checklist_data;\n        END IF;\n        \n        INSERT INTO preventative_maintenance (\n            work_order_id,\n            equipment_id,\n            organization_id,\n            status,\n            completed_at,\n            completed_by,\n            notes,\n            checklist_data,\n            is_historical,\n            historical_completion_date,\n            historical_notes,\n            created_by\n        ) VALUES (\n            work_order_id,\n            p_equipment_id,\n            p_organization_id,\n            p_pm_status,\n            CASE WHEN p_pm_status = 'completed' THEN COALESCE(p_pm_completion_date, p_completed_date) ELSE NULL END,\n            CASE WHEN p_pm_status = 'completed' THEN auth.uid() ELSE NULL END,\n            p_pm_notes,\n            default_checklist,  -- Use the checklist (default or provided)\n            true,\n            p_pm_completion_date,\n            CONCAT('Historical PM - ', p_pm_notes),\n            auth.uid()\n        ) RETURNING id INTO pm_id;\n    END IF;\n    \n    -- Create status history entry\n    INSERT INTO work_order_status_history (\n        work_order_id,\n        old_status,\n        new_status,\n        changed_by,\n        reason,\n        is_historical_creation,\n        metadata\n    ) VALUES (\n        work_order_id,\n        NULL,\n        p_status,\n        auth.uid(),\n        'Historical work order created',\n        true,\n        jsonb_build_object(\n            'historical_start_date', p_historical_start_date,\n            'has_pm', p_has_pm,\n            'pm_id', pm_id\n        )\n    );\n    \n    result := jsonb_build_object(\n        'success', true,\n        'work_order_id', work_order_id,\n        'pm_id', pm_id,\n        'has_pm', p_has_pm\n    );\n    \n    RETURN result;\n    \nEXCEPTION WHEN OTHERS THEN\n    RETURN jsonb_build_object(\n        'success', false, \n        'error', 'Failed to create historical work order: ' || SQLERRM\n    );\nEND;\n$function$;"}		viral.architect@gmail.com	\N
20250805030254	{"-- Remove the incorrect team_id column from work_orders table\n-- Work orders should get team information through equipment assignment, not direct team assignment\n\n-- First, remove any indexes that reference the team_id column\nDROP INDEX IF EXISTS idx_work_orders_team_id;\nDROP INDEX IF EXISTS idx_work_orders_team_status;\n\n-- Remove the team_id column from work_orders table\nALTER TABLE work_orders DROP COLUMN IF EXISTS team_id;"}		viral.architect@gmail.com	\N
20250810113836	{"-- Update the remove_organization_member_safely function to use 'general' notification type\nCREATE OR REPLACE FUNCTION public.remove_organization_member_safely(user_uuid uuid, org_id uuid, removed_by uuid)\n RETURNS jsonb\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path TO 'public'\nAS $function$\nDECLARE\n  user_role TEXT;\n  user_name TEXT;\n  owner_count INTEGER;\n  team_result jsonb;\n  result jsonb;\nBEGIN\n  -- Get user details\n  SELECT om.role, p.name \n  INTO user_role, user_name\n  FROM organization_members om\n  JOIN profiles p ON om.user_id = p.id\n  WHERE om.user_id = user_uuid \n    AND om.organization_id = org_id \n    AND om.status = 'active';\n  \n  IF user_role IS NULL THEN\n    RETURN jsonb_build_object('success', false, 'error', 'User is not a member of this organization');\n  END IF;\n  \n  -- Check if this is the last owner\n  IF user_role = 'owner' THEN\n    SELECT COUNT(*) INTO owner_count\n    FROM organization_members\n    WHERE organization_id = org_id \n      AND role = 'owner' \n      AND status = 'active';\n    \n    IF owner_count <= 1 THEN\n      RETURN jsonb_build_object('success', false, 'error', 'Cannot remove the last owner of the organization');\n    END IF;\n  END IF;\n  \n  -- Preserve user attribution in historical records\n  PERFORM preserve_user_attribution(user_uuid);\n  \n  -- Handle team management transfers\n  SELECT handle_team_manager_removal(user_uuid, org_id) INTO team_result;\n  \n  IF NOT (team_result->>'success')::boolean THEN\n    RETURN team_result;\n  END IF;\n  \n  -- Remove user from organization\n  DELETE FROM organization_members\n  WHERE user_id = user_uuid \n    AND organization_id = org_id;\n  \n  -- Create audit log entry with 'general' notification type\n  INSERT INTO notifications (\n    organization_id,\n    user_id,\n    type,\n    title,\n    message,\n    data\n  ) VALUES (\n    org_id,\n    removed_by,\n    'general',\n    'Member Removed',\n    CONCAT(COALESCE(user_name, 'Unknown User'), ' was removed from the organization'),\n    jsonb_build_object(\n      'removed_user_id', user_uuid,\n      'removed_user_name', user_name,\n      'removed_user_role', user_role,\n      'teams_transferred', team_result->'teams_transferred',\n      'removed_by', removed_by,\n      'timestamp', now()\n    )\n  );\n  \n  result := jsonb_build_object(\n    'success', true,\n    'removed_user_name', user_name,\n    'removed_user_role', user_role,\n    'teams_transferred', team_result->'teams_transferred',\n    'new_manager_id', team_result->'new_manager_id'\n  );\n  \n  RETURN result;\nEND;\n$function$;"}		viral.architect@gmail.com	\N
20250811022118	{"-- Fix billing_exemptions security issue by removing overly permissive policy\n-- and ensuring only organization admins can access exemption data\n\n-- Drop the overly permissive system_manage_exemptions policy\nDROP POLICY IF EXISTS \\"system_manage_exemptions\\" ON public.billing_exemptions;\n\n-- Create more secure system policies with correct syntax\n-- System can only insert exemptions (for automated processes)\nCREATE POLICY \\"system_insert_exemptions\\" ON public.billing_exemptions\nFOR INSERT \nWITH CHECK (true);\n\n-- System can only update exemptions (for automated processes)  \nCREATE POLICY \\"system_update_exemptions\\" ON public.billing_exemptions  \nFOR UPDATE\nUSING (true);\n\n-- Ensure the existing admin policy is the only way to read exemption data\n-- (The org_admins_view_exemptions policy already correctly restricts reads to org admins)\n\n-- Add a comment to document the security fix\nCOMMENT ON TABLE public.billing_exemptions IS 'Billing exemptions table - Access restricted to organization admins only for security';"}		viral.architect@gmail.com	\N
20250811022306	{"-- Fix profiles table security vulnerability by restricting public access\n-- Currently the profiles_select_optimized policy allows unrestricted read access (USING true)\n-- This exposes all user emails and names to potential attackers\n\n-- Drop the overly permissive select policy\nDROP POLICY IF EXISTS \\"profiles_select_optimized\\" ON public.profiles;\n\n-- Create secure policies for profile access\n-- Users can view their own profile\nCREATE POLICY \\"users_view_own_profile\\" ON public.profiles\nFOR SELECT \nUSING (id = auth.uid());\n\n-- Organization members can view profiles of other members in their organization\nCREATE POLICY \\"org_members_view_member_profiles\\" ON public.profiles\nFOR SELECT\nUSING (\n  id IN (\n    SELECT om.user_id \n    FROM public.organization_members om\n    WHERE om.organization_id IN (\n      SELECT om2.organization_id \n      FROM public.organization_members om2 \n      WHERE om2.user_id = auth.uid() \n        AND om2.status = 'active'\n    )\n    AND om.status = 'active'\n  )\n);\n\n-- Add comment documenting the security improvement\nCOMMENT ON TABLE public.profiles IS 'User profiles table - Access restricted to users own profile and organization members only for security';"}		viral.architect@gmail.com	\N
20250811023004	{"-- Critical Security Fix: Organization Invitations Table Access Control\n-- This fixes the dangerous 'token_based_access' policy that allows unrestricted access\n-- to all invitation data, which exposes email addresses and tokens to unauthorized users.\n\n-- Drop the dangerous policy that allows unrestricted access\nDROP POLICY IF EXISTS \\"token_based_access\\" ON public.organization_invitations;\n\n-- Create a secure token-based policy that only allows access for legitimate invitation acceptance\n-- This policy ensures users can only access invitations with their exact email AND valid token\nCREATE POLICY \\"secure_token_invitation_access\\" ON public.organization_invitations\nFOR SELECT\nUSING (\n  -- Allow access only when:\n  -- 1. User's email matches the invitation email exactly\n  -- 2. The invitation is still pending and not expired\n  -- 3. This prevents table scanning and unauthorized access\n  auth.email() IS NOT NULL \n  AND lower(trim(email)) = lower(trim(auth.email()))\n  AND status = 'pending'\n  AND expires_at > now()\n);\n\n-- Create a function to securely fetch invitation details by token\n-- This replaces direct table queries and prevents data exposure\nCREATE OR REPLACE FUNCTION public.get_invitation_by_token_secure(p_token uuid)\nRETURNS TABLE(\n  id uuid,\n  organization_id uuid,\n  organization_name text,\n  email text,\n  role text,\n  status text,\n  expires_at timestamp with time zone,\n  message text,\n  invited_by_name text\n)\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  invitation_email text;\nBEGIN\n  -- First check if the invitation exists and get the email\n  SELECT oi.email INTO invitation_email\n  FROM organization_invitations oi\n  WHERE oi.invitation_token = p_token\n    AND oi.status = 'pending'\n    AND oi.expires_at > now();\n  \n  -- If no valid invitation found, return empty\n  IF invitation_email IS NULL THEN\n    RETURN;\n  END IF;\n  \n  -- Verify the current user's email matches the invitation email\n  IF auth.email() IS NULL OR lower(trim(auth.email())) != lower(trim(invitation_email)) THEN\n    RETURN;\n  END IF;\n  \n  -- Return the invitation details with organization and inviter info\n  RETURN QUERY\n  SELECT \n    oi.id,\n    oi.organization_id,\n    o.name as organization_name,\n    oi.email,\n    oi.role,\n    oi.status,\n    oi.expires_at,\n    oi.message,\n    p.name as invited_by_name\n  FROM organization_invitations oi\n  JOIN organizations o ON o.id = oi.organization_id\n  LEFT JOIN profiles p ON p.id = oi.invited_by\n  WHERE oi.invitation_token = p_token\n    AND oi.status = 'pending'\n    AND oi.expires_at > now()\n    AND lower(trim(oi.email)) = lower(trim(auth.email()));\nEND;\n$$;\n\n-- Add security comment\nCOMMENT ON FUNCTION public.get_invitation_by_token_secure(uuid) IS 'Securely retrieves invitation details by token - validates user email matches invitation before returning data';\n\n-- Fix other overly permissive policies identified in security scan\n\n-- Fix billing_exemptions policies\nDROP POLICY IF EXISTS \\"system_insert_exemptions\\" ON public.billing_exemptions;\nDROP POLICY IF EXISTS \\"system_update_exemptions\\" ON public.billing_exemptions;\n\nCREATE POLICY \\"secure_system_insert_exemptions\\" ON public.billing_exemptions\nFOR INSERT\nWITH CHECK (\n  -- Only allow system operations by organization admins\n  EXISTS (\n    SELECT 1 FROM organization_members om\n    WHERE om.organization_id = billing_exemptions.organization_id\n      AND om.user_id = auth.uid()\n      AND om.role IN ('owner', 'admin')\n      AND om.status = 'active'\n  )\n);\n\nCREATE POLICY \\"secure_system_update_exemptions\\" ON public.billing_exemptions\nFOR UPDATE\nUSING (\n  EXISTS (\n    SELECT 1 FROM organization_members om\n    WHERE om.organization_id = billing_exemptions.organization_id\n      AND om.user_id = auth.uid()\n      AND om.role IN ('owner', 'admin')\n      AND om.status = 'active'\n  )\n);\n\n-- Fix organization_subscriptions policies\nDROP POLICY IF EXISTS \\"manage_subscriptions\\" ON public.organization_subscriptions;\n\nCREATE POLICY \\"admins_manage_subscriptions\\" ON public.organization_subscriptions\nFOR ALL\nUSING (\n  EXISTS (\n    SELECT 1 FROM organization_members om\n    WHERE om.organization_id = organization_subscriptions.organization_id\n      AND om.user_id = auth.uid()\n      AND om.role IN ('owner', 'admin')\n      AND om.status = 'active'\n  )\n)\nWITH CHECK (\n  EXISTS (\n    SELECT 1 FROM organization_members om\n    WHERE om.organization_id = organization_subscriptions.organization_id\n      AND om.user_id = auth.uid()\n      AND om.role IN ('owner', 'admin')\n      AND om.status = 'active'\n  )\n);\n\n-- Fix subscribers table policies\nDROP POLICY IF EXISTS \\"insert_subscription\\" ON public.subscribers;\nDROP POLICY IF EXISTS \\"update_own_subscription\\" ON public.subscribers;\n\nCREATE POLICY \\"users_insert_own_subscription\\" ON public.subscribers\nFOR INSERT\nWITH CHECK (\n  user_id = auth.uid() OR email = auth.email()\n);\n\nCREATE POLICY \\"secure_update_subscription\\" ON public.subscribers\nFOR UPDATE\nUSING (\n  user_id = auth.uid() OR email = auth.email()\n);"}		viral.architect@gmail.com	\N
20250811030522	{"-- Fix security vulnerability in subscribers table RLS policies\n-- Remove email-based access and restrict to user_id only for better security\n\n-- Drop existing policies\nDROP POLICY IF EXISTS \\"secure_update_subscription\\" ON public.subscribers;\nDROP POLICY IF EXISTS \\"select_own_subscription\\" ON public.subscribers;\nDROP POLICY IF EXISTS \\"users_insert_own_subscription\\" ON public.subscribers;\n\n-- Create secure policies that only allow access based on user_id\nCREATE POLICY \\"users_select_own_subscription\\" ON public.subscribers\nFOR SELECT\nUSING (user_id = auth.uid());\n\nCREATE POLICY \\"users_update_own_subscription\\" ON public.subscribers\nFOR UPDATE\nUSING (user_id = auth.uid());\n\nCREATE POLICY \\"users_insert_own_subscription\\" ON public.subscribers\nFOR INSERT\nWITH CHECK (user_id = auth.uid());\n\n-- Allow edge functions to insert/update subscription data (they use service role key)\nCREATE POLICY \\"system_manage_subscriptions\\" ON public.subscribers\nFOR ALL\nUSING (true)\nWITH CHECK (true);"}		viral.architect@gmail.com	\N
20250818010810	{"-- Step 1: Make email nullable in profiles table\nALTER TABLE public.profiles ALTER COLUMN email DROP NOT NULL;\n\n-- Step 2: Clear existing email data (except for current user's own email)\n-- We keep only the email for auth.uid() user to maintain their own profile access\nUPDATE public.profiles \nSET email = NULL \nWHERE id != auth.uid();\n\n-- Step 3: Update the RLS policy to handle nullable emails properly\n-- Replace the existing policy for profile access to handle nullable emails\nDROP POLICY IF EXISTS \\"org_members_view_member_profiles\\" ON public.profiles;\n\n-- Create new policy that doesn't depend on email for other users\nCREATE POLICY \\"org_members_view_member_profiles\\" \nON public.profiles \nFOR SELECT \nUSING (\n  id IN (\n    SELECT om.user_id\n    FROM organization_members om\n    WHERE om.organization_id IN (\n      SELECT om2.organization_id\n      FROM organization_members om2\n      WHERE om2.user_id = auth.uid() \n        AND om2.status = 'active'\n    ) \n    AND om.status = 'active'\n  )\n);\n\n-- Step 4: Update the get_organization_member_profile function to not return emails for other users\nCREATE OR REPLACE FUNCTION public.get_organization_member_profile(member_user_id uuid)\nRETURNS TABLE(id uuid, name text, email text, email_private boolean, created_at timestamp with time zone, updated_at timestamp with time zone)\nLANGUAGE sql\nSTABLE SECURITY DEFINER\nSET search_path TO 'public'\nAS $function$\n  SELECT \n    p.id,\n    p.name,\n    CASE \n      WHEN p.id = auth.uid() THEN p.email  -- User can see their own email\n      ELSE NULL  -- Other users' emails are not returned\n    END as email,\n    p.email_private,\n    p.created_at,\n    p.updated_at\n  FROM profiles p\n  WHERE p.id = member_user_id\n    AND (\n      p.id = auth.uid() OR p.id IN (\n        SELECT om.user_id \n        FROM organization_members om\n        WHERE om.organization_id IN (\n          SELECT om2.organization_id \n          FROM organization_members om2 \n          WHERE om2.user_id = auth.uid() \n            AND om2.status = 'active'\n        )\n        AND om.status = 'active'\n      )\n    );\n$function$;"}		viral.architect@gmail.com	\N
20250811031045	{"-- Fix critical security vulnerability in subscribers table\n-- The table appears to be publicly readable, we need to secure it properly\n\n-- Ensure RLS is enabled\nALTER TABLE public.subscribers ENABLE ROW LEVEL SECURITY;\n\n-- Drop the overly permissive system policy that was allowing public access\nDROP POLICY IF EXISTS \\"system_manage_subscriptions\\" ON public.subscribers;\n\n-- Create a more secure system policy that only allows service role operations\n-- This policy will only apply to edge functions using the service role key\nCREATE POLICY \\"edge_functions_manage_subscriptions\\" ON public.subscribers\nFOR ALL\nUSING (auth.role() = 'service_role')\nWITH CHECK (auth.role() = 'service_role');\n\n-- Ensure no anonymous access by creating explicit policies for authenticated users only\n-- Users can only access their own subscription data when authenticated\nCREATE POLICY \\"authenticated_users_own_data_only\\" ON public.subscribers\nFOR SELECT\nTO authenticated\nUSING (user_id = auth.uid());\n\nCREATE POLICY \\"authenticated_users_update_own_data\\" ON public.subscribers\nFOR UPDATE\nTO authenticated\nUSING (user_id = auth.uid())\nWITH CHECK (user_id = auth.uid());\n\n-- Remove any existing overly permissive policies\nDROP POLICY IF EXISTS \\"users_select_own_subscription\\" ON public.subscribers;\nDROP POLICY IF EXISTS \\"users_update_own_subscription\\" ON public.subscribers;\nDROP POLICY IF EXISTS \\"users_insert_own_subscription\\" ON public.subscribers;"}		viral.architect@gmail.com	\N
20250812093626	{"-- Add privacy control for email addresses in profiles\n-- This allows users to hide their email from organization members while keeping it visible to admins\n\n-- Add email_private column to profiles table\nALTER TABLE public.profiles \nADD COLUMN email_private boolean DEFAULT false;\n\n-- Update the organization members view policy to respect email privacy\n-- Create a view that conditionally shows email based on privacy settings\nCREATE OR REPLACE VIEW public.member_profiles_view AS\nSELECT \n  p.id,\n  p.name,\n  CASE \n    WHEN p.email_private = true AND p.id != auth.uid() THEN \n      CASE \n        WHEN EXISTS (\n          SELECT 1 FROM public.organization_members om\n          WHERE om.user_id = auth.uid() \n            AND om.role IN ('owner', 'admin')\n            AND om.organization_id IN (\n              SELECT om2.organization_id FROM public.organization_members om2 \n              WHERE om2.user_id = p.id AND om2.status = 'active'\n            )\n            AND om.status = 'active'\n        ) THEN p.email  -- Admins can still see private emails\n        ELSE NULL       -- Regular members cannot see private emails\n      END\n    ELSE p.email      -- Public emails or own email always visible\n  END as email,\n  p.email_private,\n  p.created_at,\n  p.updated_at\nFROM public.profiles p\nWHERE \n  -- Same RLS logic as the profiles table\n  p.id = auth.uid() OR p.id IN (\n    SELECT om.user_id \n    FROM public.organization_members om\n    WHERE om.organization_id IN (\n      SELECT om2.organization_id \n      FROM public.organization_members om2 \n      WHERE om2.user_id = auth.uid() \n        AND om2.status = 'active'\n    )\n    AND om.status = 'active'\n  );\n\n-- Enable RLS on the view (inherited from base table)\n-- Add helpful comment\nCOMMENT ON VIEW public.member_profiles_view IS 'Profiles view with email privacy controls - respects user email_private preference while allowing admin override';\nCOMMENT ON COLUMN public.profiles.email_private IS 'When true, email is hidden from organization members (except admins and owner)';"}		viral.architect@gmail.com	\N
20250812093703	{"-- Fix the view security issue by removing the problematic SECURITY DEFINER view\n-- Instead, we'll modify the application queries to handle email privacy directly\n\n-- Remove the view that caused security warnings\nDROP VIEW IF EXISTS public.member_profiles_view;\n\n-- Add a secure function to get profiles with privacy respected\nCREATE OR REPLACE FUNCTION public.get_organization_member_profile(member_user_id uuid)\nRETURNS TABLE(\n  id uuid,\n  name text,\n  email text,\n  email_private boolean,\n  created_at timestamp with time zone,\n  updated_at timestamp with time zone\n)\nLANGUAGE sql\nSTABLE\nSECURITY DEFINER\nSET search_path = public\nAS $$\n  SELECT \n    p.id,\n    p.name,\n    CASE \n      WHEN p.email_private = true AND p.id != auth.uid() THEN \n        CASE \n          WHEN EXISTS (\n            SELECT 1 FROM organization_members om\n            WHERE om.user_id = auth.uid() \n              AND om.role IN ('owner', 'admin')\n              AND om.organization_id IN (\n                SELECT om2.organization_id FROM organization_members om2 \n                WHERE om2.user_id = p.id AND om2.status = 'active'\n              )\n              AND om.status = 'active'\n          ) THEN p.email  -- Admins can still see private emails\n          ELSE NULL       -- Regular members cannot see private emails\n        END\n      ELSE p.email      -- Public emails or own email always visible\n    END as email,\n    p.email_private,\n    p.created_at,\n    p.updated_at\n  FROM profiles p\n  WHERE p.id = member_user_id\n    AND (\n      p.id = auth.uid() OR p.id IN (\n        SELECT om.user_id \n        FROM organization_members om\n        WHERE om.organization_id IN (\n          SELECT om2.organization_id \n          FROM organization_members om2 \n          WHERE om2.user_id = auth.uid() \n            AND om2.status = 'active'\n        )\n        AND om.status = 'active'\n      )\n    );\n$$;\n\n-- Add comment for the new security feature\nCOMMENT ON FUNCTION public.get_organization_member_profile IS 'Securely retrieves member profile respecting email privacy settings';\nCOMMENT ON COLUMN public.profiles.email_private IS 'When true, email is hidden from organization members (except admins). Default: false (email visible to org members)';"}		viral.architect@gmail.com	\N
20250813051529	{"-- Create PM checklist templates table\ncreate table public.pm_checklist_templates (\n  id uuid primary key default gen_random_uuid(),\n  organization_id uuid null references public.organizations(id) on delete cascade,\n  name text not null,\n  description text,\n  is_protected boolean not null default false,\n  template_data jsonb not null default '[]'::jsonb,\n  created_by uuid not null references public.profiles(id) on delete restrict,\n  updated_by uuid references public.profiles(id) on delete restrict,\n  created_at timestamptz not null default now(),\n  updated_at timestamptz not null default now(),\n  constraint pm_checklist_templates_unique_name_per_org\n    unique (organization_id, name)\n);\n\n-- Add template_id to preventative_maintenance for traceability\nalter table public.preventative_maintenance \nadd column template_id uuid references public.pm_checklist_templates(id) on delete set null;\n\n-- Enable RLS\nalter table public.pm_checklist_templates enable row level security;\n\n-- RLS Policies\n-- SELECT: org members can read org templates; everyone can read global (organization_id is null)\ncreate policy \\"read org/global templates\\"\non public.pm_checklist_templates\nfor select\nusing (\n  organization_id is null\n  or is_org_member(auth.uid(), organization_id)\n);\n\n-- INSERT/UPDATE/DELETE: only org admins; global protected rows denied except by service role\ncreate policy \\"manage org templates\\"\non public.pm_checklist_templates\nfor all\nusing (\n  organization_id is not null\n  and is_org_admin(auth.uid(), organization_id)\n  and (not is_protected or auth.role() = 'service_role')\n)\nwith check (\n  organization_id is not null\n  and is_org_admin(auth.uid(), organization_id)\n  and (not is_protected or auth.role() = 'service_role')\n);\n\n-- Block deleting protected rows\ncreate policy \\"deny delete protected\\"\non public.pm_checklist_templates\nfor delete\nusing (\n  organization_id is not null\n  and is_org_admin(auth.uid(), organization_id)\n  and is_protected = false\n);\n\n-- updated_at trigger\ncreate or replace function public.touch_updated_at() returns trigger\nlanguage plpgsql as $$\nbegin\n  new.updated_at = now();\n  return new;\nend; $$;\n\ncreate trigger trg_pm_checklist_templates_touch\nbefore update on public.pm_checklist_templates\nfor each row execute function public.touch_updated_at();"}		viral.architect@gmail.com	\N
20250813051554	{"-- Fix the touch_updated_at function to have proper search path\ncreate or replace function public.touch_updated_at() returns trigger\nlanguage plpgsql\nsecurity definer\nset search_path = 'public'\nas $$\nbegin\n  new.updated_at = now();\n  return new;\nend; $$;"}		viral.architect@gmail.com	\N
20250813060906	{"-- Create global Forklift PM template from existing checklist data\nWITH checklist_source AS (\n  SELECT checklist_data FROM preventative_maintenance \n  WHERE id = '118ffd73-35b9-41bd-b160-a95d56c902fb'\n),\nsanitized_data AS (\n  SELECT jsonb_agg(\n    jsonb_build_object(\n      'id', item->>'id',\n      'section', item->>'section', \n      'title', item->>'title',\n      'description', item->>'description',\n      'required', (item->>'required')::boolean,\n      'condition', null,\n      'notes', ''\n    )\n  ) as clean_checklist\n  FROM checklist_source, jsonb_array_elements(checklist_data) as item\n),\nservice_user AS (\n  SELECT id FROM profiles LIMIT 1\n)\nINSERT INTO pm_checklist_templates (\n  organization_id,\n  name,\n  description,\n  is_protected,\n  template_data,\n  created_by,\n  updated_by\n)\nSELECT \n  null,\n  'Forklift PM (Default)',\n  'Comprehensive preventive maintenance checklist for forklifts. This template provides detailed inspection items covering all major systems.',\n  true,\n  sd.clean_checklist,\n  su.id,\n  su.id\nFROM sanitized_data sd, service_user su\nWHERE NOT EXISTS (\n  SELECT 1 FROM pm_checklist_templates \n  WHERE organization_id IS NULL \n  AND name = 'Forklift PM (Default)'\n);"}		viral.architect@gmail.com	\N
20250813072111	{"-- Add default_pm_template_id column to equipment table\nALTER TABLE public.equipment \nADD COLUMN default_pm_template_id uuid REFERENCES public.pm_checklist_templates(id) ON DELETE SET NULL;\n\n-- Create index for better performance\nCREATE INDEX idx_equipment_default_pm_template ON public.equipment(default_pm_template_id);\n\n-- Update RLS policies to allow organization admins to manage template assignments\n-- (The existing policies should already cover this, but let's ensure equipment updates are allowed for admins)"}		viral.architect@gmail.com	\N
20250819023827	{"-- Add import_id column to equipment table for tracking CSV imports\nALTER TABLE public.equipment \nADD COLUMN import_id text;\n\n-- Create index for efficient filtering by import_id\nCREATE INDEX idx_equipment_import_id ON public.equipment(import_id) WHERE import_id IS NOT NULL;"}		viral.architect@gmail.com	\N
20250819113900	{"\n-- Ensure admin DELETE policy exists for equipment\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies \n    WHERE schemaname = 'public' \n      AND tablename = 'equipment' \n      AND policyname = 'admins_delete_equipment'\n  ) THEN\n    CREATE POLICY admins_delete_equipment\n    ON public.equipment\n    FOR DELETE\n    USING (is_org_admin(auth.uid(), organization_id));\n  END IF;\nEND$$;\n\n-- Ensure admin DELETE policy exists for equipment_notes\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies \n    WHERE schemaname = 'public' \n      AND tablename = 'equipment_notes' \n      AND policyname = 'admins_delete_equipment_notes'\n  ) THEN\n    CREATE POLICY admins_delete_equipment_notes\n    ON public.equipment_notes\n    FOR DELETE\n    USING (\n      EXISTS (\n        SELECT 1\n        FROM public.equipment e\n        WHERE e.id = equipment_notes.equipment_id\n          AND is_org_admin(auth.uid(), e.organization_id)\n      )\n    );\n  END IF;\nEND$$;\n\n-- Ensure admin DELETE policy exists for equipment_note_images\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies \n    WHERE schemaname = 'public' \n      AND tablename = 'equipment_note_images' \n      AND policyname = 'admins_delete_equipment_note_images'\n  ) THEN\n    CREATE POLICY admins_delete_equipment_note_images\n    ON public.equipment_note_images\n    FOR DELETE\n    USING (\n      EXISTS (\n        SELECT 1\n        FROM public.equipment_notes en\n        JOIN public.equipment e ON e.id = en.equipment_id\n        WHERE en.id = equipment_note_images.equipment_note_id\n          AND is_org_admin(auth.uid(), e.organization_id)\n      )\n    );\n  END IF;\nEND$$;\n"}		viral.architect@gmail.com	\N
20250822044256	{"\n-- 1) Idempotency log for webhook events\nCREATE TABLE IF NOT EXISTS public.stripe_event_logs (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  event_id TEXT UNIQUE NOT NULL,\n  type TEXT NOT NULL,\n  subscription_id TEXT NULL,\n  payload JSONB NULL,\n  created_at TIMESTAMPTZ NOT NULL DEFAULT now()\n);\n\n-- RLS (block all non-service-role access by default)\nALTER TABLE public.stripe_event_logs ENABLE ROW LEVEL SECURITY;\n\n-- No SELECT/INSERT/UPDATE/DELETE policies for anon; Edge Functions use service role and bypass RLS.\n\n-- Helpful indexes\nCREATE INDEX IF NOT EXISTS idx_stripe_event_logs_type ON public.stripe_event_logs(type);\nCREATE INDEX IF NOT EXISTS idx_stripe_event_logs_subscription_id ON public.stripe_event_logs(subscription_id);\n"}		viral.architect@gmail.com	\N
20250822053659	{"\n-- Create idempotency table for webhook events\nCREATE TABLE IF NOT EXISTS public.webhook_events (\n  event_id text PRIMARY KEY,\n  processed_at timestamptz NOT NULL DEFAULT now()\n);\n\nCOMMENT ON TABLE public.webhook_events IS 'Idempotency gate for external webhooks (e.g., Stripe). A row per processed event_id.';\n\n-- Enable Row Level Security (RLS)\nALTER TABLE public.webhook_events ENABLE ROW LEVEL SECURITY;\n\n-- Policies: Only service role (edge functions) can access. No user access.\n-- Insert policy for service role\nCREATE POLICY service_role_insert_webhook_events\n  ON public.webhook_events\n  FOR INSERT\n  TO public\n  WITH CHECK (auth.role() = 'service_role');\n\n-- Select policy for service role\nCREATE POLICY service_role_select_webhook_events\n  ON public.webhook_events\n  FOR SELECT\n  TO public\n  USING (auth.role() = 'service_role');\n\n-- Update policy for service role (not needed, but added for completeness)\nCREATE POLICY service_role_update_webhook_events\n  ON public.webhook_events\n  FOR UPDATE\n  TO public\n  USING (auth.role() = 'service_role')\n  WITH CHECK (auth.role() = 'service_role');\n\n-- Delete policy for service role (rarely needed)\nCREATE POLICY service_role_delete_webhook_events\n  ON public.webhook_events\n  FOR DELETE\n  TO public\n  USING (auth.role() = 'service_role');\n"}		viral.architect@gmail.com	\N
20250822065029	{"-- Critical Security Fixes Migration (Corrected)\n-- Fix 1: Lock down organization_members RLS to prevent privilege escalation\n\n-- Drop the dangerous self-insert policy that allows users to add themselves to any org\nDROP POLICY IF EXISTS \\"allow_member_insertion_fixed\\" ON public.organization_members;\n\n-- Drop the overly permissive self-management policy that allows role escalation  \nDROP POLICY IF EXISTS \\"members_manage_own_record_fixed\\" ON public.organization_members;\n\n-- Create secure replacement policies\n-- Only admins can insert new members (self-service only through secure RPCs)\nCREATE POLICY \\"secure_admin_only_member_insert\\" \nON public.organization_members \nFOR INSERT \nWITH CHECK (is_org_admin(auth.uid(), organization_id));\n\n-- Members can only read their own membership record\nCREATE POLICY \\"members_read_own_record\\" \nON public.organization_members \nFOR SELECT \nUSING (user_id = auth.uid());\n\n-- Only admins can update member records (no self role escalation)\nCREATE POLICY \\"admins_only_update_members\\" \nON public.organization_members \nFOR UPDATE \nUSING (is_org_admin(auth.uid(), organization_id));\n\n-- Only admins can delete members (no self-removal that bypasses business logic)\nCREATE POLICY \\"admins_only_delete_members\\" \nON public.organization_members \nFOR DELETE \nUSING (is_org_admin(auth.uid(), organization_id));\n\n-- Fix 2: Restrict notifications INSERT to service role only\nDROP POLICY IF EXISTS \\"System can create notifications\\" ON public.notifications;\n\nCREATE POLICY \\"service_role_only_create_notifications\\" \nON public.notifications \nFOR INSERT \nWITH CHECK (auth.role() = 'service_role');\n\n-- Fix 3: Add explicit RLS for stripe_event_logs (service role only)\nCREATE POLICY \\"deny_user_access_stripe_logs\\" \nON public.stripe_event_logs \nFOR ALL \nUSING (false);\n\nCREATE POLICY \\"service_role_manage_stripe_logs\\" \nON public.stripe_event_logs \nFOR ALL \nUSING (auth.role() = 'service_role') \nWITH CHECK (auth.role() = 'service_role');\n\n-- Fix 4: Restrict invitation_performance_logs to service role\nDROP POLICY IF EXISTS \\"system_insert_performance_logs\\" ON public.invitation_performance_logs;\n\nCREATE POLICY \\"service_role_only_performance_logs\\" \nON public.invitation_performance_logs \nFOR INSERT \nWITH CHECK (auth.role() = 'service_role');\n\n-- Fix 5: Create secure function to get member profiles with email privacy\nCREATE OR REPLACE FUNCTION public.get_member_profiles_secure(org_id uuid)\nRETURNS TABLE(\n  id uuid,\n  name text,\n  email text,\n  created_at timestamp with time zone,\n  updated_at timestamp with time zone,\n  email_private boolean\n)\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nBEGIN\n  -- Check if user is a member of the organization\n  IF NOT EXISTS (\n    SELECT 1 FROM organization_members \n    WHERE user_id = auth.uid() \n      AND organization_id = org_id \n      AND status = 'active'\n  ) THEN\n    RAISE EXCEPTION 'Access denied: not a member of this organization';\n  END IF;\n\n  RETURN QUERY\n  SELECT \n    p.id,\n    p.name,\n    CASE \n      WHEN p.email_private = true AND p.id != auth.uid() THEN NULL\n      ELSE p.email\n    END as email,\n    p.created_at,\n    p.updated_at,\n    p.email_private\n  FROM profiles p\n  JOIN organization_members om ON p.id = om.user_id\n  WHERE om.organization_id = org_id \n    AND om.status = 'active';\nEND;\n$$;\n\n-- Fix 6: Create secure function for controlled member self-removal\nCREATE OR REPLACE FUNCTION public.leave_organization_safely(org_id uuid)\nRETURNS jsonb\nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path TO 'public'\nAS $$\nDECLARE\n  user_role TEXT;\n  owner_count INTEGER;\n  result jsonb;\nBEGIN\n  -- Get user's role in the organization\n  SELECT role INTO user_role\n  FROM organization_members\n  WHERE user_id = auth.uid() \n    AND organization_id = org_id \n    AND status = 'active';\n  \n  IF user_role IS NULL THEN\n    RETURN jsonb_build_object('success', false, 'error', 'Not a member of this organization');\n  END IF;\n  \n  -- Prevent last owner from leaving\n  IF user_role = 'owner' THEN\n    SELECT COUNT(*) INTO owner_count\n    FROM organization_members\n    WHERE organization_id = org_id \n      AND role = 'owner' \n      AND status = 'active';\n    \n    IF owner_count <= 1 THEN\n      RETURN jsonb_build_object('success', false, 'error', 'Cannot leave as the last owner');\n    END IF;\n  END IF;\n  \n  -- Preserve user attribution and handle team transfers\n  PERFORM preserve_user_attribution(auth.uid());\n  PERFORM handle_team_manager_removal(auth.uid(), org_id);\n  \n  -- Remove the user\n  DELETE FROM organization_members\n  WHERE user_id = auth.uid() \n    AND organization_id = org_id;\n  \n  RETURN jsonb_build_object('success', true, 'message', 'Successfully left organization');\nEND;\n$$;"}		viral.architect@gmail.com	\N
20250822074326	{"\n-- 1) Create missing enum types if not present\nDO $$\nBEGIN\n  IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'work_order_status') THEN\n    CREATE TYPE public.work_order_status AS ENUM (\n      'submitted', 'accepted', 'in_progress', 'on_hold', 'completed', 'cancelled'\n    );\n  END IF;\nEND$$;\n\nDO $$\nBEGIN\n  IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'work_order_priority') THEN\n    CREATE TYPE public.work_order_priority AS ENUM (\n      'low', 'medium', 'high', 'critical'\n    );\n  END IF;\nEND$$;\n\n-- 2) Create the work_orders table (minimal baseline; no foreign keys here)\nCREATE TABLE IF NOT EXISTS public.work_orders (\n  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n  organization_id uuid NOT NULL,\n  equipment_id uuid,\n  team_id uuid,\n  created_by uuid NOT NULL,\n  assignee_id uuid,\n  title text NOT NULL,\n  description text,\n  status public.work_order_status NOT NULL DEFAULT 'submitted',\n  priority public.work_order_priority NOT NULL DEFAULT 'medium',\n  created_date timestamptz NOT NULL DEFAULT now(),\n  due_date timestamptz,\n  completed_date timestamptz,\n  created_by_name text,\n  assignee_name text,\n  created_at timestamptz NOT NULL DEFAULT now(),\n  updated_at timestamptz NOT NULL DEFAULT now()\n);\n\n-- 3) Ensure RLS is enabled (required by subsequent policy migrations)\nALTER TABLE public.work_orders ENABLE ROW LEVEL SECURITY;\n\n-- 4) Ensure a simple updated_at trigger exists for work_orders\nDO $$\nBEGIN\n  -- Create the function if needed (idempotent safety); your project already defines this,\n  -- but this CREATE OR REPLACE is harmless and keeps the migration robust.\n  CREATE OR REPLACE FUNCTION public.touch_updated_at()\n  RETURNS trigger\n  LANGUAGE plpgsql\n  SECURITY DEFINER\n  SET search_path = public\n  AS $func$\n  BEGIN\n    NEW.updated_at = now();\n    RETURN NEW;\n  END;\n  $func$;\n\n  -- Create the trigger if not present\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_trigger WHERE tgname = 'trg_work_orders_touch'\n  ) THEN\n    CREATE TRIGGER trg_work_orders_touch\n    BEFORE UPDATE ON public.work_orders\n    FOR EACH ROW\n    EXECUTE FUNCTION public.touch_updated_at();\n  END IF;\nEND$$;\n"}		viral.architect@gmail.com	\N
20250822093839	{"-- Robust idempotent baseline/fix for work_orders\n-- 1) Create table if missing (minimal cols), 2) Add missing columns, 3) Policies, 4) Indexes, 5) updated_at trigger\n\n-- Ensure table exists with minimal required columns\nDO $$\nBEGIN\n  IF to_regclass('public.work_orders') IS NULL THEN\n    CREATE TABLE public.work_orders (\n      id UUID NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,\n      organization_id UUID NOT NULL,\n      title TEXT NOT NULL,\n      status TEXT NOT NULL DEFAULT 'submitted',\n      created_by UUID NOT NULL,\n      created_at TIMESTAMPTZ NOT NULL DEFAULT now(),\n      updated_at TIMESTAMPTZ NOT NULL DEFAULT now()\n    );\n    ALTER TABLE public.work_orders ENABLE ROW LEVEL SECURITY;\n  END IF;\nEND $$;\n\n-- Add commonly used columns if they don't exist (kept nullable to avoid backfill issues)\nALTER TABLE public.work_orders\n  ADD COLUMN IF NOT EXISTS equipment_id UUID,\n  ADD COLUMN IF NOT EXISTS description TEXT,\n  ADD COLUMN IF NOT EXISTS priority TEXT,\n  ADD COLUMN IF NOT EXISTS assignee_id UUID,\n  ADD COLUMN IF NOT EXISTS assignee_name TEXT,\n  ADD COLUMN IF NOT EXISTS team_id UUID,\n  ADD COLUMN IF NOT EXISTS created_by_name TEXT,\n  ADD COLUMN IF NOT EXISTS created_date TIMESTAMPTZ,\n  ADD COLUMN IF NOT EXISTS due_date TIMESTAMPTZ,\n  ADD COLUMN IF NOT EXISTS estimated_hours NUMERIC,\n  ADD COLUMN IF NOT EXISTS completed_date TIMESTAMPTZ;\n\n-- Optionally align status to enum type if present\nDO $$\nBEGIN\n  IF EXISTS (SELECT 1 FROM pg_type WHERE typname = 'work_order_status') THEN\n    -- Only alter if current type is not already the enum\n    IF EXISTS (\n      SELECT 1 \n      FROM information_schema.columns \n      WHERE table_schema = 'public' \n        AND table_name = 'work_orders' \n        AND column_name = 'status' \n        AND data_type <> 'USER-DEFINED'\n    ) THEN\n      ALTER TABLE public.work_orders \n        ALTER COLUMN status TYPE work_order_status \n        USING status::work_order_status;\n    END IF;\n  END IF;\nEND $$;\n\n-- Recreate baseline policies only if missing\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies \n    WHERE schemaname = 'public' AND tablename = 'work_orders' \n      AND policyname = 'Users can view work orders in their organization'\n  ) THEN\n    CREATE POLICY \\"Users can view work orders in their organization\\" \n    ON public.work_orders FOR SELECT \n    USING (organization_id IN (\n      SELECT organization_id FROM organization_members \n      WHERE user_id = auth.uid() AND status = 'active'\n    ));\n  END IF;\n\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies \n    WHERE schemaname = 'public' AND tablename = 'work_orders' \n      AND policyname = 'Users can create work orders in their organization'\n  ) THEN\n    CREATE POLICY \\"Users can create work orders in their organization\\" \n    ON public.work_orders FOR INSERT \n    WITH CHECK (\n      created_by = auth.uid() AND organization_id IN (\n        SELECT organization_id FROM organization_members \n        WHERE user_id = auth.uid() AND status = 'active'\n      )\n    );\n  END IF;\n\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies \n    WHERE schemaname = 'public' AND tablename = 'work_orders' \n      AND policyname = 'Users can update work orders in their organization'\n  ) THEN\n    CREATE POLICY \\"Users can update work orders in their organization\\" \n    ON public.work_orders FOR UPDATE \n    USING (organization_id IN (\n      SELECT organization_id FROM organization_members \n      WHERE user_id = auth.uid() AND status = 'active'\n    ))\n    WITH CHECK (organization_id IN (\n      SELECT organization_id FROM organization_members \n      WHERE user_id = auth.uid() AND status = 'active'\n    ));\n  END IF;\n\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies \n    WHERE schemaname = 'public' AND tablename = 'work_orders' \n      AND policyname = 'Admins can delete work orders'\n  ) THEN\n    CREATE POLICY \\"Admins can delete work orders\\" \n    ON public.work_orders FOR DELETE \n    USING (organization_id IN (\n      SELECT organization_id FROM organization_members \n      WHERE user_id = auth.uid() AND role IN ('owner', 'admin') AND status = 'active'\n    ));\n  END IF;\nEND $$;\n\n-- Indexes (safe if columns now exist)\nCREATE INDEX IF NOT EXISTS idx_work_orders_organization_id ON public.work_orders(organization_id);\nCREATE INDEX IF NOT EXISTS idx_work_orders_equipment_id ON public.work_orders(equipment_id);\nCREATE INDEX IF NOT EXISTS idx_work_orders_assignee_id ON public.work_orders(assignee_id);\nCREATE INDEX IF NOT EXISTS idx_work_orders_team_id ON public.work_orders(team_id);\nCREATE INDEX IF NOT EXISTS idx_work_orders_created_by ON public.work_orders(created_by);\nCREATE INDEX IF NOT EXISTS idx_work_orders_status ON public.work_orders(status);\nCREATE INDEX IF NOT EXISTS idx_work_orders_priority ON public.work_orders(priority);\nCREATE INDEX IF NOT EXISTS idx_work_orders_due_date ON public.work_orders(due_date);\nCREATE INDEX IF NOT EXISTS idx_work_orders_created_date ON public.work_orders(created_date);\n\n-- updated_at helper and trigger\nCREATE OR REPLACE FUNCTION public.update_updated_at_column()\nRETURNS TRIGGER AS $$\nBEGIN\n  NEW.updated_at = now();\n  RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;\n\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_trigger WHERE tgname = 'update_work_orders_updated_at'\n  ) THEN\n    CREATE TRIGGER update_work_orders_updated_at\n      BEFORE UPDATE ON public.work_orders\n      FOR EACH ROW\n      EXECUTE FUNCTION public.update_updated_at_column();\n  END IF;\nEND $$;\n"}		viral.architect@gmail.com	\N
20250822093922	{"-- Fix security: Set search_path for functions to make them more secure\n-- This addresses the \\"Function Search Path Mutable\\" security warning\n\n-- Update the existing update_updated_at_column function to be more secure\nCREATE OR REPLACE FUNCTION public.update_updated_at_column()\nRETURNS TRIGGER \nLANGUAGE plpgsql\nSECURITY DEFINER\nSET search_path = 'public'\nAS $$\nBEGIN\n  NEW.updated_at = now();\n  RETURN NEW;\nEND;\n$$;"}		viral.architect@gmail.com	\N
20250823045731	{"\n-- 1) Customers table (additive, idempotent)\nCREATE TABLE IF NOT EXISTS public.customers (\n  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n  organization_id uuid NOT NULL REFERENCES public.organizations(id),\n  name text NOT NULL,\n  status text NOT NULL DEFAULT 'active',\n  created_at timestamptz NOT NULL DEFAULT now()\n);\n\nCREATE INDEX IF NOT EXISTS idx_customers_organization_id ON public.customers(organization_id);\n\nALTER TABLE public.customers ENABLE ROW LEVEL SECURITY;\n\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies \n    WHERE schemaname = 'public' AND tablename = 'customers' AND policyname = 'customers_admins_select'\n  ) THEN\n    CREATE POLICY customers_admins_select\n      ON public.customers\n      FOR SELECT\n      USING (is_org_admin(auth.uid(), organization_id));\n  END IF;\n\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies \n    WHERE schemaname = 'public' AND tablename = 'customers' AND policyname = 'customers_admins_insert'\n  ) THEN\n    CREATE POLICY customers_admins_insert\n      ON public.customers\n      FOR INSERT\n      WITH CHECK (is_org_admin(auth.uid(), organization_id));\n  END IF;\n\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies \n    WHERE schemaname = 'public' AND tablename = 'customers' AND policyname = 'customers_admins_update'\n  ) THEN\n    CREATE POLICY customers_admins_update\n      ON public.customers\n      FOR UPDATE\n      USING (is_org_admin(auth.uid(), organization_id));\n  END IF;\nEND$$;\n\n\n-- 2) Customer Contacts (using profiles.id instead of auth.users for safety)\nCREATE TABLE IF NOT EXISTS public.customer_contacts (\n  customer_id uuid NOT NULL REFERENCES public.customers(id) ON DELETE CASCADE,\n  user_id uuid NOT NULL REFERENCES public.profiles(id) ON DELETE CASCADE,\n  role text NOT NULL,\n  created_at timestamptz NOT NULL DEFAULT now(),\n  PRIMARY KEY (customer_id, user_id)\n);\n\n-- Ensure role values\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_constraint\n    WHERE conname = 'customer_contacts_role_check'\n      AND conrelid = 'public.customer_contacts'::regclass\n  ) THEN\n    ALTER TABLE public.customer_contacts\n      ADD CONSTRAINT customer_contacts_role_check\n      CHECK (role IN ('customer_viewer','customer_requestor','customer_manager'));\n  END IF;\nEND$$;\n\nCREATE INDEX IF NOT EXISTS idx_customer_contacts_customer_id ON public.customer_contacts(customer_id);\nCREATE INDEX IF NOT EXISTS idx_customer_contacts_user_id ON public.customer_contacts(user_id);\n\nALTER TABLE public.customer_contacts ENABLE ROW LEVEL SECURITY;\n\n-- Admins-only (via customer -> organization)\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies \n    WHERE schemaname = 'public' AND tablename = 'customer_contacts' AND policyname = 'customer_contacts_admins_select'\n  ) THEN\n    CREATE POLICY customer_contacts_admins_select\n      ON public.customer_contacts\n      FOR SELECT\n      USING (\n        EXISTS (\n          SELECT 1 FROM public.customers c\n          WHERE c.id = customer_contacts.customer_id\n            AND is_org_admin(auth.uid(), c.organization_id)\n        )\n      );\n  END IF;\n\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies \n    WHERE schemaname = 'public' AND tablename = 'customer_contacts' AND policyname = 'customer_contacts_admins_insert'\n  ) THEN\n    CREATE POLICY customer_contacts_admins_insert\n      ON public.customer_contacts\n      FOR INSERT\n      WITH CHECK (\n        EXISTS (\n          SELECT 1 FROM public.customers c\n          WHERE c.id = customer_contacts.customer_id\n            AND is_org_admin(auth.uid(), c.organization_id)\n        )\n      );\n  END IF;\n\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies \n    WHERE schemaname = 'public' AND tablename = 'customer_contacts' AND policyname = 'customer_contacts_admins_update'\n  ) THEN\n    CREATE POLICY customer_contacts_admins_update\n      ON public.customer_contacts\n      FOR UPDATE\n      USING (\n        EXISTS (\n          SELECT 1 FROM public.customers c\n          WHERE c.id = customer_contacts.customer_id\n            AND is_org_admin(auth.uid(), c.organization_id)\n        )\n      );\n  END IF;\nEND$$;\n\n\n-- 3) Customer Sites (scaffold)\nCREATE TABLE IF NOT EXISTS public.customer_sites (\n  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n  customer_id uuid NOT NULL REFERENCES public.customers(id) ON DELETE CASCADE,\n  name text,\n  address jsonb,\n  created_at timestamptz NOT NULL DEFAULT now()\n);\n\nCREATE INDEX IF NOT EXISTS idx_customer_sites_customer_id ON public.customer_sites(customer_id);\n\nALTER TABLE public.customer_sites ENABLE ROW LEVEL SECURITY;\n\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies \n    WHERE schemaname = 'public' AND tablename = 'customer_sites' AND policyname = 'customer_sites_admins_select'\n  ) THEN\n    CREATE POLICY customer_sites_admins_select\n      ON public.customer_sites\n      FOR SELECT\n      USING (\n        EXISTS (\n          SELECT 1 FROM public.customers c\n          WHERE c.id = customer_sites.customer_id\n            AND is_org_admin(auth.uid(), c.organization_id)\n        )\n      );\n  END IF;\n\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies \n    WHERE schemaname = 'public' AND tablename = 'customer_sites' AND policyname = 'customer_sites_admins_insert'\n  ) THEN\n    CREATE POLICY customer_sites_admins_insert\n      ON public.customer_sites\n      FOR INSERT\n      WITH CHECK (\n        EXISTS (\n          SELECT 1 FROM public.customers c\n          WHERE c.id = customer_sites.customer_id\n            AND is_org_admin(auth.uid(), c.organization_id)\n        )\n      );\n  END IF;\n\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies \n    WHERE schemaname = 'public' AND tablename = 'customer_sites' AND policyname = 'customer_sites_admins_update'\n  ) THEN\n    CREATE POLICY customer_sites_admins_update\n      ON public.customer_sites\n      FOR UPDATE\n      USING (\n        EXISTS (\n          SELECT 1 FROM public.customers c\n          WHERE c.id = customer_sites.customer_id\n            AND is_org_admin(auth.uid(), c.organization_id)\n        )\n      );\n  END IF;\nEND$$;\n\n\n-- 4) Equipment: nullable customer_id (additive)\nALTER TABLE public.equipment\n  ADD COLUMN IF NOT EXISTS customer_id uuid REFERENCES public.customers(id) ON DELETE SET NULL;\n\nCREATE INDEX IF NOT EXISTS idx_equipment_customer_id ON public.equipment(customer_id);\n\n\n-- 5) Organizations: feature toggle\nALTER TABLE public.organizations\n  ADD COLUMN IF NOT EXISTS customers_feature_enabled boolean DEFAULT false;\n\n\n-- 6) Intentionally disabled (for future PR) — example policies to allow customer contacts limited read access.\n--    These are provided here as comments to avoid enabling any new access today.\n--    When we enable Customers portal later, we can uncomment and adapt carefully.\n--\n-- -- Example: Allow customer contacts to read equipment tied to their customer (READ ONLY).\n-- -- CREATE POLICY equipment_customer_contacts_read\n-- --   ON public.equipment\n-- --   FOR SELECT\n-- --   USING (\n-- --     EXISTS (\n-- --       SELECT 1\n-- --       FROM public.customer_contacts cc\n-- --       JOIN public.customers c ON c.id = cc.customer_id\n-- --       WHERE equipment.customer_id = c.id\n-- --         AND cc.user_id = auth.uid()\n-- --     )\n-- --   );\n--\n-- -- Similar for work_orders when we define the linkage and scoped fields.\n"}		viral.architect@gmail.com	\N
20250825105103	{"\n-- 1) Geocoded locations cache table (idempotent)\nCREATE TABLE IF NOT EXISTS public.geocoded_locations (\n  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n  organization_id uuid NOT NULL REFERENCES public.organizations(id) ON DELETE CASCADE,\n  input_text text NOT NULL,\n  normalized_text text NOT NULL,\n  latitude double precision NOT NULL,\n  longitude double precision NOT NULL,\n  formatted_address text,\n  created_at timestamptz NOT NULL DEFAULT now(),\n  updated_at timestamptz NOT NULL DEFAULT now()\n);\n\n-- Unique across org + normalized input to prevent duplicates\nCREATE UNIQUE INDEX IF NOT EXISTS geocoded_locations_org_norm_unique\n  ON public.geocoded_locations (organization_id, normalized_text);\n\n-- Keep updated_at fresh on updates\nCREATE OR REPLACE FUNCTION public.set_geocoded_locations_updated_at()\nRETURNS trigger\nLANGUAGE plpgsql\nAS $$\nBEGIN\n  NEW.updated_at = now();\n  RETURN NEW;\nEND;\n$$;\n\nDROP TRIGGER IF EXISTS trg_set_geocoded_locations_updated_at ON public.geocoded_locations;\nCREATE TRIGGER trg_set_geocoded_locations_updated_at\nBEFORE UPDATE ON public.geocoded_locations\nFOR EACH ROW\nEXECUTE FUNCTION public.set_geocoded_locations_updated_at();\n\n-- Enable RLS\nALTER TABLE public.geocoded_locations ENABLE ROW LEVEL SECURITY;\n\n-- Allow org members to read cache rows for their org\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies\n    WHERE schemaname = 'public' AND tablename = 'geocoded_locations' AND policyname = 'geocoded_locations_select_org_members'\n  ) THEN\n    CREATE POLICY geocoded_locations_select_org_members\n      ON public.geocoded_locations\n      FOR SELECT\n      USING (check_org_access_secure(auth.uid(), organization_id));\n  END IF;\nEND$$;\n\n-- Restrict writes to service role only (edge function with service key)\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies\n    WHERE schemaname = 'public' AND tablename = 'geocoded_locations' AND policyname = 'geocoded_locations_service_insert'\n  ) THEN\n    CREATE POLICY geocoded_locations_service_insert\n      ON public.geocoded_locations\n      FOR INSERT\n      WITH CHECK (auth.role() = 'service_role');\n  END IF;\nEND$$;\n\nDO $$\nBEGIN\n  IF NOT EXISTS (\n    SELECT 1 FROM pg_policies\n    WHERE schemaname = 'public' AND tablename = 'geocoded_locations' AND policyname = 'geocoded_locations_service_update'\n  ) THEN\n    CREATE POLICY geocoded_locations_service_update\n      ON public.geocoded_locations\n      FOR UPDATE\n      USING (auth.role() = 'service_role');\n  END IF;\nEND$$;\n\n-- 2) Ensure unique org+feature_type for organization_subscriptions (idempotent)\nCREATE UNIQUE INDEX IF NOT EXISTS organization_subscriptions_org_feature_unique\n  ON public.organization_subscriptions (organization_id, feature_type);\n"}		viral.architect@gmail.com	\N
20250825110534	{"\n-- Pin search_path for the trigger function to satisfy linter 0011 and harden lookup behavior\nCREATE OR REPLACE FUNCTION public.set_geocoded_locations_updated_at()\nRETURNS trigger\nLANGUAGE plpgsql\nSET search_path TO 'public'\nAS $function$\nBEGIN\n  NEW.updated_at = now();\n  RETURN NEW;\nEND;\n$function$;\n"}		viral.architect@gmail.com	\N
\.


--
-- Data for Name: secrets; Type: TABLE DATA; Schema: vault; Owner: supabase_admin
--

COPY vault.secrets (id, name, description, secret, key_id, nonce, created_at, updated_at) FROM stdin;
\.


--
-- Name: refresh_tokens_id_seq; Type: SEQUENCE SET; Schema: auth; Owner: supabase_auth_admin
--

SELECT pg_catalog.setval('auth.refresh_tokens_id_seq', 806, true);


--
-- Name: subscription_id_seq; Type: SEQUENCE SET; Schema: realtime; Owner: supabase_admin
--

SELECT pg_catalog.setval('realtime.subscription_id_seq', 110, true);


--
-- Name: mfa_amr_claims amr_id_pk; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_amr_claims
    ADD CONSTRAINT amr_id_pk PRIMARY KEY (id);


--
-- Name: audit_log_entries audit_log_entries_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.audit_log_entries
    ADD CONSTRAINT audit_log_entries_pkey PRIMARY KEY (id);


--
-- Name: flow_state flow_state_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.flow_state
    ADD CONSTRAINT flow_state_pkey PRIMARY KEY (id);


--
-- Name: identities identities_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.identities
    ADD CONSTRAINT identities_pkey PRIMARY KEY (id);


--
-- Name: identities identities_provider_id_provider_unique; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.identities
    ADD CONSTRAINT identities_provider_id_provider_unique UNIQUE (provider_id, provider);


--
-- Name: instances instances_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.instances
    ADD CONSTRAINT instances_pkey PRIMARY KEY (id);


--
-- Name: mfa_amr_claims mfa_amr_claims_session_id_authentication_method_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_amr_claims
    ADD CONSTRAINT mfa_amr_claims_session_id_authentication_method_pkey UNIQUE (session_id, authentication_method);


--
-- Name: mfa_challenges mfa_challenges_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_challenges
    ADD CONSTRAINT mfa_challenges_pkey PRIMARY KEY (id);


--
-- Name: mfa_factors mfa_factors_last_challenged_at_key; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_factors
    ADD CONSTRAINT mfa_factors_last_challenged_at_key UNIQUE (last_challenged_at);


--
-- Name: mfa_factors mfa_factors_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_factors
    ADD CONSTRAINT mfa_factors_pkey PRIMARY KEY (id);


--
-- Name: one_time_tokens one_time_tokens_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.one_time_tokens
    ADD CONSTRAINT one_time_tokens_pkey PRIMARY KEY (id);


--
-- Name: refresh_tokens refresh_tokens_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.refresh_tokens
    ADD CONSTRAINT refresh_tokens_pkey PRIMARY KEY (id);


--
-- Name: refresh_tokens refresh_tokens_token_unique; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.refresh_tokens
    ADD CONSTRAINT refresh_tokens_token_unique UNIQUE (token);


--
-- Name: saml_providers saml_providers_entity_id_key; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.saml_providers
    ADD CONSTRAINT saml_providers_entity_id_key UNIQUE (entity_id);


--
-- Name: saml_providers saml_providers_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.saml_providers
    ADD CONSTRAINT saml_providers_pkey PRIMARY KEY (id);


--
-- Name: saml_relay_states saml_relay_states_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.saml_relay_states
    ADD CONSTRAINT saml_relay_states_pkey PRIMARY KEY (id);


--
-- Name: schema_migrations schema_migrations_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.schema_migrations
    ADD CONSTRAINT schema_migrations_pkey PRIMARY KEY (version);


--
-- Name: sessions sessions_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.sessions
    ADD CONSTRAINT sessions_pkey PRIMARY KEY (id);


--
-- Name: sso_domains sso_domains_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.sso_domains
    ADD CONSTRAINT sso_domains_pkey PRIMARY KEY (id);


--
-- Name: sso_providers sso_providers_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.sso_providers
    ADD CONSTRAINT sso_providers_pkey PRIMARY KEY (id);


--
-- Name: users users_phone_key; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.users
    ADD CONSTRAINT users_phone_key UNIQUE (phone);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: billing_events billing_events_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.billing_events
    ADD CONSTRAINT billing_events_pkey PRIMARY KEY (id);


--
-- Name: billing_exemptions billing_exemptions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.billing_exemptions
    ADD CONSTRAINT billing_exemptions_pkey PRIMARY KEY (id);


--
-- Name: billing_usage billing_usage_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.billing_usage
    ADD CONSTRAINT billing_usage_pkey PRIMARY KEY (id);


--
-- Name: customer_contacts customer_contacts_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customer_contacts
    ADD CONSTRAINT customer_contacts_pkey PRIMARY KEY (customer_id, user_id);


--
-- Name: customer_sites customer_sites_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customer_sites
    ADD CONSTRAINT customer_sites_pkey PRIMARY KEY (id);


--
-- Name: customers customers_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customers
    ADD CONSTRAINT customers_pkey PRIMARY KEY (id);


--
-- Name: equipment_note_images equipment_note_images_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.equipment_note_images
    ADD CONSTRAINT equipment_note_images_pkey PRIMARY KEY (id);


--
-- Name: equipment_notes equipment_notes_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.equipment_notes
    ADD CONSTRAINT equipment_notes_pkey PRIMARY KEY (id);


--
-- Name: equipment equipment_organization_id_serial_number_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.equipment
    ADD CONSTRAINT equipment_organization_id_serial_number_key UNIQUE (organization_id, serial_number);


--
-- Name: equipment equipment_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.equipment
    ADD CONSTRAINT equipment_pkey PRIMARY KEY (id);


--
-- Name: equipment_working_hours_history equipment_working_hours_history_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.equipment_working_hours_history
    ADD CONSTRAINT equipment_working_hours_history_pkey PRIMARY KEY (id);


--
-- Name: geocoded_locations geocoded_locations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.geocoded_locations
    ADD CONSTRAINT geocoded_locations_pkey PRIMARY KEY (id);


--
-- Name: invitation_performance_logs invitation_performance_logs_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.invitation_performance_logs
    ADD CONSTRAINT invitation_performance_logs_pkey PRIMARY KEY (id);


--
-- Name: member_removal_audit member_removal_audit_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.member_removal_audit
    ADD CONSTRAINT member_removal_audit_pkey PRIMARY KEY (id);


--
-- Name: notes notes_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notes
    ADD CONSTRAINT notes_pkey PRIMARY KEY (id);


--
-- Name: notification_preferences notification_preferences_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notification_preferences
    ADD CONSTRAINT notification_preferences_pkey PRIMARY KEY (id);


--
-- Name: notification_preferences notification_preferences_user_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notification_preferences
    ADD CONSTRAINT notification_preferences_user_id_key UNIQUE (user_id);


--
-- Name: notifications notifications_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notifications
    ADD CONSTRAINT notifications_pkey PRIMARY KEY (id);


--
-- Name: organization_invitations organization_invitations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.organization_invitations
    ADD CONSTRAINT organization_invitations_pkey PRIMARY KEY (id);


--
-- Name: organization_members organization_members_organization_id_user_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.organization_members
    ADD CONSTRAINT organization_members_organization_id_user_id_key UNIQUE (organization_id, user_id);


--
-- Name: organization_members organization_members_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.organization_members
    ADD CONSTRAINT organization_members_pkey PRIMARY KEY (id);


--
-- Name: organization_slots organization_slots_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.organization_slots
    ADD CONSTRAINT organization_slots_pkey PRIMARY KEY (id);


--
-- Name: organization_subscriptions organization_subscriptions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.organization_subscriptions
    ADD CONSTRAINT organization_subscriptions_pkey PRIMARY KEY (id);


--
-- Name: organization_subscriptions organization_subscriptions_stripe_subscription_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.organization_subscriptions
    ADD CONSTRAINT organization_subscriptions_stripe_subscription_id_key UNIQUE (stripe_subscription_id);


--
-- Name: organizations organizations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.organizations
    ADD CONSTRAINT organizations_pkey PRIMARY KEY (id);


--
-- Name: pm_checklist_templates pm_checklist_templates_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pm_checklist_templates
    ADD CONSTRAINT pm_checklist_templates_pkey PRIMARY KEY (id);


--
-- Name: pm_checklist_templates pm_checklist_templates_unique_name_per_org; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pm_checklist_templates
    ADD CONSTRAINT pm_checklist_templates_unique_name_per_org UNIQUE (organization_id, name);


--
-- Name: pm_status_history pm_status_history_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pm_status_history
    ADD CONSTRAINT pm_status_history_pkey PRIMARY KEY (id);


--
-- Name: preventative_maintenance preventative_maintenance_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.preventative_maintenance
    ADD CONSTRAINT preventative_maintenance_pkey PRIMARY KEY (id);


--
-- Name: profiles profiles_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.profiles
    ADD CONSTRAINT profiles_pkey PRIMARY KEY (id);


--
-- Name: scans scans_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scans
    ADD CONSTRAINT scans_pkey PRIMARY KEY (id);


--
-- Name: slot_purchases slot_purchases_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.slot_purchases
    ADD CONSTRAINT slot_purchases_pkey PRIMARY KEY (id);


--
-- Name: slot_purchases slot_purchases_stripe_payment_intent_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.slot_purchases
    ADD CONSTRAINT slot_purchases_stripe_payment_intent_id_key UNIQUE (stripe_payment_intent_id);


--
-- Name: stripe_event_logs stripe_event_logs_event_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.stripe_event_logs
    ADD CONSTRAINT stripe_event_logs_event_id_key UNIQUE (event_id);


--
-- Name: stripe_event_logs stripe_event_logs_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.stripe_event_logs
    ADD CONSTRAINT stripe_event_logs_pkey PRIMARY KEY (id);


--
-- Name: subscribers subscribers_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.subscribers
    ADD CONSTRAINT subscribers_email_key UNIQUE (email);


--
-- Name: subscribers subscribers_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.subscribers
    ADD CONSTRAINT subscribers_pkey PRIMARY KEY (id);


--
-- Name: team_members team_members_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_members
    ADD CONSTRAINT team_members_pkey PRIMARY KEY (id);


--
-- Name: team_members team_members_team_id_user_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_members
    ADD CONSTRAINT team_members_team_id_user_id_key UNIQUE (team_id, user_id);


--
-- Name: teams teams_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.teams
    ADD CONSTRAINT teams_pkey PRIMARY KEY (id);


--
-- Name: billing_exemptions unique_active_exemption; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.billing_exemptions
    ADD CONSTRAINT unique_active_exemption UNIQUE (organization_id, exemption_type, is_active);


--
-- Name: organization_slots unique_org_billing_period; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.organization_slots
    ADD CONSTRAINT unique_org_billing_period UNIQUE (organization_id, billing_period_start);


--
-- Name: CONSTRAINT unique_org_billing_period ON organization_slots; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON CONSTRAINT unique_org_billing_period ON public.organization_slots IS 'Ensures one slot record per organization per billing period for proper upsert operations';


--
-- Name: user_license_subscriptions user_license_subscriptions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_license_subscriptions
    ADD CONSTRAINT user_license_subscriptions_pkey PRIMARY KEY (id);


--
-- Name: user_license_subscriptions user_license_subscriptions_stripe_subscription_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_license_subscriptions
    ADD CONSTRAINT user_license_subscriptions_stripe_subscription_id_key UNIQUE (stripe_subscription_id);


--
-- Name: webhook_events webhook_events_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.webhook_events
    ADD CONSTRAINT webhook_events_pkey PRIMARY KEY (event_id);


--
-- Name: work_order_costs work_order_costs_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.work_order_costs
    ADD CONSTRAINT work_order_costs_pkey PRIMARY KEY (id);


--
-- Name: work_order_images work_order_images_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.work_order_images
    ADD CONSTRAINT work_order_images_pkey PRIMARY KEY (id);


--
-- Name: work_order_notes work_order_notes_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.work_order_notes
    ADD CONSTRAINT work_order_notes_pkey PRIMARY KEY (id);


--
-- Name: work_order_status_history work_order_status_history_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.work_order_status_history
    ADD CONSTRAINT work_order_status_history_pkey PRIMARY KEY (id);


--
-- Name: work_orders work_orders_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.work_orders
    ADD CONSTRAINT work_orders_pkey PRIMARY KEY (id);


--
-- Name: messages messages_pkey; Type: CONSTRAINT; Schema: realtime; Owner: supabase_realtime_admin
--

ALTER TABLE ONLY realtime.messages
    ADD CONSTRAINT messages_pkey PRIMARY KEY (id, inserted_at);


--
-- Name: messages_2025_07_17 messages_2025_07_17_pkey; Type: CONSTRAINT; Schema: realtime; Owner: supabase_admin
--

ALTER TABLE ONLY realtime.messages_2025_07_17
    ADD CONSTRAINT messages_2025_07_17_pkey PRIMARY KEY (id, inserted_at);


--
-- Name: messages_2025_07_18 messages_2025_07_18_pkey; Type: CONSTRAINT; Schema: realtime; Owner: supabase_admin
--

ALTER TABLE ONLY realtime.messages_2025_07_18
    ADD CONSTRAINT messages_2025_07_18_pkey PRIMARY KEY (id, inserted_at);


--
-- Name: messages_2025_07_19 messages_2025_07_19_pkey; Type: CONSTRAINT; Schema: realtime; Owner: supabase_admin
--

ALTER TABLE ONLY realtime.messages_2025_07_19
    ADD CONSTRAINT messages_2025_07_19_pkey PRIMARY KEY (id, inserted_at);


--
-- Name: messages_2025_07_20 messages_2025_07_20_pkey; Type: CONSTRAINT; Schema: realtime; Owner: supabase_admin
--

ALTER TABLE ONLY realtime.messages_2025_07_20
    ADD CONSTRAINT messages_2025_07_20_pkey PRIMARY KEY (id, inserted_at);


--
-- Name: messages_2025_07_21 messages_2025_07_21_pkey; Type: CONSTRAINT; Schema: realtime; Owner: supabase_admin
--

ALTER TABLE ONLY realtime.messages_2025_07_21
    ADD CONSTRAINT messages_2025_07_21_pkey PRIMARY KEY (id, inserted_at);


--
-- Name: subscription pk_subscription; Type: CONSTRAINT; Schema: realtime; Owner: supabase_admin
--

ALTER TABLE ONLY realtime.subscription
    ADD CONSTRAINT pk_subscription PRIMARY KEY (id);


--
-- Name: schema_migrations schema_migrations_pkey; Type: CONSTRAINT; Schema: realtime; Owner: supabase_admin
--

ALTER TABLE ONLY realtime.schema_migrations
    ADD CONSTRAINT schema_migrations_pkey PRIMARY KEY (version);


--
-- Name: buckets_analytics buckets_analytics_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.buckets_analytics
    ADD CONSTRAINT buckets_analytics_pkey PRIMARY KEY (id);


--
-- Name: buckets buckets_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.buckets
    ADD CONSTRAINT buckets_pkey PRIMARY KEY (id);


--
-- Name: migrations migrations_name_key; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.migrations
    ADD CONSTRAINT migrations_name_key UNIQUE (name);


--
-- Name: migrations migrations_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.migrations
    ADD CONSTRAINT migrations_pkey PRIMARY KEY (id);


--
-- Name: objects objects_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.objects
    ADD CONSTRAINT objects_pkey PRIMARY KEY (id);


--
-- Name: prefixes prefixes_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.prefixes
    ADD CONSTRAINT prefixes_pkey PRIMARY KEY (bucket_id, level, name);


--
-- Name: s3_multipart_uploads_parts s3_multipart_uploads_parts_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.s3_multipart_uploads_parts
    ADD CONSTRAINT s3_multipart_uploads_parts_pkey PRIMARY KEY (id);


--
-- Name: s3_multipart_uploads s3_multipart_uploads_pkey; Type: CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.s3_multipart_uploads
    ADD CONSTRAINT s3_multipart_uploads_pkey PRIMARY KEY (id);


--
-- Name: schema_migrations schema_migrations_idempotency_key_key; Type: CONSTRAINT; Schema: supabase_migrations; Owner: postgres
--

ALTER TABLE ONLY supabase_migrations.schema_migrations
    ADD CONSTRAINT schema_migrations_idempotency_key_key UNIQUE (idempotency_key);


--
-- Name: schema_migrations schema_migrations_pkey; Type: CONSTRAINT; Schema: supabase_migrations; Owner: postgres
--

ALTER TABLE ONLY supabase_migrations.schema_migrations
    ADD CONSTRAINT schema_migrations_pkey PRIMARY KEY (version);


--
-- Name: audit_logs_instance_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX audit_logs_instance_id_idx ON auth.audit_log_entries USING btree (instance_id);


--
-- Name: confirmation_token_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX confirmation_token_idx ON auth.users USING btree (confirmation_token) WHERE ((confirmation_token)::text !~ '^[0-9 ]*$'::text);


--
-- Name: email_change_token_current_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX email_change_token_current_idx ON auth.users USING btree (email_change_token_current) WHERE ((email_change_token_current)::text !~ '^[0-9 ]*$'::text);


--
-- Name: email_change_token_new_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX email_change_token_new_idx ON auth.users USING btree (email_change_token_new) WHERE ((email_change_token_new)::text !~ '^[0-9 ]*$'::text);


--
-- Name: factor_id_created_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX factor_id_created_at_idx ON auth.mfa_factors USING btree (user_id, created_at);


--
-- Name: flow_state_created_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX flow_state_created_at_idx ON auth.flow_state USING btree (created_at DESC);


--
-- Name: identities_email_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX identities_email_idx ON auth.identities USING btree (email text_pattern_ops);


--
-- Name: INDEX identities_email_idx; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON INDEX auth.identities_email_idx IS 'Auth: Ensures indexed queries on the email column';


--
-- Name: identities_user_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX identities_user_id_idx ON auth.identities USING btree (user_id);


--
-- Name: idx_auth_code; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX idx_auth_code ON auth.flow_state USING btree (auth_code);


--
-- Name: idx_user_id_auth_method; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX idx_user_id_auth_method ON auth.flow_state USING btree (user_id, authentication_method);


--
-- Name: mfa_challenge_created_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX mfa_challenge_created_at_idx ON auth.mfa_challenges USING btree (created_at DESC);


--
-- Name: mfa_factors_user_friendly_name_unique; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX mfa_factors_user_friendly_name_unique ON auth.mfa_factors USING btree (friendly_name, user_id) WHERE (TRIM(BOTH FROM friendly_name) <> ''::text);


--
-- Name: mfa_factors_user_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX mfa_factors_user_id_idx ON auth.mfa_factors USING btree (user_id);


--
-- Name: one_time_tokens_relates_to_hash_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX one_time_tokens_relates_to_hash_idx ON auth.one_time_tokens USING hash (relates_to);


--
-- Name: one_time_tokens_token_hash_hash_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX one_time_tokens_token_hash_hash_idx ON auth.one_time_tokens USING hash (token_hash);


--
-- Name: one_time_tokens_user_id_token_type_key; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX one_time_tokens_user_id_token_type_key ON auth.one_time_tokens USING btree (user_id, token_type);


--
-- Name: reauthentication_token_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX reauthentication_token_idx ON auth.users USING btree (reauthentication_token) WHERE ((reauthentication_token)::text !~ '^[0-9 ]*$'::text);


--
-- Name: recovery_token_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX recovery_token_idx ON auth.users USING btree (recovery_token) WHERE ((recovery_token)::text !~ '^[0-9 ]*$'::text);


--
-- Name: refresh_tokens_instance_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX refresh_tokens_instance_id_idx ON auth.refresh_tokens USING btree (instance_id);


--
-- Name: refresh_tokens_instance_id_user_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX refresh_tokens_instance_id_user_id_idx ON auth.refresh_tokens USING btree (instance_id, user_id);


--
-- Name: refresh_tokens_parent_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX refresh_tokens_parent_idx ON auth.refresh_tokens USING btree (parent);


--
-- Name: refresh_tokens_session_id_revoked_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX refresh_tokens_session_id_revoked_idx ON auth.refresh_tokens USING btree (session_id, revoked);


--
-- Name: refresh_tokens_updated_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX refresh_tokens_updated_at_idx ON auth.refresh_tokens USING btree (updated_at DESC);


--
-- Name: saml_providers_sso_provider_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX saml_providers_sso_provider_id_idx ON auth.saml_providers USING btree (sso_provider_id);


--
-- Name: saml_relay_states_created_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX saml_relay_states_created_at_idx ON auth.saml_relay_states USING btree (created_at DESC);


--
-- Name: saml_relay_states_for_email_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX saml_relay_states_for_email_idx ON auth.saml_relay_states USING btree (for_email);


--
-- Name: saml_relay_states_sso_provider_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX saml_relay_states_sso_provider_id_idx ON auth.saml_relay_states USING btree (sso_provider_id);


--
-- Name: sessions_not_after_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX sessions_not_after_idx ON auth.sessions USING btree (not_after DESC);


--
-- Name: sessions_user_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX sessions_user_id_idx ON auth.sessions USING btree (user_id);


--
-- Name: sso_domains_domain_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX sso_domains_domain_idx ON auth.sso_domains USING btree (lower(domain));


--
-- Name: sso_domains_sso_provider_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX sso_domains_sso_provider_id_idx ON auth.sso_domains USING btree (sso_provider_id);


--
-- Name: sso_providers_resource_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX sso_providers_resource_id_idx ON auth.sso_providers USING btree (lower(resource_id));


--
-- Name: sso_providers_resource_id_pattern_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX sso_providers_resource_id_pattern_idx ON auth.sso_providers USING btree (resource_id text_pattern_ops);


--
-- Name: unique_phone_factor_per_user; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX unique_phone_factor_per_user ON auth.mfa_factors USING btree (user_id, phone);


--
-- Name: user_id_created_at_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX user_id_created_at_idx ON auth.sessions USING btree (user_id, created_at);


--
-- Name: users_email_partial_key; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE UNIQUE INDEX users_email_partial_key ON auth.users USING btree (email) WHERE (is_sso_user = false);


--
-- Name: INDEX users_email_partial_key; Type: COMMENT; Schema: auth; Owner: supabase_auth_admin
--

COMMENT ON INDEX auth.users_email_partial_key IS 'Auth: A partial unique index that applies only when is_sso_user is false';


--
-- Name: users_instance_id_email_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX users_instance_id_email_idx ON auth.users USING btree (instance_id, lower((email)::text));


--
-- Name: users_instance_id_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX users_instance_id_idx ON auth.users USING btree (instance_id);


--
-- Name: users_is_anonymous_idx; Type: INDEX; Schema: auth; Owner: supabase_auth_admin
--

CREATE INDEX users_is_anonymous_idx ON auth.users USING btree (is_anonymous);


--
-- Name: geocoded_locations_org_norm_unique; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX geocoded_locations_org_norm_unique ON public.geocoded_locations USING btree (organization_id, normalized_text);


--
-- Name: idx_billing_events_organization_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_billing_events_organization_id ON public.billing_events USING btree (organization_id);


--
-- Name: idx_billing_events_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_billing_events_user_id ON public.billing_events USING btree (user_id);


--
-- Name: idx_billing_usage_organization_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_billing_usage_organization_id ON public.billing_usage USING btree (organization_id);


--
-- Name: idx_customer_contacts_customer_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_customer_contacts_customer_id ON public.customer_contacts USING btree (customer_id);


--
-- Name: idx_customer_contacts_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_customer_contacts_user_id ON public.customer_contacts USING btree (user_id);


--
-- Name: idx_customer_sites_customer_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_customer_sites_customer_id ON public.customer_sites USING btree (customer_id);


--
-- Name: idx_customers_organization_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_customers_organization_id ON public.customers USING btree (organization_id);


--
-- Name: idx_equipment_customer_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_equipment_customer_id ON public.equipment USING btree (customer_id);


--
-- Name: idx_equipment_default_pm_template; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_equipment_default_pm_template ON public.equipment USING btree (default_pm_template_id);


--
-- Name: idx_equipment_import_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_equipment_import_id ON public.equipment USING btree (import_id) WHERE (import_id IS NOT NULL);


--
-- Name: idx_equipment_note_images_equipment_note_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_equipment_note_images_equipment_note_id ON public.equipment_note_images USING btree (equipment_note_id);


--
-- Name: idx_equipment_note_images_uploaded_by; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_equipment_note_images_uploaded_by ON public.equipment_note_images USING btree (uploaded_by);


--
-- Name: idx_equipment_notes_author_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_equipment_notes_author_id ON public.equipment_notes USING btree (author_id);


--
-- Name: idx_equipment_notes_equipment_author; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_equipment_notes_equipment_author ON public.equipment_notes USING btree (equipment_id, author_id);


--
-- Name: idx_equipment_notes_equipment_created; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_equipment_notes_equipment_created ON public.equipment_notes USING btree (equipment_id, created_at);


--
-- Name: idx_equipment_notes_equipment_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_equipment_notes_equipment_id ON public.equipment_notes USING btree (equipment_id);


--
-- Name: idx_equipment_notes_last_modified_by; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_equipment_notes_last_modified_by ON public.equipment_notes USING btree (last_modified_by);


--
-- Name: idx_equipment_organization_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_equipment_organization_id ON public.equipment USING btree (organization_id);


--
-- Name: idx_equipment_team_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_equipment_team_id ON public.equipment USING btree (team_id);


--
-- Name: idx_invitations_offers_account_creation; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_invitations_offers_account_creation ON public.organization_invitations USING btree (offers_account_creation) WHERE (offers_account_creation = true);


--
-- Name: idx_notes_author_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_notes_author_id ON public.notes USING btree (author_id);


--
-- Name: idx_notes_equipment_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_notes_equipment_id ON public.notes USING btree (equipment_id);


--
-- Name: idx_org_invitations_org_status_optimized; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_org_invitations_org_status_optimized ON public.organization_invitations USING btree (organization_id, status) WHERE (status = 'pending'::text);


--
-- Name: idx_org_invitations_pending_unique; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX idx_org_invitations_pending_unique ON public.organization_invitations USING btree (organization_id, lower(TRIM(BOTH FROM email))) WHERE (status = 'pending'::text);


--
-- Name: INDEX idx_org_invitations_pending_unique; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON INDEX public.idx_org_invitations_pending_unique IS 'Ensures only one pending invitation per email per organization, while allowing multiple expired/declined invitations for re-inviting';


--
-- Name: idx_org_members_nonrecursive_admin_check; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_org_members_nonrecursive_admin_check ON public.organization_members USING btree (organization_id, user_id, role, status) WHERE ((role = ANY (ARRAY['owner'::text, 'admin'::text])) AND (status = 'active'::text));


--
-- Name: idx_org_members_nonrecursive_member_check; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_org_members_nonrecursive_member_check ON public.organization_members USING btree (organization_id, user_id, status) WHERE (status = 'active'::text);


--
-- Name: idx_org_members_org_admin_status_optimized; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_org_members_org_admin_status_optimized ON public.organization_members USING btree (organization_id, role, status) WHERE ((role = ANY (ARRAY['owner'::text, 'admin'::text])) AND (status = 'active'::text));


--
-- Name: idx_org_members_org_role_status; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_org_members_org_role_status ON public.organization_members USING btree (organization_id, role, status);


--
-- Name: idx_org_members_user_org_role_status_optimized; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_org_members_user_org_role_status_optimized ON public.organization_members USING btree (user_id, organization_id, role, status) WHERE (status = 'active'::text);


--
-- Name: idx_org_members_user_org_status; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_org_members_user_org_status ON public.organization_members USING btree (user_id, organization_id, status);


--
-- Name: idx_organization_invitations_accepted_by; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_organization_invitations_accepted_by ON public.organization_invitations USING btree (accepted_by);


--
-- Name: idx_organization_invitations_email_org; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_organization_invitations_email_org ON public.organization_invitations USING btree (email, organization_id);


--
-- Name: idx_organization_invitations_invited_by; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_organization_invitations_invited_by ON public.organization_invitations USING btree (invited_by);


--
-- Name: idx_organization_invitations_org_status; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_organization_invitations_org_status ON public.organization_invitations USING btree (organization_id, status) WHERE (status = 'pending'::text);


--
-- Name: idx_organization_invitations_organization_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_organization_invitations_organization_id ON public.organization_invitations USING btree (organization_id);


--
-- Name: idx_organization_invitations_slot_purchase_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_organization_invitations_slot_purchase_id ON public.organization_invitations USING btree (slot_purchase_id);


--
-- Name: idx_organization_invitations_status; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_organization_invitations_status ON public.organization_invitations USING btree (status);


--
-- Name: idx_organization_members_org_role_status; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_organization_members_org_role_status ON public.organization_members USING btree (organization_id, role, status) WHERE ((status = 'active'::text) AND (role = ANY (ARRAY['owner'::text, 'admin'::text])));


--
-- Name: idx_organization_members_org_status; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_organization_members_org_status ON public.organization_members USING btree (organization_id, status);


--
-- Name: idx_organization_members_organization_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_organization_members_organization_id ON public.organization_members USING btree (organization_id);


--
-- Name: idx_organization_members_slot_purchase_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_organization_members_slot_purchase_id ON public.organization_members USING btree (slot_purchase_id);


--
-- Name: idx_organization_members_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_organization_members_user_id ON public.organization_members USING btree (user_id);


--
-- Name: idx_organization_members_user_org_active; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_organization_members_user_org_active ON public.organization_members USING btree (user_id, organization_id, status) WHERE (status = 'active'::text);


--
-- Name: idx_organization_members_user_org_status; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_organization_members_user_org_status ON public.organization_members USING btree (user_id, organization_id, status) WHERE (status = 'active'::text);


--
-- Name: idx_organization_members_user_status; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_organization_members_user_status ON public.organization_members USING btree (user_id, status) WHERE (status = 'active'::text);


--
-- Name: idx_organization_slots_organization_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_organization_slots_organization_id ON public.organization_slots USING btree (organization_id);


--
-- Name: idx_organization_subscriptions_organization_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_organization_subscriptions_organization_id ON public.organization_subscriptions USING btree (organization_id);


--
-- Name: idx_pm_historical; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_pm_historical ON public.preventative_maintenance USING btree (is_historical, organization_id);


--
-- Name: idx_preventative_maintenance_completed_by; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_preventative_maintenance_completed_by ON public.preventative_maintenance USING btree (completed_by);


--
-- Name: idx_preventative_maintenance_created_by; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_preventative_maintenance_created_by ON public.preventative_maintenance USING btree (created_by);


--
-- Name: idx_preventative_maintenance_equipment_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_preventative_maintenance_equipment_id ON public.preventative_maintenance USING btree (equipment_id);


--
-- Name: idx_preventative_maintenance_organization_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_preventative_maintenance_organization_id ON public.preventative_maintenance USING btree (organization_id);


--
-- Name: idx_preventative_maintenance_work_order_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_preventative_maintenance_work_order_id ON public.preventative_maintenance USING btree (work_order_id);


--
-- Name: idx_scans_equipment_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_scans_equipment_id ON public.scans USING btree (equipment_id);


--
-- Name: idx_scans_scanned_by; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_scans_scanned_by ON public.scans USING btree (scanned_by);


--
-- Name: idx_slot_purchases_organization_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_slot_purchases_organization_id ON public.slot_purchases USING btree (organization_id);


--
-- Name: idx_slot_purchases_purchased_by; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_slot_purchases_purchased_by ON public.slot_purchases USING btree (purchased_by);


--
-- Name: idx_stripe_event_logs_subscription_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_stripe_event_logs_subscription_id ON public.stripe_event_logs USING btree (subscription_id);


--
-- Name: idx_stripe_event_logs_type; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_stripe_event_logs_type ON public.stripe_event_logs USING btree (type);


--
-- Name: idx_subscribers_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_subscribers_user_id ON public.subscribers USING btree (user_id);


--
-- Name: idx_team_members_team_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_team_members_team_id ON public.team_members USING btree (team_id);


--
-- Name: idx_team_members_user_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_team_members_user_id ON public.team_members USING btree (user_id);


--
-- Name: idx_team_members_user_team; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_team_members_user_team ON public.team_members USING btree (user_id, team_id);


--
-- Name: idx_teams_organization_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_teams_organization_id ON public.teams USING btree (organization_id);


--
-- Name: idx_user_license_subscriptions_organization_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_user_license_subscriptions_organization_id ON public.user_license_subscriptions USING btree (organization_id);


--
-- Name: idx_work_order_costs_created_by; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_work_order_costs_created_by ON public.work_order_costs USING btree (created_by);


--
-- Name: idx_work_order_costs_work_order_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_work_order_costs_work_order_id ON public.work_order_costs USING btree (work_order_id);


--
-- Name: idx_work_order_images_note_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_work_order_images_note_id ON public.work_order_images USING btree (note_id);


--
-- Name: idx_work_order_images_uploaded_by; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_work_order_images_uploaded_by ON public.work_order_images USING btree (uploaded_by);


--
-- Name: idx_work_order_images_work_order_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_work_order_images_work_order_id ON public.work_order_images USING btree (work_order_id);


--
-- Name: idx_work_order_notes_author_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_work_order_notes_author_id ON public.work_order_notes USING btree (author_id);


--
-- Name: idx_work_order_notes_work_order_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_work_order_notes_work_order_id ON public.work_order_notes USING btree (work_order_id);


--
-- Name: idx_work_orders_assignee_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_work_orders_assignee_id ON public.work_orders USING btree (assignee_id);


--
-- Name: idx_work_orders_assignee_status; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_work_orders_assignee_status ON public.work_orders USING btree (assignee_id, status) WHERE (assignee_id IS NOT NULL);


--
-- Name: idx_work_orders_created_by; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_work_orders_created_by ON public.work_orders USING btree (created_by);


--
-- Name: idx_work_orders_created_date; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_work_orders_created_date ON public.work_orders USING btree (created_date);


--
-- Name: idx_work_orders_due_date; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_work_orders_due_date ON public.work_orders USING btree (due_date);


--
-- Name: idx_work_orders_equipment_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_work_orders_equipment_id ON public.work_orders USING btree (equipment_id);


--
-- Name: idx_work_orders_equipment_status; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_work_orders_equipment_status ON public.work_orders USING btree (equipment_id, status);


--
-- Name: idx_work_orders_historical; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_work_orders_historical ON public.work_orders USING btree (is_historical, organization_id);


--
-- Name: idx_work_orders_org_due_date; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_work_orders_org_due_date ON public.work_orders USING btree (organization_id, due_date) WHERE (due_date IS NOT NULL);


--
-- Name: idx_work_orders_org_status; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_work_orders_org_status ON public.work_orders USING btree (organization_id, status);


--
-- Name: idx_work_orders_organization_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_work_orders_organization_id ON public.work_orders USING btree (organization_id);


--
-- Name: idx_work_orders_priority; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_work_orders_priority ON public.work_orders USING btree (priority);


--
-- Name: idx_work_orders_status; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_work_orders_status ON public.work_orders USING btree (status);


--
-- Name: idx_work_orders_team_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_work_orders_team_id ON public.work_orders USING btree (team_id);


--
-- Name: organization_subscriptions_org_feature_unique; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX organization_subscriptions_org_feature_unique ON public.organization_subscriptions USING btree (organization_id, feature_type);


--
-- Name: ix_realtime_subscription_entity; Type: INDEX; Schema: realtime; Owner: supabase_admin
--

CREATE INDEX ix_realtime_subscription_entity ON realtime.subscription USING btree (entity);


--
-- Name: subscription_subscription_id_entity_filters_key; Type: INDEX; Schema: realtime; Owner: supabase_admin
--

CREATE UNIQUE INDEX subscription_subscription_id_entity_filters_key ON realtime.subscription USING btree (subscription_id, entity, filters);


--
-- Name: bname; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE UNIQUE INDEX bname ON storage.buckets USING btree (name);


--
-- Name: bucketid_objname; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE UNIQUE INDEX bucketid_objname ON storage.objects USING btree (bucket_id, name);


--
-- Name: idx_multipart_uploads_list; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE INDEX idx_multipart_uploads_list ON storage.s3_multipart_uploads USING btree (bucket_id, key, created_at);


--
-- Name: idx_name_bucket_level_unique; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE UNIQUE INDEX idx_name_bucket_level_unique ON storage.objects USING btree (name COLLATE "C", bucket_id, level);


--
-- Name: idx_objects_bucket_id_name; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE INDEX idx_objects_bucket_id_name ON storage.objects USING btree (bucket_id, name COLLATE "C");


--
-- Name: idx_objects_lower_name; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE INDEX idx_objects_lower_name ON storage.objects USING btree ((path_tokens[level]), lower(name) text_pattern_ops, bucket_id, level);


--
-- Name: idx_prefixes_lower_name; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE INDEX idx_prefixes_lower_name ON storage.prefixes USING btree (bucket_id, level, ((string_to_array(name, '/'::text))[level]), lower(name) text_pattern_ops);


--
-- Name: name_prefix_search; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE INDEX name_prefix_search ON storage.objects USING btree (name text_pattern_ops);


--
-- Name: objects_bucket_id_level_idx; Type: INDEX; Schema: storage; Owner: supabase_storage_admin
--

CREATE UNIQUE INDEX objects_bucket_id_level_idx ON storage.objects USING btree (bucket_id, level, name COLLATE "C");


--
-- Name: messages_2025_07_17_pkey; Type: INDEX ATTACH; Schema: realtime; Owner: supabase_realtime_admin
--

ALTER INDEX realtime.messages_pkey ATTACH PARTITION realtime.messages_2025_07_17_pkey;


--
-- Name: messages_2025_07_18_pkey; Type: INDEX ATTACH; Schema: realtime; Owner: supabase_realtime_admin
--

ALTER INDEX realtime.messages_pkey ATTACH PARTITION realtime.messages_2025_07_18_pkey;


--
-- Name: messages_2025_07_19_pkey; Type: INDEX ATTACH; Schema: realtime; Owner: supabase_realtime_admin
--

ALTER INDEX realtime.messages_pkey ATTACH PARTITION realtime.messages_2025_07_19_pkey;


--
-- Name: messages_2025_07_20_pkey; Type: INDEX ATTACH; Schema: realtime; Owner: supabase_realtime_admin
--

ALTER INDEX realtime.messages_pkey ATTACH PARTITION realtime.messages_2025_07_20_pkey;


--
-- Name: messages_2025_07_21_pkey; Type: INDEX ATTACH; Schema: realtime; Owner: supabase_realtime_admin
--

ALTER INDEX realtime.messages_pkey ATTACH PARTITION realtime.messages_2025_07_21_pkey;


--
-- Name: users on_auth_user_created; Type: TRIGGER; Schema: auth; Owner: supabase_auth_admin
--

CREATE TRIGGER on_auth_user_created AFTER INSERT ON auth.users FOR EACH ROW EXECUTE FUNCTION public.handle_new_user();


--
-- Name: teams before_team_delete; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER before_team_delete BEFORE DELETE ON public.teams FOR EACH ROW EXECUTE FUNCTION public.handle_team_deletion();


--
-- Name: organization_invitations expire_invitations_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER expire_invitations_trigger AFTER INSERT OR UPDATE ON public.organization_invitations FOR EACH STATEMENT EXECUTE FUNCTION public.expire_old_invitations();


--
-- Name: organization_invitations expire_old_invitations_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER expire_old_invitations_trigger AFTER INSERT ON public.organization_invitations FOR EACH STATEMENT EXECUTE FUNCTION public.expire_old_invitations();


--
-- Name: equipment handle_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER handle_updated_at BEFORE UPDATE ON public.equipment FOR EACH ROW EXECUTE FUNCTION public.handle_updated_at();


--
-- Name: notes handle_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER handle_updated_at BEFORE UPDATE ON public.notes FOR EACH ROW EXECUTE FUNCTION public.handle_updated_at();


--
-- Name: organizations handle_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER handle_updated_at BEFORE UPDATE ON public.organizations FOR EACH ROW EXECUTE FUNCTION public.handle_updated_at();


--
-- Name: profiles handle_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER handle_updated_at BEFORE UPDATE ON public.profiles FOR EACH ROW EXECUTE FUNCTION public.handle_updated_at();


--
-- Name: teams handle_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER handle_updated_at BEFORE UPDATE ON public.teams FOR EACH ROW EXECUTE FUNCTION public.handle_updated_at();


--
-- Name: work_orders handle_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER handle_updated_at BEFORE UPDATE ON public.work_orders FOR EACH ROW EXECUTE FUNCTION public.handle_updated_at();


--
-- Name: equipment_notes handle_updated_at_equipment_notes; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER handle_updated_at_equipment_notes BEFORE UPDATE ON public.equipment_notes FOR EACH ROW EXECUTE FUNCTION public.handle_updated_at();


--
-- Name: notifications handle_updated_at_notifications; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER handle_updated_at_notifications BEFORE UPDATE ON public.notifications FOR EACH ROW EXECUTE FUNCTION public.handle_updated_at();


--
-- Name: organization_slots handle_updated_at_organization_slots; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER handle_updated_at_organization_slots BEFORE UPDATE ON public.organization_slots FOR EACH ROW EXECUTE FUNCTION public.handle_updated_at();


--
-- Name: slot_purchases handle_updated_at_slot_purchases; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER handle_updated_at_slot_purchases BEFORE UPDATE ON public.slot_purchases FOR EACH ROW EXECUTE FUNCTION public.handle_updated_at();


--
-- Name: user_license_subscriptions handle_updated_at_user_license_subscriptions; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER handle_updated_at_user_license_subscriptions BEFORE UPDATE ON public.user_license_subscriptions FOR EACH ROW EXECUTE FUNCTION public.handle_updated_at();


--
-- Name: work_order_notes handle_updated_at_work_order_notes; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER handle_updated_at_work_order_notes BEFORE UPDATE ON public.work_order_notes FOR EACH ROW EXECUTE FUNCTION public.handle_updated_at();


--
-- Name: organization_members organization_member_billing_update; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER organization_member_billing_update AFTER INSERT OR DELETE OR UPDATE ON public.organization_members FOR EACH ROW EXECUTE FUNCTION public.handle_membership_billing_update();


--
-- Name: preventative_maintenance pm_status_change_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER pm_status_change_trigger AFTER UPDATE ON public.preventative_maintenance FOR EACH ROW EXECUTE FUNCTION public.log_pm_status_change();


--
-- Name: pm_checklist_templates trg_pm_checklist_templates_touch; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trg_pm_checklist_templates_touch BEFORE UPDATE ON public.pm_checklist_templates FOR EACH ROW EXECUTE FUNCTION public.touch_updated_at();


--
-- Name: geocoded_locations trg_set_geocoded_locations_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trg_set_geocoded_locations_updated_at BEFORE UPDATE ON public.geocoded_locations FOR EACH ROW EXECUTE FUNCTION public.set_geocoded_locations_updated_at();


--
-- Name: work_orders trg_work_orders_touch; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trg_work_orders_touch BEFORE UPDATE ON public.work_orders FOR EACH ROW EXECUTE FUNCTION public.touch_updated_at();


--
-- Name: organization_members trigger_update_member_count; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trigger_update_member_count AFTER INSERT OR DELETE OR UPDATE ON public.organization_members FOR EACH ROW EXECUTE FUNCTION public.update_organization_member_count();


--
-- Name: preventative_maintenance trigger_update_pm_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trigger_update_pm_updated_at BEFORE UPDATE ON public.preventative_maintenance FOR EACH ROW EXECUTE FUNCTION public.update_pm_updated_at();


--
-- Name: organization_members trigger_validate_member_limit; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trigger_validate_member_limit BEFORE INSERT OR UPDATE ON public.organization_members FOR EACH ROW EXECUTE FUNCTION public.validate_member_limit();


--
-- Name: notification_preferences update_notification_preferences_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_notification_preferences_updated_at BEFORE UPDATE ON public.notification_preferences FOR EACH ROW EXECUTE FUNCTION public.handle_updated_at();


--
-- Name: organization_invitations update_organization_invitations_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_organization_invitations_updated_at BEFORE UPDATE ON public.organization_invitations FOR EACH ROW EXECUTE FUNCTION public.handle_updated_at();


--
-- Name: organization_subscriptions update_organization_subscriptions_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_organization_subscriptions_updated_at BEFORE UPDATE ON public.organization_subscriptions FOR EACH ROW EXECUTE FUNCTION public.handle_updated_at();


--
-- Name: subscribers update_subscribers_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_subscribers_updated_at BEFORE UPDATE ON public.subscribers FOR EACH ROW EXECUTE FUNCTION public.handle_updated_at();


--
-- Name: work_orders update_work_orders_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_work_orders_updated_at BEFORE UPDATE ON public.work_orders FOR EACH ROW EXECUTE FUNCTION public.update_updated_at_column();


--
-- Name: work_order_costs work_order_costs_updated_at; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER work_order_costs_updated_at BEFORE UPDATE ON public.work_order_costs FOR EACH ROW EXECUTE FUNCTION public.update_work_order_costs_updated_at();


--
-- Name: work_orders work_order_status_change_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER work_order_status_change_trigger AFTER UPDATE ON public.work_orders FOR EACH ROW EXECUTE FUNCTION public.log_work_order_status_change();


--
-- Name: subscription tr_check_filters; Type: TRIGGER; Schema: realtime; Owner: supabase_admin
--

CREATE TRIGGER tr_check_filters BEFORE INSERT OR UPDATE ON realtime.subscription FOR EACH ROW EXECUTE FUNCTION realtime.subscription_check_filters();


--
-- Name: buckets enforce_bucket_name_length_trigger; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER enforce_bucket_name_length_trigger BEFORE INSERT OR UPDATE OF name ON storage.buckets FOR EACH ROW EXECUTE FUNCTION storage.enforce_bucket_name_length();


--
-- Name: objects objects_delete_delete_prefix; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER objects_delete_delete_prefix AFTER DELETE ON storage.objects FOR EACH ROW EXECUTE FUNCTION storage.delete_prefix_hierarchy_trigger();


--
-- Name: objects objects_insert_create_prefix; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER objects_insert_create_prefix BEFORE INSERT ON storage.objects FOR EACH ROW EXECUTE FUNCTION storage.objects_insert_prefix_trigger();


--
-- Name: objects objects_update_create_prefix; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER objects_update_create_prefix BEFORE UPDATE ON storage.objects FOR EACH ROW WHEN (((new.name <> old.name) OR (new.bucket_id <> old.bucket_id))) EXECUTE FUNCTION storage.objects_update_prefix_trigger();


--
-- Name: prefixes prefixes_create_hierarchy; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER prefixes_create_hierarchy BEFORE INSERT ON storage.prefixes FOR EACH ROW WHEN ((pg_trigger_depth() < 1)) EXECUTE FUNCTION storage.prefixes_insert_trigger();


--
-- Name: prefixes prefixes_delete_hierarchy; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER prefixes_delete_hierarchy AFTER DELETE ON storage.prefixes FOR EACH ROW EXECUTE FUNCTION storage.delete_prefix_hierarchy_trigger();


--
-- Name: objects update_objects_updated_at; Type: TRIGGER; Schema: storage; Owner: supabase_storage_admin
--

CREATE TRIGGER update_objects_updated_at BEFORE UPDATE ON storage.objects FOR EACH ROW EXECUTE FUNCTION storage.update_updated_at_column();


--
-- Name: identities identities_user_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.identities
    ADD CONSTRAINT identities_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: mfa_amr_claims mfa_amr_claims_session_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_amr_claims
    ADD CONSTRAINT mfa_amr_claims_session_id_fkey FOREIGN KEY (session_id) REFERENCES auth.sessions(id) ON DELETE CASCADE;


--
-- Name: mfa_challenges mfa_challenges_auth_factor_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_challenges
    ADD CONSTRAINT mfa_challenges_auth_factor_id_fkey FOREIGN KEY (factor_id) REFERENCES auth.mfa_factors(id) ON DELETE CASCADE;


--
-- Name: mfa_factors mfa_factors_user_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.mfa_factors
    ADD CONSTRAINT mfa_factors_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: one_time_tokens one_time_tokens_user_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.one_time_tokens
    ADD CONSTRAINT one_time_tokens_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: refresh_tokens refresh_tokens_session_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.refresh_tokens
    ADD CONSTRAINT refresh_tokens_session_id_fkey FOREIGN KEY (session_id) REFERENCES auth.sessions(id) ON DELETE CASCADE;


--
-- Name: saml_providers saml_providers_sso_provider_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.saml_providers
    ADD CONSTRAINT saml_providers_sso_provider_id_fkey FOREIGN KEY (sso_provider_id) REFERENCES auth.sso_providers(id) ON DELETE CASCADE;


--
-- Name: saml_relay_states saml_relay_states_flow_state_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.saml_relay_states
    ADD CONSTRAINT saml_relay_states_flow_state_id_fkey FOREIGN KEY (flow_state_id) REFERENCES auth.flow_state(id) ON DELETE CASCADE;


--
-- Name: saml_relay_states saml_relay_states_sso_provider_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.saml_relay_states
    ADD CONSTRAINT saml_relay_states_sso_provider_id_fkey FOREIGN KEY (sso_provider_id) REFERENCES auth.sso_providers(id) ON DELETE CASCADE;


--
-- Name: sessions sessions_user_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.sessions
    ADD CONSTRAINT sessions_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: sso_domains sso_domains_sso_provider_id_fkey; Type: FK CONSTRAINT; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE ONLY auth.sso_domains
    ADD CONSTRAINT sso_domains_sso_provider_id_fkey FOREIGN KEY (sso_provider_id) REFERENCES auth.sso_providers(id) ON DELETE CASCADE;


--
-- Name: billing_events billing_events_organization_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.billing_events
    ADD CONSTRAINT billing_events_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id) ON DELETE CASCADE;


--
-- Name: billing_events billing_events_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.billing_events
    ADD CONSTRAINT billing_events_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE SET NULL;


--
-- Name: billing_exemptions billing_exemptions_granted_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.billing_exemptions
    ADD CONSTRAINT billing_exemptions_granted_by_fkey FOREIGN KEY (granted_by) REFERENCES auth.users(id);


--
-- Name: billing_exemptions billing_exemptions_organization_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.billing_exemptions
    ADD CONSTRAINT billing_exemptions_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id) ON DELETE CASCADE;


--
-- Name: billing_usage billing_usage_organization_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.billing_usage
    ADD CONSTRAINT billing_usage_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id) ON DELETE CASCADE;


--
-- Name: customer_contacts customer_contacts_customer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customer_contacts
    ADD CONSTRAINT customer_contacts_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id) ON DELETE CASCADE;


--
-- Name: customer_contacts customer_contacts_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customer_contacts
    ADD CONSTRAINT customer_contacts_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id) ON DELETE CASCADE;


--
-- Name: customer_sites customer_sites_customer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customer_sites
    ADD CONSTRAINT customer_sites_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id) ON DELETE CASCADE;


--
-- Name: customers customers_organization_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customers
    ADD CONSTRAINT customers_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id);


--
-- Name: equipment equipment_customer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.equipment
    ADD CONSTRAINT equipment_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id) ON DELETE SET NULL;


--
-- Name: equipment equipment_default_pm_template_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.equipment
    ADD CONSTRAINT equipment_default_pm_template_id_fkey FOREIGN KEY (default_pm_template_id) REFERENCES public.pm_checklist_templates(id) ON DELETE SET NULL;


--
-- Name: equipment_note_images equipment_note_images_equipment_note_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.equipment_note_images
    ADD CONSTRAINT equipment_note_images_equipment_note_id_fkey FOREIGN KEY (equipment_note_id) REFERENCES public.equipment_notes(id) ON DELETE CASCADE;


--
-- Name: equipment_note_images equipment_note_images_uploaded_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.equipment_note_images
    ADD CONSTRAINT equipment_note_images_uploaded_by_fkey FOREIGN KEY (uploaded_by) REFERENCES public.profiles(id) ON DELETE CASCADE;


--
-- Name: equipment_notes equipment_notes_author_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.equipment_notes
    ADD CONSTRAINT equipment_notes_author_id_fkey FOREIGN KEY (author_id) REFERENCES public.profiles(id) ON DELETE CASCADE;


--
-- Name: equipment_notes equipment_notes_equipment_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.equipment_notes
    ADD CONSTRAINT equipment_notes_equipment_id_fkey FOREIGN KEY (equipment_id) REFERENCES public.equipment(id) ON DELETE CASCADE;


--
-- Name: equipment_notes equipment_notes_last_modified_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.equipment_notes
    ADD CONSTRAINT equipment_notes_last_modified_by_fkey FOREIGN KEY (last_modified_by) REFERENCES public.profiles(id) ON DELETE SET NULL;


--
-- Name: equipment equipment_organization_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.equipment
    ADD CONSTRAINT equipment_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id) ON DELETE CASCADE;


--
-- Name: equipment equipment_team_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.equipment
    ADD CONSTRAINT equipment_team_id_fkey FOREIGN KEY (team_id) REFERENCES public.teams(id);


--
-- Name: preventative_maintenance fk_pm_equipment; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.preventative_maintenance
    ADD CONSTRAINT fk_pm_equipment FOREIGN KEY (equipment_id) REFERENCES public.equipment(id) ON DELETE CASCADE;


--
-- Name: preventative_maintenance fk_pm_organization; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.preventative_maintenance
    ADD CONSTRAINT fk_pm_organization FOREIGN KEY (organization_id) REFERENCES public.organizations(id) ON DELETE CASCADE;


--
-- Name: preventative_maintenance fk_pm_work_order; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.preventative_maintenance
    ADD CONSTRAINT fk_pm_work_order FOREIGN KEY (work_order_id) REFERENCES public.work_orders(id) ON DELETE CASCADE;


--
-- Name: work_order_notes fk_work_order_notes_author; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.work_order_notes
    ADD CONSTRAINT fk_work_order_notes_author FOREIGN KEY (author_id) REFERENCES public.profiles(id) ON DELETE CASCADE;


--
-- Name: geocoded_locations geocoded_locations_organization_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.geocoded_locations
    ADD CONSTRAINT geocoded_locations_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id) ON DELETE CASCADE;


--
-- Name: notes notes_author_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notes
    ADD CONSTRAINT notes_author_id_fkey FOREIGN KEY (author_id) REFERENCES public.profiles(id);


--
-- Name: notes notes_equipment_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notes
    ADD CONSTRAINT notes_equipment_id_fkey FOREIGN KEY (equipment_id) REFERENCES public.equipment(id) ON DELETE CASCADE;


--
-- Name: notification_preferences notification_preferences_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notification_preferences
    ADD CONSTRAINT notification_preferences_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: organization_invitations organization_invitations_accepted_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.organization_invitations
    ADD CONSTRAINT organization_invitations_accepted_by_fkey FOREIGN KEY (accepted_by) REFERENCES public.profiles(id) ON DELETE SET NULL;


--
-- Name: organization_invitations organization_invitations_invited_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.organization_invitations
    ADD CONSTRAINT organization_invitations_invited_by_fkey FOREIGN KEY (invited_by) REFERENCES public.profiles(id) ON DELETE CASCADE;


--
-- Name: organization_invitations organization_invitations_organization_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.organization_invitations
    ADD CONSTRAINT organization_invitations_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id) ON DELETE CASCADE;


--
-- Name: organization_invitations organization_invitations_slot_purchase_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.organization_invitations
    ADD CONSTRAINT organization_invitations_slot_purchase_id_fkey FOREIGN KEY (slot_purchase_id) REFERENCES public.slot_purchases(id);


--
-- Name: organization_members organization_members_organization_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.organization_members
    ADD CONSTRAINT organization_members_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id) ON DELETE CASCADE;


--
-- Name: organization_members organization_members_slot_purchase_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.organization_members
    ADD CONSTRAINT organization_members_slot_purchase_id_fkey FOREIGN KEY (slot_purchase_id) REFERENCES public.slot_purchases(id);


--
-- Name: organization_members organization_members_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.organization_members
    ADD CONSTRAINT organization_members_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id) ON DELETE CASCADE;


--
-- Name: organization_slots organization_slots_organization_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.organization_slots
    ADD CONSTRAINT organization_slots_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id) ON DELETE CASCADE;


--
-- Name: organization_subscriptions organization_subscriptions_organization_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.organization_subscriptions
    ADD CONSTRAINT organization_subscriptions_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id) ON DELETE CASCADE;


--
-- Name: pm_checklist_templates pm_checklist_templates_created_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pm_checklist_templates
    ADD CONSTRAINT pm_checklist_templates_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id) ON DELETE RESTRICT;


--
-- Name: pm_checklist_templates pm_checklist_templates_organization_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pm_checklist_templates
    ADD CONSTRAINT pm_checklist_templates_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id) ON DELETE CASCADE;


--
-- Name: pm_checklist_templates pm_checklist_templates_updated_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pm_checklist_templates
    ADD CONSTRAINT pm_checklist_templates_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.profiles(id) ON DELETE RESTRICT;


--
-- Name: pm_status_history pm_status_history_changed_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pm_status_history
    ADD CONSTRAINT pm_status_history_changed_by_fkey FOREIGN KEY (changed_by) REFERENCES public.profiles(id);


--
-- Name: pm_status_history pm_status_history_pm_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pm_status_history
    ADD CONSTRAINT pm_status_history_pm_id_fkey FOREIGN KEY (pm_id) REFERENCES public.preventative_maintenance(id) ON DELETE CASCADE;


--
-- Name: preventative_maintenance preventative_maintenance_template_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.preventative_maintenance
    ADD CONSTRAINT preventative_maintenance_template_id_fkey FOREIGN KEY (template_id) REFERENCES public.pm_checklist_templates(id) ON DELETE SET NULL;


--
-- Name: profiles profiles_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.profiles
    ADD CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: scans scans_equipment_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scans
    ADD CONSTRAINT scans_equipment_id_fkey FOREIGN KEY (equipment_id) REFERENCES public.equipment(id) ON DELETE CASCADE;


--
-- Name: scans scans_scanned_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scans
    ADD CONSTRAINT scans_scanned_by_fkey FOREIGN KEY (scanned_by) REFERENCES public.profiles(id);


--
-- Name: slot_purchases slot_purchases_organization_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.slot_purchases
    ADD CONSTRAINT slot_purchases_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id) ON DELETE CASCADE;


--
-- Name: slot_purchases slot_purchases_purchased_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.slot_purchases
    ADD CONSTRAINT slot_purchases_purchased_by_fkey FOREIGN KEY (purchased_by) REFERENCES public.profiles(id);


--
-- Name: subscribers subscribers_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.subscribers
    ADD CONSTRAINT subscribers_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: team_members team_members_team_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_members
    ADD CONSTRAINT team_members_team_id_fkey FOREIGN KEY (team_id) REFERENCES public.teams(id) ON DELETE CASCADE;


--
-- Name: team_members team_members_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.team_members
    ADD CONSTRAINT team_members_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id) ON DELETE CASCADE;


--
-- Name: teams teams_organization_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.teams
    ADD CONSTRAINT teams_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id) ON DELETE CASCADE;


--
-- Name: user_license_subscriptions user_license_subscriptions_organization_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_license_subscriptions
    ADD CONSTRAINT user_license_subscriptions_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id) ON DELETE CASCADE;


--
-- Name: work_order_costs work_order_costs_created_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.work_order_costs
    ADD CONSTRAINT work_order_costs_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id);


--
-- Name: work_order_costs work_order_costs_work_order_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.work_order_costs
    ADD CONSTRAINT work_order_costs_work_order_id_fkey FOREIGN KEY (work_order_id) REFERENCES public.work_orders(id) ON DELETE CASCADE;


--
-- Name: work_order_images work_order_images_note_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.work_order_images
    ADD CONSTRAINT work_order_images_note_id_fkey FOREIGN KEY (note_id) REFERENCES public.work_order_notes(id) ON DELETE CASCADE;


--
-- Name: work_order_status_history work_order_status_history_changed_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.work_order_status_history
    ADD CONSTRAINT work_order_status_history_changed_by_fkey FOREIGN KEY (changed_by) REFERENCES public.profiles(id);


--
-- Name: work_order_status_history work_order_status_history_work_order_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.work_order_status_history
    ADD CONSTRAINT work_order_status_history_work_order_id_fkey FOREIGN KEY (work_order_id) REFERENCES public.work_orders(id) ON DELETE CASCADE;


--
-- Name: work_orders work_orders_assignee_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.work_orders
    ADD CONSTRAINT work_orders_assignee_id_fkey FOREIGN KEY (assignee_id) REFERENCES public.profiles(id);


--
-- Name: work_orders work_orders_created_by_admin_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.work_orders
    ADD CONSTRAINT work_orders_created_by_admin_fkey FOREIGN KEY (created_by_admin) REFERENCES auth.users(id);


--
-- Name: work_orders work_orders_created_by_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.work_orders
    ADD CONSTRAINT work_orders_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id);


--
-- Name: work_orders work_orders_equipment_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.work_orders
    ADD CONSTRAINT work_orders_equipment_id_fkey FOREIGN KEY (equipment_id) REFERENCES public.equipment(id) ON DELETE CASCADE;


--
-- Name: work_orders work_orders_organization_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.work_orders
    ADD CONSTRAINT work_orders_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.organizations(id) ON DELETE CASCADE;


--
-- Name: objects objects_bucketId_fkey; Type: FK CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.objects
    ADD CONSTRAINT "objects_bucketId_fkey" FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id);


--
-- Name: prefixes prefixes_bucketId_fkey; Type: FK CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.prefixes
    ADD CONSTRAINT "prefixes_bucketId_fkey" FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id);


--
-- Name: s3_multipart_uploads s3_multipart_uploads_bucket_id_fkey; Type: FK CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.s3_multipart_uploads
    ADD CONSTRAINT s3_multipart_uploads_bucket_id_fkey FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id);


--
-- Name: s3_multipart_uploads_parts s3_multipart_uploads_parts_bucket_id_fkey; Type: FK CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.s3_multipart_uploads_parts
    ADD CONSTRAINT s3_multipart_uploads_parts_bucket_id_fkey FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id);


--
-- Name: s3_multipart_uploads_parts s3_multipart_uploads_parts_upload_id_fkey; Type: FK CONSTRAINT; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE ONLY storage.s3_multipart_uploads_parts
    ADD CONSTRAINT s3_multipart_uploads_parts_upload_id_fkey FOREIGN KEY (upload_id) REFERENCES storage.s3_multipart_uploads(id) ON DELETE CASCADE;


--
-- Name: audit_log_entries; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.audit_log_entries ENABLE ROW LEVEL SECURITY;

--
-- Name: flow_state; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.flow_state ENABLE ROW LEVEL SECURITY;

--
-- Name: identities; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.identities ENABLE ROW LEVEL SECURITY;

--
-- Name: instances; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.instances ENABLE ROW LEVEL SECURITY;

--
-- Name: mfa_amr_claims; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.mfa_amr_claims ENABLE ROW LEVEL SECURITY;

--
-- Name: mfa_challenges; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.mfa_challenges ENABLE ROW LEVEL SECURITY;

--
-- Name: mfa_factors; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.mfa_factors ENABLE ROW LEVEL SECURITY;

--
-- Name: one_time_tokens; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.one_time_tokens ENABLE ROW LEVEL SECURITY;

--
-- Name: refresh_tokens; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.refresh_tokens ENABLE ROW LEVEL SECURITY;

--
-- Name: saml_providers; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.saml_providers ENABLE ROW LEVEL SECURITY;

--
-- Name: saml_relay_states; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.saml_relay_states ENABLE ROW LEVEL SECURITY;

--
-- Name: schema_migrations; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.schema_migrations ENABLE ROW LEVEL SECURITY;

--
-- Name: sessions; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.sessions ENABLE ROW LEVEL SECURITY;

--
-- Name: sso_domains; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.sso_domains ENABLE ROW LEVEL SECURITY;

--
-- Name: sso_providers; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.sso_providers ENABLE ROW LEVEL SECURITY;

--
-- Name: users; Type: ROW SECURITY; Schema: auth; Owner: supabase_auth_admin
--

ALTER TABLE auth.users ENABLE ROW LEVEL SECURITY;

--
-- Name: preventative_maintenance Admins can create historical PM; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admins can create historical PM" ON public.preventative_maintenance FOR INSERT WITH CHECK (((is_historical = true) AND public.is_org_admin(auth.uid(), organization_id)));


--
-- Name: work_orders Admins can create historical work orders; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admins can create historical work orders" ON public.work_orders FOR INSERT WITH CHECK (((is_historical = true) AND public.is_org_admin(auth.uid(), organization_id) AND (created_by_admin = auth.uid())));


--
-- Name: work_orders Admins can delete work orders; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admins can delete work orders" ON public.work_orders FOR DELETE USING ((organization_id IN ( SELECT organization_members.organization_id
   FROM public.organization_members
  WHERE ((organization_members.user_id = auth.uid()) AND (organization_members.role = ANY (ARRAY['owner'::text, 'admin'::text])) AND (organization_members.status = 'active'::text)))));


--
-- Name: equipment_working_hours_history Admins can delete working hours history; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admins can delete working hours history" ON public.equipment_working_hours_history FOR DELETE USING ((EXISTS ( SELECT 1
   FROM public.equipment e
  WHERE ((e.id = equipment_working_hours_history.equipment_id) AND public.is_org_admin(auth.uid(), e.organization_id)))));


--
-- Name: pm_status_history Admins can insert PM history; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admins can insert PM history" ON public.pm_status_history FOR INSERT WITH CHECK (((EXISTS ( SELECT 1
   FROM public.preventative_maintenance pm
  WHERE ((pm.id = pm_status_history.pm_id) AND public.is_org_admin(auth.uid(), pm.organization_id)))) AND (changed_by = auth.uid())));


--
-- Name: pm_status_history Admins can insert PM status history; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admins can insert PM status history" ON public.pm_status_history FOR INSERT WITH CHECK (((EXISTS ( SELECT 1
   FROM public.preventative_maintenance pm
  WHERE ((pm.id = pm_status_history.pm_id) AND public.is_org_admin(auth.uid(), pm.organization_id)))) AND (changed_by = auth.uid())));


--
-- Name: work_order_status_history Admins can insert work order history; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admins can insert work order history" ON public.work_order_status_history FOR INSERT WITH CHECK (((EXISTS ( SELECT 1
   FROM public.work_orders wo
  WHERE ((wo.id = work_order_status_history.work_order_id) AND public.is_org_admin(auth.uid(), wo.organization_id)))) AND (changed_by = auth.uid())));


--
-- Name: preventative_maintenance Admins can update historical PM; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admins can update historical PM" ON public.preventative_maintenance FOR UPDATE USING (((is_historical = true) AND public.is_org_admin(auth.uid(), organization_id)));


--
-- Name: work_orders Admins can update historical work orders; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admins can update historical work orders" ON public.work_orders FOR UPDATE USING (((is_historical = true) AND public.is_org_admin(auth.uid(), organization_id)));


--
-- Name: equipment_working_hours_history Admins can update working hours history; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admins can update working hours history" ON public.equipment_working_hours_history FOR UPDATE USING ((EXISTS ( SELECT 1
   FROM public.equipment e
  WHERE ((e.id = equipment_working_hours_history.equipment_id) AND public.is_org_admin(auth.uid(), e.organization_id)))));


--
-- Name: billing_events Admins can view billing events; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Admins can view billing events" ON public.billing_events FOR SELECT USING ((organization_id IN ( SELECT organization_members.organization_id
   FROM public.organization_members
  WHERE ((organization_members.user_id = auth.uid()) AND (organization_members.role = ANY (ARRAY['owner'::text, 'admin'::text])) AND (organization_members.status = 'active'::text)))));


--
-- Name: member_removal_audit Org admins can view removal audit; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Org admins can view removal audit" ON public.member_removal_audit FOR SELECT USING ((EXISTS ( SELECT 1
   FROM public.organization_members om
  WHERE ((om.organization_id = member_removal_audit.organization_id) AND (om.user_id = auth.uid()) AND (om.role = ANY (ARRAY['owner'::text, 'admin'::text])) AND (om.status = 'active'::text)))));


--
-- Name: billing_events Prevent unauthorized billing_events deletes; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Prevent unauthorized billing_events deletes" ON public.billing_events FOR DELETE USING (false);


--
-- Name: billing_events Prevent unauthorized billing_events updates; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Prevent unauthorized billing_events updates" ON public.billing_events FOR UPDATE USING (false);


--
-- Name: billing_usage Prevent unauthorized billing_usage deletes; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Prevent unauthorized billing_usage deletes" ON public.billing_usage FOR DELETE USING (false);


--
-- Name: billing_usage Prevent unauthorized billing_usage inserts; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Prevent unauthorized billing_usage inserts" ON public.billing_usage FOR INSERT WITH CHECK (false);


--
-- Name: billing_usage Prevent unauthorized billing_usage updates; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Prevent unauthorized billing_usage updates" ON public.billing_usage FOR UPDATE USING (false);


--
-- Name: billing_exemptions Prevent unauthorized exemption deletes; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Prevent unauthorized exemption deletes" ON public.billing_exemptions FOR DELETE USING ((EXISTS ( SELECT 1
   FROM public.organization_members om
  WHERE ((om.organization_id = billing_exemptions.organization_id) AND (om.user_id = auth.uid()) AND (om.role = 'owner'::text) AND (om.status = 'active'::text)))));


--
-- Name: user_license_subscriptions Restrict license subscription deletes; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Restrict license subscription deletes" ON public.user_license_subscriptions FOR DELETE USING ((EXISTS ( SELECT 1
   FROM public.organization_members om
  WHERE ((om.organization_id = user_license_subscriptions.organization_id) AND (om.user_id = auth.uid()) AND (om.role = ANY (ARRAY['owner'::text, 'admin'::text])) AND (om.status = 'active'::text)))));


--
-- Name: slot_purchases Restrict purchases viewing to active org members; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Restrict purchases viewing to active org members" ON public.slot_purchases FOR SELECT USING ((EXISTS ( SELECT 1
   FROM public.organization_members om
  WHERE ((om.organization_id = slot_purchases.organization_id) AND (om.user_id = auth.uid()) AND (om.status = 'active'::text)))));


--
-- Name: organization_slots Restrict slots viewing to active org members; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Restrict slots viewing to active org members" ON public.organization_slots FOR SELECT USING ((EXISTS ( SELECT 1
   FROM public.organization_members om
  WHERE ((om.organization_id = organization_slots.organization_id) AND (om.user_id = auth.uid()) AND (om.status = 'active'::text)))));


--
-- Name: member_removal_audit System can insert removal audit; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "System can insert removal audit" ON public.member_removal_audit FOR INSERT WITH CHECK (true);


--
-- Name: billing_events System only billing_events inserts; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "System only billing_events inserts" ON public.billing_events FOR INSERT WITH CHECK ((auth.role() = 'service_role'::text));


--
-- Name: preventative_maintenance Users can create PM for their organization; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can create PM for their organization" ON public.preventative_maintenance FOR INSERT WITH CHECK ((organization_id IN ( SELECT om.organization_id
   FROM public.organization_members om
  WHERE ((om.user_id = auth.uid()) AND (om.status = 'active'::text)))));


--
-- Name: work_orders Users can create work orders in their organization; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can create work orders in their organization" ON public.work_orders FOR INSERT WITH CHECK (((created_by = auth.uid()) AND (organization_id IN ( SELECT organization_members.organization_id
   FROM public.organization_members
  WHERE ((organization_members.user_id = auth.uid()) AND (organization_members.status = 'active'::text))))));


--
-- Name: equipment_working_hours_history Users can create working hours history for accessible equipment; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can create working hours history for accessible equipment" ON public.equipment_working_hours_history FOR INSERT WITH CHECK (((updated_by = auth.uid()) AND (EXISTS ( SELECT 1
   FROM public.equipment e
  WHERE ((e.id = equipment_working_hours_history.equipment_id) AND (public.is_org_admin(auth.uid(), e.organization_id) OR (public.is_org_member(auth.uid(), e.organization_id) AND (e.team_id IS NOT NULL) AND (e.team_id IN ( SELECT tm.team_id
           FROM public.team_members tm
          WHERE (tm.user_id = auth.uid()))))))))));


--
-- Name: equipment_note_images Users can delete images they uploaded; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can delete images they uploaded" ON public.equipment_note_images FOR DELETE USING ((uploaded_by = auth.uid()));


--
-- Name: work_order_images Users can delete their own work order images; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can delete their own work order images" ON public.work_order_images FOR DELETE USING ((uploaded_by = auth.uid()));


--
-- Name: notification_preferences Users can manage their own notification preferences; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can manage their own notification preferences" ON public.notification_preferences USING ((user_id = auth.uid())) WITH CHECK ((user_id = auth.uid()));


--
-- Name: preventative_maintenance Users can update PM for their organization; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can update PM for their organization" ON public.preventative_maintenance FOR UPDATE USING ((organization_id IN ( SELECT om.organization_id
   FROM public.organization_members om
  WHERE ((om.user_id = auth.uid()) AND (om.status = 'active'::text)))));


--
-- Name: notifications Users can update their own notifications; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can update their own notifications" ON public.notifications FOR UPDATE USING ((user_id = auth.uid()));


--
-- Name: work_orders Users can update work orders in their organization; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can update work orders in their organization" ON public.work_orders FOR UPDATE USING ((organization_id IN ( SELECT organization_members.organization_id
   FROM public.organization_members
  WHERE ((organization_members.user_id = auth.uid()) AND (organization_members.status = 'active'::text))))) WITH CHECK ((organization_id IN ( SELECT organization_members.organization_id
   FROM public.organization_members
  WHERE ((organization_members.user_id = auth.uid()) AND (organization_members.status = 'active'::text)))));


--
-- Name: equipment_note_images Users can upload images to their notes; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can upload images to their notes" ON public.equipment_note_images FOR INSERT WITH CHECK (((uploaded_by = auth.uid()) AND (EXISTS ( SELECT 1
   FROM (public.equipment_notes en
     JOIN public.equipment e ON ((e.id = en.equipment_id)))
  WHERE ((en.id = equipment_note_images.equipment_note_id) AND (e.organization_id IN ( SELECT organization_members.organization_id
           FROM public.organization_members
          WHERE ((organization_members.user_id = auth.uid()) AND (organization_members.status = 'active'::text)))))))));


--
-- Name: work_order_images Users can upload work order images; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can upload work order images" ON public.work_order_images FOR INSERT WITH CHECK (((uploaded_by = auth.uid()) AND (EXISTS ( SELECT 1
   FROM public.work_orders wo
  WHERE ((wo.id = work_order_images.work_order_id) AND (wo.organization_id IN ( SELECT organization_members.organization_id
           FROM public.organization_members
          WHERE ((organization_members.user_id = auth.uid()) AND (organization_members.status = 'active'::text)))))))));


--
-- Name: preventative_maintenance Users can view PM for their organization; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view PM for their organization" ON public.preventative_maintenance FOR SELECT USING ((organization_id IN ( SELECT om.organization_id
   FROM public.organization_members om
  WHERE ((om.user_id = auth.uid()) AND (om.status = 'active'::text)))));


--
-- Name: pm_status_history Users can view PM history for their organization; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view PM history for their organization" ON public.pm_status_history FOR SELECT USING ((EXISTS ( SELECT 1
   FROM public.preventative_maintenance pm
  WHERE ((pm.id = pm_status_history.pm_id) AND public.is_org_member(auth.uid(), pm.organization_id)))));


--
-- Name: pm_status_history Users can view PM status history for their organization; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view PM status history for their organization" ON public.pm_status_history FOR SELECT USING ((EXISTS ( SELECT 1
   FROM public.preventative_maintenance pm
  WHERE ((pm.id = pm_status_history.pm_id) AND public.is_org_member(auth.uid(), pm.organization_id)))));


--
-- Name: equipment_note_images Users can view images for accessible notes; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view images for accessible notes" ON public.equipment_note_images FOR SELECT USING ((EXISTS ( SELECT 1
   FROM (public.equipment_notes en
     JOIN public.equipment e ON ((e.id = en.equipment_id)))
  WHERE ((en.id = equipment_note_images.equipment_note_id) AND (e.organization_id IN ( SELECT organization_members.organization_id
           FROM public.organization_members
          WHERE ((organization_members.user_id = auth.uid()) AND (organization_members.status = 'active'::text)))) AND ((NOT en.is_private) OR (en.author_id = auth.uid()))))));


--
-- Name: notifications Users can view their own notifications; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view their own notifications" ON public.notifications FOR SELECT USING ((user_id = auth.uid()));


--
-- Name: work_order_status_history Users can view work order history for their organization; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view work order history for their organization" ON public.work_order_status_history FOR SELECT USING ((EXISTS ( SELECT 1
   FROM public.work_orders wo
  WHERE ((wo.id = work_order_status_history.work_order_id) AND public.is_org_member(auth.uid(), wo.organization_id)))));


--
-- Name: work_order_images Users can view work order images; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view work order images" ON public.work_order_images FOR SELECT USING ((EXISTS ( SELECT 1
   FROM public.work_orders wo
  WHERE ((wo.id = work_order_images.work_order_id) AND (wo.organization_id IN ( SELECT organization_members.organization_id
           FROM public.organization_members
          WHERE ((organization_members.user_id = auth.uid()) AND (organization_members.status = 'active'::text))))))));


--
-- Name: work_orders Users can view work orders in their organization; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view work orders in their organization" ON public.work_orders FOR SELECT USING ((organization_id IN ( SELECT organization_members.organization_id
   FROM public.organization_members
  WHERE ((organization_members.user_id = auth.uid()) AND (organization_members.status = 'active'::text)))));


--
-- Name: equipment_working_hours_history Users can view working hours history for accessible equipment; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Users can view working hours history for accessible equipment" ON public.equipment_working_hours_history FOR SELECT USING ((EXISTS ( SELECT 1
   FROM public.equipment e
  WHERE ((e.id = equipment_working_hours_history.equipment_id) AND (public.is_org_admin(auth.uid(), e.organization_id) OR (public.is_org_member(auth.uid(), e.organization_id) AND (e.team_id IS NOT NULL) AND (e.team_id IN ( SELECT tm.team_id
           FROM public.team_members tm
          WHERE (tm.user_id = auth.uid())))))))));


--
-- Name: equipment admins_delete_equipment; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY admins_delete_equipment ON public.equipment FOR DELETE USING (public.is_org_admin(auth.uid(), organization_id));


--
-- Name: equipment_note_images admins_delete_equipment_note_images; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY admins_delete_equipment_note_images ON public.equipment_note_images FOR DELETE USING ((EXISTS ( SELECT 1
   FROM (public.equipment_notes en
     JOIN public.equipment e ON ((e.id = en.equipment_id)))
  WHERE ((en.id = equipment_note_images.equipment_note_id) AND public.is_org_admin(auth.uid(), e.organization_id)))));


--
-- Name: equipment_notes admins_delete_equipment_notes; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY admins_delete_equipment_notes ON public.equipment_notes FOR DELETE USING ((EXISTS ( SELECT 1
   FROM public.equipment e
  WHERE ((e.id = equipment_notes.equipment_id) AND public.is_org_admin(auth.uid(), e.organization_id)))));


--
-- Name: teams admins_delete_teams; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY admins_delete_teams ON public.teams FOR DELETE USING (public.is_org_admin(auth.uid(), organization_id));


--
-- Name: work_orders admins_delete_work_orders; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY admins_delete_work_orders ON public.work_orders FOR DELETE USING (public.is_org_admin(auth.uid(), organization_id));


--
-- Name: work_order_costs admins_manage_all_costs; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY admins_manage_all_costs ON public.work_order_costs USING (public.is_org_admin(auth.uid(), ( SELECT work_orders.organization_id
   FROM public.work_orders
  WHERE (work_orders.id = work_order_costs.work_order_id)))) WITH CHECK (public.is_org_admin(auth.uid(), ( SELECT work_orders.organization_id
   FROM public.work_orders
  WHERE (work_orders.id = work_order_costs.work_order_id))));


--
-- Name: equipment admins_manage_equipment; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY admins_manage_equipment ON public.equipment FOR UPDATE USING (public.is_org_admin(auth.uid(), organization_id));


--
-- Name: organization_members admins_manage_org_members_fixed; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY admins_manage_org_members_fixed ON public.organization_members USING (public.is_org_admin(auth.uid(), organization_id)) WITH CHECK (public.is_org_admin(auth.uid(), organization_id));


--
-- Name: organization_subscriptions admins_manage_subscriptions; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY admins_manage_subscriptions ON public.organization_subscriptions USING ((EXISTS ( SELECT 1
   FROM public.organization_members om
  WHERE ((om.organization_id = organization_subscriptions.organization_id) AND (om.user_id = auth.uid()) AND (om.role = ANY (ARRAY['owner'::text, 'admin'::text])) AND (om.status = 'active'::text))))) WITH CHECK ((EXISTS ( SELECT 1
   FROM public.organization_members om
  WHERE ((om.organization_id = organization_subscriptions.organization_id) AND (om.user_id = auth.uid()) AND (om.role = ANY (ARRAY['owner'::text, 'admin'::text])) AND (om.status = 'active'::text)))));


--
-- Name: team_members admins_manage_team_members; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY admins_manage_team_members ON public.team_members USING (public.is_org_admin(auth.uid(), ( SELECT teams.organization_id
   FROM public.teams
  WHERE (teams.id = team_members.team_id)))) WITH CHECK (public.is_org_admin(auth.uid(), ( SELECT teams.organization_id
   FROM public.teams
  WHERE (teams.id = team_members.team_id))));


--
-- Name: teams admins_manage_teams; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY admins_manage_teams ON public.teams FOR INSERT WITH CHECK (public.is_org_admin(auth.uid(), organization_id));


--
-- Name: organization_members admins_only_delete_members; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY admins_only_delete_members ON public.organization_members FOR DELETE USING (public.is_org_admin(auth.uid(), organization_id));


--
-- Name: organization_members admins_only_update_members; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY admins_only_update_members ON public.organization_members FOR UPDATE USING (public.is_org_admin(auth.uid(), organization_id));


--
-- Name: teams admins_update_teams; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY admins_update_teams ON public.teams FOR UPDATE USING (public.is_org_admin(auth.uid(), organization_id));


--
-- Name: pm_checklist_templates authenticated_can_read_global_templates; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY authenticated_can_read_global_templates ON public.pm_checklist_templates FOR SELECT USING (((organization_id IS NULL) AND ((auth.uid() IS NOT NULL) OR (auth.role() = 'service_role'::text))));


--
-- Name: subscribers authenticated_users_own_data_only; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY authenticated_users_own_data_only ON public.subscribers FOR SELECT TO authenticated USING ((user_id = auth.uid()));


--
-- Name: subscribers authenticated_users_update_own_data; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY authenticated_users_update_own_data ON public.subscribers FOR UPDATE TO authenticated USING ((user_id = auth.uid())) WITH CHECK ((user_id = auth.uid()));


--
-- Name: equipment_notes authors_manage_own_notes; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY authors_manage_own_notes ON public.equipment_notes USING ((author_id = auth.uid())) WITH CHECK ((author_id = auth.uid()));


--
-- Name: billing_events; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.billing_events ENABLE ROW LEVEL SECURITY;

--
-- Name: billing_exemptions; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.billing_exemptions ENABLE ROW LEVEL SECURITY;

--
-- Name: billing_usage; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.billing_usage ENABLE ROW LEVEL SECURITY;

--
-- Name: customer_contacts; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.customer_contacts ENABLE ROW LEVEL SECURITY;

--
-- Name: customer_contacts customer_contacts_admins_insert; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY customer_contacts_admins_insert ON public.customer_contacts FOR INSERT WITH CHECK ((EXISTS ( SELECT 1
   FROM public.customers c
  WHERE ((c.id = customer_contacts.customer_id) AND public.is_org_admin(auth.uid(), c.organization_id)))));


--
-- Name: customer_contacts customer_contacts_admins_select; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY customer_contacts_admins_select ON public.customer_contacts FOR SELECT USING ((EXISTS ( SELECT 1
   FROM public.customers c
  WHERE ((c.id = customer_contacts.customer_id) AND public.is_org_admin(auth.uid(), c.organization_id)))));


--
-- Name: customer_contacts customer_contacts_admins_update; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY customer_contacts_admins_update ON public.customer_contacts FOR UPDATE USING ((EXISTS ( SELECT 1
   FROM public.customers c
  WHERE ((c.id = customer_contacts.customer_id) AND public.is_org_admin(auth.uid(), c.organization_id)))));


--
-- Name: customer_sites; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.customer_sites ENABLE ROW LEVEL SECURITY;

--
-- Name: customer_sites customer_sites_admins_insert; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY customer_sites_admins_insert ON public.customer_sites FOR INSERT WITH CHECK ((EXISTS ( SELECT 1
   FROM public.customers c
  WHERE ((c.id = customer_sites.customer_id) AND public.is_org_admin(auth.uid(), c.organization_id)))));


--
-- Name: customer_sites customer_sites_admins_select; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY customer_sites_admins_select ON public.customer_sites FOR SELECT USING ((EXISTS ( SELECT 1
   FROM public.customers c
  WHERE ((c.id = customer_sites.customer_id) AND public.is_org_admin(auth.uid(), c.organization_id)))));


--
-- Name: customer_sites customer_sites_admins_update; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY customer_sites_admins_update ON public.customer_sites FOR UPDATE USING ((EXISTS ( SELECT 1
   FROM public.customers c
  WHERE ((c.id = customer_sites.customer_id) AND public.is_org_admin(auth.uid(), c.organization_id)))));


--
-- Name: customers; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.customers ENABLE ROW LEVEL SECURITY;

--
-- Name: customers customers_admins_insert; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY customers_admins_insert ON public.customers FOR INSERT WITH CHECK (public.is_org_admin(auth.uid(), organization_id));


--
-- Name: customers customers_admins_select; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY customers_admins_select ON public.customers FOR SELECT USING (public.is_org_admin(auth.uid(), organization_id));


--
-- Name: customers customers_admins_update; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY customers_admins_update ON public.customers FOR UPDATE USING (public.is_org_admin(auth.uid(), organization_id));


--
-- Name: pm_checklist_templates deny delete protected; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "deny delete protected" ON public.pm_checklist_templates FOR DELETE USING (((organization_id IS NOT NULL) AND public.is_org_admin(auth.uid(), organization_id) AND (is_protected = false)));


--
-- Name: stripe_event_logs deny_user_access_stripe_logs; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY deny_user_access_stripe_logs ON public.stripe_event_logs USING (false);


--
-- Name: subscribers edge_functions_manage_subscriptions; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY edge_functions_manage_subscriptions ON public.subscribers USING ((auth.role() = 'service_role'::text)) WITH CHECK ((auth.role() = 'service_role'::text));


--
-- Name: equipment; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.equipment ENABLE ROW LEVEL SECURITY;

--
-- Name: equipment_note_images; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.equipment_note_images ENABLE ROW LEVEL SECURITY;

--
-- Name: equipment_notes; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.equipment_notes ENABLE ROW LEVEL SECURITY;

--
-- Name: equipment_working_hours_history; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.equipment_working_hours_history ENABLE ROW LEVEL SECURITY;

--
-- Name: geocoded_locations; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.geocoded_locations ENABLE ROW LEVEL SECURITY;

--
-- Name: geocoded_locations geocoded_locations_select_org_members; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY geocoded_locations_select_org_members ON public.geocoded_locations FOR SELECT USING (public.check_org_access_secure(auth.uid(), organization_id));


--
-- Name: geocoded_locations geocoded_locations_service_insert; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY geocoded_locations_service_insert ON public.geocoded_locations FOR INSERT WITH CHECK ((auth.role() = 'service_role'::text));


--
-- Name: geocoded_locations geocoded_locations_service_update; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY geocoded_locations_service_update ON public.geocoded_locations FOR UPDATE USING ((auth.role() = 'service_role'::text));


--
-- Name: invitation_performance_logs; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.invitation_performance_logs ENABLE ROW LEVEL SECURITY;

--
-- Name: organization_invitations invited_users_access_by_email; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY invited_users_access_by_email ON public.organization_invitations FOR SELECT USING (((auth.email() IS NOT NULL) AND (lower(TRIM(BOTH FROM email)) = lower(TRIM(BOTH FROM auth.email())))));


--
-- Name: organizations invited_users_can_view_org_details; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY invited_users_can_view_org_details ON public.organizations FOR SELECT USING ((public.check_org_access_secure(auth.uid(), id) OR (EXISTS ( SELECT 1
   FROM public.organization_invitations oi
  WHERE ((oi.organization_id = organizations.id) AND (oi.status = 'pending'::text) AND (oi.expires_at > now()) AND (auth.email() IS NOT NULL) AND (lower(TRIM(BOTH FROM oi.email)) = lower(TRIM(BOTH FROM auth.email()))))))));


--
-- Name: organization_invitations invited_users_update_by_email; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY invited_users_update_by_email ON public.organization_invitations FOR UPDATE USING (((auth.email() IS NOT NULL) AND (lower(TRIM(BOTH FROM email)) = lower(TRIM(BOTH FROM auth.email()))) AND (status = 'pending'::text)));


--
-- Name: pm_checklist_templates manage org templates; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "manage org templates" ON public.pm_checklist_templates USING (((organization_id IS NOT NULL) AND public.is_org_admin(auth.uid(), organization_id) AND ((NOT is_protected) OR (auth.role() = 'service_role'::text)))) WITH CHECK (((organization_id IS NOT NULL) AND public.is_org_admin(auth.uid(), organization_id) AND ((NOT is_protected) OR (auth.role() = 'service_role'::text))));


--
-- Name: member_removal_audit; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.member_removal_audit ENABLE ROW LEVEL SECURITY;

--
-- Name: work_orders members_access_work_orders; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY members_access_work_orders ON public.work_orders USING (public.is_org_member(auth.uid(), organization_id)) WITH CHECK (public.is_org_member(auth.uid(), organization_id));


--
-- Name: pm_checklist_templates members_can_read_org_templates; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY members_can_read_org_templates ON public.pm_checklist_templates FOR SELECT USING (((organization_id IS NOT NULL) AND (public.is_org_member(auth.uid(), organization_id) OR (auth.role() = 'service_role'::text))));


--
-- Name: equipment_notes members_create_notes; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY members_create_notes ON public.equipment_notes FOR INSERT WITH CHECK (((author_id = auth.uid()) AND public.is_org_member(auth.uid(), ( SELECT equipment.organization_id
   FROM public.equipment
  WHERE (equipment.id = equipment_notes.equipment_id)))));


--
-- Name: organization_members members_read_own_record; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY members_read_own_record ON public.organization_members FOR SELECT USING ((user_id = auth.uid()));


--
-- Name: work_order_costs members_view_costs; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY members_view_costs ON public.work_order_costs FOR SELECT USING (public.is_org_member(auth.uid(), ( SELECT work_orders.organization_id
   FROM public.work_orders
  WHERE (work_orders.id = work_order_costs.work_order_id))));


--
-- Name: organization_invitations members_view_invitations; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY members_view_invitations ON public.organization_invitations FOR SELECT USING (public.is_org_member(auth.uid(), organization_id));


--
-- Name: equipment_notes members_view_notes; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY members_view_notes ON public.equipment_notes FOR SELECT USING ((public.is_org_member(auth.uid(), ( SELECT equipment.organization_id
   FROM public.equipment
  WHERE (equipment.id = equipment_notes.equipment_id))) AND ((NOT is_private) OR (author_id = auth.uid()))));


--
-- Name: organization_members members_view_org_members_fixed; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY members_view_org_members_fixed ON public.organization_members FOR SELECT USING (public.is_org_member(auth.uid(), organization_id));


--
-- Name: team_members members_view_team_members; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY members_view_team_members ON public.team_members FOR SELECT USING (public.is_org_member(auth.uid(), ( SELECT teams.organization_id
   FROM public.teams
  WHERE (teams.id = team_members.team_id))));


--
-- Name: teams members_view_teams; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY members_view_teams ON public.teams FOR SELECT USING (public.is_org_member(auth.uid(), organization_id));


--
-- Name: invitation_performance_logs no_user_access_performance_logs; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY no_user_access_performance_logs ON public.invitation_performance_logs USING (false);


--
-- Name: notes; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.notes ENABLE ROW LEVEL SECURITY;

--
-- Name: notes notes_delete_own_or_admin; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY notes_delete_own_or_admin ON public.notes FOR DELETE USING (((author_id = auth.uid()) OR public.check_org_admin_secure(auth.uid(), ( SELECT equipment.organization_id
   FROM public.equipment
  WHERE (equipment.id = notes.equipment_id)))));


--
-- Name: notes notes_insert_organization_members; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY notes_insert_organization_members ON public.notes FOR INSERT WITH CHECK (((author_id = auth.uid()) AND public.check_org_access_secure(auth.uid(), ( SELECT equipment.organization_id
   FROM public.equipment
  WHERE (equipment.id = notes.equipment_id)))));


--
-- Name: notes notes_select_organization_members; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY notes_select_organization_members ON public.notes FOR SELECT USING (public.check_org_access_secure(auth.uid(), ( SELECT equipment.organization_id
   FROM public.equipment
  WHERE (equipment.id = notes.equipment_id))));


--
-- Name: notes notes_update_own; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY notes_update_own ON public.notes FOR UPDATE USING ((author_id = auth.uid()));


--
-- Name: notification_preferences; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.notification_preferences ENABLE ROW LEVEL SECURITY;

--
-- Name: notifications; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.notifications ENABLE ROW LEVEL SECURITY;

--
-- Name: user_license_subscriptions org_admins_manage_license_subs; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY org_admins_manage_license_subs ON public.user_license_subscriptions USING ((EXISTS ( SELECT 1
   FROM public.organization_members om
  WHERE ((om.organization_id = user_license_subscriptions.organization_id) AND (om.user_id = auth.uid()) AND (om.role = ANY (ARRAY['owner'::text, 'admin'::text])) AND (om.status = 'active'::text)))));


--
-- Name: slot_purchases org_admins_manage_purchases; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY org_admins_manage_purchases ON public.slot_purchases USING ((EXISTS ( SELECT 1
   FROM public.organization_members om
  WHERE ((om.organization_id = slot_purchases.organization_id) AND (om.user_id = auth.uid()) AND (om.role = ANY (ARRAY['owner'::text, 'admin'::text])) AND (om.status = 'active'::text)))));


--
-- Name: organization_slots org_admins_manage_slots; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY org_admins_manage_slots ON public.organization_slots USING ((EXISTS ( SELECT 1
   FROM public.organization_members om
  WHERE ((om.organization_id = organization_slots.organization_id) AND (om.user_id = auth.uid()) AND (om.role = ANY (ARRAY['owner'::text, 'admin'::text])) AND (om.status = 'active'::text)))));


--
-- Name: billing_exemptions org_admins_view_exemptions; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY org_admins_view_exemptions ON public.billing_exemptions FOR SELECT USING ((EXISTS ( SELECT 1
   FROM public.organization_members om
  WHERE ((om.organization_id = billing_exemptions.organization_id) AND (om.user_id = auth.uid()) AND (om.role = ANY (ARRAY['owner'::text, 'admin'::text])) AND (om.status = 'active'::text)))));


--
-- Name: user_license_subscriptions org_members_view_license_subs; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY org_members_view_license_subs ON public.user_license_subscriptions FOR SELECT USING ((EXISTS ( SELECT 1
   FROM public.organization_members om
  WHERE ((om.organization_id = user_license_subscriptions.organization_id) AND (om.user_id = auth.uid()) AND (om.status = 'active'::text)))));


--
-- Name: profiles org_members_view_member_profiles; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY org_members_view_member_profiles ON public.profiles FOR SELECT USING ((id IN ( SELECT om.user_id
   FROM public.organization_members om
  WHERE ((om.organization_id IN ( SELECT om2.organization_id
           FROM public.organization_members om2
          WHERE ((om2.user_id = auth.uid()) AND (om2.status = 'active'::text)))) AND (om.status = 'active'::text)))));


--
-- Name: organization_invitations; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.organization_invitations ENABLE ROW LEVEL SECURITY;

--
-- Name: organization_members; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.organization_members ENABLE ROW LEVEL SECURITY;

--
-- Name: organization_slots; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.organization_slots ENABLE ROW LEVEL SECURITY;

--
-- Name: organization_subscriptions; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.organization_subscriptions ENABLE ROW LEVEL SECURITY;

--
-- Name: organizations; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.organizations ENABLE ROW LEVEL SECURITY;

--
-- Name: organizations orgs_members_can_view; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY orgs_members_can_view ON public.organizations FOR SELECT USING (public.check_org_access_secure(auth.uid(), id));


--
-- Name: organizations orgs_select_members; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY orgs_select_members ON public.organizations FOR SELECT USING (public.check_org_access_secure(auth.uid(), id));


--
-- Name: organizations orgs_update_admins; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY orgs_update_admins ON public.organizations FOR UPDATE USING (public.check_org_admin_secure(auth.uid(), id));


--
-- Name: pm_checklist_templates; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.pm_checklist_templates ENABLE ROW LEVEL SECURITY;

--
-- Name: pm_status_history; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.pm_status_history ENABLE ROW LEVEL SECURITY;

--
-- Name: preventative_maintenance; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.preventative_maintenance ENABLE ROW LEVEL SECURITY;

--
-- Name: profiles; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.profiles ENABLE ROW LEVEL SECURITY;

--
-- Name: profiles profiles_insert_optimized; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY profiles_insert_optimized ON public.profiles FOR INSERT WITH CHECK ((id = ( SELECT auth.uid() AS uid)));


--
-- Name: profiles profiles_update_optimized; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY profiles_update_optimized ON public.profiles FOR UPDATE USING ((id = ( SELECT auth.uid() AS uid)));


--
-- Name: scans; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.scans ENABLE ROW LEVEL SECURITY;

--
-- Name: scans scans_delete_admins; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY scans_delete_admins ON public.scans FOR DELETE USING (public.check_org_admin_secure(auth.uid(), ( SELECT equipment.organization_id
   FROM public.equipment
  WHERE (equipment.id = scans.equipment_id))));


--
-- Name: scans scans_insert_organization_members; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY scans_insert_organization_members ON public.scans FOR INSERT WITH CHECK (((scanned_by = auth.uid()) AND public.check_org_access_secure(auth.uid(), ( SELECT equipment.organization_id
   FROM public.equipment
  WHERE (equipment.id = scans.equipment_id)))));


--
-- Name: scans scans_select_organization_members; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY scans_select_organization_members ON public.scans FOR SELECT USING (public.check_org_access_secure(auth.uid(), ( SELECT equipment.organization_id
   FROM public.equipment
  WHERE (equipment.id = scans.equipment_id))));


--
-- Name: scans scans_update_own; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY scans_update_own ON public.scans FOR UPDATE USING ((scanned_by = auth.uid()));


--
-- Name: organization_members secure_admin_only_member_insert; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY secure_admin_only_member_insert ON public.organization_members FOR INSERT WITH CHECK (public.is_org_admin(auth.uid(), organization_id));


--
-- Name: billing_exemptions secure_system_insert_exemptions; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY secure_system_insert_exemptions ON public.billing_exemptions FOR INSERT WITH CHECK ((EXISTS ( SELECT 1
   FROM public.organization_members om
  WHERE ((om.organization_id = billing_exemptions.organization_id) AND (om.user_id = auth.uid()) AND (om.role = ANY (ARRAY['owner'::text, 'admin'::text])) AND (om.status = 'active'::text)))));


--
-- Name: billing_exemptions secure_system_update_exemptions; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY secure_system_update_exemptions ON public.billing_exemptions FOR UPDATE USING ((EXISTS ( SELECT 1
   FROM public.organization_members om
  WHERE ((om.organization_id = billing_exemptions.organization_id) AND (om.user_id = auth.uid()) AND (om.role = ANY (ARRAY['owner'::text, 'admin'::text])) AND (om.status = 'active'::text)))));


--
-- Name: organization_invitations secure_token_invitation_access; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY secure_token_invitation_access ON public.organization_invitations FOR SELECT USING (((auth.email() IS NOT NULL) AND (lower(TRIM(BOTH FROM email)) = lower(TRIM(BOTH FROM auth.email()))) AND (status = 'pending'::text) AND (expires_at > now())));


--
-- Name: webhook_events service_role_delete_webhook_events; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY service_role_delete_webhook_events ON public.webhook_events FOR DELETE USING ((auth.role() = 'service_role'::text));


--
-- Name: webhook_events service_role_insert_webhook_events; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY service_role_insert_webhook_events ON public.webhook_events FOR INSERT WITH CHECK ((auth.role() = 'service_role'::text));


--
-- Name: stripe_event_logs service_role_manage_stripe_logs; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY service_role_manage_stripe_logs ON public.stripe_event_logs USING ((auth.role() = 'service_role'::text)) WITH CHECK ((auth.role() = 'service_role'::text));


--
-- Name: notifications service_role_only_create_notifications; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY service_role_only_create_notifications ON public.notifications FOR INSERT WITH CHECK ((auth.role() = 'service_role'::text));


--
-- Name: invitation_performance_logs service_role_only_performance_logs; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY service_role_only_performance_logs ON public.invitation_performance_logs FOR INSERT WITH CHECK ((auth.role() = 'service_role'::text));


--
-- Name: webhook_events service_role_select_webhook_events; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY service_role_select_webhook_events ON public.webhook_events FOR SELECT USING ((auth.role() = 'service_role'::text));


--
-- Name: webhook_events service_role_update_webhook_events; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY service_role_update_webhook_events ON public.webhook_events FOR UPDATE USING ((auth.role() = 'service_role'::text)) WITH CHECK ((auth.role() = 'service_role'::text));


--
-- Name: slot_purchases; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.slot_purchases ENABLE ROW LEVEL SECURITY;

--
-- Name: stripe_event_logs; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.stripe_event_logs ENABLE ROW LEVEL SECURITY;

--
-- Name: subscribers; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.subscribers ENABLE ROW LEVEL SECURITY;

--
-- Name: team_members; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.team_members ENABLE ROW LEVEL SECURITY;

--
-- Name: equipment team_members_create_equipment; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY team_members_create_equipment ON public.equipment FOR INSERT WITH CHECK ((public.is_org_admin(auth.uid(), organization_id) OR (public.is_org_member(auth.uid(), organization_id) AND (team_id IS NOT NULL) AND (team_id IN ( SELECT tm.team_id
   FROM public.team_members tm
  WHERE ((tm.user_id = auth.uid()) AND (tm.role = 'manager'::public.team_member_role)))))));


--
-- Name: equipment team_members_view_equipment; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY team_members_view_equipment ON public.equipment FOR SELECT USING ((public.is_org_admin(auth.uid(), organization_id) OR (public.is_org_member(auth.uid(), organization_id) AND (team_id IS NOT NULL) AND (team_id IN ( SELECT tm.team_id
   FROM public.team_members tm
  WHERE (tm.user_id = auth.uid()))))));


--
-- Name: teams; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.teams ENABLE ROW LEVEL SECURITY;

--
-- Name: user_license_subscriptions; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.user_license_subscriptions ENABLE ROW LEVEL SECURITY;

--
-- Name: organization_invitations users_create_invitations; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY users_create_invitations ON public.organization_invitations FOR INSERT WITH CHECK ((invited_by = auth.uid()));


--
-- Name: organization_invitations users_delete_own_invitations; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY users_delete_own_invitations ON public.organization_invitations FOR DELETE USING ((invited_by = auth.uid()));


--
-- Name: work_order_costs users_manage_own_costs; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY users_manage_own_costs ON public.work_order_costs USING ((created_by = auth.uid())) WITH CHECK ((created_by = auth.uid()));


--
-- Name: organization_invitations users_manage_own_invitations; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY users_manage_own_invitations ON public.organization_invitations FOR UPDATE USING ((invited_by = auth.uid()));


--
-- Name: organization_invitations users_view_own_invitations; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY users_view_own_invitations ON public.organization_invitations FOR SELECT USING ((invited_by = auth.uid()));


--
-- Name: profiles users_view_own_profile; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY users_view_own_profile ON public.profiles FOR SELECT USING ((id = auth.uid()));


--
-- Name: organization_subscriptions view_org_subscriptions; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY view_org_subscriptions ON public.organization_subscriptions FOR SELECT USING ((EXISTS ( SELECT 1
   FROM public.organization_members om
  WHERE ((om.organization_id = organization_subscriptions.organization_id) AND (om.user_id = auth.uid()) AND (om.status = 'active'::text)))));


--
-- Name: billing_usage view_org_usage; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY view_org_usage ON public.billing_usage FOR SELECT USING ((EXISTS ( SELECT 1
   FROM public.organization_members om
  WHERE ((om.organization_id = billing_usage.organization_id) AND (om.user_id = auth.uid()) AND (om.status = 'active'::text)))));


--
-- Name: webhook_events; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.webhook_events ENABLE ROW LEVEL SECURITY;

--
-- Name: work_order_costs; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.work_order_costs ENABLE ROW LEVEL SECURITY;

--
-- Name: work_order_images; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.work_order_images ENABLE ROW LEVEL SECURITY;

--
-- Name: work_order_notes; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.work_order_notes ENABLE ROW LEVEL SECURITY;

--
-- Name: work_order_notes work_order_notes_delete_own; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY work_order_notes_delete_own ON public.work_order_notes FOR DELETE USING ((author_id = auth.uid()));


--
-- Name: work_order_notes work_order_notes_insert_organization_members; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY work_order_notes_insert_organization_members ON public.work_order_notes FOR INSERT WITH CHECK (((author_id = auth.uid()) AND (EXISTS ( SELECT 1
   FROM public.work_orders wo
  WHERE ((wo.id = work_order_notes.work_order_id) AND (wo.organization_id IN ( SELECT organization_members.organization_id
           FROM public.organization_members
          WHERE ((organization_members.user_id = auth.uid()) AND (organization_members.status = 'active'::text)))))))));


--
-- Name: work_order_notes work_order_notes_select_organization_members; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY work_order_notes_select_organization_members ON public.work_order_notes FOR SELECT USING (((EXISTS ( SELECT 1
   FROM public.work_orders wo
  WHERE ((wo.id = work_order_notes.work_order_id) AND (wo.organization_id IN ( SELECT organization_members.organization_id
           FROM public.organization_members
          WHERE ((organization_members.user_id = auth.uid()) AND (organization_members.status = 'active'::text))))))) AND ((NOT is_private) OR (author_id = auth.uid()))));


--
-- Name: work_order_notes work_order_notes_update_own; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY work_order_notes_update_own ON public.work_order_notes FOR UPDATE USING ((author_id = auth.uid()));


--
-- Name: work_order_status_history; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.work_order_status_history ENABLE ROW LEVEL SECURITY;

--
-- Name: work_orders; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.work_orders ENABLE ROW LEVEL SECURITY;

--
-- Name: messages; Type: ROW SECURITY; Schema: realtime; Owner: supabase_realtime_admin
--

ALTER TABLE realtime.messages ENABLE ROW LEVEL SECURITY;

--
-- Name: objects Authenticated users can upload equipment note images; Type: POLICY; Schema: storage; Owner: supabase_storage_admin
--

CREATE POLICY "Authenticated users can upload equipment note images" ON storage.objects FOR INSERT WITH CHECK (((bucket_id = 'equipment-note-images'::text) AND (auth.role() = 'authenticated'::text)));


--
-- Name: objects Authenticated users can upload work order images; Type: POLICY; Schema: storage; Owner: supabase_storage_admin
--

CREATE POLICY "Authenticated users can upload work order images" ON storage.objects FOR INSERT WITH CHECK (((bucket_id = 'work-order-images'::text) AND (auth.role() = 'authenticated'::text)));


--
-- Name: objects Users can delete their own equipment note images; Type: POLICY; Schema: storage; Owner: supabase_storage_admin
--

CREATE POLICY "Users can delete their own equipment note images" ON storage.objects FOR DELETE USING (((bucket_id = 'equipment-note-images'::text) AND ((auth.uid())::text = (storage.foldername(name))[1])));


--
-- Name: objects Users can delete their own work order images; Type: POLICY; Schema: storage; Owner: supabase_storage_admin
--

CREATE POLICY "Users can delete their own work order images" ON storage.objects FOR DELETE USING (((bucket_id = 'work-order-images'::text) AND ((auth.uid())::text = (storage.foldername(name))[1])));


--
-- Name: objects Users can update their own work order images; Type: POLICY; Schema: storage; Owner: supabase_storage_admin
--

CREATE POLICY "Users can update their own work order images" ON storage.objects FOR UPDATE USING (((bucket_id = 'work-order-images'::text) AND ((auth.uid())::text = (storage.foldername(name))[1])));


--
-- Name: objects Users can view equipment note images; Type: POLICY; Schema: storage; Owner: supabase_storage_admin
--

CREATE POLICY "Users can view equipment note images" ON storage.objects FOR SELECT USING ((bucket_id = 'equipment-note-images'::text));


--
-- Name: objects Users can view work order images; Type: POLICY; Schema: storage; Owner: supabase_storage_admin
--

CREATE POLICY "Users can view work order images" ON storage.objects FOR SELECT USING ((bucket_id = 'work-order-images'::text));


--
-- Name: buckets; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.buckets ENABLE ROW LEVEL SECURITY;

--
-- Name: buckets_analytics; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.buckets_analytics ENABLE ROW LEVEL SECURITY;

--
-- Name: migrations; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.migrations ENABLE ROW LEVEL SECURITY;

--
-- Name: objects; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.objects ENABLE ROW LEVEL SECURITY;

--
-- Name: prefixes; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.prefixes ENABLE ROW LEVEL SECURITY;

--
-- Name: s3_multipart_uploads; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.s3_multipart_uploads ENABLE ROW LEVEL SECURITY;

--
-- Name: s3_multipart_uploads_parts; Type: ROW SECURITY; Schema: storage; Owner: supabase_storage_admin
--

ALTER TABLE storage.s3_multipart_uploads_parts ENABLE ROW LEVEL SECURITY;

--
-- Name: supabase_realtime; Type: PUBLICATION; Schema: -; Owner: postgres
--

CREATE PUBLICATION supabase_realtime WITH (publish = 'insert, update, delete, truncate');


ALTER PUBLICATION supabase_realtime OWNER TO postgres;

--
-- Name: supabase_realtime_messages_publication; Type: PUBLICATION; Schema: -; Owner: supabase_admin
--

CREATE PUBLICATION supabase_realtime_messages_publication WITH (publish = 'insert, update, delete, truncate');


ALTER PUBLICATION supabase_realtime_messages_publication OWNER TO supabase_admin;

--
-- Name: supabase_realtime organization_members; Type: PUBLICATION TABLE; Schema: public; Owner: postgres
--

ALTER PUBLICATION supabase_realtime ADD TABLE ONLY public.organization_members;


--
-- Name: supabase_realtime organization_slots; Type: PUBLICATION TABLE; Schema: public; Owner: postgres
--

ALTER PUBLICATION supabase_realtime ADD TABLE ONLY public.organization_slots;


--
-- Name: supabase_realtime profiles; Type: PUBLICATION TABLE; Schema: public; Owner: postgres
--

ALTER PUBLICATION supabase_realtime ADD TABLE ONLY public.profiles;


--
-- Name: supabase_realtime_messages_publication messages; Type: PUBLICATION TABLE; Schema: realtime; Owner: supabase_admin
--

ALTER PUBLICATION supabase_realtime_messages_publication ADD TABLE ONLY realtime.messages;


--
-- Name: SCHEMA auth; Type: ACL; Schema: -; Owner: supabase_admin
--

GRANT USAGE ON SCHEMA auth TO anon;
GRANT USAGE ON SCHEMA auth TO authenticated;
GRANT USAGE ON SCHEMA auth TO service_role;
GRANT ALL ON SCHEMA auth TO supabase_auth_admin;
GRANT ALL ON SCHEMA auth TO dashboard_user;
GRANT USAGE ON SCHEMA auth TO postgres;


--
-- Name: SCHEMA extensions; Type: ACL; Schema: -; Owner: postgres
--

GRANT USAGE ON SCHEMA extensions TO anon;
GRANT USAGE ON SCHEMA extensions TO authenticated;
GRANT USAGE ON SCHEMA extensions TO service_role;
GRANT ALL ON SCHEMA extensions TO dashboard_user;


--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: pg_database_owner
--

GRANT USAGE ON SCHEMA public TO postgres;
GRANT USAGE ON SCHEMA public TO anon;
GRANT USAGE ON SCHEMA public TO authenticated;
GRANT USAGE ON SCHEMA public TO service_role;


--
-- Name: SCHEMA realtime; Type: ACL; Schema: -; Owner: supabase_admin
--

GRANT USAGE ON SCHEMA realtime TO postgres;
GRANT USAGE ON SCHEMA realtime TO anon;
GRANT USAGE ON SCHEMA realtime TO authenticated;
GRANT USAGE ON SCHEMA realtime TO service_role;
GRANT ALL ON SCHEMA realtime TO supabase_realtime_admin;


--
-- Name: SCHEMA storage; Type: ACL; Schema: -; Owner: supabase_admin
--

GRANT USAGE ON SCHEMA storage TO postgres;
GRANT USAGE ON SCHEMA storage TO anon;
GRANT USAGE ON SCHEMA storage TO authenticated;
GRANT USAGE ON SCHEMA storage TO service_role;
GRANT ALL ON SCHEMA storage TO supabase_storage_admin;
GRANT ALL ON SCHEMA storage TO dashboard_user;


--
-- Name: SCHEMA vault; Type: ACL; Schema: -; Owner: supabase_admin
--

GRANT USAGE ON SCHEMA vault TO postgres WITH GRANT OPTION;
GRANT USAGE ON SCHEMA vault TO service_role;


--
-- Name: FUNCTION email(); Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON FUNCTION auth.email() TO dashboard_user;


--
-- Name: FUNCTION jwt(); Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON FUNCTION auth.jwt() TO postgres;
GRANT ALL ON FUNCTION auth.jwt() TO dashboard_user;


--
-- Name: FUNCTION role(); Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON FUNCTION auth.role() TO dashboard_user;


--
-- Name: FUNCTION uid(); Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON FUNCTION auth.uid() TO dashboard_user;


--
-- Name: FUNCTION armor(bytea); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.armor(bytea) FROM postgres;
GRANT ALL ON FUNCTION extensions.armor(bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.armor(bytea) TO dashboard_user;


--
-- Name: FUNCTION armor(bytea, text[], text[]); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.armor(bytea, text[], text[]) FROM postgres;
GRANT ALL ON FUNCTION extensions.armor(bytea, text[], text[]) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.armor(bytea, text[], text[]) TO dashboard_user;


--
-- Name: FUNCTION crypt(text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.crypt(text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.crypt(text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.crypt(text, text) TO dashboard_user;


--
-- Name: FUNCTION dearmor(text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.dearmor(text) FROM postgres;
GRANT ALL ON FUNCTION extensions.dearmor(text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.dearmor(text) TO dashboard_user;


--
-- Name: FUNCTION decrypt(bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.decrypt(bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.decrypt(bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.decrypt(bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION decrypt_iv(bytea, bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.decrypt_iv(bytea, bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.decrypt_iv(bytea, bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.decrypt_iv(bytea, bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION digest(bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.digest(bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.digest(bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.digest(bytea, text) TO dashboard_user;


--
-- Name: FUNCTION digest(text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.digest(text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.digest(text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.digest(text, text) TO dashboard_user;


--
-- Name: FUNCTION encrypt(bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.encrypt(bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.encrypt(bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.encrypt(bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION encrypt_iv(bytea, bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.encrypt_iv(bytea, bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.encrypt_iv(bytea, bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.encrypt_iv(bytea, bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION gen_random_bytes(integer); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.gen_random_bytes(integer) FROM postgres;
GRANT ALL ON FUNCTION extensions.gen_random_bytes(integer) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.gen_random_bytes(integer) TO dashboard_user;


--
-- Name: FUNCTION gen_random_uuid(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.gen_random_uuid() FROM postgres;
GRANT ALL ON FUNCTION extensions.gen_random_uuid() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.gen_random_uuid() TO dashboard_user;


--
-- Name: FUNCTION gen_salt(text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.gen_salt(text) FROM postgres;
GRANT ALL ON FUNCTION extensions.gen_salt(text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.gen_salt(text) TO dashboard_user;


--
-- Name: FUNCTION gen_salt(text, integer); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.gen_salt(text, integer) FROM postgres;
GRANT ALL ON FUNCTION extensions.gen_salt(text, integer) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.gen_salt(text, integer) TO dashboard_user;


--
-- Name: FUNCTION grant_pg_cron_access(); Type: ACL; Schema: extensions; Owner: supabase_admin
--

REVOKE ALL ON FUNCTION extensions.grant_pg_cron_access() FROM supabase_admin;
GRANT ALL ON FUNCTION extensions.grant_pg_cron_access() TO supabase_admin WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.grant_pg_cron_access() TO dashboard_user;


--
-- Name: FUNCTION grant_pg_graphql_access(); Type: ACL; Schema: extensions; Owner: supabase_admin
--

GRANT ALL ON FUNCTION extensions.grant_pg_graphql_access() TO postgres WITH GRANT OPTION;


--
-- Name: FUNCTION grant_pg_net_access(); Type: ACL; Schema: extensions; Owner: supabase_admin
--

REVOKE ALL ON FUNCTION extensions.grant_pg_net_access() FROM supabase_admin;
GRANT ALL ON FUNCTION extensions.grant_pg_net_access() TO supabase_admin WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.grant_pg_net_access() TO dashboard_user;


--
-- Name: FUNCTION hmac(bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.hmac(bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.hmac(bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.hmac(bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION hmac(text, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.hmac(text, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.hmac(text, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.hmac(text, text, text) TO dashboard_user;


--
-- Name: FUNCTION pg_stat_statements(showtext boolean, OUT userid oid, OUT dbid oid, OUT toplevel boolean, OUT queryid bigint, OUT query text, OUT plans bigint, OUT total_plan_time double precision, OUT min_plan_time double precision, OUT max_plan_time double precision, OUT mean_plan_time double precision, OUT stddev_plan_time double precision, OUT calls bigint, OUT total_exec_time double precision, OUT min_exec_time double precision, OUT max_exec_time double precision, OUT mean_exec_time double precision, OUT stddev_exec_time double precision, OUT rows bigint, OUT shared_blks_hit bigint, OUT shared_blks_read bigint, OUT shared_blks_dirtied bigint, OUT shared_blks_written bigint, OUT local_blks_hit bigint, OUT local_blks_read bigint, OUT local_blks_dirtied bigint, OUT local_blks_written bigint, OUT temp_blks_read bigint, OUT temp_blks_written bigint, OUT shared_blk_read_time double precision, OUT shared_blk_write_time double precision, OUT local_blk_read_time double precision, OUT local_blk_write_time double precision, OUT temp_blk_read_time double precision, OUT temp_blk_write_time double precision, OUT wal_records bigint, OUT wal_fpi bigint, OUT wal_bytes numeric, OUT jit_functions bigint, OUT jit_generation_time double precision, OUT jit_inlining_count bigint, OUT jit_inlining_time double precision, OUT jit_optimization_count bigint, OUT jit_optimization_time double precision, OUT jit_emission_count bigint, OUT jit_emission_time double precision, OUT jit_deform_count bigint, OUT jit_deform_time double precision, OUT stats_since timestamp with time zone, OUT minmax_stats_since timestamp with time zone); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pg_stat_statements(showtext boolean, OUT userid oid, OUT dbid oid, OUT toplevel boolean, OUT queryid bigint, OUT query text, OUT plans bigint, OUT total_plan_time double precision, OUT min_plan_time double precision, OUT max_plan_time double precision, OUT mean_plan_time double precision, OUT stddev_plan_time double precision, OUT calls bigint, OUT total_exec_time double precision, OUT min_exec_time double precision, OUT max_exec_time double precision, OUT mean_exec_time double precision, OUT stddev_exec_time double precision, OUT rows bigint, OUT shared_blks_hit bigint, OUT shared_blks_read bigint, OUT shared_blks_dirtied bigint, OUT shared_blks_written bigint, OUT local_blks_hit bigint, OUT local_blks_read bigint, OUT local_blks_dirtied bigint, OUT local_blks_written bigint, OUT temp_blks_read bigint, OUT temp_blks_written bigint, OUT shared_blk_read_time double precision, OUT shared_blk_write_time double precision, OUT local_blk_read_time double precision, OUT local_blk_write_time double precision, OUT temp_blk_read_time double precision, OUT temp_blk_write_time double precision, OUT wal_records bigint, OUT wal_fpi bigint, OUT wal_bytes numeric, OUT jit_functions bigint, OUT jit_generation_time double precision, OUT jit_inlining_count bigint, OUT jit_inlining_time double precision, OUT jit_optimization_count bigint, OUT jit_optimization_time double precision, OUT jit_emission_count bigint, OUT jit_emission_time double precision, OUT jit_deform_count bigint, OUT jit_deform_time double precision, OUT stats_since timestamp with time zone, OUT minmax_stats_since timestamp with time zone) FROM postgres;
GRANT ALL ON FUNCTION extensions.pg_stat_statements(showtext boolean, OUT userid oid, OUT dbid oid, OUT toplevel boolean, OUT queryid bigint, OUT query text, OUT plans bigint, OUT total_plan_time double precision, OUT min_plan_time double precision, OUT max_plan_time double precision, OUT mean_plan_time double precision, OUT stddev_plan_time double precision, OUT calls bigint, OUT total_exec_time double precision, OUT min_exec_time double precision, OUT max_exec_time double precision, OUT mean_exec_time double precision, OUT stddev_exec_time double precision, OUT rows bigint, OUT shared_blks_hit bigint, OUT shared_blks_read bigint, OUT shared_blks_dirtied bigint, OUT shared_blks_written bigint, OUT local_blks_hit bigint, OUT local_blks_read bigint, OUT local_blks_dirtied bigint, OUT local_blks_written bigint, OUT temp_blks_read bigint, OUT temp_blks_written bigint, OUT shared_blk_read_time double precision, OUT shared_blk_write_time double precision, OUT local_blk_read_time double precision, OUT local_blk_write_time double precision, OUT temp_blk_read_time double precision, OUT temp_blk_write_time double precision, OUT wal_records bigint, OUT wal_fpi bigint, OUT wal_bytes numeric, OUT jit_functions bigint, OUT jit_generation_time double precision, OUT jit_inlining_count bigint, OUT jit_inlining_time double precision, OUT jit_optimization_count bigint, OUT jit_optimization_time double precision, OUT jit_emission_count bigint, OUT jit_emission_time double precision, OUT jit_deform_count bigint, OUT jit_deform_time double precision, OUT stats_since timestamp with time zone, OUT minmax_stats_since timestamp with time zone) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pg_stat_statements(showtext boolean, OUT userid oid, OUT dbid oid, OUT toplevel boolean, OUT queryid bigint, OUT query text, OUT plans bigint, OUT total_plan_time double precision, OUT min_plan_time double precision, OUT max_plan_time double precision, OUT mean_plan_time double precision, OUT stddev_plan_time double precision, OUT calls bigint, OUT total_exec_time double precision, OUT min_exec_time double precision, OUT max_exec_time double precision, OUT mean_exec_time double precision, OUT stddev_exec_time double precision, OUT rows bigint, OUT shared_blks_hit bigint, OUT shared_blks_read bigint, OUT shared_blks_dirtied bigint, OUT shared_blks_written bigint, OUT local_blks_hit bigint, OUT local_blks_read bigint, OUT local_blks_dirtied bigint, OUT local_blks_written bigint, OUT temp_blks_read bigint, OUT temp_blks_written bigint, OUT shared_blk_read_time double precision, OUT shared_blk_write_time double precision, OUT local_blk_read_time double precision, OUT local_blk_write_time double precision, OUT temp_blk_read_time double precision, OUT temp_blk_write_time double precision, OUT wal_records bigint, OUT wal_fpi bigint, OUT wal_bytes numeric, OUT jit_functions bigint, OUT jit_generation_time double precision, OUT jit_inlining_count bigint, OUT jit_inlining_time double precision, OUT jit_optimization_count bigint, OUT jit_optimization_time double precision, OUT jit_emission_count bigint, OUT jit_emission_time double precision, OUT jit_deform_count bigint, OUT jit_deform_time double precision, OUT stats_since timestamp with time zone, OUT minmax_stats_since timestamp with time zone) TO dashboard_user;


--
-- Name: FUNCTION pg_stat_statements_info(OUT dealloc bigint, OUT stats_reset timestamp with time zone); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pg_stat_statements_info(OUT dealloc bigint, OUT stats_reset timestamp with time zone) FROM postgres;
GRANT ALL ON FUNCTION extensions.pg_stat_statements_info(OUT dealloc bigint, OUT stats_reset timestamp with time zone) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pg_stat_statements_info(OUT dealloc bigint, OUT stats_reset timestamp with time zone) TO dashboard_user;


--
-- Name: FUNCTION pg_stat_statements_reset(userid oid, dbid oid, queryid bigint, minmax_only boolean); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pg_stat_statements_reset(userid oid, dbid oid, queryid bigint, minmax_only boolean) FROM postgres;
GRANT ALL ON FUNCTION extensions.pg_stat_statements_reset(userid oid, dbid oid, queryid bigint, minmax_only boolean) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pg_stat_statements_reset(userid oid, dbid oid, queryid bigint, minmax_only boolean) TO dashboard_user;


--
-- Name: FUNCTION pgp_armor_headers(text, OUT key text, OUT value text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_armor_headers(text, OUT key text, OUT value text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_armor_headers(text, OUT key text, OUT value text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_armor_headers(text, OUT key text, OUT value text) TO dashboard_user;


--
-- Name: FUNCTION pgp_key_id(bytea); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_key_id(bytea) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_key_id(bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_key_id(bytea) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_decrypt(bytea, bytea); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_decrypt(bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_decrypt(bytea, bytea, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt(bytea, bytea, text, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_decrypt_bytea(bytea, bytea); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_decrypt_bytea(bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_decrypt_bytea(bytea, bytea, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea, text, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_encrypt(text, bytea); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_encrypt(text, bytea) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt(text, bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt(text, bytea) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_encrypt(text, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_encrypt(text, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt(text, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt(text, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_encrypt_bytea(bytea, bytea); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_encrypt_bytea(bytea, bytea) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt_bytea(bytea, bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt_bytea(bytea, bytea) TO dashboard_user;


--
-- Name: FUNCTION pgp_pub_encrypt_bytea(bytea, bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_pub_encrypt_bytea(bytea, bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt_bytea(bytea, bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_pub_encrypt_bytea(bytea, bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_decrypt(bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_decrypt(bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt(bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt(bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_decrypt(bytea, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_decrypt(bytea, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt(bytea, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt(bytea, text, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_decrypt_bytea(bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_decrypt_bytea(bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt_bytea(bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt_bytea(bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_decrypt_bytea(bytea, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_decrypt_bytea(bytea, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt_bytea(bytea, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_decrypt_bytea(bytea, text, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_encrypt(text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_encrypt(text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt(text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt(text, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_encrypt(text, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_encrypt(text, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt(text, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt(text, text, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_encrypt_bytea(bytea, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_encrypt_bytea(bytea, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt_bytea(bytea, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt_bytea(bytea, text) TO dashboard_user;


--
-- Name: FUNCTION pgp_sym_encrypt_bytea(bytea, text, text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.pgp_sym_encrypt_bytea(bytea, text, text) FROM postgres;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt_bytea(bytea, text, text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.pgp_sym_encrypt_bytea(bytea, text, text) TO dashboard_user;


--
-- Name: FUNCTION pgrst_ddl_watch(); Type: ACL; Schema: extensions; Owner: supabase_admin
--

GRANT ALL ON FUNCTION extensions.pgrst_ddl_watch() TO postgres WITH GRANT OPTION;


--
-- Name: FUNCTION pgrst_drop_watch(); Type: ACL; Schema: extensions; Owner: supabase_admin
--

GRANT ALL ON FUNCTION extensions.pgrst_drop_watch() TO postgres WITH GRANT OPTION;


--
-- Name: FUNCTION set_graphql_placeholder(); Type: ACL; Schema: extensions; Owner: supabase_admin
--

GRANT ALL ON FUNCTION extensions.set_graphql_placeholder() TO postgres WITH GRANT OPTION;


--
-- Name: FUNCTION uuid_generate_v1(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_generate_v1() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_generate_v1() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_generate_v1() TO dashboard_user;


--
-- Name: FUNCTION uuid_generate_v1mc(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_generate_v1mc() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_generate_v1mc() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_generate_v1mc() TO dashboard_user;


--
-- Name: FUNCTION uuid_generate_v3(namespace uuid, name text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_generate_v3(namespace uuid, name text) FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_generate_v3(namespace uuid, name text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_generate_v3(namespace uuid, name text) TO dashboard_user;


--
-- Name: FUNCTION uuid_generate_v4(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_generate_v4() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_generate_v4() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_generate_v4() TO dashboard_user;


--
-- Name: FUNCTION uuid_generate_v5(namespace uuid, name text); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_generate_v5(namespace uuid, name text) FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_generate_v5(namespace uuid, name text) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_generate_v5(namespace uuid, name text) TO dashboard_user;


--
-- Name: FUNCTION uuid_nil(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_nil() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_nil() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_nil() TO dashboard_user;


--
-- Name: FUNCTION uuid_ns_dns(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_ns_dns() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_ns_dns() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_ns_dns() TO dashboard_user;


--
-- Name: FUNCTION uuid_ns_oid(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_ns_oid() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_ns_oid() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_ns_oid() TO dashboard_user;


--
-- Name: FUNCTION uuid_ns_url(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_ns_url() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_ns_url() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_ns_url() TO dashboard_user;


--
-- Name: FUNCTION uuid_ns_x500(); Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON FUNCTION extensions.uuid_ns_x500() FROM postgres;
GRANT ALL ON FUNCTION extensions.uuid_ns_x500() TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION extensions.uuid_ns_x500() TO dashboard_user;


--
-- Name: FUNCTION graphql("operationName" text, query text, variables jsonb, extensions jsonb); Type: ACL; Schema: graphql_public; Owner: supabase_admin
--

GRANT ALL ON FUNCTION graphql_public.graphql("operationName" text, query text, variables jsonb, extensions jsonb) TO postgres;
GRANT ALL ON FUNCTION graphql_public.graphql("operationName" text, query text, variables jsonb, extensions jsonb) TO anon;
GRANT ALL ON FUNCTION graphql_public.graphql("operationName" text, query text, variables jsonb, extensions jsonb) TO authenticated;
GRANT ALL ON FUNCTION graphql_public.graphql("operationName" text, query text, variables jsonb, extensions jsonb) TO service_role;


--
-- Name: FUNCTION get_auth(p_usename text); Type: ACL; Schema: pgbouncer; Owner: supabase_admin
--

REVOKE ALL ON FUNCTION pgbouncer.get_auth(p_usename text) FROM PUBLIC;
GRANT ALL ON FUNCTION pgbouncer.get_auth(p_usename text) TO pgbouncer;
GRANT ALL ON FUNCTION pgbouncer.get_auth(p_usename text) TO postgres;


--
-- Name: FUNCTION accept_invitation_atomic(p_invitation_token uuid, p_user_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.accept_invitation_atomic(p_invitation_token uuid, p_user_id uuid) TO anon;
GRANT ALL ON FUNCTION public.accept_invitation_atomic(p_invitation_token uuid, p_user_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.accept_invitation_atomic(p_invitation_token uuid, p_user_id uuid) TO service_role;


--
-- Name: FUNCTION calculate_billable_members(org_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.calculate_billable_members(org_id uuid) TO anon;
GRANT ALL ON FUNCTION public.calculate_billable_members(org_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.calculate_billable_members(org_id uuid) TO service_role;


--
-- Name: FUNCTION calculate_organization_billing(org_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.calculate_organization_billing(org_id uuid) TO anon;
GRANT ALL ON FUNCTION public.calculate_organization_billing(org_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.calculate_organization_billing(org_id uuid) TO service_role;


--
-- Name: FUNCTION can_manage_invitation_atomic(user_uuid uuid, invitation_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.can_manage_invitation_atomic(user_uuid uuid, invitation_id uuid) TO anon;
GRANT ALL ON FUNCTION public.can_manage_invitation_atomic(user_uuid uuid, invitation_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.can_manage_invitation_atomic(user_uuid uuid, invitation_id uuid) TO service_role;


--
-- Name: FUNCTION can_manage_invitation_optimized(user_uuid uuid, invitation_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.can_manage_invitation_optimized(user_uuid uuid, invitation_id uuid) TO anon;
GRANT ALL ON FUNCTION public.can_manage_invitation_optimized(user_uuid uuid, invitation_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.can_manage_invitation_optimized(user_uuid uuid, invitation_id uuid) TO service_role;


--
-- Name: FUNCTION can_manage_invitation_safe(user_uuid uuid, invitation_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.can_manage_invitation_safe(user_uuid uuid, invitation_id uuid) TO anon;
GRANT ALL ON FUNCTION public.can_manage_invitation_safe(user_uuid uuid, invitation_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.can_manage_invitation_safe(user_uuid uuid, invitation_id uuid) TO service_role;


--
-- Name: FUNCTION check_admin_bypass_fixed(user_uuid uuid, org_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.check_admin_bypass_fixed(user_uuid uuid, org_id uuid) TO anon;
GRANT ALL ON FUNCTION public.check_admin_bypass_fixed(user_uuid uuid, org_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.check_admin_bypass_fixed(user_uuid uuid, org_id uuid) TO service_role;


--
-- Name: FUNCTION check_admin_permission_safe(user_uuid uuid, org_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.check_admin_permission_safe(user_uuid uuid, org_id uuid) TO anon;
GRANT ALL ON FUNCTION public.check_admin_permission_safe(user_uuid uuid, org_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.check_admin_permission_safe(user_uuid uuid, org_id uuid) TO service_role;


--
-- Name: FUNCTION check_admin_with_context(user_uuid uuid, org_id uuid, bypass_context text); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.check_admin_with_context(user_uuid uuid, org_id uuid, bypass_context text) TO anon;
GRANT ALL ON FUNCTION public.check_admin_with_context(user_uuid uuid, org_id uuid, bypass_context text) TO authenticated;
GRANT ALL ON FUNCTION public.check_admin_with_context(user_uuid uuid, org_id uuid, bypass_context text) TO service_role;


--
-- Name: FUNCTION check_email_exists_in_auth(p_email text); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.check_email_exists_in_auth(p_email text) TO anon;
GRANT ALL ON FUNCTION public.check_email_exists_in_auth(p_email text) TO authenticated;
GRANT ALL ON FUNCTION public.check_email_exists_in_auth(p_email text) TO service_role;


--
-- Name: FUNCTION check_member_bypass_fixed(user_uuid uuid, org_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.check_member_bypass_fixed(user_uuid uuid, org_id uuid) TO anon;
GRANT ALL ON FUNCTION public.check_member_bypass_fixed(user_uuid uuid, org_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.check_member_bypass_fixed(user_uuid uuid, org_id uuid) TO service_role;


--
-- Name: FUNCTION check_org_access_direct(user_uuid uuid, org_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.check_org_access_direct(user_uuid uuid, org_id uuid) TO anon;
GRANT ALL ON FUNCTION public.check_org_access_direct(user_uuid uuid, org_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.check_org_access_direct(user_uuid uuid, org_id uuid) TO service_role;


--
-- Name: FUNCTION check_org_access_secure(user_uuid uuid, org_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.check_org_access_secure(user_uuid uuid, org_id uuid) TO anon;
GRANT ALL ON FUNCTION public.check_org_access_secure(user_uuid uuid, org_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.check_org_access_secure(user_uuid uuid, org_id uuid) TO service_role;


--
-- Name: FUNCTION check_org_admin_secure(user_uuid uuid, org_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.check_org_admin_secure(user_uuid uuid, org_id uuid) TO anon;
GRANT ALL ON FUNCTION public.check_org_admin_secure(user_uuid uuid, org_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.check_org_admin_secure(user_uuid uuid, org_id uuid) TO service_role;


--
-- Name: FUNCTION check_team_access_secure(user_uuid uuid, team_uuid uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.check_team_access_secure(user_uuid uuid, team_uuid uuid) TO anon;
GRANT ALL ON FUNCTION public.check_team_access_secure(user_uuid uuid, team_uuid uuid) TO authenticated;
GRANT ALL ON FUNCTION public.check_team_access_secure(user_uuid uuid, team_uuid uuid) TO service_role;


--
-- Name: FUNCTION check_team_role_secure(user_uuid uuid, team_uuid uuid, required_role text); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.check_team_role_secure(user_uuid uuid, team_uuid uuid, required_role text) TO anon;
GRANT ALL ON FUNCTION public.check_team_role_secure(user_uuid uuid, team_uuid uuid, required_role text) TO authenticated;
GRANT ALL ON FUNCTION public.check_team_role_secure(user_uuid uuid, team_uuid uuid, required_role text) TO service_role;


--
-- Name: FUNCTION clear_rls_context(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.clear_rls_context() TO anon;
GRANT ALL ON FUNCTION public.clear_rls_context() TO authenticated;
GRANT ALL ON FUNCTION public.clear_rls_context() TO service_role;


--
-- Name: FUNCTION create_historical_work_order_with_pm(p_organization_id uuid, p_equipment_id uuid, p_title text, p_description text, p_priority public.work_order_priority, p_status public.work_order_status, p_historical_start_date timestamp with time zone, p_historical_notes text, p_assignee_id uuid, p_team_id uuid, p_due_date timestamp with time zone, p_completed_date timestamp with time zone, p_has_pm boolean, p_pm_status text, p_pm_completion_date timestamp with time zone, p_pm_notes text, p_pm_checklist_data jsonb); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.create_historical_work_order_with_pm(p_organization_id uuid, p_equipment_id uuid, p_title text, p_description text, p_priority public.work_order_priority, p_status public.work_order_status, p_historical_start_date timestamp with time zone, p_historical_notes text, p_assignee_id uuid, p_team_id uuid, p_due_date timestamp with time zone, p_completed_date timestamp with time zone, p_has_pm boolean, p_pm_status text, p_pm_completion_date timestamp with time zone, p_pm_notes text, p_pm_checklist_data jsonb) TO anon;
GRANT ALL ON FUNCTION public.create_historical_work_order_with_pm(p_organization_id uuid, p_equipment_id uuid, p_title text, p_description text, p_priority public.work_order_priority, p_status public.work_order_status, p_historical_start_date timestamp with time zone, p_historical_notes text, p_assignee_id uuid, p_team_id uuid, p_due_date timestamp with time zone, p_completed_date timestamp with time zone, p_has_pm boolean, p_pm_status text, p_pm_completion_date timestamp with time zone, p_pm_notes text, p_pm_checklist_data jsonb) TO authenticated;
GRANT ALL ON FUNCTION public.create_historical_work_order_with_pm(p_organization_id uuid, p_equipment_id uuid, p_title text, p_description text, p_priority public.work_order_priority, p_status public.work_order_status, p_historical_start_date timestamp with time zone, p_historical_notes text, p_assignee_id uuid, p_team_id uuid, p_due_date timestamp with time zone, p_completed_date timestamp with time zone, p_has_pm boolean, p_pm_status text, p_pm_completion_date timestamp with time zone, p_pm_notes text, p_pm_checklist_data jsonb) TO service_role;


--
-- Name: FUNCTION create_invitation_atomic(p_organization_id uuid, p_email text, p_role text, p_message text, p_invited_by uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.create_invitation_atomic(p_organization_id uuid, p_email text, p_role text, p_message text, p_invited_by uuid) TO anon;
GRANT ALL ON FUNCTION public.create_invitation_atomic(p_organization_id uuid, p_email text, p_role text, p_message text, p_invited_by uuid) TO authenticated;
GRANT ALL ON FUNCTION public.create_invitation_atomic(p_organization_id uuid, p_email text, p_role text, p_message text, p_invited_by uuid) TO service_role;


--
-- Name: FUNCTION create_invitation_bypass(p_organization_id uuid, p_email text, p_role text, p_message text, p_invited_by uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.create_invitation_bypass(p_organization_id uuid, p_email text, p_role text, p_message text, p_invited_by uuid) TO anon;
GRANT ALL ON FUNCTION public.create_invitation_bypass(p_organization_id uuid, p_email text, p_role text, p_message text, p_invited_by uuid) TO authenticated;
GRANT ALL ON FUNCTION public.create_invitation_bypass(p_organization_id uuid, p_email text, p_role text, p_message text, p_invited_by uuid) TO service_role;


--
-- Name: FUNCTION create_invitation_bypass_optimized(p_organization_id uuid, p_email text, p_role text, p_message text, p_invited_by uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.create_invitation_bypass_optimized(p_organization_id uuid, p_email text, p_role text, p_message text, p_invited_by uuid) TO anon;
GRANT ALL ON FUNCTION public.create_invitation_bypass_optimized(p_organization_id uuid, p_email text, p_role text, p_message text, p_invited_by uuid) TO authenticated;
GRANT ALL ON FUNCTION public.create_invitation_bypass_optimized(p_organization_id uuid, p_email text, p_role text, p_message text, p_invited_by uuid) TO service_role;


--
-- Name: FUNCTION create_invitation_with_context(p_organization_id uuid, p_email text, p_role text, p_message text, p_invited_by uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.create_invitation_with_context(p_organization_id uuid, p_email text, p_role text, p_message text, p_invited_by uuid) TO anon;
GRANT ALL ON FUNCTION public.create_invitation_with_context(p_organization_id uuid, p_email text, p_role text, p_message text, p_invited_by uuid) TO authenticated;
GRANT ALL ON FUNCTION public.create_invitation_with_context(p_organization_id uuid, p_email text, p_role text, p_message text, p_invited_by uuid) TO service_role;


--
-- Name: FUNCTION expire_old_invitations(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.expire_old_invitations() TO anon;
GRANT ALL ON FUNCTION public.expire_old_invitations() TO authenticated;
GRANT ALL ON FUNCTION public.expire_old_invitations() TO service_role;


--
-- Name: FUNCTION get_current_billing_period(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.get_current_billing_period() TO anon;
GRANT ALL ON FUNCTION public.get_current_billing_period() TO authenticated;
GRANT ALL ON FUNCTION public.get_current_billing_period() TO service_role;


--
-- Name: FUNCTION get_current_user_id(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.get_current_user_id() TO anon;
GRANT ALL ON FUNCTION public.get_current_user_id() TO authenticated;
GRANT ALL ON FUNCTION public.get_current_user_id() TO service_role;


--
-- Name: FUNCTION get_invitation_by_token_secure(p_token uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.get_invitation_by_token_secure(p_token uuid) TO anon;
GRANT ALL ON FUNCTION public.get_invitation_by_token_secure(p_token uuid) TO authenticated;
GRANT ALL ON FUNCTION public.get_invitation_by_token_secure(p_token uuid) TO service_role;


--
-- Name: FUNCTION get_invitations_atomic(user_uuid uuid, org_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.get_invitations_atomic(user_uuid uuid, org_id uuid) TO anon;
GRANT ALL ON FUNCTION public.get_invitations_atomic(user_uuid uuid, org_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.get_invitations_atomic(user_uuid uuid, org_id uuid) TO service_role;


--
-- Name: FUNCTION get_invitations_bypass_optimized(user_uuid uuid, org_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.get_invitations_bypass_optimized(user_uuid uuid, org_id uuid) TO anon;
GRANT ALL ON FUNCTION public.get_invitations_bypass_optimized(user_uuid uuid, org_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.get_invitations_bypass_optimized(user_uuid uuid, org_id uuid) TO service_role;


--
-- Name: FUNCTION get_latest_completed_pm(equipment_uuid uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.get_latest_completed_pm(equipment_uuid uuid) TO anon;
GRANT ALL ON FUNCTION public.get_latest_completed_pm(equipment_uuid uuid) TO authenticated;
GRANT ALL ON FUNCTION public.get_latest_completed_pm(equipment_uuid uuid) TO service_role;


--
-- Name: FUNCTION get_member_profiles_secure(org_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.get_member_profiles_secure(org_id uuid) TO anon;
GRANT ALL ON FUNCTION public.get_member_profiles_secure(org_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.get_member_profiles_secure(org_id uuid) TO service_role;


--
-- Name: FUNCTION get_organization_exemptions(org_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.get_organization_exemptions(org_id uuid) TO anon;
GRANT ALL ON FUNCTION public.get_organization_exemptions(org_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.get_organization_exemptions(org_id uuid) TO service_role;


--
-- Name: FUNCTION get_organization_member_profile(member_user_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.get_organization_member_profile(member_user_id uuid) TO anon;
GRANT ALL ON FUNCTION public.get_organization_member_profile(member_user_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.get_organization_member_profile(member_user_id uuid) TO service_role;


--
-- Name: FUNCTION get_organization_premium_features(org_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.get_organization_premium_features(org_id uuid) TO anon;
GRANT ALL ON FUNCTION public.get_organization_premium_features(org_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.get_organization_premium_features(org_id uuid) TO service_role;


--
-- Name: FUNCTION get_organization_slot_availability(org_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.get_organization_slot_availability(org_id uuid) TO anon;
GRANT ALL ON FUNCTION public.get_organization_slot_availability(org_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.get_organization_slot_availability(org_id uuid) TO service_role;


--
-- Name: FUNCTION get_organization_slot_availability_with_exemptions(org_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.get_organization_slot_availability_with_exemptions(org_id uuid) TO anon;
GRANT ALL ON FUNCTION public.get_organization_slot_availability_with_exemptions(org_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.get_organization_slot_availability_with_exemptions(org_id uuid) TO service_role;


--
-- Name: FUNCTION get_user_invitations_safe(user_uuid uuid, org_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.get_user_invitations_safe(user_uuid uuid, org_id uuid) TO anon;
GRANT ALL ON FUNCTION public.get_user_invitations_safe(user_uuid uuid, org_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.get_user_invitations_safe(user_uuid uuid, org_id uuid) TO service_role;


--
-- Name: FUNCTION get_user_managed_teams(user_uuid uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.get_user_managed_teams(user_uuid uuid) TO anon;
GRANT ALL ON FUNCTION public.get_user_managed_teams(user_uuid uuid) TO authenticated;
GRANT ALL ON FUNCTION public.get_user_managed_teams(user_uuid uuid) TO service_role;


--
-- Name: FUNCTION get_user_org_role_direct(user_uuid uuid, org_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.get_user_org_role_direct(user_uuid uuid, org_id uuid) TO anon;
GRANT ALL ON FUNCTION public.get_user_org_role_direct(user_uuid uuid, org_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.get_user_org_role_direct(user_uuid uuid, org_id uuid) TO service_role;


--
-- Name: FUNCTION get_user_org_role_secure(user_uuid uuid, org_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.get_user_org_role_secure(user_uuid uuid, org_id uuid) TO anon;
GRANT ALL ON FUNCTION public.get_user_org_role_secure(user_uuid uuid, org_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.get_user_org_role_secure(user_uuid uuid, org_id uuid) TO service_role;


--
-- Name: FUNCTION get_user_organization_membership(user_uuid uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.get_user_organization_membership(user_uuid uuid) TO anon;
GRANT ALL ON FUNCTION public.get_user_organization_membership(user_uuid uuid) TO authenticated;
GRANT ALL ON FUNCTION public.get_user_organization_membership(user_uuid uuid) TO service_role;


--
-- Name: FUNCTION get_user_organizations(user_uuid uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.get_user_organizations(user_uuid uuid) TO anon;
GRANT ALL ON FUNCTION public.get_user_organizations(user_uuid uuid) TO authenticated;
GRANT ALL ON FUNCTION public.get_user_organizations(user_uuid uuid) TO service_role;


--
-- Name: FUNCTION get_user_team_memberships(user_uuid uuid, org_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.get_user_team_memberships(user_uuid uuid, org_id uuid) TO anon;
GRANT ALL ON FUNCTION public.get_user_team_memberships(user_uuid uuid, org_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.get_user_team_memberships(user_uuid uuid, org_id uuid) TO service_role;


--
-- Name: FUNCTION handle_invitation_account_creation(p_invitation_id uuid, p_user_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.handle_invitation_account_creation(p_invitation_id uuid, p_user_id uuid) TO anon;
GRANT ALL ON FUNCTION public.handle_invitation_account_creation(p_invitation_id uuid, p_user_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.handle_invitation_account_creation(p_invitation_id uuid, p_user_id uuid) TO service_role;


--
-- Name: FUNCTION handle_membership_billing_update(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.handle_membership_billing_update() TO anon;
GRANT ALL ON FUNCTION public.handle_membership_billing_update() TO authenticated;
GRANT ALL ON FUNCTION public.handle_membership_billing_update() TO service_role;


--
-- Name: FUNCTION handle_new_user(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.handle_new_user() TO anon;
GRANT ALL ON FUNCTION public.handle_new_user() TO authenticated;
GRANT ALL ON FUNCTION public.handle_new_user() TO service_role;


--
-- Name: FUNCTION handle_team_deletion(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.handle_team_deletion() TO anon;
GRANT ALL ON FUNCTION public.handle_team_deletion() TO authenticated;
GRANT ALL ON FUNCTION public.handle_team_deletion() TO service_role;


--
-- Name: FUNCTION handle_team_manager_removal(user_uuid uuid, org_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.handle_team_manager_removal(user_uuid uuid, org_id uuid) TO anon;
GRANT ALL ON FUNCTION public.handle_team_manager_removal(user_uuid uuid, org_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.handle_team_manager_removal(user_uuid uuid, org_id uuid) TO service_role;


--
-- Name: FUNCTION handle_updated_at(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.handle_updated_at() TO anon;
GRANT ALL ON FUNCTION public.handle_updated_at() TO authenticated;
GRANT ALL ON FUNCTION public.handle_updated_at() TO service_role;


--
-- Name: FUNCTION is_org_admin(user_uuid uuid, org_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.is_org_admin(user_uuid uuid, org_id uuid) TO anon;
GRANT ALL ON FUNCTION public.is_org_admin(user_uuid uuid, org_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.is_org_admin(user_uuid uuid, org_id uuid) TO service_role;


--
-- Name: FUNCTION is_org_member(user_uuid uuid, org_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.is_org_member(user_uuid uuid, org_id uuid) TO anon;
GRANT ALL ON FUNCTION public.is_org_member(user_uuid uuid, org_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.is_org_member(user_uuid uuid, org_id uuid) TO service_role;


--
-- Name: FUNCTION is_organization_admin(user_uuid uuid, org_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.is_organization_admin(user_uuid uuid, org_id uuid) TO anon;
GRANT ALL ON FUNCTION public.is_organization_admin(user_uuid uuid, org_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.is_organization_admin(user_uuid uuid, org_id uuid) TO service_role;


--
-- Name: FUNCTION is_organization_member(user_uuid uuid, org_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.is_organization_member(user_uuid uuid, org_id uuid) TO anon;
GRANT ALL ON FUNCTION public.is_organization_member(user_uuid uuid, org_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.is_organization_member(user_uuid uuid, org_id uuid) TO service_role;


--
-- Name: FUNCTION leave_organization_safely(org_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.leave_organization_safely(org_id uuid) TO anon;
GRANT ALL ON FUNCTION public.leave_organization_safely(org_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.leave_organization_safely(org_id uuid) TO service_role;


--
-- Name: FUNCTION log_invitation_performance(function_name text, execution_time_ms numeric, success boolean, error_message text); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.log_invitation_performance(function_name text, execution_time_ms numeric, success boolean, error_message text) TO anon;
GRANT ALL ON FUNCTION public.log_invitation_performance(function_name text, execution_time_ms numeric, success boolean, error_message text) TO authenticated;
GRANT ALL ON FUNCTION public.log_invitation_performance(function_name text, execution_time_ms numeric, success boolean, error_message text) TO service_role;


--
-- Name: FUNCTION log_pm_status_change(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.log_pm_status_change() TO anon;
GRANT ALL ON FUNCTION public.log_pm_status_change() TO authenticated;
GRANT ALL ON FUNCTION public.log_pm_status_change() TO service_role;


--
-- Name: FUNCTION log_work_order_status_change(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.log_work_order_status_change() TO anon;
GRANT ALL ON FUNCTION public.log_work_order_status_change() TO authenticated;
GRANT ALL ON FUNCTION public.log_work_order_status_change() TO service_role;


--
-- Name: FUNCTION preserve_user_attribution(user_uuid uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.preserve_user_attribution(user_uuid uuid) TO anon;
GRANT ALL ON FUNCTION public.preserve_user_attribution(user_uuid uuid) TO authenticated;
GRANT ALL ON FUNCTION public.preserve_user_attribution(user_uuid uuid) TO service_role;


--
-- Name: FUNCTION release_reserved_slot(org_id uuid, invitation_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.release_reserved_slot(org_id uuid, invitation_id uuid) TO anon;
GRANT ALL ON FUNCTION public.release_reserved_slot(org_id uuid, invitation_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.release_reserved_slot(org_id uuid, invitation_id uuid) TO service_role;


--
-- Name: FUNCTION remove_organization_member_safely(user_uuid uuid, org_id uuid, removed_by uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.remove_organization_member_safely(user_uuid uuid, org_id uuid, removed_by uuid) TO anon;
GRANT ALL ON FUNCTION public.remove_organization_member_safely(user_uuid uuid, org_id uuid, removed_by uuid) TO authenticated;
GRANT ALL ON FUNCTION public.remove_organization_member_safely(user_uuid uuid, org_id uuid, removed_by uuid) TO service_role;


--
-- Name: FUNCTION reserve_slot_for_invitation(org_id uuid, invitation_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.reserve_slot_for_invitation(org_id uuid, invitation_id uuid) TO anon;
GRANT ALL ON FUNCTION public.reserve_slot_for_invitation(org_id uuid, invitation_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.reserve_slot_for_invitation(org_id uuid, invitation_id uuid) TO service_role;


--
-- Name: FUNCTION revert_pm_completion(p_pm_id uuid, p_reason text); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.revert_pm_completion(p_pm_id uuid, p_reason text) TO anon;
GRANT ALL ON FUNCTION public.revert_pm_completion(p_pm_id uuid, p_reason text) TO authenticated;
GRANT ALL ON FUNCTION public.revert_pm_completion(p_pm_id uuid, p_reason text) TO service_role;


--
-- Name: FUNCTION revert_work_order_status(p_work_order_id uuid, p_reason text); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.revert_work_order_status(p_work_order_id uuid, p_reason text) TO anon;
GRANT ALL ON FUNCTION public.revert_work_order_status(p_work_order_id uuid, p_reason text) TO authenticated;
GRANT ALL ON FUNCTION public.revert_work_order_status(p_work_order_id uuid, p_reason text) TO service_role;


--
-- Name: FUNCTION set_bypass_triggers(bypass boolean); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.set_bypass_triggers(bypass boolean) TO anon;
GRANT ALL ON FUNCTION public.set_bypass_triggers(bypass boolean) TO authenticated;
GRANT ALL ON FUNCTION public.set_bypass_triggers(bypass boolean) TO service_role;


--
-- Name: FUNCTION set_geocoded_locations_updated_at(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.set_geocoded_locations_updated_at() TO anon;
GRANT ALL ON FUNCTION public.set_geocoded_locations_updated_at() TO authenticated;
GRANT ALL ON FUNCTION public.set_geocoded_locations_updated_at() TO service_role;


--
-- Name: FUNCTION set_rls_context(context_name text); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.set_rls_context(context_name text) TO anon;
GRANT ALL ON FUNCTION public.set_rls_context(context_name text) TO authenticated;
GRANT ALL ON FUNCTION public.set_rls_context(context_name text) TO service_role;


--
-- Name: FUNCTION sync_stripe_subscription_slots(org_id uuid, subscription_id text, quantity integer, period_start timestamp with time zone, period_end timestamp with time zone); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.sync_stripe_subscription_slots(org_id uuid, subscription_id text, quantity integer, period_start timestamp with time zone, period_end timestamp with time zone) TO anon;
GRANT ALL ON FUNCTION public.sync_stripe_subscription_slots(org_id uuid, subscription_id text, quantity integer, period_start timestamp with time zone, period_end timestamp with time zone) TO authenticated;
GRANT ALL ON FUNCTION public.sync_stripe_subscription_slots(org_id uuid, subscription_id text, quantity integer, period_start timestamp with time zone, period_end timestamp with time zone) TO service_role;


--
-- Name: FUNCTION touch_updated_at(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.touch_updated_at() TO anon;
GRANT ALL ON FUNCTION public.touch_updated_at() TO authenticated;
GRANT ALL ON FUNCTION public.touch_updated_at() TO service_role;


--
-- Name: FUNCTION update_equipment_working_hours(p_equipment_id uuid, p_new_hours numeric, p_update_source text, p_work_order_id uuid, p_notes text); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.update_equipment_working_hours(p_equipment_id uuid, p_new_hours numeric, p_update_source text, p_work_order_id uuid, p_notes text) TO anon;
GRANT ALL ON FUNCTION public.update_equipment_working_hours(p_equipment_id uuid, p_new_hours numeric, p_update_source text, p_work_order_id uuid, p_notes text) TO authenticated;
GRANT ALL ON FUNCTION public.update_equipment_working_hours(p_equipment_id uuid, p_new_hours numeric, p_update_source text, p_work_order_id uuid, p_notes text) TO service_role;


--
-- Name: FUNCTION update_organization_billing_metrics(org_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.update_organization_billing_metrics(org_id uuid) TO anon;
GRANT ALL ON FUNCTION public.update_organization_billing_metrics(org_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.update_organization_billing_metrics(org_id uuid) TO service_role;


--
-- Name: FUNCTION update_organization_member_count(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.update_organization_member_count() TO anon;
GRANT ALL ON FUNCTION public.update_organization_member_count() TO authenticated;
GRANT ALL ON FUNCTION public.update_organization_member_count() TO service_role;


--
-- Name: FUNCTION update_pm_updated_at(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.update_pm_updated_at() TO anon;
GRANT ALL ON FUNCTION public.update_pm_updated_at() TO authenticated;
GRANT ALL ON FUNCTION public.update_pm_updated_at() TO service_role;


--
-- Name: FUNCTION update_updated_at_column(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.update_updated_at_column() TO anon;
GRANT ALL ON FUNCTION public.update_updated_at_column() TO authenticated;
GRANT ALL ON FUNCTION public.update_updated_at_column() TO service_role;


--
-- Name: FUNCTION update_work_order_costs_updated_at(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.update_work_order_costs_updated_at() TO anon;
GRANT ALL ON FUNCTION public.update_work_order_costs_updated_at() TO authenticated;
GRANT ALL ON FUNCTION public.update_work_order_costs_updated_at() TO service_role;


--
-- Name: FUNCTION validate_invitation_for_account_creation(p_invitation_id uuid); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.validate_invitation_for_account_creation(p_invitation_id uuid) TO anon;
GRANT ALL ON FUNCTION public.validate_invitation_for_account_creation(p_invitation_id uuid) TO authenticated;
GRANT ALL ON FUNCTION public.validate_invitation_for_account_creation(p_invitation_id uuid) TO service_role;


--
-- Name: FUNCTION validate_member_limit(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.validate_member_limit() TO anon;
GRANT ALL ON FUNCTION public.validate_member_limit() TO authenticated;
GRANT ALL ON FUNCTION public.validate_member_limit() TO service_role;


--
-- Name: FUNCTION apply_rls(wal jsonb, max_record_bytes integer); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) TO postgres;
GRANT ALL ON FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) TO anon;
GRANT ALL ON FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) TO authenticated;
GRANT ALL ON FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) TO service_role;
GRANT ALL ON FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer) TO supabase_realtime_admin;


--
-- Name: FUNCTION broadcast_changes(topic_name text, event_name text, operation text, table_name text, table_schema text, new record, old record, level text); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.broadcast_changes(topic_name text, event_name text, operation text, table_name text, table_schema text, new record, old record, level text) TO postgres;
GRANT ALL ON FUNCTION realtime.broadcast_changes(topic_name text, event_name text, operation text, table_name text, table_schema text, new record, old record, level text) TO dashboard_user;


--
-- Name: FUNCTION build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) TO postgres;
GRANT ALL ON FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) TO anon;
GRANT ALL ON FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) TO authenticated;
GRANT ALL ON FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) TO service_role;
GRANT ALL ON FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[]) TO supabase_realtime_admin;


--
-- Name: FUNCTION "cast"(val text, type_ regtype); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime."cast"(val text, type_ regtype) TO postgres;
GRANT ALL ON FUNCTION realtime."cast"(val text, type_ regtype) TO dashboard_user;
GRANT ALL ON FUNCTION realtime."cast"(val text, type_ regtype) TO anon;
GRANT ALL ON FUNCTION realtime."cast"(val text, type_ regtype) TO authenticated;
GRANT ALL ON FUNCTION realtime."cast"(val text, type_ regtype) TO service_role;
GRANT ALL ON FUNCTION realtime."cast"(val text, type_ regtype) TO supabase_realtime_admin;


--
-- Name: FUNCTION check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) TO postgres;
GRANT ALL ON FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) TO anon;
GRANT ALL ON FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) TO authenticated;
GRANT ALL ON FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) TO service_role;
GRANT ALL ON FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text) TO supabase_realtime_admin;


--
-- Name: FUNCTION is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) TO postgres;
GRANT ALL ON FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) TO anon;
GRANT ALL ON FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) TO authenticated;
GRANT ALL ON FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) TO service_role;
GRANT ALL ON FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[]) TO supabase_realtime_admin;


--
-- Name: FUNCTION list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) TO postgres;
GRANT ALL ON FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) TO anon;
GRANT ALL ON FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) TO authenticated;
GRANT ALL ON FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) TO service_role;
GRANT ALL ON FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer) TO supabase_realtime_admin;


--
-- Name: FUNCTION quote_wal2json(entity regclass); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.quote_wal2json(entity regclass) TO postgres;
GRANT ALL ON FUNCTION realtime.quote_wal2json(entity regclass) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.quote_wal2json(entity regclass) TO anon;
GRANT ALL ON FUNCTION realtime.quote_wal2json(entity regclass) TO authenticated;
GRANT ALL ON FUNCTION realtime.quote_wal2json(entity regclass) TO service_role;
GRANT ALL ON FUNCTION realtime.quote_wal2json(entity regclass) TO supabase_realtime_admin;


--
-- Name: FUNCTION send(payload jsonb, event text, topic text, private boolean); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.send(payload jsonb, event text, topic text, private boolean) TO postgres;
GRANT ALL ON FUNCTION realtime.send(payload jsonb, event text, topic text, private boolean) TO dashboard_user;


--
-- Name: FUNCTION subscription_check_filters(); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.subscription_check_filters() TO postgres;
GRANT ALL ON FUNCTION realtime.subscription_check_filters() TO dashboard_user;
GRANT ALL ON FUNCTION realtime.subscription_check_filters() TO anon;
GRANT ALL ON FUNCTION realtime.subscription_check_filters() TO authenticated;
GRANT ALL ON FUNCTION realtime.subscription_check_filters() TO service_role;
GRANT ALL ON FUNCTION realtime.subscription_check_filters() TO supabase_realtime_admin;


--
-- Name: FUNCTION to_regrole(role_name text); Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON FUNCTION realtime.to_regrole(role_name text) TO postgres;
GRANT ALL ON FUNCTION realtime.to_regrole(role_name text) TO dashboard_user;
GRANT ALL ON FUNCTION realtime.to_regrole(role_name text) TO anon;
GRANT ALL ON FUNCTION realtime.to_regrole(role_name text) TO authenticated;
GRANT ALL ON FUNCTION realtime.to_regrole(role_name text) TO service_role;
GRANT ALL ON FUNCTION realtime.to_regrole(role_name text) TO supabase_realtime_admin;


--
-- Name: FUNCTION topic(); Type: ACL; Schema: realtime; Owner: supabase_realtime_admin
--

GRANT ALL ON FUNCTION realtime.topic() TO postgres;
GRANT ALL ON FUNCTION realtime.topic() TO dashboard_user;


--
-- Name: FUNCTION _crypto_aead_det_decrypt(message bytea, additional bytea, key_id bigint, context bytea, nonce bytea); Type: ACL; Schema: vault; Owner: supabase_admin
--

GRANT ALL ON FUNCTION vault._crypto_aead_det_decrypt(message bytea, additional bytea, key_id bigint, context bytea, nonce bytea) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION vault._crypto_aead_det_decrypt(message bytea, additional bytea, key_id bigint, context bytea, nonce bytea) TO service_role;


--
-- Name: FUNCTION create_secret(new_secret text, new_name text, new_description text, new_key_id uuid); Type: ACL; Schema: vault; Owner: supabase_admin
--

GRANT ALL ON FUNCTION vault.create_secret(new_secret text, new_name text, new_description text, new_key_id uuid) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION vault.create_secret(new_secret text, new_name text, new_description text, new_key_id uuid) TO service_role;


--
-- Name: FUNCTION update_secret(secret_id uuid, new_secret text, new_name text, new_description text, new_key_id uuid); Type: ACL; Schema: vault; Owner: supabase_admin
--

GRANT ALL ON FUNCTION vault.update_secret(secret_id uuid, new_secret text, new_name text, new_description text, new_key_id uuid) TO postgres WITH GRANT OPTION;
GRANT ALL ON FUNCTION vault.update_secret(secret_id uuid, new_secret text, new_name text, new_description text, new_key_id uuid) TO service_role;


--
-- Name: TABLE audit_log_entries; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON TABLE auth.audit_log_entries TO dashboard_user;
GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.audit_log_entries TO postgres;
GRANT SELECT ON TABLE auth.audit_log_entries TO postgres WITH GRANT OPTION;


--
-- Name: TABLE flow_state; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.flow_state TO postgres;
GRANT SELECT ON TABLE auth.flow_state TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.flow_state TO dashboard_user;


--
-- Name: TABLE identities; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.identities TO postgres;
GRANT SELECT ON TABLE auth.identities TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.identities TO dashboard_user;


--
-- Name: TABLE instances; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON TABLE auth.instances TO dashboard_user;
GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.instances TO postgres;
GRANT SELECT ON TABLE auth.instances TO postgres WITH GRANT OPTION;


--
-- Name: TABLE mfa_amr_claims; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.mfa_amr_claims TO postgres;
GRANT SELECT ON TABLE auth.mfa_amr_claims TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.mfa_amr_claims TO dashboard_user;


--
-- Name: TABLE mfa_challenges; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.mfa_challenges TO postgres;
GRANT SELECT ON TABLE auth.mfa_challenges TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.mfa_challenges TO dashboard_user;


--
-- Name: TABLE mfa_factors; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.mfa_factors TO postgres;
GRANT SELECT ON TABLE auth.mfa_factors TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.mfa_factors TO dashboard_user;


--
-- Name: TABLE one_time_tokens; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.one_time_tokens TO postgres;
GRANT SELECT ON TABLE auth.one_time_tokens TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.one_time_tokens TO dashboard_user;


--
-- Name: TABLE refresh_tokens; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON TABLE auth.refresh_tokens TO dashboard_user;
GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.refresh_tokens TO postgres;
GRANT SELECT ON TABLE auth.refresh_tokens TO postgres WITH GRANT OPTION;


--
-- Name: SEQUENCE refresh_tokens_id_seq; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON SEQUENCE auth.refresh_tokens_id_seq TO dashboard_user;
GRANT ALL ON SEQUENCE auth.refresh_tokens_id_seq TO postgres;


--
-- Name: TABLE saml_providers; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.saml_providers TO postgres;
GRANT SELECT ON TABLE auth.saml_providers TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.saml_providers TO dashboard_user;


--
-- Name: TABLE saml_relay_states; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.saml_relay_states TO postgres;
GRANT SELECT ON TABLE auth.saml_relay_states TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.saml_relay_states TO dashboard_user;


--
-- Name: TABLE schema_migrations; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT SELECT ON TABLE auth.schema_migrations TO postgres WITH GRANT OPTION;


--
-- Name: TABLE sessions; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.sessions TO postgres;
GRANT SELECT ON TABLE auth.sessions TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.sessions TO dashboard_user;


--
-- Name: TABLE sso_domains; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.sso_domains TO postgres;
GRANT SELECT ON TABLE auth.sso_domains TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.sso_domains TO dashboard_user;


--
-- Name: TABLE sso_providers; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.sso_providers TO postgres;
GRANT SELECT ON TABLE auth.sso_providers TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE auth.sso_providers TO dashboard_user;


--
-- Name: TABLE users; Type: ACL; Schema: auth; Owner: supabase_auth_admin
--

GRANT ALL ON TABLE auth.users TO dashboard_user;
GRANT INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,MAINTAIN,UPDATE ON TABLE auth.users TO postgres;
GRANT SELECT ON TABLE auth.users TO postgres WITH GRANT OPTION;


--
-- Name: TABLE pg_stat_statements; Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON TABLE extensions.pg_stat_statements FROM postgres;
GRANT ALL ON TABLE extensions.pg_stat_statements TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE extensions.pg_stat_statements TO dashboard_user;


--
-- Name: TABLE pg_stat_statements_info; Type: ACL; Schema: extensions; Owner: postgres
--

REVOKE ALL ON TABLE extensions.pg_stat_statements_info FROM postgres;
GRANT ALL ON TABLE extensions.pg_stat_statements_info TO postgres WITH GRANT OPTION;
GRANT ALL ON TABLE extensions.pg_stat_statements_info TO dashboard_user;


--
-- Name: TABLE billing_events; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.billing_events TO anon;
GRANT ALL ON TABLE public.billing_events TO authenticated;
GRANT ALL ON TABLE public.billing_events TO service_role;


--
-- Name: TABLE billing_exemptions; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.billing_exemptions TO anon;
GRANT ALL ON TABLE public.billing_exemptions TO authenticated;
GRANT ALL ON TABLE public.billing_exemptions TO service_role;


--
-- Name: TABLE billing_usage; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.billing_usage TO anon;
GRANT ALL ON TABLE public.billing_usage TO authenticated;
GRANT ALL ON TABLE public.billing_usage TO service_role;


--
-- Name: TABLE customer_contacts; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.customer_contacts TO anon;
GRANT ALL ON TABLE public.customer_contacts TO authenticated;
GRANT ALL ON TABLE public.customer_contacts TO service_role;


--
-- Name: TABLE customer_sites; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.customer_sites TO anon;
GRANT ALL ON TABLE public.customer_sites TO authenticated;
GRANT ALL ON TABLE public.customer_sites TO service_role;


--
-- Name: TABLE customers; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.customers TO anon;
GRANT ALL ON TABLE public.customers TO authenticated;
GRANT ALL ON TABLE public.customers TO service_role;


--
-- Name: TABLE equipment; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.equipment TO anon;
GRANT ALL ON TABLE public.equipment TO authenticated;
GRANT ALL ON TABLE public.equipment TO service_role;


--
-- Name: TABLE equipment_note_images; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.equipment_note_images TO anon;
GRANT ALL ON TABLE public.equipment_note_images TO authenticated;
GRANT ALL ON TABLE public.equipment_note_images TO service_role;


--
-- Name: TABLE equipment_notes; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.equipment_notes TO anon;
GRANT ALL ON TABLE public.equipment_notes TO authenticated;
GRANT ALL ON TABLE public.equipment_notes TO service_role;


--
-- Name: TABLE equipment_working_hours_history; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.equipment_working_hours_history TO anon;
GRANT ALL ON TABLE public.equipment_working_hours_history TO authenticated;
GRANT ALL ON TABLE public.equipment_working_hours_history TO service_role;


--
-- Name: TABLE geocoded_locations; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.geocoded_locations TO anon;
GRANT ALL ON TABLE public.geocoded_locations TO authenticated;
GRANT ALL ON TABLE public.geocoded_locations TO service_role;


--
-- Name: TABLE invitation_performance_logs; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.invitation_performance_logs TO anon;
GRANT ALL ON TABLE public.invitation_performance_logs TO authenticated;
GRANT ALL ON TABLE public.invitation_performance_logs TO service_role;


--
-- Name: TABLE member_removal_audit; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.member_removal_audit TO anon;
GRANT ALL ON TABLE public.member_removal_audit TO authenticated;
GRANT ALL ON TABLE public.member_removal_audit TO service_role;


--
-- Name: TABLE notes; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.notes TO anon;
GRANT ALL ON TABLE public.notes TO authenticated;
GRANT ALL ON TABLE public.notes TO service_role;


--
-- Name: TABLE notification_preferences; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.notification_preferences TO anon;
GRANT ALL ON TABLE public.notification_preferences TO authenticated;
GRANT ALL ON TABLE public.notification_preferences TO service_role;


--
-- Name: TABLE notifications; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.notifications TO anon;
GRANT ALL ON TABLE public.notifications TO authenticated;
GRANT ALL ON TABLE public.notifications TO service_role;


--
-- Name: TABLE organization_invitations; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.organization_invitations TO anon;
GRANT ALL ON TABLE public.organization_invitations TO authenticated;
GRANT ALL ON TABLE public.organization_invitations TO service_role;


--
-- Name: TABLE organization_members; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.organization_members TO anon;
GRANT ALL ON TABLE public.organization_members TO authenticated;
GRANT ALL ON TABLE public.organization_members TO service_role;


--
-- Name: TABLE organization_slots; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.organization_slots TO anon;
GRANT ALL ON TABLE public.organization_slots TO authenticated;
GRANT ALL ON TABLE public.organization_slots TO service_role;


--
-- Name: TABLE organization_subscriptions; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.organization_subscriptions TO anon;
GRANT ALL ON TABLE public.organization_subscriptions TO authenticated;
GRANT ALL ON TABLE public.organization_subscriptions TO service_role;


--
-- Name: TABLE organizations; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.organizations TO anon;
GRANT ALL ON TABLE public.organizations TO authenticated;
GRANT ALL ON TABLE public.organizations TO service_role;


--
-- Name: TABLE pm_checklist_templates; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.pm_checklist_templates TO anon;
GRANT ALL ON TABLE public.pm_checklist_templates TO authenticated;
GRANT ALL ON TABLE public.pm_checklist_templates TO service_role;


--
-- Name: TABLE pm_status_history; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.pm_status_history TO anon;
GRANT ALL ON TABLE public.pm_status_history TO authenticated;
GRANT ALL ON TABLE public.pm_status_history TO service_role;


--
-- Name: TABLE preventative_maintenance; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.preventative_maintenance TO anon;
GRANT ALL ON TABLE public.preventative_maintenance TO authenticated;
GRANT ALL ON TABLE public.preventative_maintenance TO service_role;


--
-- Name: TABLE profiles; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.profiles TO anon;
GRANT ALL ON TABLE public.profiles TO authenticated;
GRANT ALL ON TABLE public.profiles TO service_role;


--
-- Name: TABLE scans; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.scans TO anon;
GRANT ALL ON TABLE public.scans TO authenticated;
GRANT ALL ON TABLE public.scans TO service_role;


--
-- Name: TABLE slot_purchases; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.slot_purchases TO anon;
GRANT ALL ON TABLE public.slot_purchases TO authenticated;
GRANT ALL ON TABLE public.slot_purchases TO service_role;


--
-- Name: TABLE stripe_event_logs; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.stripe_event_logs TO anon;
GRANT ALL ON TABLE public.stripe_event_logs TO authenticated;
GRANT ALL ON TABLE public.stripe_event_logs TO service_role;


--
-- Name: TABLE subscribers; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.subscribers TO anon;
GRANT ALL ON TABLE public.subscribers TO authenticated;
GRANT ALL ON TABLE public.subscribers TO service_role;


--
-- Name: TABLE team_members; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.team_members TO anon;
GRANT ALL ON TABLE public.team_members TO authenticated;
GRANT ALL ON TABLE public.team_members TO service_role;


--
-- Name: TABLE teams; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.teams TO anon;
GRANT ALL ON TABLE public.teams TO authenticated;
GRANT ALL ON TABLE public.teams TO service_role;


--
-- Name: TABLE user_license_subscriptions; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.user_license_subscriptions TO anon;
GRANT ALL ON TABLE public.user_license_subscriptions TO authenticated;
GRANT ALL ON TABLE public.user_license_subscriptions TO service_role;


--
-- Name: TABLE webhook_events; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.webhook_events TO anon;
GRANT ALL ON TABLE public.webhook_events TO authenticated;
GRANT ALL ON TABLE public.webhook_events TO service_role;


--
-- Name: TABLE work_order_costs; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.work_order_costs TO anon;
GRANT ALL ON TABLE public.work_order_costs TO authenticated;
GRANT ALL ON TABLE public.work_order_costs TO service_role;


--
-- Name: TABLE work_order_images; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.work_order_images TO anon;
GRANT ALL ON TABLE public.work_order_images TO authenticated;
GRANT ALL ON TABLE public.work_order_images TO service_role;


--
-- Name: TABLE work_order_notes; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.work_order_notes TO anon;
GRANT ALL ON TABLE public.work_order_notes TO authenticated;
GRANT ALL ON TABLE public.work_order_notes TO service_role;


--
-- Name: TABLE work_order_status_history; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.work_order_status_history TO anon;
GRANT ALL ON TABLE public.work_order_status_history TO authenticated;
GRANT ALL ON TABLE public.work_order_status_history TO service_role;


--
-- Name: TABLE work_orders; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.work_orders TO anon;
GRANT ALL ON TABLE public.work_orders TO authenticated;
GRANT ALL ON TABLE public.work_orders TO service_role;


--
-- Name: TABLE messages; Type: ACL; Schema: realtime; Owner: supabase_realtime_admin
--

GRANT ALL ON TABLE realtime.messages TO postgres;
GRANT ALL ON TABLE realtime.messages TO dashboard_user;
GRANT SELECT,INSERT,UPDATE ON TABLE realtime.messages TO anon;
GRANT SELECT,INSERT,UPDATE ON TABLE realtime.messages TO authenticated;
GRANT SELECT,INSERT,UPDATE ON TABLE realtime.messages TO service_role;


--
-- Name: TABLE messages_2025_07_17; Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON TABLE realtime.messages_2025_07_17 TO postgres;
GRANT ALL ON TABLE realtime.messages_2025_07_17 TO dashboard_user;


--
-- Name: TABLE messages_2025_07_18; Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON TABLE realtime.messages_2025_07_18 TO postgres;
GRANT ALL ON TABLE realtime.messages_2025_07_18 TO dashboard_user;


--
-- Name: TABLE messages_2025_07_19; Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON TABLE realtime.messages_2025_07_19 TO postgres;
GRANT ALL ON TABLE realtime.messages_2025_07_19 TO dashboard_user;


--
-- Name: TABLE messages_2025_07_20; Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON TABLE realtime.messages_2025_07_20 TO postgres;
GRANT ALL ON TABLE realtime.messages_2025_07_20 TO dashboard_user;


--
-- Name: TABLE messages_2025_07_21; Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON TABLE realtime.messages_2025_07_21 TO postgres;
GRANT ALL ON TABLE realtime.messages_2025_07_21 TO dashboard_user;


--
-- Name: TABLE schema_migrations; Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON TABLE realtime.schema_migrations TO postgres;
GRANT ALL ON TABLE realtime.schema_migrations TO dashboard_user;
GRANT SELECT ON TABLE realtime.schema_migrations TO anon;
GRANT SELECT ON TABLE realtime.schema_migrations TO authenticated;
GRANT SELECT ON TABLE realtime.schema_migrations TO service_role;
GRANT ALL ON TABLE realtime.schema_migrations TO supabase_realtime_admin;


--
-- Name: TABLE subscription; Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON TABLE realtime.subscription TO postgres;
GRANT ALL ON TABLE realtime.subscription TO dashboard_user;
GRANT SELECT ON TABLE realtime.subscription TO anon;
GRANT SELECT ON TABLE realtime.subscription TO authenticated;
GRANT SELECT ON TABLE realtime.subscription TO service_role;
GRANT ALL ON TABLE realtime.subscription TO supabase_realtime_admin;


--
-- Name: SEQUENCE subscription_id_seq; Type: ACL; Schema: realtime; Owner: supabase_admin
--

GRANT ALL ON SEQUENCE realtime.subscription_id_seq TO postgres;
GRANT ALL ON SEQUENCE realtime.subscription_id_seq TO dashboard_user;
GRANT USAGE ON SEQUENCE realtime.subscription_id_seq TO anon;
GRANT USAGE ON SEQUENCE realtime.subscription_id_seq TO authenticated;
GRANT USAGE ON SEQUENCE realtime.subscription_id_seq TO service_role;
GRANT ALL ON SEQUENCE realtime.subscription_id_seq TO supabase_realtime_admin;


--
-- Name: TABLE buckets; Type: ACL; Schema: storage; Owner: supabase_storage_admin
--

GRANT ALL ON TABLE storage.buckets TO anon;
GRANT ALL ON TABLE storage.buckets TO authenticated;
GRANT ALL ON TABLE storage.buckets TO service_role;
GRANT ALL ON TABLE storage.buckets TO postgres;


--
-- Name: TABLE buckets_analytics; Type: ACL; Schema: storage; Owner: supabase_storage_admin
--

GRANT ALL ON TABLE storage.buckets_analytics TO service_role;
GRANT ALL ON TABLE storage.buckets_analytics TO authenticated;
GRANT ALL ON TABLE storage.buckets_analytics TO anon;


--
-- Name: TABLE objects; Type: ACL; Schema: storage; Owner: supabase_storage_admin
--

GRANT ALL ON TABLE storage.objects TO anon;
GRANT ALL ON TABLE storage.objects TO authenticated;
GRANT ALL ON TABLE storage.objects TO service_role;
GRANT ALL ON TABLE storage.objects TO postgres;


--
-- Name: TABLE prefixes; Type: ACL; Schema: storage; Owner: supabase_storage_admin
--

GRANT ALL ON TABLE storage.prefixes TO service_role;
GRANT ALL ON TABLE storage.prefixes TO authenticated;
GRANT ALL ON TABLE storage.prefixes TO anon;


--
-- Name: TABLE s3_multipart_uploads; Type: ACL; Schema: storage; Owner: supabase_storage_admin
--

GRANT ALL ON TABLE storage.s3_multipart_uploads TO service_role;
GRANT SELECT ON TABLE storage.s3_multipart_uploads TO authenticated;
GRANT SELECT ON TABLE storage.s3_multipart_uploads TO anon;


--
-- Name: TABLE s3_multipart_uploads_parts; Type: ACL; Schema: storage; Owner: supabase_storage_admin
--

GRANT ALL ON TABLE storage.s3_multipart_uploads_parts TO service_role;
GRANT SELECT ON TABLE storage.s3_multipart_uploads_parts TO authenticated;
GRANT SELECT ON TABLE storage.s3_multipart_uploads_parts TO anon;


--
-- Name: TABLE secrets; Type: ACL; Schema: vault; Owner: supabase_admin
--

GRANT SELECT,REFERENCES,DELETE,TRUNCATE ON TABLE vault.secrets TO postgres WITH GRANT OPTION;
GRANT SELECT,DELETE ON TABLE vault.secrets TO service_role;


--
-- Name: TABLE decrypted_secrets; Type: ACL; Schema: vault; Owner: supabase_admin
--

GRANT SELECT,REFERENCES,DELETE,TRUNCATE ON TABLE vault.decrypted_secrets TO postgres WITH GRANT OPTION;
GRANT SELECT,DELETE ON TABLE vault.decrypted_secrets TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: auth; Owner: supabase_auth_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_auth_admin IN SCHEMA auth GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_auth_admin IN SCHEMA auth GRANT ALL ON SEQUENCES TO dashboard_user;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: auth; Owner: supabase_auth_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_auth_admin IN SCHEMA auth GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_auth_admin IN SCHEMA auth GRANT ALL ON FUNCTIONS TO dashboard_user;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: auth; Owner: supabase_auth_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_auth_admin IN SCHEMA auth GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_auth_admin IN SCHEMA auth GRANT ALL ON TABLES TO dashboard_user;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: extensions; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA extensions GRANT ALL ON SEQUENCES TO postgres WITH GRANT OPTION;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: extensions; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA extensions GRANT ALL ON FUNCTIONS TO postgres WITH GRANT OPTION;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: extensions; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA extensions GRANT ALL ON TABLES TO postgres WITH GRANT OPTION;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: graphql; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON SEQUENCES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON SEQUENCES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON SEQUENCES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: graphql; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON FUNCTIONS TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON FUNCTIONS TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON FUNCTIONS TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: graphql; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON TABLES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON TABLES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql GRANT ALL ON TABLES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: graphql_public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON SEQUENCES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON SEQUENCES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON SEQUENCES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: graphql_public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON FUNCTIONS TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON FUNCTIONS TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON FUNCTIONS TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: graphql_public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON TABLES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON TABLES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA graphql_public GRANT ALL ON TABLES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: public; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON SEQUENCES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON SEQUENCES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON SEQUENCES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON SEQUENCES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON SEQUENCES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON SEQUENCES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: public; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON FUNCTIONS TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON FUNCTIONS TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON FUNCTIONS TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON FUNCTIONS TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON FUNCTIONS TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON FUNCTIONS TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: public; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON TABLES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON TABLES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON TABLES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON TABLES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON TABLES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON TABLES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: realtime; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA realtime GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA realtime GRANT ALL ON SEQUENCES TO dashboard_user;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: realtime; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA realtime GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA realtime GRANT ALL ON FUNCTIONS TO dashboard_user;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: realtime; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA realtime GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA realtime GRANT ALL ON TABLES TO dashboard_user;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: storage; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON SEQUENCES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON SEQUENCES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON SEQUENCES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: storage; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON FUNCTIONS TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON FUNCTIONS TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON FUNCTIONS TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: storage; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON TABLES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON TABLES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA storage GRANT ALL ON TABLES TO service_role;


--
-- Name: issue_graphql_placeholder; Type: EVENT TRIGGER; Schema: -; Owner: supabase_admin
--

CREATE EVENT TRIGGER issue_graphql_placeholder ON sql_drop
         WHEN TAG IN ('DROP EXTENSION')
   EXECUTE FUNCTION extensions.set_graphql_placeholder();


ALTER EVENT TRIGGER issue_graphql_placeholder OWNER TO supabase_admin;

--
-- Name: issue_pg_cron_access; Type: EVENT TRIGGER; Schema: -; Owner: supabase_admin
--

CREATE EVENT TRIGGER issue_pg_cron_access ON ddl_command_end
         WHEN TAG IN ('CREATE EXTENSION')
   EXECUTE FUNCTION extensions.grant_pg_cron_access();


ALTER EVENT TRIGGER issue_pg_cron_access OWNER TO supabase_admin;

--
-- Name: issue_pg_graphql_access; Type: EVENT TRIGGER; Schema: -; Owner: supabase_admin
--

CREATE EVENT TRIGGER issue_pg_graphql_access ON ddl_command_end
         WHEN TAG IN ('CREATE FUNCTION')
   EXECUTE FUNCTION extensions.grant_pg_graphql_access();


ALTER EVENT TRIGGER issue_pg_graphql_access OWNER TO supabase_admin;

--
-- Name: issue_pg_net_access; Type: EVENT TRIGGER; Schema: -; Owner: supabase_admin
--

CREATE EVENT TRIGGER issue_pg_net_access ON ddl_command_end
         WHEN TAG IN ('CREATE EXTENSION')
   EXECUTE FUNCTION extensions.grant_pg_net_access();


ALTER EVENT TRIGGER issue_pg_net_access OWNER TO supabase_admin;

--
-- Name: pgrst_ddl_watch; Type: EVENT TRIGGER; Schema: -; Owner: supabase_admin
--

CREATE EVENT TRIGGER pgrst_ddl_watch ON ddl_command_end
   EXECUTE FUNCTION extensions.pgrst_ddl_watch();


ALTER EVENT TRIGGER pgrst_ddl_watch OWNER TO supabase_admin;

--
-- Name: pgrst_drop_watch; Type: EVENT TRIGGER; Schema: -; Owner: supabase_admin
--

CREATE EVENT TRIGGER pgrst_drop_watch ON sql_drop
   EXECUTE FUNCTION extensions.pgrst_drop_watch();


ALTER EVENT TRIGGER pgrst_drop_watch OWNER TO supabase_admin;

--
-- PostgreSQL database dump complete
--

\unrestrict wbdC8JtrAlaGteMFLLEOS0hJIGxu1dkIEMsDJq4FqklKeBi9k2Pv5zKXOHA2L3x

--
-- PostgreSQL database cluster dump complete
--

